.code32
.text
.globl start
start:
		jmp	_08013c_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		pusha  
		mov    $_0107bb_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_01001e_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _01001e_jump
		mov    $_090014_data,%edi
		mov    $0x0000c8,%cl

	_01002f_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _01002f_jump
		popa   
		ret    



_010045_func:
		pusha  
		mov    %eax,_09193e_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_091914_data
		mov    (%esi),%eax
		mov    %eax,_091922_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_09192e_data
		neg    %eax
		mov    %eax,_091932_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_091936_data
		neg    %eax
		mov    %eax,_09193a_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_010093_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _01009b_jump
		mov    %edi,%eax

	_01009b_jump:
		cmp    %edx,%edi
		jle    _0100a1_jump
		mov    %edi,%edx

	_0100a1_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _010093_jump
		cmp    $0x0000c8,%eax
		jge    _01263e_jump
		or     %edx,%edx
		js     _01263e_jump
		or     %eax,%eax
		jns    _0100c1_jump
		xor    %eax,%eax

	_0100c1_jump:
		mov    %eax,_090010_data
		cmp    $0x0000c8,%edx
		jb     _0100d3_jump
		mov    $0x0000c7,%edx

	_0100d3_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_09194a_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0100f3_jump
		or     %edi,%edi
		js     _01022e_jump

	_0100f3_jump:
		cmp    $0x0000c8,%ecx
		jl     _010107_jump
		cmp    $0x0000c8,%edi
		jge    _01022e_jump

	_010107_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _091932_data,%edx
		sub    %edi,%ecx
		jns    _010129_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_010129_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0101f9_func
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_010198_data
		or     %edx,%edx
		jns    _010162_jump
		sub    $0x000002,%edx

	_010162_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax

.data

_010198_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_0101b0_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_0101c6_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_0101dd_data:
		.ascii  "\x66\x39\xaf"
		.long   _042a94_jump
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _042a94_jump
		.ascii  "\x88\xbf"
		.long   _042a9c_jump
		.ascii  "\xc6\x87"

.text



_0101f9_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		cwtl   
		sub    (%eax,%eax,1),%al
		jae    _010217_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x000000,_042aa8_jump(%edi)

	_010217_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx

	_01022e_jump:
		mov    _091914_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _01024c_jump
		or     %edi,%edi
		js     _010387_jump

	_01024c_jump:
		cmp    $0x0000c8,%ecx
		jl     _010260_jump
		cmp    $0x0000c8,%edi
		jge    _010387_jump

	_010260_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _09193a_data,%edx
		sub    %edi,%ecx
		jns    _010282_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_010282_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0102f1_jump
		or     %edx,%edx
		jns    _0102bb_jump
		sub    $0x000002,%edx

	_0102bb_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010309_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01031f_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0102f1_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010309_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01031f_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _010332_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_010332_jump:
		pop    %edi
		shl    $0x000005,%edi

	_010336_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010353_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x0000ff,_042a9c_jump(%edi)

	_010353_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010370_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x0000ff,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010370_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _010336_jump

	_010387_jump:
		mov    _091914_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0103a5_jump
		or     %edi,%edi
		js     _0104e0_jump

	_0103a5_jump:
		cmp    $0x0000c8,%ecx
		jl     _0103b9_jump
		cmp    $0x0000c8,%edi
		jge    _0104e0_jump

	_0103b9_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _09192e_data,%edx
		sub    %edi,%ecx
		jns    _0103db_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_0103db_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01044a_jump
		or     %edx,%edx
		jns    _010414_jump
		sub    $0x000002,%edx

	_010414_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010462_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _010478_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_01044a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010462_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_010478_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01048b_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01048b_jump:
		pop    %edi
		shl    $0x000005,%edi

	_01048f_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _0104ac_jump
		mov    %bp,_042a94_jump(%edi)
		mov    %bh,_042a9c_jump(%edi)

	_0104ac_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _0104c9_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x0000ff,_042aa8_jump(%edi)

	_0104c9_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _01048f_jump

	_0104e0_jump:
		mov    _091914_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _0104fd_jump
		or     %edi,%edi
		js     _010638_jump

	_0104fd_jump:
		cmp    $0x0000c8,%ecx
		jl     _010511_jump
		cmp    $0x0000c8,%edi
		jge    _010638_jump

	_010511_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _091936_data,%edx
		sub    %edi,%ecx
		jns    _010533_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_010533_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0105a2_jump
		or     %edx,%edx
		jns    _01056c_jump
		sub    $0x000002,%edx

	_01056c_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_0105ba_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0105d0_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0105a2_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0105ba_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0105d0_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0105e3_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0105e3_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0105e7_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010604_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x000000,_042a9c_jump(%edi)

	_010604_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010621_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x000000,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010621_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0105e7_jump

	_010638_jump:
		mov    _090010_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _09193e_data,%esi
		mov    %esi,_091942_data
		mov    %ebp,_091946_data

	_01065d_jump:
		mov    _091946_data,%ebp
		mov    _090014_data(%ebp),%edi
		movw   $0x00ffff,_090014_data(%ebp)
		mov    _090018_data(%ebp),%ecx
		movw   $0x000000,_090018_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _012621_jump
		cmp    $0x007d00,%ecx
		jb     _012621_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _090028_data(%ebp),%edx
		mov    _090024_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _090020_data(%ebp),%edx
		mov    _09001c_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _01070b_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_01070b_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01071f_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01071f_jump:
		mov    %ebp,%edi
		add    _091942_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _010738_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_010738_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01079b_func,%ecx
		neg    %ecx
		jmp    *%ecx



_01079b_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_0125bb_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_0107bb_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_0125bb_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_012621_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_012621_jump:
		addl   $0x000140,_091942_data
		addl   $0x000020,_091946_data
		decl   _09194a_data
		jne    _01065d_jump

	_01263e_jump:
		popa   
		ret    



_01268a_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126a9_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126a9_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126d3_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126d3_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126fd_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126fd_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_012726_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _012726_jump
		popaw  
		ret    



_012748_func:
		pusha  
		mov    $0x000000,%ah
		int    $0x00001a
		shl    $0x000010,%ecx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		mov    %edx,(%esi)
		popa   
		ret    



_012783_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_012799_switch:
		.long   0

_01279d_switch:
		.long   0


	_0127a1_jump:
		add    %dl,-0x000077(%ebp)
		or     $_01279d_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,_012799_switch
		and    $0x00ff00,%edx
		mov    %dh,_0127a1_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _01279d_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_0127de_jump:
		push   %ecx
		push   %edi
		add    _01279d_switch,%esi
		push   %esi
		push   %ebp

	_0127e8_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _012799_switch,%esi
		dec    %ebp
		jne    _0127e8_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _012b30_func
		mov    _0127a1_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _01282c_jump
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_01282c_jump:
		mov    %ch,_0127a1_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _0127de_jump
		pop    %ebp
		ret    



_01283c_func:
		push   %dx
		mov    $0x0003c4,%dx
		and    $0x00ffff,%eax
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %dx
		ret    



_012850_func:
		push   %ebp
		push   %ebp
		movl   $0x000000,(%esp)
		push   %ecx
		push   %ebx
		mov    %ecx,%ebx
		add    $0x004600,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _01288b_jump

	_01286d_jump:
		addl   $0x000500,(%esp)
		cmp    %ebx,(%esp)
		jb     _012880_jump
		subl   $0x004600,(%esp)

	_012880_jump:
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0129ce_jump

	_01288b_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000001,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _0128a9_jump

	_0128a7_jump:
		inc    %cl

	_0128a9_jump:
		cmp    $0x000014,%cl
		jge    _0129be_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		jne    _0129b0_jump
		cmp    $0x000000,%bx
		jne    _012933_jump
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _0128ff_jump
		stc    
		jmp    _012900_jump

	_0128ff_jump:
		clc    

	_012900_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012919_jump
		cmpl   $0x000050,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000050,0x000014(%esp)
		jmp    _012980_jump

	_012919_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000000,0x000014(%esp)
		jmp    _012980_jump

	_01292a_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_012933_jump:
		movl   $0x000000,0x000014(%esp)
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _01296f_jump
		stc    
		jmp    _012970_jump

	_01296f_jump:
		clc    

	_012970_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012980_jump
		movl   $0x000050,0x000014(%esp)

	_012980_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		sub    0x00001c(%esp),%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_0129b0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _0128a7_jump

	_0129be_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _01286d_jump

	_0129ce_jump:
		pop    %ebx
		pop    %ecx
		pop    %ebp
		pop    %ebp
		ret    



_0129d3_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _0129ef_jump

	_0129e1_jump:
		add    %ebx,(%esp)
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012a70_jump

	_0129ef_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012a0d_jump

	_012a0b_jump:
		inc    %cl

	_012a0d_jump:
		cmp    $0x000014,%cl
		jge    _012a60_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		je     _012a55_jump
		cmp    $0x000000,%bx
		je     _012a2d_jump

	_012a27_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012a55_jump

	_012a2d_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		jmp    _012a27_jump

	_012a55_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012a0b_jump

	_012a60_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _0129e1_jump

	_012a70_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012a73_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		add    $0x000078,%eax
		add    %edi,%eax
		mov    $0x00000e,%cl
		jmp    _012a8e_jump

	_012a86_jump:
		dec    %cl
		je     _012b2d_jump

	_012a8e_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab7_jump

	_012ab5_jump:
		inc    %cl

	_012ab7_jump:
		cmp    $0x000013,%cl
		jge    _012b15_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		je     _012ad0_jump
		or     %bx,%bx
		je     _012ae0_jump
		incl   0x00000c(%edx,%ebp,1)

	_012ad0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab5_jump

	_012ae0_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		addl   $0x000004,0x000014(%esp)
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012ab5_jump

	_012b15_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		addl   $0x0004b0,0x000008(%esp)
		pop    %ebx
		pop    %ecx
		jmp    _012a86_jump

	_012b2d_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012b30_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _012b3a_jump
		inc    %edi
		mov    $0x000001,%ah

	_012b3a_jump:
		out    %ax,(%dx)
		ret    



_012b3d_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012b84_jump
		cmp    $0x000140,%eax
		ja     _012b84_jump
		cmp    $0x000000,%ebx
		jl     _012b84_jump
		cmp    $0x0000c8,%ebx
		ja     _012b84_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx

	_012b84_jump:
		pop    %edi
		ret    



_012b86_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012bb7_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012bfe_jump
		cmp    $0x000140,%eax
		ja     _012bfe_jump
		cmp    $0x000000,%ebx
		jl     _012bfe_jump
		cmp    $0x0000c8,%ebx
		ja     _012bfe_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx

	_012bfe_jump:
		pop    %edi
		ret    



_012c00_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012c57_jump
		cmp    $0x000140,%eax
		ja     _012c57_jump
		cmp    $0x000000,%ebx
		jl     _012c57_jump
		cmp    $0x0000c8,%ebx
		ja     _012c57_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _012b30_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_012c57_jump:
		pop    %edi
		ret    



_012c59_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012cbd_jump
		cmp    $0x000140,%eax
		ja     _012cbd_jump
		cmp    $0x000000,%ebx
		jl     _012cbd_jump
		cmp    $0x0000c8,%ebx
		ja     _012cbd_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_012cbd_jump:
		pop    %edi
		ret    



_012cbf_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012d06_jump
		cmp    $0x000140,%eax
		ja     _012d06_jump
		cmp    $0x000000,%ebx
		jl     _012d06_jump
		cmp    $0x0000c8,%ebx
		ja     _012d06_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx

	_012d06_jump:
		pop    %edi
		ret    



_012d08_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012da7_jump
		cmp    $0x000140,%eax
		ja     _012da7_jump
		cmp    $0x000000,%ebx
		jl     _012da7_jump
		cmp    $0x0000c8,%ebx
		ja     _012da7_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx

	_012da7_jump:
		pop    %edi
		ret    



_012da9_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012df9_jump
		cmp    $0x000140,%eax
		ja     _012df9_jump
		cmp    $0x000000,%ebx
		jl     _012df9_jump
		cmp    $0x0000c8,%ebx
		ja     _012df9_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx

	_012df9_jump:
		pop    %edi
		ret    



_012dfb_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012e9a_jump
		cmp    $0x000140,%eax
		ja     _012e9a_jump
		cmp    $0x000000,%ebx
		jl     _012e9a_jump
		cmp    $0x0000c8,%ebx
		ja     _012e9a_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx

	_012e9a_jump:
		pop    %edi
		ret    



_012e9c_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _012f0a_jump
		cmp    $0x000140,%eax
		ja     _012f0a_jump
		cmp    $0x000000,%ebx
		jl     _012f0a_jump
		cmp    $0x0000c8,%ebx
		ja     _012f0a_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_012f0a_jump:
		pop    %edi
		ret    



_012f0c_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _01300d_jump
		cmp    $0x000140,%eax
		ja     _01300d_jump
		cmp    $0x000000,%ebx
		jl     _01300d_jump
		cmp    $0x0000c8,%ebx
		ja     _01300d_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx

	_01300d_jump:
		pop    %edi
		ret    



_01300f_func:
		push   %edi
		cmp    $0x000000,%eax
		jl     _01309b_jump
		cmp    $0x000140,%eax
		ja     _01309b_jump
		cmp    $0x000000,%ebx
		jl     _01309b_jump
		cmp    $0x0000c8,%ebx
		ja     _01309b_jump
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx

	_01309b_jump:
		pop    %edi
		ret    



_01311d_func:
		femms  
		or     $0x000008,%al

	_013121_jump:
		sgdtl  (%ebx)
		pop    %es



_013125_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _0131eb_jump
		cmp    $0x000000,%ecx
		jle    _0131eb_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _013186_jump
		push   %edi
		push   %ebx
		mov    _01311d_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _013175_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _013121_jump(%ebx),%ah
		and    %ah,%al

	_013175_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_01317b_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _01317b_jump
		pop    %edi
		inc    %esi

	_013186_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _0131eb_jump
		je     _0131cd_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _0131bc_jump
		mov    %ecx,%edx

	_0131b1_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _0131b1_jump
		jmp    _0131c9_jump

	_0131bc_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _0131bc_jump

	_0131c9_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_0131cd_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _0131eb_jump
		mov    _013121_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_0131e2_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _0131e2_jump

	_0131eb_jump:
		popa   
		ret    



_0131ed_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_01321d_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _01321d_jump
		pop    %edi
		call   _012b30_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_01323a_jump:
		movb   $0x0000ff,(%edi)
		movb   $0x0000ff,(%edi,%ebx,1)
		call   _012b30_func
		dec    %ebp
		jne    _01323a_jump
		pop    %ecx
		inc    %ecx

	_01324b_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _01324b_jump
		pop    %edi
		pop    %ebp
		ret    



_013257_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		jmp    _013285_jump

	_013274_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0137dd_jump

	_013285_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01328d_jump:
		cmp    $0x000000,%ecx
		je     _0137d6_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0132a7_jump
		sub    0x000018(%esp),%esi

	_0132a7_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _01358b_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _0134b3_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013732_jump

	_0134b3_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013732_jump

	_01358b_jump:
		test   $0x000002,%edi
		je     _013732_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013732_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _0137c6_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0137c6_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01328d_jump

	_0137d6_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013274_jump

	_0137dd_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_0137e4_func:
		push   %ebp
		mov    %esi,%ebp
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		or     $0x000001,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		mov    $0x00000f,%ah
		out    %ax,(%dx)
		mov    %ecx,%edi
		mov    $0x0ab000,%esi
		add    $0x000502,%edi
		add    $0x000502,%esi
		mov    $0x0000b8,%ecx

	_01381c_jump:
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x00004c,%edi
		add    $0x00004c,%esi
		dec    %ecx
		jne    _01381c_jump
		cli    
		xor    %ecx,%ecx
		jmp    _01383f_jump

	_01382e_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _0138fe_jump

	_01383f_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013847_jump:
		cmp    $0x000000,%ecx
		je     _0138f7_jump
		push   %ecx
		mov    0x000000(%ebp),%esi
		mov    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		or     %ecx,%ecx
		je     _0138ed_jump
		shl    $0x000002,%ecx
		add    $0x000001,%ecx
		mov    %ecx,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		mov    %eax,%edx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_0138ed_jump:
		pop    %ecx
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013847_jump

	_0138f7_jump:
		pop    %ebp
		pop    %ecx
		jmp    _01382e_jump

	_0138fe_jump:
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		pop    %ebp
		sti    
		ret    



_013912_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013942_jump

	_013931_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _013e9a_jump

	_013942_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01394a_jump:
		cmp    $0x000000,%ecx
		je     _013e93_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013964_jump
		sub    0x000018(%esp),%esi

	_013964_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _013c48_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013b70_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013def_jump

	_013b70_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013def_jump

	_013c48_jump:
		test   $0x000002,%edi
		je     _013def_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013def_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013e83_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013e83_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01394a_jump

	_013e93_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013931_jump

	_013e9a_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013ea1_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013ed1_jump

	_013ec0_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _014429_jump

	_013ed1_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013ed9_jump:
		cmp    $0x000000,%ecx
		je     _014422_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013ef3_jump
		sub    0x000018(%esp),%esi

	_013ef3_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _0141d7_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _0140ff_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _01437e_jump

	_0140ff_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _01437e_jump

	_0141d7_jump:
		test   $0x000002,%edi
		je     _01437e_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_01437e_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _014412_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_014412_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013ed9_jump

	_014422_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013ec0_jump

	_014429_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014430_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		movl   $0x00000e,0x000004(%esp)
		jmp    _014457_jump

	_014446_jump:
		decl   0x000004(%esp)
		je     _01448f_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _01448f_jump
		add    0x000008(%ebx),%edi

	_014457_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _014471_jump

	_014465_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _01448b_jump

	_014471_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _014465_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _014465_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _014465_jump

	_01448b_jump:
		pop    %esi
		pop    %ebx
		jmp    _014446_jump

	_01448f_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014493_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		add    0x000008(%ebx),%edi
		add    $0x000050,%edi
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014500_jump
		movl   $0x00000c,0x000004(%esp)
		jmp    _0144c8_jump

	_0144b7_jump:
		decl   0x000004(%esp)
		je     _014500_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014500_jump
		add    0x000008(%ebx),%edi

	_0144c8_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _0144e2_jump

	_0144d6_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _0144fc_jump

	_0144e2_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _0144d6_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _0144d6_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _0144d6_jump

	_0144fc_jump:
		pop    %esi
		pop    %ebx
		jmp    _0144b7_jump

	_014500_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014504_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_014525_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _014525_jump
		popa   
		ret    



_01456e_func:
		pusha  
		push   %edi
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_014590_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _014590_jump
		pop    %edi
		cld    
		xor    %eax,%eax
		mov    $0x000140,%ecx
		rep stos %eax,%es:(%edi)
		add    $0x003700,%edi
		mov    $0x0000a0,%ecx
		rep stos %eax,%es:(%edi)
		popa   
		ret    



_0145f1_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_0145fc_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196a_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196b_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196c_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196d_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196e_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196f_data
		popa   
		ret    



_01465f_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		out    %al,(%dx)
		popa   
		ret    



_0146b8_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_01471d_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_014765_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_0147e7_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_0147f0_switch:
		.long   0

_0147f4_switch:
		.long   0

_0147f8_switch:
		.long   0

_0147fc_switch:
		.long   0

_014800_switch:
		.long   0

_014804_switch:
		.long   0

_014808_switch:
		.long   0

_01480c_switch:
		.long   0

_014810_switch:
		.long   0

_014814_switch:
		.long   0

_014818_switch:
		.long   0

_01481c_switch:
		.long   0

_014820_switch:
		.long   0

_014824_switch:
		.long   0




_014828_func:
		pusha  
		dec    %esi
		mov    %esi,_014810_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_014841_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _014841_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_0147f0_switch
		mov    %ebx,_0147f4_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_0147f8_switch
		mov    %ebx,_0147fc_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_014800_switch
		mov    %ebx,_014804_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_014808_switch
		mov    %ebx,_01480c_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_014824_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_014820_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014824_switch
		mov    %eax,_01481c_switch
		mov    _014810_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _0147f8_switch,%eax
		mov    _0147fc_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _0149ac_jump
		mov    _01480c_switch,%ebx
		push   %eax
		mov    _014820_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _0147f8_switch
		mov    %eax,_014818_switch
		mov    %eax,_014814_switch
		pop    %eax
		xor    %edx,%edx

	_0148fb_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014906_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _014916_jump
		mov    %dh,(%edi)

	_014916_jump:
		add    _014818_switch,%ebx
		add    _0147fc_switch,%ecx
		cmp    %eax,%ebp
		jge    _014942_jump
		add    _0147f0_switch,%edi
		cmp    _0147f8_switch,%ecx
		jbe    _014906_jump
		add    _0147f4_switch,%edi
		sub    _0147f8_switch,%ecx
		jmp    _014906_jump

	_014942_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _014810_switch,%esi
		add    _014808_switch,%ecx
		add    _014804_switch,%edi
		add    _01481c_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014964_jump:
		je     _01496f_jump
		add    _014820_switch,%esi
		dec    %edx
		jmp    _014964_jump

	_01496f_jump:
		mov    _014814_switch,%edx
		mov    %edx,_014818_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _014a81_jump
		cmp    $0x000000,%ecx
		jle    _0148fb_jump
		add    _014800_switch,%edi
		dec    %ebp
		sub    _014824_switch,%ecx
		sub    _014804_switch,%edi
		subl   $0x000040,_014818_switch
		jmp    _0148fb_jump

	_0149ac_jump:
		mov    _014820_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _0147fc_switch
		mov    %eax,_014818_switch
		mov    %eax,_014814_switch
		xor    %edx,%edx
		mov    _014808_switch,%ebx
		mov    _0147fc_switch,%eax

	_0149d4_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_0149df_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _0149ef_jump
		mov    %dh,(%edi)

	_0149ef_jump:
		add    _014818_switch,%ebx
		add    _0147f8_switch,%ecx
		cmp    %eax,%ebp
		jge    _014a18_jump
		add    _0147f4_switch,%edi
		cmp    $0x000000,%ecx
		jle    _0149df_jump
		add    _0147f0_switch,%edi
		sub    _0147fc_switch,%ecx
		jmp    _0149df_jump

	_014a18_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _014810_switch,%esi
		add    _01480c_switch,%ecx
		add    _014800_switch,%edi
		add    _01481c_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014a3a_jump:
		je     _014a45_jump
		add    _014820_switch,%esi
		dec    %edx
		jmp    _014a3a_jump

	_014a45_jump:
		mov    _014814_switch,%edx
		mov    %edx,_014818_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _014a81_jump
		cmp    _014808_switch,%ecx
		jle    _0149d4_jump
		add    _014804_switch,%edi
		dec    %ebp
		sub    _014824_switch,%ecx
		sub    _014800_switch,%edi
		subl   $0x000040,_014818_switch
		jmp    _0149d4_jump

	_014a81_jump:
		popa   
		ret    



_014ab7_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_014ac1_func:
		imul   $0x000180,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		movl   $0xc0e0a00,0x000180(%edi)
		movl   $0x0a0900,0x000300(%edi)
		movw   $0x000000,0x000481(%edi)
		ret    



_014aef_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014b06_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _014b13_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_014b13_jump:
		test   $0x000002,%ecx
		je     _014b20_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_014b20_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _014b06_jump
		popa   
		ret    



_014b2c_func:
		cmp    $0x000002,%eax
		je     _014b71_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014b4a_jump:
		push   %ecx
		mov    %edx,%ecx

	_014b4d_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014b61_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_014b61_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _014b4d_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014b4a_jump
		ret    

	_014b71_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014b94_jump:
		push   %ecx
		mov    %edx,%ecx

	_014b97_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014bab_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_014bab_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _014b97_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014b94_jump
		ret    



_014bbb_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_014bc9_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014bc9_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_014c01_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014c01_jump
		mov    %al,-0x00013f(%edi)
		ret    



_014c19_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_014c41_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _014c4f_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_014c4f_jump:
		test   $0x000002,%ecx
		je     _014c5c_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_014c5c_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _014c41_jump
		ret    $0x00000c



_014c6b_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_014c86_jump:
		inc    %eax
		add    %eax,(%eax)
	_014c8a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_014c8e_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_014c9c_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_014caa_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _014c86_jump,%ebx
		add    _014c8a_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _014caa_jump
		add    $0x000004,%esp
		popa   
		ret    



_014cc7_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_014cd5_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _014cd5_jump
		popa   
		ret    



_014cfa_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _014d53_jump
		cmp    $0x000000,%ebx
		jle    _014d53_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,(%esp)
		mov    %esi,%ebp
		shrl   $0x000003,(%esp)
		and    $0x000007,%ecx
		je     _014d1f_jump
		incl   (%esp)

	_014d1f_jump:
		mov    %edi,%ebx
		mov    (%esp),%ecx
		push   %ebx
		push   %edx

	_014d26_jump:
		mov    (%esi),%edx
		mov    0x000004(%esi),%ebx
		mov    %edx,(%edi)
		mov    %ebx,0x000004(%edi)
		add    $0x000008,%esi
		add    $0x000008,%edi
		sub    $0x000001,%ecx
		jne    _014d26_jump
		pop    %edx
		pop    %ebx
		lea    0x000000(%ebp,%edx,1),%esi
		lea    (%edx,%eax,1),%edx
		lea    0x000140(%ebx),%edi
		decl   0x000004(%esp)
		jne    _014d1f_jump
		add    $0x000008,%esp

	_014d53_jump:
		popa   
		ret    



_014e64_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_014e75_jump:
		test   $0x40000000,%eax
		jne    _014ec0_jump
		test   $0x80000000,%eax
		jne    _014fd3_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014ec0_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _014f14_jump
		test   $0x20000000,%eax
		jne    _014fee_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014f14_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _014f68_jump
		test   $0x8000000,%eax
		jne    _015009_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014f68_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _014fbc_jump
		test   $0x2000000,%eax
		jne    _015024_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014fbc_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _014e75_jump
		jmp    _01503c_jump

	_014fd3_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014ec0_jump

	_014fee_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014f14_jump

	_015009_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014f68_jump

	_015024_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014fbc_jump

	_01503c_jump:
		add    $0x000004,%esp
		popa   
		ret    



_015041_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_0152d6_switch:
		.long   0




_0152da_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_0152d6_switch
		cmp    _0cd09c_data,%eax
		jl     _015329_jump
		add    %eax,%edx
		cmp    _0cd098_data,%edx
		ja     _015312_jump
		mov    $0x000004,%cl

	_0152f8_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0cd0a4_data,%ebx
		jl     _015362_jump

	_015304_jump:
		add    %ebx,%edx
		cmp    _0cd0a0_data,%edx
		ja     _01534e_jump

	_01530e_jump:
		clc    
		ret    

	_015310_jump:
		stc    
		ret    

	_015312_jump:
		cmp    _0cd098_data,%eax
		jae    _015310_jump
		mov    _0cd098_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _0153af_jump

	_015329_jump:
		sub    _0cd09c_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _015310_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0cd09c_data,%eax
		shr    $0x000002,%cl
		jmp    _0152f8_jump

	_01534e_jump:
		cmp    _0cd0a0_data,%ebx
		jae    _015310_jump
		mov    _0cd0a0_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _01530e_jump

	_015362_jump:
		add    %ebx,%edx
		cmp    _0cd0a4_data,%edx
		jle    _015310_jump
		xor    %edx,%edx
		sub    _0cd0a4_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _0152d6_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _014c86_jump,%eax
		mul    %bx
		add    %eax,%edi

	_015397_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _015397_jump
		pop    %eax
		mov    _0cd0a4_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _015304_jump

	_0153af_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _0152f8_jump
		inc    %cl
		jmp    _0152f8_jump



_0153c6_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _0152da_func
		jb     _015559_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _01547b_jump
		cmp    $0x000002,%cl
		je     _0154dc_jump
		cmp    $0x000001,%cl
		je     _015525_jump

	_015405_jump:
		test   $0x40000000,%eax
		jne    _015429_jump
		test   $0x80000000,%eax
		je     _015440_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_015429_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015405_jump
		jmp    _015559_jump

	_015440_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _015429_jump

	_01547b_jump:
		test   $0x40000000,%eax
		jne    _015499_jump
		test   $0x80000000,%eax
		je     _0154b0_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_015499_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01547b_jump
		jmp    _015559_jump

	_0154b0_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _015499_jump

	_0154dc_jump:
		test   $0x40000000,%eax
		jne    _0154f4_jump
		test   $0x80000000,%eax
		je     _015508_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_0154f4_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0154dc_jump
		jmp    _015559_jump

	_015508_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _0154f4_jump

	_015525_jump:
		test   $0x40000000,%eax
		jne    _015537_jump
		test   $0x80000000,%eax
		je     _01554b_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_015537_jump:
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015525_jump
		jmp    _015559_jump

	_01554b_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _015537_jump

	_015559_jump:
		add    $0x000005,%esp
		popa   
		ret    



_01555e_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _0152da_func
		jb     _015604_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _0155b3_jump
		cmp    $0x000002,%cl
		je     _0155d4_jump
		cmp    $0x000001,%cl
		je     _0155ef_jump

	_01558c_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _01558c_jump
		jmp    _015604_jump

	_0155b3_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0155b3_jump
		jmp    _015604_jump

	_0155d4_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0155d4_jump
		jmp    _015604_jump

	_0155ef_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _014c86_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0155ef_jump
		jmp    _015604_jump

	_015604_jump:
		add    $0x000005,%esp
		popa   
		ret    



_015609_func:
		pusha  
		add    _091b00_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_015618_switch:
		.long   0

_01561c_switch:
		.long   0

_015620_switch:
		.long   0

_015624_switch:
		.long   0




_015628_func:
		mov    %eax,_015618_switch
		mov    %ebx,_01561c_switch
		mov    %ecx,_015620_switch
		mov    %edx,_015624_switch
		ret    



_015640_func:
		push   %eax
		push   %edi
		cmp    _015620_switch,%eax
		jl     _01566d_jump
		cmp    _015624_switch,%eax
		ja     _01566d_jump
		cmp    _015618_switch,%ebx
		jl     _01566d_jump
		cmp    _01561c_switch,%ebx
		ja     _01566d_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_01566d_jump:
		pop    %edi
		pop    %eax
		ret    



_015670_func:
		push   %eax
		push   %edi
		cmp    _015620_switch,%eax
		jl     _01569d_jump
		cmp    _015624_switch,%eax
		ja     _01569d_jump
		cmp    _015618_switch,%ebx
		jl     _01569d_jump
		cmp    _01561c_switch,%ebx
		ja     _01569d_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_01569d_jump:
		pop    %edi
		pop    %eax
		ret    



_0156a0_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _0156d9_jump
		cmp    _015624_switch,%eax
		ja     _0156d9_jump
		cmp    _015618_switch,%ebx
		jl     _0156d9_jump
		cmp    _01561c_switch,%ebx
		ja     _0156d9_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_0156d9_jump:
		pop    %eax
		pop    %edi
		ret    



_0156dc_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _015722_jump
		cmp    _015624_switch,%eax
		ja     _015722_jump
		cmp    _015618_switch,%ebx
		jl     _015722_jump
		cmp    _01561c_switch,%ebx
		ja     _015722_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_015722_jump:
		pop    %eax
		pop    %edi
		ret    



_015725_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _015752_jump
		cmp    _015624_switch,%eax
		ja     _015752_jump
		cmp    _015618_switch,%ebx
		jl     _015752_jump
		cmp    _01561c_switch,%ebx
		ja     _015752_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_015752_jump:
		pop    %eax
		pop    %edi
		ret    



_015755_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _0157a3_jump
		cmp    _015624_switch,%eax
		ja     _0157a3_jump
		cmp    _015618_switch,%ebx
		jl     _0157a3_jump
		cmp    _01561c_switch,%ebx
		ja     _0157a3_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_0157a3_jump:
		pop    %eax
		pop    %edi
		ret    



_0157a6_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _0157dc_jump
		cmp    _015624_switch,%eax
		ja     _0157dc_jump
		cmp    _015618_switch,%ebx
		jl     _0157dc_jump
		cmp    _01561c_switch,%ebx
		ja     _0157dc_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_0157dc_jump:
		pop    %eax
		pop    %edi
		ret    



_0157df_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _01582d_jump
		cmp    _015624_switch,%eax
		ja     _01582d_jump
		cmp    _015618_switch,%ebx
		jl     _01582d_jump
		cmp    _01561c_switch,%ebx
		ja     _01582d_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_01582d_jump:
		pop    %eax
		pop    %edi
		ret    



_015830_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _01587a_jump
		cmp    _015624_switch,%eax
		ja     _01587a_jump
		cmp    _015618_switch,%ebx
		jl     _01587a_jump
		cmp    _01561c_switch,%ebx
		ja     _01587a_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_01587a_jump:
		pop    %eax
		pop    %edi
		ret    



_01587d_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _0158f1_jump
		cmp    _015624_switch,%eax
		ja     _0158f1_jump
		cmp    _015618_switch,%ebx
		jl     _0158f1_jump
		cmp    _01561c_switch,%ebx
		ja     _0158f1_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_0158f1_jump:
		pop    %eax
		pop    %edi
		ret    



_0158f4_func:
		push   %edi
		push   %eax
		cmp    _015620_switch,%eax
		jl     _01594e_jump
		cmp    _015624_switch,%eax
		ja     _01594e_jump
		cmp    _015618_switch,%ebx
		jl     _01594e_jump
		cmp    _01561c_switch,%ebx
		ja     _01594e_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_01594e_jump:
		pop    %eax
		pop    %edi
		ret    

	_015951_jump:
		inc    %eax
		add    %eax,(%eax)
	_015955_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_015959_switch:
		.long   0




_01595d_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf7f6_data
		sbbw   $0x000000,_0cf7f6_data
		shr    %al
		movw   $0x000001,_0cf7f8_data
		sbbw   $0x000000,_0cf7f8_data
		shr    %al
		movw   $0x000001,_0cf7f2_data
		sbbw   $0x000000,_0cf7f2_data
		shr    %al
		movw   $0x000001,_0cf7f4_data
		sbbw   $0x000000,_0cf7f4_data
		mov    _095eb4_data,%ax
		cmp    $0x000001,%ax
		je     _015a2e_jump
		and    $0x000003,%ebx
		jne    _015a12_jump
		movw   $0x000000,_0cf746_data
		movw   $0x000000,_0cf744_data
		mov    $0x0007d0,%ebx
		call   _016efd_func
		mov    %eax,_015959_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_0159eb_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cf746_data,%ax
		je     _015a31_jump

	_0159fa_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cf744_data,%ax
		je     _015a44_jump

	_015a08_jump:
		dec    %ebx
		je     _015a12_jump
		and    $0x000003,%ebp
		jne    _0159eb_jump
		jmp    _015a2e_jump

	_015a12_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data

	_015a2e_jump:
		sti    
		popa   
		ret    

	_015a31_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf746_data
		jmp    _0159fa_jump

	_015a44_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf744_data
		jmp    _015a08_jump



_015a57_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf7f2_data
		sbbw   $0x000000,_0cf7f2_data
		shr    %al
		movw   $0x000001,_0cf7f4_data
		sbbw   $0x000000,_0cf7f4_data
		shr    %al
		movw   $0x000001,_0cf7f6_data
		sbbw   $0x000000,_0cf7f6_data
		shr    %al
		movw   $0x000001,_0cf7f8_data
		sbbw   $0x000000,_0cf7f8_data
		mov    _095eb4_data,%ax
		cmp    $0x000001,%ax
		je     _015a2e_jump
		and    $0x00000c,%ebx
		jne    _015b10_jump
		movw   $0x000000,_0cf746_data
		movw   $0x000000,_0cf744_data
		mov    $0x0007d0,%ebx
		call   _016efd_func
		mov    %eax,_015959_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015ae9_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf746_data,%ax
		je     _015b2f_jump

	_015af8_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf744_data,%ax
		je     _015b42_jump

	_015b06_jump:
		dec    %ebx
		je     _015b10_jump
		and    $0x00000c,%ebp
		jne    _015ae9_jump
		jmp    _015b2c_jump

	_015b10_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data

	_015b2c_jump:
		sti    
		popa   
		ret    

	_015b2f_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf746_data
		jmp    _015af8_jump

	_015b42_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf744_data
		jmp    _015b06_jump



_015b55_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0cf746_data
		movw   $0x000000,_0cf744_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf7f6_data
		sbbw   $0x000000,_0cf7f6_data
		shr    %al
		movw   $0x000001,_0cf7f8_data
		sbbw   $0x000000,_0cf7f8_data
		shr    %al
		movw   $0x000001,_0cf7f2_data
		sbbw   $0x000000,_0cf7f2_data
		shr    %al
		movw   $0x000001,_0cf7f4_data
		sbbw   $0x000000,_0cf7f4_data
		and    $0x000003,%ebx
		jne    _015bf4_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015bcd_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _015bdc_jump
		incw   _0cf746_data

	_015bdc_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _015bea_jump
		incw   _0cf744_data

	_015bea_jump:
		dec    %ebx
		je     _015bf4_jump
		and    $0x000003,%ebp
		jne    _015bcd_jump
		jmp    _015c10_jump

	_015bf4_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data

	_015c10_jump:
		sti    
		popa   
		ret    



_015c13_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0cf746_data
		movw   $0x000000,_0cf744_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cf7f2_data
		sbbw   $0x000000,_0cf7f2_data
		shr    %al
		movw   $0x000001,_0cf7f4_data
		sbbw   $0x000000,_0cf7f4_data
		shr    %al
		movw   $0x000001,_0cf7f6_data
		sbbw   $0x000000,_0cf7f6_data
		shr    %al
		movw   $0x000001,_0cf7f8_data
		sbbw   $0x000000,_0cf7f8_data
		and    $0x00000c,%ebx
		jne    _015cc0_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015c8b_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf746_data,%ax
		je     _015ca1_jump
		incw   _0cf746_data

	_015ca1_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf744_data,%ax
		je     _015cb6_jump
		incw   _0cf744_data

	_015cb6_jump:
		dec    %ebx
		je     _015cc0_jump
		and    $0x00000c,%ebp
		jne    _015c8b_jump
		jmp    _015cdc_jump

	_015cc0_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data

	_015cdc_jump:
		sti    
		popa   
		ret    



_015cdf_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%eax
		out    %al,(%dx)

	_015cf1_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000003,%ebp
		je     _015d04_jump
		dec    %ebx
		jne    _015cf1_jump

	_015cfc_jump:
		popa   
		mov    $0x000000,%eax
		jmp    _015d12_jump

	_015d04_jump:
		cmp    $0x0007d0,%ebx
		je     _015cfc_jump
		popa   
		mov    $0x000001,%eax

	_015d12_jump:
		sti    
		ret    



_015d14_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%eax
		out    %al,(%dx)
		in     (%dx),%al

	_015d27_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x00000c,%ebp
		je     _015d3a_jump
		dec    %ebx
		jne    _015d27_jump

	_015d32_jump:
		popa   
		mov    $0x000000,%eax
		jmp    _015d48_jump

	_015d3a_jump:
		cmp    $0x0007d0,%ebx
		je     _015d32_jump
		popa   
		mov    $0x000001,%eax

	_015d48_jump:
		sti    
		ret    



_015d4a_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0cf746_data
		movw   $0x000000,_0cf744_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0cf7f6_data
		sbbw   $0x000000,_0cf7f6_data
		shr    %al
		movw   $0x000001,_0cf7f8_data
		sbbw   $0x000000,_0cf7f8_data
		shr    %al
		movw   $0x000001,_0cf7f2_data
		sbbw   $0x000000,_0cf7f2_data
		shr    %al
		movw   $0x000001,_0cf7f4_data
		sbbw   $0x000000,_0cf7f4_data
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		jne    _015e98_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016efd_func
		mov    %eax,_015959_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015de8_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cf746_data,%ax
		je     _015edc_jump

	_015e07_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cf744_data,%ax
		je     _015ef2_jump

	_015e19_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		je     _015ebe_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015951_jump,%ebx
		add    _015955_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015de8_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015e4b_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0cf746_data,%ax
		je     _015f08_jump

	_015e5e_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0cf744_data,%ax
		je     _015f1e_jump

	_015e70_jump:
		dec    %ebx
		je     _015e7a_jump
		and    $0x000003,%ebp
		jne    _015e4b_jump
		jmp    _015e96_jump

	_015e7a_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data

	_015e96_jump:
		jmp    _015ed6_jump

	_015e98_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_015ebe_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015951_jump,%ebx
		add    _015955_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015ebe_jump

	_015ed6_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_015edc_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf746_data
		jmp    _015e07_jump

	_015ef2_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf744_data
		jmp    _015e19_jump

	_015f08_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf746_data
		jmp    _015e5e_jump

	_015f1e_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf744_data
		jmp    _015e70_jump



_015f34_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0cf746_data
		movw   $0x000000,_0cf744_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0cf7f6_data
		sbbw   $0x000000,_0cf7f6_data
		shr    %al
		movw   $0x000001,_0cf7f8_data
		sbbw   $0x000000,_0cf7f8_data
		shr    %al
		movw   $0x000001,_0cf7f2_data
		sbbw   $0x000000,_0cf7f2_data
		shr    %al
		movw   $0x000001,_0cf7f4_data
		sbbw   $0x000000,_0cf7f4_data
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		jne    _016082_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016efd_func
		mov    %eax,_015959_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015fd2_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf746_data,%ax
		je     _0160c6_jump

	_015ff1_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf744_data,%ax
		je     _0160dc_jump

	_016003_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		je     _0160a8_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015951_jump,%ebx
		add    _015955_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015fd2_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_016035_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0cf746_data,%ax
		je     _0160f2_jump

	_016048_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0cf744_data,%ax
		je     _016108_jump

	_01605a_jump:
		dec    %ebx
		je     _016064_jump
		and    $0x00000c,%ebp
		jne    _016035_jump
		jmp    _016080_jump

	_016064_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data

	_016080_jump:
		jmp    _0160c0_jump

	_016082_jump:
		mov    _0cf74e_data,%bx
		mov    %bx,_0cf746_data
		mov    _0cf74c_data,%bx
		mov    %bx,_0cf744_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_0160a8_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _015951_jump,%ebx
		add    _015955_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _0160a8_jump

	_0160c0_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_0160c6_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf746_data
		jmp    _015ff1_jump

	_0160dc_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf744_data
		jmp    _016003_jump

	_0160f2_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf746_data
		jmp    _016048_jump

	_016108_jump:
		call   _016efd_func
		sub    _015959_switch,%eax
		mov    %ax,_0cf744_data
		jmp    _01605a_jump



_01611e_func:
		push   %bx
		pushfw 
		mov    %sp,%ax
		and    $0x00fffc,%sp
		pushf  
		pushf  
		pop    %ebx
		or     $0x040000,%ebx
		push   %ebx
		popf   
		pushf  
		pop    %ebx
		popf   
		mov    %ax,%sp
		test   $0x040000,%ebx
		je     _01617a_jump
		pushf  
		pop    %eax
		mov    %eax,%ebx
		xor    $0x200000,%eax
		push   %eax
		popf   
		pushf  
		pop    %eax
		push   %ebx
		popf   
		and    $0x200000,%eax
		and    $0x200000,%ebx
		cmp    %ebx,%eax
		je     _016173_jump
		mov    $0x000001,%eax
		push   %edx
		cpuid  
		pop    %edx
		shr    $0x000008,%ax
		and    $0x00000f,%eax
		jmp    _01617f_jump

	_016173_jump:
		mov    $0x000004,%eax
		jmp    _01617f_jump

	_01617a_jump:
		mov    $0x000003,%eax

	_01617f_jump:
		popfw  
		pop    %bx
		ret    

	_016184_jump:
		or     %al,(%eax)
		add    %al,(%eax)

	_016188_jump:
		cmp    %al,(%ecx)
		add    %al,(%eax)

_01618c_switch:
		.long   0


	_016190_jump:
		enter  $0x000000,$0x000000



_016194_func:
		movl   $0x000008,_016184_jump
		movl   $0x000138,_016188_jump
		movl   $0x000000,_01618c_switch
		movl   $0x0000c8,_016190_jump
		ret    



_0161bd_func:
		push   %ebp
		push   %edi
		mov    _016184_jump,%ebp
		mov    %ebp,(%eax)
		mov    _016188_jump,%edi
		mov    %edi,(%ebx)
		mov    _01618c_switch,%ebp
		mov    %ebp,(%ecx)
		mov    _016190_jump,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_0161fa_func:
		cmp    $0x000000,%eax
		jge    _016204_jump
		mov    $0x000000,%eax

	_016204_jump:
		cmp    $0x000140,%eax
		jle    _016210_jump
		mov    $0x000140,%eax

	_016210_jump:
		mov    %eax,_016184_jump
		cmp    $0x000000,%ebx
		jge    _01621f_jump
		mov    $0x000000,%ebx

	_01621f_jump:
		cmp    $0x000140,%ebx
		jle    _01622c_jump
		mov    $0x000140,%ebx

	_01622c_jump:
		mov    %ebx,_016188_jump
		cmp    $0x000000,%ecx
		jge    _01623c_jump
		mov    $0x000000,%ecx

	_01623c_jump:
		cmp    $0x0000c8,%ecx
		jle    _016249_jump
		mov    $0x0000c8,%ecx

	_016249_jump:
		mov    %ecx,_01618c_switch
		cmp    $0x000000,%edx
		jge    _016259_jump
		mov    $0x000000,%edx

	_016259_jump:
		cmp    $0x0000c8,%edx
		jle    _016266_jump
		mov    $0x0000c8,%edx

	_016266_jump:
		mov    %edx,_016190_jump
		ret    



_01626d_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _016184_jump,%eax
		jl     _0162b7_jump

	_01627f_jump:
		add    %eax,%edx
		cmp    _016188_jump,%edx
		ja     _0162a3_jump

	_016289_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _01618c_switch,%ebx
		jl     _0162e9_jump

	_016295_jump:
		add    %ebx,%edx
		cmp    _016190_jump,%edx
		ja     _0162d5_jump

	_01629f_jump:
		clc    
		ret    

	_0162a1_jump:
		stc    
		ret    

	_0162a3_jump:
		cmp    _016188_jump,%eax
		jae    _0162a1_jump
		mov    _016188_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _016289_jump

	_0162b7_jump:
		sub    _016184_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0162a1_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _016184_jump,%eax
		jmp    _01627f_jump

	_0162d5_jump:
		cmp    _016190_jump,%ebx
		jae    _0162a1_jump
		mov    _016190_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _01629f_jump

	_0162e9_jump:
		add    %ebx,%edx
		cmp    _01618c_switch,%edx
		jle    _0162a1_jump
		sub    _01618c_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _01618c_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _016295_jump



_016323_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _016184_jump,%eax
		jl     _016374_jump

	_016335_jump:
		add    %eax,%edx
		cmp    _016188_jump,%edx
		ja     _016358_jump

	_01633f_jump:
		movzbl %ch,%edx
		cmp    _01618c_switch,%ebx
		jl     _0163a4_jump

	_01634a_jump:
		add    %ebx,%edx
		cmp    _016190_jump,%edx
		ja     _016390_jump

	_016354_jump:
		clc    
		ret    

	_016356_jump:
		stc    
		ret    

	_016358_jump:
		cmp    _016188_jump,%eax
		jae    _016356_jump
		mov    _016188_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _092144_data,%esi
		sub    %edx,%esi
		jmp    _01633f_jump

	_016374_jump:
		sub    _016184_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016356_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _016184_jump,%eax
		jmp    _016335_jump

	_016390_jump:
		cmp    _016190_jump,%ebx
		jae    _016356_jump
		mov    _016190_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016354_jump

	_0163a4_jump:
		add    %ebx,%edx
		cmp    _01618c_switch,%edx
		jle    _016356_jump
		sub    _01618c_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _01618c_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _01634a_jump

_0163de_switch:
		.long   0

_0163e2_switch:
		.long   0




_0163e6_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _0163fd_jump



_0163f2_func:
		call   _01626d_func
		jb     _016558_jump

	_0163fd_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_0163de_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01647e_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_01645a_jump:
		xor    %ebp,%ebp

	_01645c_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016466_jump
		mov    %ah,(%edi)

	_016466_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01645c_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _01645a_jump
		pop    %edi
		pop    %esi

	_01647e_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0164c9_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0164a2_jump
		inc    %edi
		mov    $0x000001,%al

	_0164a2_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0164a5_jump:
		xor    %ebp,%ebp

	_0164a7_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0164b1_jump
		mov    %ah,(%edi)

	_0164b1_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0164a7_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _0164a5_jump
		pop    %edi
		pop    %esi

	_0164c9_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016514_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0164ed_jump
		inc    %edi
		mov    $0x000001,%al

	_0164ed_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0164f0_jump:
		xor    %ebp,%ebp

	_0164f2_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0164fc_jump
		mov    %ah,(%edi)

	_0164fc_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0164f2_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _0164f0_jump
		pop    %edi
		pop    %esi

	_016514_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016557_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016534_jump
		inc    %edi
		mov    $0x000001,%al

	_016534_jump:
		out    %al,(%dx)

	_016535_jump:
		xor    %ebp,%ebp

	_016537_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016541_jump
		mov    %ah,(%edi)

	_016541_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016537_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _016535_jump

	_016557_jump:
		pop    %ebp

	_016558_jump:
		ret    



_016559_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016570_jump



_016565_func:
		call   _016323_func
		jb     _0166d6_jump

	_016570_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_0163de_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0165f6_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0165d2_jump:
		xor    %ebp,%ebp

	_0165d4_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0165de_jump
		mov    %ah,(%edi)

	_0165de_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0165d4_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _0165d2_jump
		pop    %edi
		pop    %esi

	_0165f6_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016643_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01661c_jump
		inc    %edi
		mov    $0x000001,%al

	_01661c_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01661f_jump:
		xor    %ebp,%ebp

	_016621_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01662b_jump
		mov    %ah,(%edi)

	_01662b_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016621_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _01661f_jump
		pop    %edi
		pop    %esi

	_016643_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016690_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016669_jump
		inc    %edi
		mov    $0x000001,%al

	_016669_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01666c_jump:
		xor    %ebp,%ebp

	_01666e_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016678_jump
		mov    %ah,(%edi)

	_016678_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01666e_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _01666c_jump
		pop    %edi
		pop    %esi

	_016690_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0166d5_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0163e2_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0166b2_jump
		inc    %edi
		mov    $0x000001,%al

	_0166b2_jump:
		out    %al,(%dx)

	_0166b3_jump:
		xor    %ebp,%ebp

	_0166b5_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0166bf_jump
		mov    %ah,(%edi)

	_0166bf_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0166b5_jump
		add    _0163e2_switch,%edi
		add    _0163de_switch,%esi
		cmp    %ebx,%edi
		jb     _0166b3_jump

	_0166d5_jump:
		pop    %ebp

	_0166d6_jump:
		ret    

_0166d7_switch:
		.long   0

_0166db_switch:
		.long   0




_0166df_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _01626d_func
		jb     _016875_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_0166d7_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016782_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0166db_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_01675b_jump:
		xor    %ebp,%ebp

	_01675d_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016769_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016769_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01675d_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _01675b_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016782_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0167d6_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0166db_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0167a6_jump
		inc    %edi
		mov    $0x000001,%al

	_0167a6_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0167af_jump:
		xor    %ebp,%ebp

	_0167b1_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0167bd_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0167bd_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0167b1_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _0167af_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0167d6_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01682a_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0166db_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0167fa_jump
		inc    %edi
		mov    $0x000001,%al

	_0167fa_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016803_jump:
		xor    %ebp,%ebp

	_016805_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016811_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016811_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016805_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _016803_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01682a_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016874_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_0166db_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01684a_jump
		inc    %edi
		mov    $0x000001,%al

	_01684a_jump:
		out    %al,(%dx)

	_01684b_jump:
		xor    %ebp,%ebp
		mov    _092140_data,%eax

	_016852_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01685e_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01685e_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016852_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _01684b_jump

	_016874_jump:
		pop    %ebp

	_016875_jump:
		ret    



_016876_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016323_func
		jb     _016a17_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_0166d7_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01691e_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0166db_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0168f7_jump:
		xor    %ebp,%ebp

	_0168f9_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016905_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016905_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0168f9_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _0168f7_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01691e_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016974_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0166db_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016944_jump
		inc    %edi
		mov    $0x000001,%al

	_016944_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_01694d_jump:
		xor    %ebp,%ebp

	_01694f_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01695b_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01695b_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01694f_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _01694d_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016974_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0169ca_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0166db_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01699a_jump
		inc    %edi
		mov    $0x000001,%al

	_01699a_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0169a3_jump:
		xor    %ebp,%ebp

	_0169a5_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0169b1_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0169b1_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0169a5_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _0169a3_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0169ca_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016a16_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_0166db_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0169ec_jump
		inc    %edi
		mov    $0x000001,%al

	_0169ec_jump:
		out    %al,(%dx)
		mov    _092140_data,%eax

	_0169f2_jump:
		xor    %ebp,%ebp

	_0169f4_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016a00_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016a00_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0169f4_jump
		add    _0166db_switch,%edi
		add    _0166d7_switch,%esi
		cmp    %ebx,%edi
		jb     _0169f2_jump

	_016a16_jump:
		pop    %ebp

	_016a17_jump:
		ret    



_016a18_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016a30_jump

	_016a24_jump:
		call   _01626d_func
		jb     _016a9c_jump
		cmp    $0x000000,%cl
		jbe    _016a9c_jump

	_016a30_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_016a65_jump:
		xor    %ebp,%ebp

	_016a67_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016a84_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016a67_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a65_jump
		pop    %ebp
		ret    

	_016a84_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _016a67_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a65_jump
		pop    %ebp

	_016a9c_jump:
		ret    



_016a9d_func:
		call   _01626d_func
		jb     _016afa_jump
		cmp    $0x000000,%cl
		jbe    _016afa_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016adc_jump:
		xor    %ebp,%ebp

	_016ade_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016ae8_jump
		mov    %al,(%edi,%ebp,1)

	_016ae8_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016ade_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016adc_jump
		pop    %ebp

	_016afa_jump:
		ret    



_016afc_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016b14_jump

	_016b08_jump:
		call   _016323_func
		jb     _016b87_jump
		cmp    $0x000000,%cl
		jbe    _016b87_jump

	_016b14_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_016b49_jump:
		xor    %ebp,%ebp
		push   %edi

	_016b4c_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016b6c_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016b4c_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b49_jump
		pop    %ebp
		ret    

	_016b6c_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _016b4c_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b49_jump
		pop    %ebp

	_016b87_jump:
		ret    



_016b88_func:
		call   _016323_func
		jb     _016be9_jump
		cmp    $0x000000,%cl
		jbe    _016be9_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016bc7_jump:
		xor    %ebp,%ebp
		push   %edi

	_016bca_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016bd5_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_016bd5_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016bca_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016bc7_jump
		pop    %ebp

	_016be9_jump:
		ret    



_016bea_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _01626d_func
		jb     _016c88_jump
		cmp    $0x000000,%cl
		jbe    _016c88_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016c44_jump:
		xor    %ebp,%ebp

	_016c46_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016c65_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016c46_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c44_jump
		pop    %ebp
		ret    

	_016c65_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016c46_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c44_jump
		pop    %ebp

	_016c88_jump:
		ret    



_016c89_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016323_func
		jb     _016d2e_jump
		cmp    $0x000000,%cl
		jbe    _016d2e_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016ce3_jump:
		xor    %ebp,%ebp
		push   %edi

	_016ce6_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016d08_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016ce6_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016ce3_jump
		pop    %ebp
		ret    

	_016d08_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016ce6_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016ce3_jump
		pop    %ebp

	_016d2e_jump:
		ret    

_016d2f_switch:
		.long   0




_016d33_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_016d2f_switch
		cmp    _016184_jump,%eax
		jl     _016d81_jump
		add    %eax,%edx
		cmp    _016188_jump,%edx
		ja     _016d6d_jump
		shr    $0x000002,%cl

	_016d52_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _01618c_switch,%ebx
		jl     _016dbb_jump

	_016d5e_jump:
		add    %ebx,%edx
		cmp    _016190_jump,%edx
		ja     _016da7_jump

	_016d68_jump:
		clc    
		ret    

	_016d6a_jump:
		pop    %eax

	_016d6b_jump:
		stc    
		ret    

	_016d6d_jump:
		cmp    _016188_jump,%eax
		jae    _016d6b_jump
		mov    _016188_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _016df5_jump

	_016d81_jump:
		push   %eax
		sub    _016184_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016d6a_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _016d52_jump

	_016da7_jump:
		cmp    _016190_jump,%ebx
		jae    _016d6b_jump
		mov    _016190_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016d68_jump

	_016dbb_jump:
		add    %ebx,%edx
		cmp    _01618c_switch,%edx
		jle    _016d6b_jump
		sub    _01618c_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _016d2f_switch,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _01618c_switch,%ebx
		jmp    _016d5e_jump

	_016df5_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _016d52_jump
		inc    %cl
		jmp    _016d52_jump



_016e0d_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _016d33_func
		jb     _016e86_jump
		cmp    $0x000000,%cl
		jbe    _016e86_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		and    $0x0000ff,%ecx
		push   %ebp
		xor    %ebx,%ebx

	_016e55_jump:
		xor    %ebp,%ebp

	_016e57_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _016e68_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_016e68_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016e57_jump
		add    $0x000140,%edi
		add    _016d2f_switch,%esi
		add    _016d2f_switch,%edx
		cmp    0x000008(%esp),%edi
		jb     _016e55_jump
		pop    %ebp

	_016e86_jump:
		add    $0x00000c,%esp
		ret    



_016e8a_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016e90_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _016e90_jump
		pop    %eax
		pop    %edx
		ret    



_016e9a_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016ea0_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _016ea0_jump
		pop    %eax
		pop    %edx
		ret    



_016eaa_func:
		movl   $0x000000,_092158_data
		movl   $0x000000,_092154_data
		movl   $0x000000,_092150_data
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_092148_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _092148_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_016eea_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    



_016efd_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _092148_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _092150_data,%eax
		jg     _016f49_jump
		jne    _016f3d_jump
		mov    _092158_data,%edx
		inc    %edx
		cmp    $0x000014,%edx
		jle    _016f3d_jump
		movl   $0x000000,_092148_data
		xor    %edx,%edx

	_016f3d_jump:
		mov    _092148_data,%ebx
		add    %ebx,_092154_data

	_016f49_jump:
		mov    %eax,_092150_data
		add    _092154_data,%eax
		mov    %edx,_092158_data
		pop    %edx
		pop    %ebx
		ret    



_016f5d_func:
		mov    $0x000001,%ecx
		cmpl   $0x000000,_092148_data
		je     _016f77_jump
		dec    %ecx
		dec    %ecx

	_016f6d_jump:
		call   _016efd_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _016f6d_jump

	_016f77_jump:
		ret    



_016f78_func:
		call   _016eaa_func
		ret    



_016f80_func:
		push   %esi
		push   %edi
		mov    %ebx,%esi
		xor    %ah,%ah
		and    $0x00000f,%al
		mov    %ax,_0c21c0_data
		xor    %dh,%dh
		mov    _0c21be_data,%ebx
		and    $0x00000f,%dl
		sar    $0x000010,%ebx
		mov    %dx,_0c21c2_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0c21c0_data,%edx
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%edx
		sub    %eax,%edi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000004,%eax
		sub    %eax,%edi
		lea    0x000001(%edi),%eax
		mov    %eax,_0c21c4_data
		cmpb   $0x000000,_0cfa24_data
		je     _016fec_jump
		xor    %edx,%edx
		mov    %edx,_0c21c8_data
		jmp    _016ff9_jump

	_016fec_jump:
		movswl %si,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0c21c8_data

	_016ff9_jump:
		mov    _0c21c0_data,%edx
		movswl %cx,%eax
		sar    $0x000010,%edx
		add    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,_0c21cc_data
		mov    _0c21c8_data,%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cd808_data,%eax
		mov    %edx,%ebx
		shr    $0x000002,%eax
		imul   %eax,%ebx
		mov    _0c21c8_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0cd824_data,%eax
		lea    (%eax,%ebx,1),%edx
		mov    _0cd7f4_data,%esi
		mov    _0c21cc_data,%eax
		imul   %esi,%eax
		add    %eax,%edx
		mov    _0c21c0_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    %edx,_0c21d0_data
		mov    %eax,_0c21d4_data
		pop    %edi
		pop    %esi
		ret    



_017084_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0cfa17_data
		je     _01709e_jump
		cmpb   $0x000001,_0cfa62_data
		je     _01709e_jump
		call   _072f38_func

	_01709e_jump:
		mov    $_0caf50_data,%eax
		call   _042490_func
		cmpb   $0x000000,_0cfa62_data
		jne    _0170c6_jump
		call   _05aae8_func
		cmpb   $0x000000,_0cfa62_data
		jne    _0170cb_jump
		call   _05ac70_func
		jmp    _0170cb_jump

	_0170c6_jump:
		call   _05b668_func

	_0170cb_jump:
		call   _0484c0_func
		test   %dl,%dl
		jne    _0170de_jump
		mov    $_0c21d8_data,%eax
		call   _05c914_func

	_0170de_jump:
		pop    %edx
		ret    



_0170e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%ah
		xor    %dl,%dl
		mov    %ah,_0cfa98_data
		call   _05b7a0_func
		mov    %dl,_0cfa5c_data
		xor    %edx,%edx
		mov    %edx,_0ccfd8_data
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cf742_data
		mov    _0cfa50_data,%dh
		mov    %bx,_0cf740_data
		test   %dh,%dh
		je     _01712d_jump
		call   _073204_func

	_01712d_jump:
		cmpb   $0x000000,_0cfa7e_data
		je     _017695_jump
		cmpw   $0x000000,_0cf880_data
		jne    _017695_jump
		cmpw   $0x000000,_0cf892_data
		jne    _017695_jump
		cmpb   $0x000002,_0cfa36_data
		je     _017695_jump
		call   _016f78_func
		cmpb   $0x000000,_0cfa4e_data
		je     _017176_jump
		call   _016e8a_func

	_017176_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _017188_jump
		call   _016efd_func
		mov    %eax,0x000004(%esp)

	_017188_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _01719e_jump
		mov    0x000004(%esp),%ebx
		movzwl _0cf7e6_data,%ebp
		add    %ebx,%ebp

	_01719e_jump:
		call   _055ac8_func
		cmpb   $0x000020,_0cfa7e_data
		jb     _0171ba_jump
		cmpb   $0x000000,_0cfa62_data
		jne    _0171ba_jump
		call   _03d704_func

	_0171ba_jump:
		call   _03c8c8_func
		cmpw   $0x000000,_095e66_data
		jne    _017279_jump
		cmpw   $0x000000,_095e68_data
		jne    _017279_jump
		mov    _0cd0a4_data,%eax
		mov    _0cd0a4_data,%edx
		shl    $0x000008,%eax
		shl    $0x000006,%edx
		mov    _0cd09c_data,%ecx
		add    %edx,%eax
		mov    _0cfa23_data,%bh
		add    %ecx,%eax
		cmp    $0x000001,%bh
		jne    _017247_jump
		cmpb   $0x000000,_095eb2_data
		je     _017247_jump
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ebx
		mov    _0cd09c_data,%ecx
		mov    _095e28_data,%edi
		mov    _0cd138_data,%esi
		sub    %ebx,%edx
		add    %eax,%edi
		mov    %edx,%ebx
		mov    _0cd098_data,%edx
		add    %eax,%esi
		sub    %ecx,%edx
		mov    %ebx,%eax
		mov    %edx,%ecx
		call   *_0cd120_data
		jmp    _0172c4_jump

	_017247_jump:
		mov    _0cd0a0_data,%ecx
		mov    _0cd0a4_data,%esi
		mov    _0cd098_data,%edx
		mov    _0cd09c_data,%edi
		sub    %esi,%ecx
		sub    %edi,%edx
		mov    _095e28_data,%edi
		mov    _0cd138_data,%esi
		add    %eax,%edi
		add    %eax,%esi
		mov    %ecx,%eax
		mov    %edx,%ecx
		jmp    _0172bf_jump

	_017279_jump:
		cmpb   $0x000001,_0cfa23_data
		jne    _0172a9_jump
		cmpb   $0x000000,_095eb2_data
		je     _0172a9_jump
		mov    $0x000140,%ecx
		mov    _0cd0a0_data,%eax
		mov    _095e28_data,%edi
		mov    _0cd138_data,%esi
		call   *_0cd120_data
		jmp    _0172c4_jump

	_0172a9_jump:
		mov    $0x000140,%ecx
		mov    _0cd0a0_data,%eax
		mov    _095e28_data,%edi
		mov    _0cd138_data,%esi

	_0172bf_jump:
		call   _014c9c_func

	_0172c4_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _0172d2_jump
		call   _016efd_func

	_0172d2_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _0172e0_jump
		call   _073204_func

	_0172e0_jump:
		cmpb   $0x000000,_0cfa23_data
		jne    _0172ee_jump
		call   _042134_func

	_0172ee_jump:
		mov    _0cf7e8_data,%dl
		xor    %ebx,%ebx

	_0172f6_jump:
		mov    %ebx,%eax
		call   _017084_func
		mov    _0cf880_data,%cx
		cmp    %cx,%bx
		jne    _01731e_jump
		cmp    _0cf892_data,%cx
		jne    _01731e_jump
		cmp    _0cfa7a_data,%cl
		jne    _01731e_jump
		mov    $0x000001,%al
		jmp    _017320_jump

	_01731e_jump:
		mov    %bl,%al

	_017320_jump:
		mov    %al,0x000008(%esp)
		test   %al,%al
		je     _01732f_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _0172f6_jump

	_01732f_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _01733d_jump
		call   _016efd_func

	_01733d_jump:
		call   _048538_func
		cmpb   $0x000000,_095e6e_data
		je     _0173af_jump
		cmpb   $0x000001,_0cfa1a_data
		jne    _0173af_jump
		mov    _0cf89c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cf7e4_data,%bx
		mov    _0cf7de_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _0787e8_func
		xor    %eax,%eax
		mov    _0cd0a4_data,%cx
		mov    _0cd0a0_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cd098_data,%ax
		mov    _0cd09c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0cf7e4_data,%dx
		mov    _0cf7de_data,%ax
		call   _077ba0_func
		jmp    _0173c1_jump

	_0173af_jump:
		mov    _0cd7b8_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_0173c1_jump:
		cmpw   $0x000000,_0cf802_data
		je     _0173f2_jump
		mov    _0cd098_data,%edx
		mov    _0cd09c_data,%ecx
		mov    _0cd0a0_data,%ebx
		mov    _0cd0a4_data,%eax
		sub    $0x000004,%edx
		sub    $0x000006,%ebx
		call   _015628_func
		call   _019d2c_func

	_0173f2_jump:
		mov    $_0c21d8_data,%edx
		mov    _0cd138_data,%eax
		call   _05d230_func
		call   _01ae50_func
		cmpb   $0x000000,_0cfa4b_data
		je     _017414_jump
		call   _016efd_func

	_017414_jump:
		call   _019a2c_func
		cmpb   $0x000000,_0cfa4b_data
		je     _017427_jump
		call   _016efd_func

	_017427_jump:
		call   _01a110_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0cd0a0_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0cd0a4_data,%cx
		mov    _0cd098_data,%ax
		mov    _0cd09c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0cf7e4_data,%dx
		mov    _0cf7de_data,%ax
		call   _0784a8_func
		cmpw   $0x000000,_0cf802_data
		je     _017475_jump
		call   _019f08_func

	_017475_jump:
		mov    _0cd138_data,%eax
		call   _048914_func
		mov    _0cd098_data,%eax
		mov    _0cd09c_data,%esi
		sub    %esi,%eax
		lea    0x000004(%eax),%edx
		mov    _0cd0a0_data,%ecx
		mov    _0cd138_data,%eax
		mov    _0cd0a4_data,%edi
		lea    (%esi,%eax,1),%ebx
		mov    %edi,%eax
		sub    %edi,%ecx
		shl    $0x000008,%eax
		shl    $0x000006,%edi
		add    %ebx,%eax
		add    %eax,%edi
		sub    $0x000004,%edi
		call   _014cc7_func
		cmpb   $0x000000,_0cfa57_data
		je     _0174c9_jump
		call   _01af1c_func
		jmp    _0174d3_jump

	_0174c9_jump:
		mov    _0cd8c4_data,%eax
		call   _019420_func

	_0174d3_jump:
		cmpb   $0x000000,_0cfa2c_data
		je     _0174e1_jump
		call   _0193a8_func

	_0174e1_jump:
		cmpb   $0x000000,_0cfa10_data
		je     _0174ef_jump
		call   _0193e4_func

	_0174ef_jump:
		mov    _0cd8c4_data,%eax
		call   _01b56c_func
		cmpb   $0x000000,_0cfa44_data
		je     _017507_jump
		call   _0354a4_func

	_017507_jump:
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _017553_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _017553_jump
		cmpb   $0x000000,_095e64_data
		jne    _017553_jump
		call   _026a20_func
		test   %al,%al
		jne    _017553_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _017553_jump
		cmpb   $0x000000,_0cfa62_data
		jne    _017553_jump
		cmpb   $0x000040,_0cfa7e_data
		jne    _017553_jump
		movb   $0x000001,_095e64_data

	_017553_jump:
		call   _049b7c_func
		call   _026a20_func
		test   %al,%al
		je     _01757b_jump
		call   _026a30_func
		test   %al,%al
		jne    _01757b_jump
		xor    %eax,%eax
		call   _026a28_func
		mov    $0x000001,%eax
		call   _04270c_func

	_01757b_jump:
		call   _041d54_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _0175cb_jump
		call   _042048_func
		test   %ax,%ax
		je     _0175d3_jump

	_0175cb_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0ccfd8_data

	_0175d3_jump:
		mov    _0ccfd8_data,%esi
		inc    %esi
		mov    %esi,_0ccfd8_data
		cmp    $0x005460,%esi
		jl     _0175ef_jump
		movb   $0x000001,_0cfa52_data

	_0175ef_jump:
		cmpb   $0x000000,_0cfa52_data
		je     _01761f_jump
		mov    _095e64_data,%bl
		test   %bl,%bl
		jne    _01761f_jump
		cmpb   $0x000041,_0cfa87_data
		jne    _017619_jump
		call   _038924_func
		xor    %eax,%eax
		mov    %eax,_0ccfd8_data
		jmp    _01761f_jump

	_017619_jump:
		mov    %bl,_0cfa52_data

	_01761f_jump:
		mov    (%esp),%eax
		call   _036cbc_func
		cmpb   $0x000000,_0cfa4b_data
		je     _01712d_jump
		cmpb   $0x000000,_0cfa4e_data
		je     _01712d_jump
		cmpb   $0x000000,0x000008(%esp)
		je     _01712d_jump
		mov    %ebp,%ebx
		call   _016f5d_func
		test   %ecx,%ecx
		jne    _01712d_jump
		mov    $0x000001,%eax
		call   _017084_func
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017679_jump
		incw   _0ce6a6_data

	_017679_jump:
		call   _0489d8_func
		cmpb   $0x000000,_0cfa4e_data
		je     _01712d_jump
		call   _016e9a_func
		jmp    _01712d_jump

	_017695_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa98_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0176a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa17_data
		je     _0176c3_jump
		cmpb   $0x000001,_0cfa62_data
		je     _0176c3_jump
		call   _072f38_func

	_0176c3_jump:
		mov    $_0caf50_data,%eax
		call   _042490_func
		cmpb   $0x000000,_0cfa62_data
		jne    _0176eb_jump
		call   _05aae8_func
		cmpb   $0x000000,_0cfa62_data
		jne    _0176f0_jump
		call   _05ac70_func
		jmp    _0176f0_jump

	_0176eb_jump:
		call   _05b668_func

	_0176f0_jump:
		cmpb   $0x000000,_0cfa62_data
		jne    _017721_jump
		mov    _0cf8aa_data,%ecx
		mov    _0cf8ae_data,%ebx
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03bb84_func

	_017721_jump:
		cmpb   $0x000001,_0cfa1a_data
		jne    _01774e_jump
		call   _0491d4_func
		mov    _0cf7e0_data,%bx
		test   %bx,%bx
		jge    _017757_jump
		mov    _0cf7e4_data,%ax
		mov    %ebx,%ecx
		add    %eax,%ecx
		mov    %cx,_0cf7e0_data
		jmp    _017757_jump

	_01774e_jump:
		xor    %edx,%edx
		mov    %dx,_0cf7e0_data

	_017757_jump:
		cmpb   $0x000000,_095e6e_data
		je     _0177a9_jump
		cmpb   $0x000001,_0cfa1a_data
		jne    _0177a9_jump
		mov    _0cf89c_data,%esi
		sar    $0x000010,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0cf7de_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cf7de_data,%ecx
		sar    $0x000010,%ecx
		movswl %dx,%ebx
		mov    _0cf8a4_data,%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		jmp    _0177be_jump

	_0177a9_jump:
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax

	_0177be_jump:
		call   _016f80_func
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03c3bc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0177e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%dl
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000008(%esp)
		mov    %dl,_0cfa98_data
		xor    %dh,%dh
		call   _05b7a0_func
		mov    %dh,_0cfa5c_data
		xor    %edx,%edx
		mov    %bx,_0cf740_data
		mov    %edx,_0ccfd8_data
		mov    $0x000001,%edx
		mov    _0cfa50_data,%bl
		mov    %dx,_0cf742_data
		test   %bl,%bl
		je     _017833_jump
		call   _073204_func

	_017833_jump:
		cmpb   $0x000000,_0cfa7e_data
		je     _017ca4_jump
		cmpw   $0x000000,_0cf880_data
		jne    _017ca4_jump
		cmpw   $0x000000,_0cf892_data
		jne    _017ca4_jump
		cmpb   $0x000002,_0cfa36_data
		je     _017ca4_jump
		call   _016f78_func
		call   _03b580_func
		cmpb   $0x000000,_0cfa4b_data
		je     _017885_jump
		call   _016efd_func
		mov    %eax,0x000004(%esp)

	_017885_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _01789b_jump
		mov    0x000004(%esp),%ebx
		movzwl _0cf7e6_data,%ebp
		add    %ebx,%ebp

	_01789b_jump:
		call   _055ac8_func
		cmpb   $0x000020,_0cfa7e_data
		jb     _0178b7_jump
		cmpb   $0x000000,_0cfa62_data
		jne    _0178b7_jump
		call   _03d704_func

	_0178b7_jump:
		call   _03c8c8_func
		cmpb   $0x000000,_0cfa50_data
		je     _0178ca_jump
		call   _073204_func

	_0178ca_jump:
		cmpl   $0x000001,_0cd8c0_data
		jne    _0178e9_jump
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b844_func

	_0178e9_jump:
		call   _042134_func
		mov    _0cf7e8_data,%dl
		xor    %ebx,%ebx

	_0178f6_jump:
		call   _0176a8_func
		mov    _0cf880_data,%di
		cmp    %di,%bx
		jne    _01791c_jump
		cmp    _0cf892_data,%di
		jne    _01791c_jump
		cmp    _0cfa7a_data,%bl
		jne    _01791c_jump
		mov    $0x000001,%al
		jmp    _01791e_jump

	_01791c_jump:
		mov    %bl,%al

	_01791e_jump:
		mov    %al,0x00000c(%esp)
		test   %al,%al
		je     _01792d_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _0178f6_jump

	_01792d_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _01793b_jump
		call   _016efd_func

	_01793b_jump:
		cmpb   $0x000000,_095e6e_data
		je     _017965_jump
		cmpb   $0x000001,_0cfa1a_data
		jne    _017965_jump
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03be20_func
		jmp    _0179ac_jump

	_017965_jump:
		cmpb   $0x000000,_095e6e_data
		je     _01798f_jump
		cmpb   $0x000002,_0cfa1a_data
		jne    _01798f_jump
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03be20_func
		jmp    _0179ac_jump

	_01798f_jump:
		mov    _0cd7b8_data,%edi
		mov    $0x0003ce,%edx
		mov    $0x000a04,%ax
		out    %ax,(%dx)
		mov    $0x000000,%eax
		mov    $0x000fa0,%ecx
		rep stos %eax,%es:(%edi)

	_0179ac_jump:
		cmpw   $0x000000,_0cf802_data
		je     _0179bb_jump
		call   _019d2c_func

	_0179bb_jump:
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03bee0_func
		call   _01ae50_func
		cmpb   $0x000000,_0cfa4b_data
		je     _0179e4_jump
		call   _016efd_func

	_0179e4_jump:
		call   _019a2c_func
		cmpb   $0x000000,_0cfa4b_data
		je     _0179f7_jump
		call   _016efd_func

	_0179f7_jump:
		call   _01a110_func
		cmpw   $0x000000,_0cf802_data
		je     _017a0b_jump
		call   _019f08_func

	_017a0b_jump:
		cmpb   $0x000000,_0cfa57_data
		je     _017a1b_jump
		call   _01af1c_func
		jmp    _017a25_jump

	_017a1b_jump:
		mov    _0cd8c4_data,%eax
		call   _019420_func

	_017a25_jump:
		cmpb   $0x000000,_0cfa2c_data
		je     _017a33_jump
		call   _0193a8_func

	_017a33_jump:
		cmpb   $0x000000,_0cfa10_data
		je     _017a41_jump
		call   _0193e4_func

	_017a41_jump:
		mov    _0cd8c4_data,%eax
		call   _01b56c_func
		cmpb   $0x000000,_0cfa20_data
		je     _017a61_jump
		mov    _0cd7b8_data,%edi
		call   _01456e_func
		jmp    _017a6c_jump

	_017a61_jump:
		mov    _0cd7b8_data,%edi
		call   _014504_func

	_017a6c_jump:
		cmpb   $0x000000,_0cfa44_data
		je     _017abf_jump
		call   _0354a4_func
		cmpb   $0x000000,_095e6e_data
		je     _017a93_jump
		cmpb   $0x000002,_0cfa1a_data
		jne    _017a93_jump
		movb   $0x000001,0x000008(%esp)
		jmp    _017abf_jump

	_017a93_jump:
		cmpb   $0x000000,_095e6e_data
		je     _017abf_jump
		cmpb   $0x000001,_0cfa20_data
		jne    _017abf_jump
		mov    _0cd808_data,%edx
		mov    _0cd7f4_data,%ebx
		mov    _0cd824_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_017abf_jump:
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _017b05_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _017b05_jump
		call   _026a20_func
		test   %al,%al
		jne    _017b05_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _017b05_jump
		call   _049b7c_func
		cmpb   $0x000000,_095e6e_data
		je     _017b05_jump
		cmpb   $0x000002,_0cfa1a_data
		jne    _017b05_jump
		movb   $0x000001,0x000008(%esp)

	_017b05_jump:
		call   _026a20_func
		test   %al,%al
		je     _017b28_jump
		call   _026a30_func
		test   %al,%al
		jne    _017b28_jump
		xor    %eax,%eax
		call   _026a28_func
		mov    $0x000001,%eax
		call   _04270c_func

	_017b28_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _017b98_jump
		mov    _0cfa1f_data,%eax
		sar    $0x000018,%eax
		mov    _0cef45_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _017b92_jump
		call   _01d028_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _047bb0_func
		mov    %eax,_0cd800_data
		mov    _0cfa1f_data,%eax
		sar    $0x000018,%eax
		mov    _0cef45_data(%eax),%eax
		sar    $0x000018,%eax
		call   _0473d0_func
		mov    _0cd808_data,%edx
		mov    _0cd7f4_data,%ebx
		mov    _0cd824_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		xor    %esi,%esi
		mov    %esi,_0cd85c_data

	_017b92_jump:
		xor    %bh,%bh
		mov    %bh,0x000008(%esp)

	_017b98_jump:
		call   _041d54_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _017be8_jump
		call   _042048_func
		test   %ax,%ax
		je     _017bf0_jump

	_017be8_jump:
		xor    %edi,%edi
		mov    %edi,_0ccfd8_data

	_017bf0_jump:
		mov    _0ccfd8_data,%eax
		inc    %eax
		mov    %eax,_0ccfd8_data
		cmp    $0x005460,%eax
		jl     _017c09_jump
		movb   $0x000001,_0cfa52_data

	_017c09_jump:
		cmpb   $0x000000,_0cfa52_data
		je     _017c38_jump
		mov    _095e64_data,%al
		test   %al,%al
		jne    _017c38_jump
		cmpb   $0x000041,_0cfa87_data
		jne    _017c33_jump
		xor    %ebx,%ebx
		call   _038924_func
		mov    %ebx,_0ccfd8_data
		jmp    _017c38_jump

	_017c33_jump:
		mov    %al,_0cfa52_data

	_017c38_jump:
		mov    (%esp),%eax
		call   _036cbc_func
		cmpb   $0x000000,_0cfa4b_data
		je     _017833_jump
		cmpb   $0x000000,_0cfa4e_data
		je     _017833_jump
		cmpb   $0x000000,0x00000c(%esp)
		je     _017833_jump
		mov    %ebp,%ebx
		call   _016f5d_func
		test   %ecx,%ecx
		jne    _017833_jump
		call   _0176a8_func
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017c8d_jump
		incw   _0ce6a6_data

	_017c8d_jump:
		cmpb   $0x000000,_0cfa4e_data
		je     _017833_jump
		call   _016e9a_func
		jmp    _017833_jump

	_017ca4_jump:
		xor    %ch,%ch
		mov    %ch,_0cfa98_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017cb8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,(%esp)
		mov    $_0ccfdc_data,%edi
		mov    $_0c04f8_data,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%eax
		jle    _017dcf_jump
		mov    $0x000001,%ecx
		mov    %ecx,0x000004(%esp)
		cmp    %ecx,%eax
		jle    _017dcf_jump
		lea    0x000004(%edx),%ebp

	_017ced_jump:
		mov    $0x000004,%ebx
		mov    0x000000(%ebp),%eax
		mov    $_0c04fc_data,%edx
		call   _07fbe6_func
		call   _07fc0b_func
		test   %eax,%eax
		jne    _017d9b_jump
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi

	_017d11_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017d29_jump
		cmp    $0x000000,%al
		je     _017d27_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017d29_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _017d11_jump

	_017d27_jump:
		sub    %esi,%esi

	_017d29_jump:
		test   %esi,%esi
		jne    _017d37_jump
		mov    $_0c0504_data,%eax
		call   _01f988_func

	_017d37_jump:
		mov    $0x00003d,%dl
		mov    0x000000(%ebp),%esi
		mov    $_0ccfdc_data,%edi

	_017d41_jump:
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017d59_jump
		cmp    $0x000000,%al
		je     _017d57_jump
		inc    %esi
		mov    (%esi),%al
		cmp    %dl,%al
		je     _017d59_jump
		inc    %esi
		cmp    $0x000000,%al
		jne    _017d41_jump

	_017d57_jump:
		sub    %esi,%esi

	_017d59_jump:
		inc    %esi
		push   %edi

	_017d5b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _017d73_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _017d5b_jump

	_017d73_jump:
		pop    %edi
		mov    $_0c0538_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_017d82_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _017d9a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _017d82_jump

	_017d9a_jump:
		pop    %edi

	_017d9b_jump:
		mov    0x000000(%ebp),%eax
		mov    $_0c053c_data,%edx
		call   _07fbe6_func
		call   _07fc40_func
		test   %eax,%eax
		jne    _017db8_jump
		movb   $0x000046,_095e6c_data

	_017db8_jump:
		mov    0x000004(%esp),%edi
		mov    (%esp),%edx
		inc    %edi
		add    $0x000004,%ebp
		mov    %edi,0x000004(%esp)
		cmp    %edx,%edi
		jl     _017ced_jump

	_017dcf_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_017dd8_func:
		mov    _0cfa11_data,%al
		cmp    $0x00000d,%al
		jb     _017e1f_jump
		jbe    _017e51_jump
		cmp    $0x00004d,%al
		jb     _017e0c_jump
		jbe    _017e4a_jump
		cmp    $0x0000ee,%al
		jb     _017e74_jump
		jbe    _017e66_jump
		cmp    $0x0000ff,%al
		je     _017e6d_jump
		jmp    _017e74_jump

	_017e0c_jump:
		cmp    $0x000016,%al
		jb     _017e74_jump
		jbe    _017e58_jump
		cmp    $0x000023,%al
		je     _017e5f_jump
		jmp    _017e74_jump

	_017e1f_jump:
		cmp    $0x000001,%al
		jb     _017e31_jump
		jbe    _017e3c_jump
		cmp    $0x000004,%al
		jb     _017e74_jump
		jbe    _017e43_jump
		cmp    $0x000006,%al
		je     _017e4a_jump
		jmp    _017e74_jump

	_017e31_jump:
		test   %al,%al
		jne    _017e74_jump
		push   $_0c0544_data
		jmp    _017e79_jump

	_017e3c_jump:
		push   $_0c0548_data
		jmp    _017e79_jump

	_017e43_jump:
		push   $_0c0550_data
		jmp    _017e79_jump

	_017e4a_jump:
		push   $_0c0558_data
		jmp    _017e79_jump

	_017e51_jump:
		push   $_0c0568_data
		jmp    _017e79_jump

	_017e58_jump:
		push   $_0c0578_data
		jmp    _017e79_jump

	_017e5f_jump:
		push   $_0c057c_data
		jmp    _017e79_jump

	_017e66_jump:
		push   $_0c0588_data
		jmp    _017e79_jump

	_017e6d_jump:
		push   $_0c058c_data
		jmp    _017e79_jump

	_017e74_jump:
		push   $_0c0598_data

	_017e79_jump:
		call   _07fce1_func
		add    $0x000004,%esp
		push   $_0c05a0_data
		call   _07fce1_func
		mov    _0cfa16_data,%al
		add    $0x000004,%esp
		cmp    $0x00000a,%al
		jb     _017ed5_jump
		jbe    _017e9f_jump
		cmp    $0x000014,%al
		je     _017eae_jump
		jmp    _017ed5_jump

	_017e9f_jump:
		push   $_0c05a4_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _017ef2_jump

	_017eae_jump:
		cmpb   $0x00001e,_0cfa1b_data
		jne    _017ec6_jump
		push   $_0c05b0_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _017ef2_jump

	_017ec6_jump:
		push   $_0c05c0_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _017ef2_jump

	_017ed5_jump:
		xor    %eax,%eax
		mov    _0cfa1b_data,%al
		push   %eax
		xor    %eax,%eax
		mov    _0cfa16_data,%al
		push   %eax
		push   $_0c05cc_data
		call   _07fce1_func
		add    $0x00000c,%esp

	_017ef2_jump:
		push   $_0c05dc_data
		call   _07fce1_func
		add    $0x000004,%esp
		ret    



_017f00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _07f3b0_func
		mov    $0x3eb00000,%ecx
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   _07fd11_func
		call   _07ff01_func
		push   %edx
		push   %eax
		push   $_0c05e0_data
		call   _07fce1_func
		mov    _0cfa26_data,%al
		add    $0x00000c,%esp
		cmp    $0x000003,%al
		jb     _017f59_jump
		jbe    _017f3e_jump
		cmp    $0x000004,%al
		je     _017f52_jump
		jmp    _017f59_jump

	_017f3e_jump:
		push   $_0c0604_data
		call   _07fce1_func
		add    $0x000004,%esp
		push   $_0c0620_data
		jmp    _017f89_jump

	_017f52_jump:
		push   $_0c0640_data
		jmp    _017f89_jump

	_017f59_jump:
		mov    _0cfa26_data,%ah
		cmp    $0x000005,%ah
		jne    _017f6b_jump
		push   $_0c065c_data
		jmp    _017f89_jump

	_017f6b_jump:
		jbe    _017f84_jump
		xor    %eax,%eax
		mov    _0cfa26_data,%al
		push   %eax
		push   $_0c067c_data
		call   _07fce1_func
		add    $0x000008,%esp
		jmp    _017f91_jump

	_017f84_jump:
		push   $_0c06a0_data

	_017f89_jump:
		call   _07fce1_func
		add    $0x000004,%esp

	_017f91_jump:
		mov    _0cfa12_data,%al
		cmp    $0x000081,%al
		jb     _017fa9_jump
		jbe    _017fc5_jump
		cmp    $0x000082,%al
		jbe    _017fd4_jump
		cmp    $0x000083,%al
		je     _017ff2_jump
		jmp    _01802b_jump

	_017fa9_jump:
		test   %al,%al
		jbe    _017fb6_jump
		cmp    $0x000001,%al
		je     _017fe3_jump
		jmp    _01802b_jump

	_017fb6_jump:
		push   $_0c06c0_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _01802b_jump

	_017fc5_jump:
		push   $_0c06d8_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _01802b_jump

	_017fd4_jump:
		push   $_0c06f8_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _01802b_jump

	_017fe3_jump:
		push   $_0c071c_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _01802b_jump

	_017ff2_jump:
		mov    _0cfa0f_data,%dh
		cmp    $0x000004,%dh
		jne    _018011_jump
		xor    %eax,%eax
		mov    _0cfa0e_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c073c_data
		jmp    _018023_jump

	_018011_jump:
		xor    %eax,%eax
		mov    _0cfa0e_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c0754_data

	_018023_jump:
		call   _07fce1_func
		add    $0x00000c,%esp

	_01802b_jump:
		xor    %bl,%bl
		call   _017dd8_func
		mov    %bl,_0cfa20_data
		cmp    $0x200000,%esi
		jae    _01804f_jump
		mov    $_0c0770_data,%eax
		call   _01f988_func
		jmp    _01811c_jump

	_01804f_jump:
		cmp    $0x300000,%esi
		jae    _0180bf_jump
		mov    $0x000002,%ah
		mov    $0x017400,%ebp
		mov    $0x062c00,%edx
		mov    %bl,_0cfa33_data
		xor    %ch,%ch
		mov    $0x000001,%bl
		mov    %ch,_0cfa18_data
		mov    %ah,_0cfa1a_data
		mov    %ebp,_0cd86c_data
		mov    %edx,_0cd89c_data
		mov    $0x04d800,%eax
		mov    $0x12c000,%ecx
		mov    %bl,_0cfa32_data
		mov    %bl,_0cfa17_data
		mov    %bl,_0cfa13_data
		mov    %bl,_0cfa20_data
		mov    $_05e000_func,%ebx
		mov    %eax,_0cd898_data
		mov    %ecx,_0cd848_data
		mov    %ebx,_0cd844_data
		jmp    _01811c_jump

	_0180bf_jump:
		mov    $0x000001,%bh
		mov    $0x022000,%edx
		mov    $0x0f4c00,%ecx
		mov    $0x087c00,%esi
		mov    $0x0df400,%edi
		mov    %bh,_0cfa33_data
		mov    %bh,_0cfa32_data
		mov    %bh,_0cfa17_data
		mov    %bl,_0cfa13_data
		mov    %bh,_0cfa18_data
		mov    %bh,_0cfa1a_data
		mov    %edx,_0cd86c_data
		mov    %ecx,_0cd89c_data
		mov    %esi,_0cd844_data
		mov    $0x04d800,%ebx
		mov    %edi,_0cd848_data
		mov    %ebx,_0cd898_data

	_01811c_jump:
		push   $_0c05dc_data
		call   _07fce1_func
		mov    _0cfa33_data,%dl
		add    $0x000004,%esp
		test   %dl,%dl
		je     _01813a_jump
		push   $_0c0784_data
		jmp    _01813f_jump

	_01813a_jump:
		push   $_0c07a4_data

	_01813f_jump:
		call   _07fce1_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cfa32_data
		je     _018157_jump
		push   $_0c07bc_data
		jmp    _01815c_jump

	_018157_jump:
		push   $_0c07d4_data

	_01815c_jump:
		call   _07fce1_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cfa17_data
		je     _018184_jump
		cmpb   $0x000000,_0cfa50_data
		je     _01817d_jump
		push   $_0c07e8_data
		jmp    _018199_jump

	_01817d_jump:
		push   $_0c0800_data
		jmp    _018199_jump

	_018184_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _018194_jump
		push   $_0c081c_data
		jmp    _018199_jump

	_018194_jump:
		push   $_0c0838_data

	_018199_jump:
		call   _07fce1_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cfa1a_data
		je     _0181b9_jump
		push   $_0c0850_data
		call   _07fce1_func
		add    $0x000004,%esp
		jmp    _0181c6_jump

	_0181b9_jump:
		push   $_0c0868_data
		call   _07fce1_func
		add    $0x000004,%esp

	_0181c6_jump:
		push   $_0c05dc_data
		call   _07fce1_func
		add    $0x000004,%esp
		push   $_0ccfdc_data
		push   $_0c0878_data
		xor    %edx,%edx
		call   _07fce1_func
		add    $0x000008,%esp
		mov    $0x000064,%esi

	_0181ec_jump:
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _018218_jump

	_0181fa_jump:
		call   _04271c_func
		push   $_0c05dc_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _018228_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_018218_jump:
		mov    %esi,%eax
		inc    %edx
		call   _08009e_func
		cmp    $0x000028,%edx
		jl     _0181ec_jump
		jmp    _0181fa_jump



_018228_func:
		push   %edx
		xor    %ah,%ah
		mov    $0x000300,%edx
		mov    %ah,_0cfa10_data
		mov    $0x000010,%eax
		call   _07fbbc_func
		mov    %eax,_0cd83c_data
		test   %eax,%eax
		jne    _018253_jump
		mov    $_0c0888_data,%eax
		call   _01f988_func

	_018253_jump:
		mov    $0x000008,%edx
		mov    $0x000200,%eax
		call   _07fbbc_func
		mov    %eax,_0cd8bc_data
		test   %eax,%eax
		jne    _018275_jump
		mov    $_0c08a8_data,%eax
		call   _01f988_func

	_018275_jump:
		cmpb   $0x000000,_0cfa33_data
		sete   %al
		xor    %dh,%dh
		mov    %al,_095e2d_data
		mov    %dh,_0cfa19_data
		pop    %edx
		ret    



_018290_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		call   _03d9d4_func
		push   $_0c0900_data
		mov    $0x0b8000,%edx
		mov    $_0c08c8_data,%ebx
		call   _07fce1_func
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x000004(%esp)
		mov    $_0c08dc_data,%edx
		mov    $0x0b8000,%ebx
		add    $0x000004,%esp

	_0182c7_jump:
		add    $0x000002,%ebx
		movb   $0x00001e,-0x000001(%ebx)
		cmp    $0x0b80a0,%ebx
		jne    _0182c7_jump
		mov    0x000004(%esp),%esi
		mov    (%esp),%ebp
		xor    %ebx,%ebx
		jmp    _0182ec_jump

	_0182e1_jump:
		add    $0x000002,%esi
		mov    0x000000(%ebp),%cl
		inc    %ebp
		inc    %ebx
		mov    %cl,-0x000002(%esi)

	_0182ec_jump:
		mov    (%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebx
		jb     _0182e1_jump
		mov    0x000004(%esp),%eax
		mov    %edx,%ebp
		xor    %esi,%esi
		add    $0x0000a0,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000008(%esp)
		jmp    _018352_jump

	_018312_jump:
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		add    %ecx,%ecx
		sub    %ecx,%eax
		mov    0x000000(%ebp),%cl
		mov    %edx,%edi
		mov    %cl,(%ebx,%eax,1)
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000008(%esp),%eax
		add    %ecx,%ecx
		sub    %ecx,%eax
		add    $0x000002,%ebx
		mov    %eax,%ecx
		mov    -0x000001(%ecx,%ebx,1),%ah
		inc    %ebp
		or     $0x000080,%ah
		inc    %esi
		mov    %ah,-0x000001(%ecx,%ebx,1)

	_018352_jump:
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%esi
		jb     _018312_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01836c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    $_0c0904_data,%eax
		mov    $_0cfa1b_data,%edx
		call   _0800a3_func
		call   _018290_func
		mov    $_0cfa16_data,%eax
		call   _07f32c_func
		mov    $_0cfa0e_data,%edx
		mov    %al,_0cfa11_data
		mov    $_0cfa0f_data,%eax
		call   _07f200_func
		mov    %al,_0cfa12_data
		mov    $0x000001,%ah
		mov    %ebx,%edx
		mov    %ah,_095eb6_data
		mov    %ah,_0cfa50_data
		call   _06bad8_func
		pushf  
		pop    %eax
		and    $0xfffefeff,%eax
		push   %eax
		popf   
		xor    %eax,%eax
		mov    %eax,%db0
		mov    %eax,%db1
		mov    %eax,%db2
		mov    %eax,%db3
		mov    %db6,%eax
		and    $0xffff1ff0,%eax
		mov    %eax,%db6
		mov    %db7,%eax
		and    $0x00de00,%eax
		mov    %eax,%db7
		mov    %ecx,%eax
		mov    $_0cf8f6_data,%edi
		call   _017cb8_func
		mov    (%ebx),%esi
		push   %edi

	_0183fc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _018414_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0183fc_jump

	_018414_jump:
		pop    %edi
		call   _018420_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_018420_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		call   _01611e_func
		mov    %al,_0cfa26_data
		call   _06bb78_func
		call   _06bb94_func
		mov    $0x00046c,%eax
		mov    %eax,%db0
		mov    %db7,%eax
		or     $0x030003,%eax
		mov    %eax,%db7
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_01845d_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _01845d_jump
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_01846b_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _01846b_jump
		mov    $0x000000,%eax
		mov    %eax,%db0
		mov    %db7,%eax
		and    $0x00de00,%eax
		mov    %eax,%db7
		call   _06bae0_func
		mov    $0x000001,%eax
		call   _06bf98_func
		push   $_0c0914_data
		call   _07fce1_func
		add    $0x000004,%esp
		mov    $0x000001,%dl
		call   _073384_func
		mov    %dl,_0cfa51_data
		call   _042734_func
		mov    $_0372b8_func,%eax
		call   _0800ff_func
		mov    _0cfa50_data,%al
		mov    %al,_095eb6_data
		call   _06bbec_func
		call   _06bbb0_func
		call   _06bcec_func
		test   %al,%al
		je     _0184e3_jump
		mov    _095eb6_data,%al
		mov    %al,_0cfa50_data

	_0184e3_jump:
		call   _017f00_func
		call   _06bae0_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _0161fa_func
		call   _05a5b4_func
		call   _03622c_func
		call   _071b34_func
		call   _035d3c_func
		call   _036e1c_func
		call   _049388_func
		call   _037310_func
		call   _036150_func
		mov    $0x000003,%dh
		mov    _0cfa50_data,%bl
		mov    %dh,_0cfa3d_data
		test   %bl,%bl
		je     _01853f_jump
		call   _01d028_func

	_01853f_jump:
		mov    $0x0000c8,%ebp
		mov    $0x000001,%edi

	_018549_jump:
		cmpb   $0x000000,_0cfa74_data
		jne    _018869_jump
		call   _036d30_jump
		call   _068bc0_func
		call   _05c9f0_func
		call   _049998_func
		cmpb   $0x000000,_0cfa74_data
		jne    _018599_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _018599_jump
		cmpb   $0x000046,_095e6c_data
		je     _018599_jump
		mov    $0x000014,%ebx
		mov    $_0c0930_data,%edx
		mov    $_0ccfdc_data,%eax
		call   _03b4a8_func

	_018599_jump:
		cmpb   $0x000000,_0cfa7a_data
		jne    _01884d_jump
		cmpw   $0x000000,_0cef52_data
		jl     _01884d_jump
		cmpw   $0x000000,_0cf892_data
		je     _01884d_jump
		mov    $0x000001,%eax
		mov    $0x000140,%ebx
		call   _06bf98_func
		call   _06b550_func
		call   _016194_func
		call   _03514c_func
		mov    %ebp,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _0161fa_func
		call   _036880_func
		cmpb   $0x000000,_0cfa17_data
		je     _01860f_jump
		cmpb   $0x000000,_0cfa13_data
		jne    _01860f_jump
		mov    _0cf838_data,%eax
		sar    $0x000010,%eax
		call   _03ea00_func

	_01860f_jump:
		cmpb   $0x000000,_0cfa7a_data
		jne    _018821_jump
		cmpw   $0x000000,_0cf892_data
		jne    _018821_jump
		cmpw   $0x000000,_0cf880_data
		je     _018821_jump
		mov    $0x000005,%eax
		call   _03db24_func
		call   _016f78_func
		call   _036998_func
		mov    %esp,%eax
		call   _0362e4_func
		cmpb   $0x000000,_095e2d_data
		jne    _018670_jump
		cmpw   $0x000006,_0cf88c_data
		jne    _018670_jump
		cmpw   $0x000004,_0cf87c_data
		je     _018679_jump

	_018670_jump:
		call   _026a30_func
		test   %al,%al
		je     _01867e_jump

	_018679_jump:
		call   _049720_func

	_01867e_jump:
		mov    _0cf87e_data,%eax
		sar    $0x000010,%eax
		call   _05a6f4_func
		call   _03932c_func
		call   _07bfcc_func
		call   _03cf70_func
		cmpb   $0x000000,_0cfa2a_data
		je     _0186b2_jump
		mov    $_0c7c88_data,%edx
		mov    $0x000002,%eax
		call   _03c6bc_func

	_0186b2_jump:
		cmpb   $0x000000,_0cfa7a_data
		jne    _018812_jump
		cmpw   $0x000000,_0cf880_data
		jne    _018812_jump
		cmpw   $0x000000,_0cf892_data
		jne    _018812_jump
		mov    $0x00000f,%eax
		call   _03db24_func
		call   _05a9d8_func
		call   _05aa20_func
		call   _035d74_func
		call   _04980c_func
		mov    _095e2d_data,%bh
		mov    %al,_095e6e_data
		test   %bh,%bh
		jne    _01874d_jump
		call   _049720_func
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d9e4_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    _095e6c_data,%al
		xor    %edx,%edx
		call   _049638_func
		call   _05d5b0_func
		mov    %esp,%eax
		mov    %dx,_095eb4_data
		call   _0170e0_func
		mov    %bx,_095eb4_data
		call   _05d620_func
		jmp    _0187bc_jump

	_01874d_jump:
		call   _016194_func
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d8ac_func
		xor    %eax,%eax
		mov    _095e6c_data,%al
		call   _049638_func
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b844_func
		cmpb   $0x000001,_0cfa20_data
		jne    _0187a3_jump
		mov    _0cd808_data,%edx
		mov    _0cd7f4_data,%ebx
		mov    _0cd824_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_0187a3_jump:
		xor    %esi,%esi
		mov    %esp,%eax
		mov    %si,_095eb4_data
		call   _0177e0_func
		movw   $0x000001,_095eb4_data

	_0187bc_jump:
		cmpb   $0x000000,_0cfa17_data
		je     _0187ca_jump
		call   _071c10_func

	_0187ca_jump:
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0cfa4c_data,%al
		xor    %ecx,%ecx
		call   _03d9e4_func
		xor    %eax,%eax
		call   _0161fa_func
		call   _035d74_func
		cmpb   $0x000000,_095eb0_data
		jne    _018800_jump
		call   _0341b0_func
		call   _035878_func
		jmp    _018805_jump

	_018800_jump:
		call   _06a3ec_func

	_018805_jump:
		xor    %ah,%ah
		mov    %ah,_095eb0_data
		jmp    _0186b2_jump

	_018812_jump:
		call   _05a8e4_func
		call   _036d8c_func
		jmp    _01860f_jump

	_018821_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01882f_jump
		call   _01d028_func

	_01882f_jump:
		call   _036d58_func
		cmpb   $0x000000,_0cfa36_data
		je     _018599_jump
		movb   $0x000001,_0cfa7a_data
		jmp    _018599_jump

	_01884d_jump:
		call   _036d34_func
		cmpb   $0x000000,_0cfa36_data
		je     _018549_jump
		call   _035b78_func
		jmp    _018549_jump

	_018869_jump:
		call   _023800_func
		cmpb   $0x000000,_0cfa17_data
		je     _018881_jump
		call   _071c10_func
		call   _03ec78_func

	_018881_jump:
		call   _036d90_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018890_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %dl,0x000018(%esp)
		mov    %bl,0x000014(%esp)
		mov    %cl,0x000010(%esp)
		mov    _0cf84e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _018a4f_jump
		mov    _0cf848_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _018a4f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    _0ce5b4_data,%ebx
		movsbl (%eax,%edx,8),%edx
		mov    _0ce5b0_data,%eax
		add    %ebx,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0cf850_data,%di
		sub    0x000028(%esi),%di
		shl    $0x000004,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,0x000008(%esp)
		mov    _0cf84a_data,%di
		sub    %ecx,%edi
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		shl    $0x000004,%edi
		test   %ax,%ax
		jne    _018936_jump
		test   %di,%di
		je     _018a4f_jump

	_018936_jump:
		test   %edx,%edx
		je     _018a4f_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _018949_jump
		neg    %eax

	_018949_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _018958_jump
		neg    %eax

	_018958_jump:
		cmp    %ebx,%eax
		jge    _01895e_jump
		mov    %ebx,%eax

	_01895e_jump:
		mov    %eax,(%esp)
		mov    -0x000002(%esp),%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _018972_jump
		mov    %ebx,%eax

	_018972_jump:
		mov    %eax,0x000004(%esp)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    0x000004(%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _018a5b_jump
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000014(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000014(%esp),%bl
		sar    $0x000010,%eax
		imul   %ebx,%eax
		add    %eax,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00006d(%esi),%dh
		mov    %ax,0x000040(%esi)
		cmp    $0x000002,%dh
		jne    _018a0f_jump
		cmp    0x000004(%esp),%ebp
		jg     _018a0f_jump
		movb   $0x0000ff,0x000010(%esp)

	_018a0f_jump:
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000010(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000010(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_018a4f_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_018a5b_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_018a64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cf84e_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _018a97_jump
		mov    _0cf848_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _018a97_jump
		cmpw   $0x000000,0x000048(%edx)
		jne    _018abc_jump
		jmp    _018ab7_jump

	_018a97_jump:
		mov    _0cf84e_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _018abc_jump
		mov    _0cf848_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _018abc_jump

	_018ab7_jump:
		mov    $0x000001,%eax

	_018abc_jump:
		test   %ax,%ax
		je     _018ac8_jump
		movb   $0x000001,_0cfa6c_data

	_018ac8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018ad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		movzbw 0x000068(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_018af0_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_09253c_data(%edx)
		jne    _018b2d_jump
		mov    _0cf882_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _018b2d_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _018af0_jump

	_018b2d_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		call   _024eac_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018b4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf890_data,%dx
		mov    _0cf85a_data,%bx
		mov    _0cf858_data,%cx
		mov    _0cf884_data,%di
		cmpb   $0x000000,_095e2d_data
		jne    _018bd6_jump
		mov    _0cd09c_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018b93_jump
		mov    _0cd09c_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018b93_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018ba5_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_018ba5_jump:
		mov    _0cd09c_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018bc2_jump
		mov    _0cd09c_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_018bc2_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _018bf2_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _018bf2_jump

	_018bd6_jump:
		test   %cx,%cx
		jge    _018bdd_jump
		xor    %ecx,%ecx

	_018bdd_jump:
		cmp    %dx,%cx
		jle    _018be4_jump
		mov    %edx,%ecx

	_018be4_jump:
		test   %bx,%bx
		jge    _018beb_jump
		xor    %ebx,%ebx

	_018beb_jump:
		cmp    %dx,%bx
		jle    _018bf2_jump
		mov    %edx,%ebx

	_018bf2_jump:
		mov    _0cf854_data,%eax
		mov    _0cd0a4_data,%esi
		sar    $0x000010,%eax
		neg    %esi
		cmp    %esi,%eax
		jge    _018c1d_jump
		mov    _0cd0a4_data,%ax
		mov    %eax,%esi
		mov    %ax,_0cf856_data
		neg    %esi
		mov    %si,_0cf856_data

	_018c1d_jump:
		mov    _0cf856_data,%ax
		cmp    %di,%ax
		jle    _018c2f_jump
		mov    %di,_0cf856_data

	_018c2f_jump:
		mov    _0cf85a_data,%esi
		mov    _0cd0a4_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018c57_jump
		mov    _0cd0a4_data,%ax
		mov    %ax,_0cf85c_data
		neg    %eax
		mov    %ax,_0cf85c_data

	_018c57_jump:
		mov    _0cf85c_data,%ax
		cmp    %di,%ax
		jle    _018c69_jump
		mov    %di,_0cf85c_data

	_018c69_jump:
		mov    %di,_0cf884_data
		mov    %cx,_0cf858_data
		mov    %bx,_0cf85a_data
		mov    %dx,_0cf890_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018c8c_func:
		push   %edx
		mov    _0cf86e_data,%dx
		mov    %dx,_0cf858_data
		mov    _0cf872_data,%dx
		mov    %dx,_0cf85a_data
		call   _018ad0_func
		mov    _0cd0a0_data,%dx
		sub    _0cd0a4_data,%dx
		mov    %ax,_0cf820_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0cf856_data
		mov    _0cf884_data,%ax
		mov    %ax,_0cf85c_data
		call   _018b4c_func
		pop    %edx
		ret    



_018ce0_func:
		adc    $0x15181716,%eax
		sbb    %edx,(%esi)
		adc    $0x56525153,%eax
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006b(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    _0cd7b8_data,%eax
		mov    %edx,0x000014(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _018e8f_jump

	_018d46_jump:
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x000002(%edx),%al
		add    %ebx,%eax
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d614_func
		mov    (%esp),%edx
		mov    %eax,%esi
		xor    %ah,%ah
		mov    0x000003(%edx),%al
		test   %ax,%ax
		je     _018e7d_jump
		and    $0x00ffff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _018e7d_jump
		testb  $0x000008,0x000081(%ebp)
		jne    _018da5_jump
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x000001(%edx),%al
		add    %ecx,%eax
		jmp    _018ded_jump

	_018da5_jump:
		cmpw   $0x000100,0x00005a(%ebp)
		jne    _018dc9_jump
		cmpw   $0x000005,0x000014(%esp)
		jne    _018dc9_jump
		mov    0x00006a(%ebp),%dh
		cmp    $0x000010,%dh
		ja     _018dc9_jump
		cmp    $0x00000e,%dh
		jb     _018dc9_jump
		mov    $0xfffffff0,%eax
		jmp    _018dcb_jump

	_018dc9_jump:
		xor    %eax,%eax

	_018dcb_jump:
		mov    (%esp),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000068(%ebp),%dl
		mov    0x000001(%edi),%cl
		add    %edx,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%ecx
		mov    0x000036(%ebp),%dx
		add    %ecx,%eax
		add    %edx,%eax

	_018ded_jump:
		mov    0x000081(%ebp),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    (%esp),%edi
		xor    %ecx,%ecx
		and    $0x0000ff,%edx
		mov    (%edi),%cl
		xor    %ecx,%edx
		jne    _018e12_jump
		mov    _0cd10c_data,%edx
		jmp    _018e18_jump

	_018e12_jump:
		mov    _0cd118_data,%edx

	_018e18_jump:
		mov    %edx,0x000004(%esp)
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d5d8_func
		cwtl   
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		movswl %si,%edi
		call   _01d570_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%ecx
		call   _01d570_func
		mov    0x000008(%ebp),%esi
		mov    (%ebx),%edx
		add    %ecx,%eax
		xor    %ecx,%ecx
		add    %edx,%esi
		mov    %ax,%cx
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %edi,%ebx
		mov    0x00000c(%esp),%edi
		mov    %al,%dl
		mov    0x000008(%esp),%eax
		call   *0x000004(%esp)

	_018e7d_jump:
		mov    0x000014(%esp),%esi
		mov    (%esp),%ebx
		inc    %esi
		add    $0x000004,%ebx
		mov    %esi,0x000014(%esp)
		mov    %ebx,(%esp)

	_018e8f_jump:
		xor    %edx,%edx
		mov    0x00000e(%esp),%eax
		mov    0x000014(%esp),%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _018d46_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_018eae_jump:
		ret    



_018eb0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018eef_jump
		mov    _0cd10c_data,%eax
		jmp    _018ef4_jump

	_018eef_jump:
		mov    _0cd118_data,%eax

	_018ef4_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d614_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d5d8_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d570_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d570_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cd7b8_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018f7c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018fbb_jump
		mov    _0cd0f4_data,%eax
		jmp    _018fc0_jump

	_018fbb_jump:
		mov    _0cd114_data,%eax

	_018fc0_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d614_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d5d8_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d570_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d570_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0cd7b8_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_019048_func:
		cmpb   $0x000000,_0ce77e_data
		je     _018eae_jump
		mov    _0ce6dc_data,%eax



_019060_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _095e2d_data,%ah
		cmp    $0x000001,%ah
		jne    _019082_jump
		cmp    _0cfa20_data,%ah
		jne    _019082_jump
		mov    $0x000010,%eax
		jmp    _019084_jump

	_019082_jump:
		xor    %eax,%eax

	_019084_jump:
		mov    %eax,%edi
		mov    _0cf82a_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0cf830_data
		cmp    $0xffffffff,%eax
		je     _019118_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _019118_jump
		xor    %eax,%eax
		mov    $0x00003d,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _0161bd_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _0161fa_func
		mov    %esi,%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _0161fa_func

	_019118_jump:
		mov    _0cf844_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _01919e_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _01919e_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _0161bd_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _0161fa_func
		mov    %esi,%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _0161fa_func

	_01919e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0191a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		cmpb   $0x000000,_095e2d_data
		jne    _0191c8_jump
		mov    $0x000004,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000004(%esp)
		jmp    _0191e2_jump

	_0191c8_jump:
		movl   $0x000008,0x000004(%esp)
		cmpb   $0x000001,_0cfa20_data
		jne    _0191e0_jump
		mov    $0x000008,%esi
		jmp    _0191e2_jump

	_0191e0_jump:
		xor    %esi,%esi

	_0191e2_jump:
		cmpb   $0x000000,_0cfa68_data
		je     _01939c_jump
		mov    0x000076(%edi),%bl
		test   %bl,%bl
		je     _01939c_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%edi),%al
		mov    %bl,%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0cd0a0_data,%ax
		sub    $0x000013,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cd09c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0ce6dc_data,%eax
		call   _018eb0_func
		mov    _0cd0a0_data,%ax
		sub    $0x000014,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cd09c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		mov    (%esp),%edx
		add    $0x000015,%eax
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0ce6dc_data,%eax
		call   _018eb0_func
		mov    0x000060(%edi),%ax
		cmp    $0x0000bb,%ax
		jb     _0192fb_jump
		jbe    _019342_jump
		cmp    $0x0000da,%ax
		jb     _0192d5_jump
		jbe    _019350_jump
		cmp    $0x0000e3,%ax
		jb     _0192c6_jump
		jbe    _01932d_jump
		cmp    $0x0000e7,%ax
		je     _019350_jump
		jmp    _01935c_jump

	_0192c6_jump:
		cmp    $0x0000df,%ax
		je     _019350_jump
		jmp    _01935c_jump

	_0192d5_jump:
		cmp    $0x0000d4,%ax
		jb     _0192f0_jump
		jbe    _019350_jump
		cmp    $0x0000d5,%ax
		je     _01933b_jump
		jmp    _01935c_jump

	_0192f0_jump:
		cmp    $0x0000c6,%ax
		je     _019334_jump
		jmp    _01935c_jump

	_0192fb_jump:
		cmp    $0x00004a,%ax
		jb     _01931f_jump
		jbe    _019357_jump
		cmp    $0x000096,%ax
		jb     _019317_jump
		jbe    _019349_jump
		cmp    $0x0000b4,%ax
		je     _019357_jump
		jmp    _01935c_jump

	_019317_jump:
		cmp    $0x000062,%ax
		je     _01933b_jump
		jmp    _01935c_jump

	_01931f_jump:
		cmp    $0x00002e,%ax
		jb     _01935c_jump
		jbe    _019334_jump
		cmp    $0x000032,%ax
		jne    _01935c_jump

	_01932d_jump:
		movb   $0x00002c,0x000008(%esp)
		jmp    _01935c_jump

	_019334_jump:
		movb   $0x00006c,0x000008(%esp)
		jmp    _01935c_jump

	_01933b_jump:
		movb   $0x00006e,0x000008(%esp)
		jmp    _01935c_jump

	_019342_jump:
		movb   $0x000071,0x000008(%esp)
		jmp    _01935c_jump

	_019349_jump:
		movb   $0x00006d,0x000008(%esp)
		jmp    _01935c_jump

	_019350_jump:
		movb   $0x000070,0x000008(%esp)
		jmp    _01935c_jump

	_019357_jump:
		movb   $0x00006f,0x000008(%esp)

	_01935c_jump:
		mov    _0cd0a0_data,%ax
		sub    $0x00001e,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%ebx
		movswl %ax,%ecx
		mov    _0cd09c_data,%ax
		push   $0x000001
		add    %ebx,%eax
		xor    %edx,%edx
		sub    $0x000004,%eax
		mov    0x00000c(%esp),%dl
		movswl %ax,%ebx
		mov    _0ce6dc_data,%eax
		call   _01fa00_func
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0ce6dc_data,%eax
		call   _018eb0_func

	_01939c_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0193a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c093c_data,%eax
		xor    %ecx,%ecx
		call   _01a3f0_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0950_data,%eax
		call   _01a3f0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0193e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c096c_data,%eax
		xor    %ecx,%ecx
		call   _01a3f0_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0978_data,%eax
		call   _01a3f0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019420_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		cmpw   $0x000005,_0cf868_data
		jne    _019461_jump
		mov    _0cf812_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _019858_jump
		mov    %ecx,%esi
		shl    $0x000005,%esi
		add    %ecx,%esi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _028590_func
		jmp    _019858_jump

	_019461_jump:
		call   _040364_func
		cmpb   $0x000040,_0cfa7e_data
		je     _019482_jump
		cmpw   $0x000000,_095e68_data
		jne    _019482_jump
		movw   $0x00012c,_095e68_data

	_019482_jump:
		mov    _095e68_data,%si
		test   %si,%si
		jle    _01950c_jump
		cmp    $0x000001,%si
		jne    _019505_jump
		cmpb   $0x000000,_095e2d_data
		jne    _019505_jump
		mov    _0cd7d0_data,%eax
		mov    _0cd096_data,%ecx
		mov    _0cd09a_data,%ebx
		mov    _0cd09e_data,%edx
		mov    %eax,_0cd7b8_data
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0cd0a2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024dcc_func
		mov    _0cd138_data,%eax
		mov    _0cd096_data,%ecx
		mov    _0cd09a_data,%ebx
		mov    _0cd09e_data,%edx
		mov    %eax,_0cd7b8_data
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _0cd0a2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024dcc_func

	_019505_jump:
		decw   _095e68_data

	_01950c_jump:
		cmpw   $0x000000,_095e66_data
		jne    _019528_jump
		cmpw   $0x000000,_095e68_data
		jne    _019528_jump
		test   %edi,%edi
		jne    _019858_jump

	_019528_jump:
		mov    $0x000023,%esi
		mov    _095e2d_data,%dh
		mov    $0x00004d,%eax
		test   %dh,%dh
		jne    _019675_jump
		cmpl   $0x000010,_0cd09c_data
		jg     _019556_jump
		cmpl   $0x000005,_0cd0a4_data
		jle    _019675_jump

	_019556_jump:
		cmpw   $0x000000,_0cf830_data
		je     _019573_jump
		mov    $0x000055,%eax
		xor    %ebx,%ebx
		mov    $0x00002d,%esi
		mov    %bx,_0cf830_data

	_019573_jump:
		mov    _0cd0a4_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _0195cf_jump
		push   $0x000000
		mov    _0cd0a2_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $0x0000ff
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _01a1c4_func
		push   $0x000000
		mov    _0cd0a4_data,%cx
		mov    _0cd09c_data,%ax
		mov    _0cd0a2_data,%edx
		push   $0x0000ff
		sub    $0x00000f,%eax
		sub    %ecx,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _0195db_jump

	_0195cf_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $0x0000ff
		xor    %edx,%edx

	_0195db_jump:
		mov    $0x00000d,%eax
		call   _01a1c4_func
		mov    _0cd0a4_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _019655_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0cd0a4_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $0x0000ff
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _01a1c4_func
		mov    $0x00001c,%eax
		mov    _0cd0a4_data,%si
		push   $0x000000
		sub    %esi,%eax
		mov    _0cd098_data,%dx
		movswl %ax,%ecx
		mov    $0x000138,%eax
		push   $0x0000ff
		sub    %edx,%eax
		mov    _0cd0a2_data,%edx
		movswl %ax,%ebx
		mov    _0cd096_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _019670_jump

	_019655_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_019670_jump:
		call   _01a1c4_func

	_019675_jump:
		mov    _0cf87c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmp    $0xfffffffe,%edi
		jne    _0197b5_jump
		mov    _095e2d_data,%bl
		cmp    $0x000001,%bl
		jne    _0196b1_jump
		cmp    _0cfa20_data,%bl
		jne    _0196b1_jump
		mov    $0x000010,%eax
		jmp    _0196b3_jump

	_0196b1_jump:
		xor    %eax,%eax

	_0196b3_jump:
		push   $0x000001
		mov    %eax,0x000004(%esp)
		add    $0x000005,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edi
		mov    $0x00001b,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018f7c_func
		push   $0x000001
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018f7c_func
		push   $0x000001
		mov    $0x000037,%ebx
		mov    _0cef54_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func
		push   $0x000001
		mov    $0x000046,%ebx
		mov    _0cef55_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func
		cmpb   $0x0000ff,_0ce6c6_data
		je     _01977b_jump
		cmpb   $0x000000,_0cfa7a_data
		jne    _01977b_jump
		mov    (%esp),%eax
		push   $0x000001
		add    $0x00001b,%eax
		mov    $0x000023,%ebx
		movswl %ax,%edi
		mov    _0cef57_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func
		cmpb   $0x000004,_0cef5b_data
		jne    _01977b_jump
		push   $0x000001
		mov    $0x00003b,%ebx
		mov    _0cef56_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func

	_01977b_jump:
		mov    (%esp),%eax
		push   $0x000001
		add    $0x000005,%eax
		mov    $0x000114,%ebx
		movswl %ax,%edi
		mov    _0cef59_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func
		push   $0x000001
		mov    $0x000122,%ebx
		mov    _0cef5a_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		jmp    _019830_jump

	_0197b5_jump:
		mov    _0cd0a0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cd09c_data,%ax
		push   $0x000001
		add    $0x00000e,%eax
		mov    $0x000038,%edx
		movswl %ax,%ebx
		mov    %esi,%eax
		call   _018f7c_func
		mov    _0cd0a0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cd09c_data,%ax
		add    $0x00002e,%eax
		movswl %ax,%ebx
		mov    _0cef59_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func
		mov    _0cd0a0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cd09c_data,%ax
		add    $0x00003c,%eax
		movswl %ax,%ebx
		mov    _0cef5a_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001

	_019830_jump:
		mov    %al,%dl
		mov    %esi,%eax
		call   _018f7c_func
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _019853_jump
		mov    _0cf844_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _019858_jump

	_019853_jump:
		call   _019060_func

	_019858_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019864_func:
		push   %ebx
		push   %edi
		mov    _0cd828_data,%edi
		movswl %dx,%ebx
		cwtl   
		sub    $0x000002,%ebx
		call   _014ac1_func
		pop    %edi
		pop    %ebx
		ret    



_0198c4_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_019864_func,%eax
		call   _01f520_func
		pop    %esi
		ret    $0x000004



_0198f4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006b(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		test   %bl,%bl
		jne    _019949_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _019954_jump

	_019949_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_019954_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		ja     _019a24_jump

	_019965_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000002(%eax),%cl
		add    0x000038(%ebp),%cx
		xor    %edx,%edx
		mov    0x000003(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000000(%ebp),%ebx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _019a0e_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x000058(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d614_func
		movswl %ax,%ecx
		mov    0x000058(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01d5d8_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d570_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01d570_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cd10c_data

	_019a0e_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si
		jbe    _019965_jump

	_019a24_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_019a2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		movl   $0x000007,0x000010(%esp)
		mov    $0x001000,%ebp

	_019a42_jump:
		mov    _0cef5a_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%esi
		add    %eax,%esi
		mov    _0cf024_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _019bcf_jump

	_019a69_jump:
		cmpw   $0x000001,0x000010(%esp)
		jne    _019a88_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000080,_09257c_data(,%eax,4)
		je     _019a88_jump
		mov    %esi,%eax
		call   _0191a8_func

	_019a88_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    0x00007e(%esi),%al
		cmp    %bx,%ax
		jne    _019ba4_jump
		cmpw   $0x00009d,0x000060(%esi)
		jne    _019ac8_jump
		cmpw   $0x000005,_0cf88c_data
		jne    _019ac8_jump
		cmpw   $0x000008,_0cf87c_data
		jne    _019ac8_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _019ba4_jump
		jmp    _019b9d_jump

	_019ac8_jump:
		mov    0x000060(%esi),%bx
		cmp    $0x000051,%bx
		jne    _019ae9_jump
		mov    $0x000001,%ebx
		mov    _0cd7b8_data,%edx
		mov    %esi,%eax
		call   _0198f4_func
		jmp    _019ba4_jump

	_019ae9_jump:
		cmp    $0x0000fe,%bx
		jne    _019b3e_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _019afc_jump
		neg    %eax

	_019afc_jump:
		mov    _094a7a_data(,%eax,2),%edx
		mov    0x000073(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _019b1d_jump
		mov    $0x000001,%eax
		jg     _019b1d_jump
		neg    %eax

	_019b1d_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01bbc4_func
		jmp    _019ba4_jump

	_019b3e_jump:
		cmp    $0x0000fc,%bx
		je     _019b53_jump
		cmp    $0x0000fb,%bx
		je     _019b53_jump
		cmp    $0x0000ad,%bx
		jne    _019b9d_jump

	_019b53_jump:
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%eax
		call   _0161bd_func
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    _0cd0a0_data,%edx
		mov    0x000008(%esp),%eax
		sub    $0x000028,%edx
		call   _0161fa_func
		mov    %esi,%eax
		mov    (%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%eax
		call   _0161fa_func
		jmp    _019ba4_jump

	_019b9d_jump:
		mov    %esi,%eax

	_019ba4_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0cef5a_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0ccdf0_data,%eax
		mov    _0cf024_data,%cx
		add    %eax,%esi
		cmp    %cx,%di
		jl     _019a69_jump

	_019bcf_jump:
		mov    0x000010(%esp),%esi
		cmp    $0x000003,%si
		jne    _019c4f_jump
		cmpb   $0x000000,_0cfa62_data
		jne    _019c28_jump
		mov    _0cf7e6_data,%ebx
		mov    _0ce6a4_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		lea    0x000000(,%ebx,2),%ecx
		mov    %edx,%eax
		add    $0x000002,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		cmp    %ebx,%edx
		jle    _019c28_jump
		cmpw   $0x00005a,_0ce6a6_data
		jle    _019c9d_jump
		testb  $0x000080,_0cf81b_data
		jne    _019c9d_jump

	_019c28_jump:
		testb  $0x000004,_0ce6d1_data
		je     _019c9d_jump
		cmpl   $0x000000,_0ce674_data
		je     _019c9d_jump
		mov    $_0ce650_data,%eax
		call   _019048_func
		jmp    _019c9d_jump

	_019c4f_jump:
		cmp    $0x000002,%si
		jne    _019c9d_jump
		cmpb   $0x000000,_0cfa81_data
		je     _019c9d_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _019c91_jump

	_019c64_jump:
		movswl %cx,%eax
		mov    _0ce5ca_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0ccdf0_data,%eax
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _019c90_jump
		mov    _0cd7b8_data,%edx
		mov    %esi,%ebx
		call   _0198f4_func

	_019c90_jump:
		inc    %ecx

	_019c91_jump:
		xor    %eax,%eax
		mov    _0cfa81_data,%al
		cmp    %ax,%cx
		jl     _019c64_jump

	_019c9d_jump:
		mov    0x000010(%esp),%ebx
		dec    %ebx
		mov    %ebx,0x000010(%esp)
		cmp    $0x000001,%bx
		jge    _019a42_jump
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cf024_data,%si
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %si,%si
		jle    _019d12_jump

	_019cd8_jump:
		cmpb   $0x000000,0x00007e(%eax)
		jne    _019ced_jump
		cmpw   $0x0000f5,0x000060(%eax)
		jne    _019ced_jump
		jmp    _019d12_jump

	_019ced_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		add    %edx,%eax
		cmp    _0cf024_data,%di
		jl     _019cd8_jump

	_019d12_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_019d1c_switch:
		.long   _019e47_case
		.long   _019e3f_case
		.long   _019e37_case
		.long   _019e2f_case




_019d2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		mov    $0x0000aa,%edx
		mov    $0x000003,%ebx
		mov    $0x000020,%ecx
		mov    _0cf838_data,%ax
		mov    $0x000004,%esi
		mov    %eax,0x00000c(%esp)
		mov    _0cf836_data,%ax
		mov    %bx,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    $0x0000a0,%eax
		mov    %cx,0x000004(%esp)
		call   _01d560_func
		mov    $0x000006,%edx
		mov    %esi,0x000008(%esp)
		mov    %edx,0x000018(%esp)

	_019d7d_jump:
		mov    0x000002(%esp),%ebx
		mov    $0x010000,%eax
		sar    $0x000010,%ebx
		mov    %eax,%edx
		add    $0x000100,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000024(%esp)
		mov    0x000022(%esp),%eax
		mov    _0cf836_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %eax,%ebx
		imul   %edx,%ebx
		sar    $0x000008,%ebx
		sub    %ebx,%edx
		mov    %dx,0x000020(%esp)
		mov    _0cf834_data,%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x000018(%esp),%esi
		mov    _0cf88c_data,%di
		dec    %ecx
		dec    %esi
		sar    $0x000008,%eax
		mov    0x000012(%esp),%ebx
		sub    %eax,%edx
		sar    $0x000010,%ebx
		mov    %dx,0x00001c(%esp)
		mov    _0caf76_data(,%ebx,2),%edx
		mov    %esi,0x000018(%esp)
		sar    $0x000010,%edx
		mov    _0cd8bc_data,%eax
		shl    $0x000003,%edx
		mov    _0caeb0_data(,%ebx,2),%si
		add    %eax,%edx
		mov    _0caf78_data(,%ebx,2),%ax
		mov    %ecx,0x000008(%esp)
		add    %eax,%esi
		cmp    $0x000001,%di
		je     _019e57_jump
		cmp    $0x000003,%cx
		ja     _019e4f_jump
		xor    %ebx,%ebx
		mov    %cx,%bx
		jmp    *%cs:_019d1c_switch(,%ebx,4)

	_019e2f_case:
		mov    _0cd0e8_data,%ebx
		jmp    _019e7d_jump

	_019e37_case:
		mov    _0cd12c_data,%ebx
		jmp    _019e7d_jump

	_019e3f_case:
		mov    _0cd108_data,%ebx
		jmp    _019e7d_jump

	_019e47_case:
		mov    _0cd110_data,%ebx
		jmp    _019e7d_jump

	_019e4f_jump:
		mov    _0cd104_data,%ebx
		jmp    _019e7d_jump

	_019e57_jump:
		mov    0x000018(%esp),%ebx
		cmp    $0x000005,%bx
		jne    _019e69_jump
		mov    _0cd0f0_data,%ebx
		jmp    _019e7d_jump

	_019e69_jump:
		cmp    $0x000002,%bx
		jle    _019e77_jump
		mov    _0cd0e0_data,%ebx
		jmp    _019e7d_jump

	_019e77_jump:
		mov    _0cd0d8_data,%ebx

	_019e7d_jump:
		mov    %ebx,(%esp)
		mov    %eax,%ecx
		cmp    %si,%ax
		jge    _019ec6_jump

	_019e87_jump:
		mov    (%edx),%ebx
		mov    0x000022(%esp),%edi
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		imul   %edi,%ebx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000008,%ebx
		add    %eax,%ebx
		movswl (%edx),%eax
		imul   %eax,%edi
		mov    0x00001e(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    $0x000008,%edx
		add    %edi,%eax
		mov    _0cd7b8_data,%edi
		inc    %ecx
		call   *(%esp)
		cmp    %si,%cx
		jl     _019e87_jump

	_019ec6_jump:
		mov    0x000014(%esp),%edi
		mov    0x000004(%esp),%eax
		inc    %edi
		add    $0x000020,%eax
		mov    %di,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		cmp    $0x0000c0,%ax
		jl     _019d7d_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cf838_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0cf836_data
		add    $0x000028,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    _0cf838_data,%ax
		mov    %eax,0x00001c(%esp)
		mov    _0cf836_data,%ax
		mov    $0x0000aa,%edx
		mov    %eax,0x000020(%esp)
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		call   _01d560_func
		xor    %edx,%edx
		mov    %bx,0x000008(%esp)
		mov    %dx,(%esp)
		mov    $0x010000,%ebp

	_019f49_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    _0caf76_data(,%ebx,2),%eax
		sar    $0x000010,%eax
		mov    _0cd8bc_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %ebp,%edx
		lea    0x000100(%eax),%edi
		sar    $0x00001f,%edx
		mov    %ebp,%eax
		idiv   %edi
		mov    %eax,%esi
		movswl %ax,%edi
		mov    _0cf836_data,%eax
		mov    %edi,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0cf834_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edi
		sar    $0x000008,%edi
		sub    %edi,%eax
		mov    _0caeb0_data(,%ebx,2),%dx
		mov    %ax,0x000010(%esp)
		mov    _0caf78_data(,%ebx,2),%ax
		mov    _0cf88c_data,%bx
		add    %eax,%edx
		cmp    $0x000001,%bx
		je     _01a084_jump
		cmpw   $0x000000,(%esp)
		jne    _01a02f_jump
		mov    %eax,0x000018(%esp)
		cmp    %dx,%ax
		jge    _01a0d3_jump

	_019fe3_jump:
		mov    (%ecx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x00000e(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd7b8_data,%edi
		call   *_0cd0b8_data
		mov    0x000018(%esp),%ebx
		inc    %ebx
		add    $0x000008,%ecx
		mov    %ebx,0x000018(%esp)
		cmp    %bx,%dx
		jle    _01a0d3_jump
		jmp    _019fe3_jump

	_01a02f_jump:
		mov    %eax,0x000014(%esp)
		cmp    %dx,%ax
		jge    _01a0d3_jump

	_01a03c_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000a(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0cd7b8_data,%edi
		call   *_0cd0bc_data
		mov    0x000014(%esp),%edi
		inc    %edi
		add    $0x000008,%ecx
		mov    %edi,0x000014(%esp)
		cmp    %di,%dx
		jle    _01a0d3_jump
		jmp    _01a03c_jump

	_01a084_jump:
		mov    %eax,0x000004(%esp)
		cmp    %dx,%ax
		jge    _01a0d3_jump

	_01a08d_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0cd7b8_data,%edi
		call   *_0cd0d4_data
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x000008,%ecx
		mov    %eax,0x000004(%esp)
		cmp    %ax,%dx
		jg     _01a08d_jump

	_01a0d3_jump:
		mov    (%esp),%ecx
		mov    0x000008(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		cmp    $0x000020,%si
		jl     _019f49_jump
		mov    0x00001c(%esp),%eax
		mov    %ax,_0cf838_data
		mov    0x000020(%esp),%eax
		mov    %ax,_0cf836_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a110_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_01a11e_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c9d00_data(%edx)
		je     _01a1a8_jump
		add    $_0c9a80_data,%edx
		xor    %ecx,%ecx

	_01a141_jump:
		mov    0x000009(%edx),%bl
		cmp    $0x000080,%bl
		jb     _01a19e_jump
		mov    (%edx),%esi
		mov    _0cd088_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _01a19e_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		test   %eax,%eax
		jge    _01a165_jump
		neg    %eax

	_01a165_jump:
		cmp    $0x000080,%ax
		jl     _01a16f_jump
		mov    $0x000058,%al
		jmp    _01a181_jump

	_01a16f_jump:
		and    $0x00007f,%bl
		cwtl   
		and    $0x0000ff,%ebx
		sar    $0x000005,%eax
		add    $0x000004,%ebx
		add    %ebx,%eax

	_01a181_jump:
		mov    _0cd7b8_data,%edi
		mov    (%edx),%ebx
		movzbl %al,%esi
		sar    $0x000010,%ebx
		movswl (%edx),%eax
		sar    $0x000006,%ebx
		sar    $0x000006,%eax
		call   *_0cd100_data

	_01a19e_jump:
		inc    %ecx
		add    $0x00000a,%edx
		cmp    $0x000040,%cx
		jl     _01a141_jump

	_01a1a8_jump:
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000008,%bx
		jl     _01a11e_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a1c4_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		test   %ax,%ax
		jge    _01a1f3_jump
		mov    %ebx,%esi
		xor    %edi,%edi
		add    %eax,%esi
		mov    %di,0x00000c(%esp)
		mov    %si,0x000004(%esp)
		jmp    _01a200_jump

	_01a1f3_jump:
		cmp    $0x000140,%ax
		jle    _01a200_jump
		movw   $0x000140,0x00000c(%esp)

	_01a200_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _01a227_jump
		mov    $0x000140,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_01a227_jump:
		mov    (%esp),%ebx
		test   %bx,%bx
		jge    _01a244_jump
		mov    0x000008(%esp),%edi
		mov    %ebx,%eax
		add    %ebx,%edi
		xor    %ebx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _01a251_jump

	_01a244_jump:
		cmp    $0x0000c8,%bx
		jle    _01a251_jump
		movw   $0x0000c8,(%esp)

	_01a251_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _01a277_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)

	_01a277_jump:
		cmpw   $0x000000,0x000004(%esp)
		jle    _01a3e5_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _01a3e5_jump
		cmpb   $0x0000ff,0x00001c(%esp)
		jne    _01a328_jump
		cmpb   $0x000001,_095e2c_data
		jne    _01a2cc_jump
		mov    0x000002(%esp),%ecx
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%esi
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _013125_func
		jmp    _01a328_jump

	_01a2cc_jump:
		mov    0x000020(%esp),%dh
		test   %dh,%dh
		je     _01a301_jump
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		xor    %eax,%eax
		mov    _0cd7b8_data,%edi
		mov    %dh,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		call   _014b2c_func
		jmp    _01a328_jump

	_01a301_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014aef_func

	_01a328_jump:
		mov    0x000020(%esp),%bl
		cmp    $0x000001,%bl
		jne    _01a37c_jump
		cmp    _095e2c_data,%bl
		jne    _01a365_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0131ed_func
		jmp    _01a3e5_jump

	_01a365_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01a3ce_jump

	_01a37c_jump:
		cmp    $0x000002,%bl
		jne    _01a3e5_jump
		cmpb   $0x000001,_095e2c_data
		jne    _01a3b9_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0131ed_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01a3b9_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002620,%eax

	_01a3ce_jump:
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014bbb_func

	_01a3e5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a3f0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00000c(%esp)
		mov    %cl,0x000024(%esp)
		cmp    $0x000002,%cl
		jne    _01a427_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000010(%esp)
		mov    %si,0x000018(%esp)
		mov    %di,0x000020(%esp)
		jmp    _01a468_jump

	_01a427_jump:
		cmp    $0x000001,%cl
		jne    _01a44b_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000010(%esp)
		mov    %ax,0x000018(%esp)
		mov    %dx,0x000020(%esp)
		jmp    _01a468_jump

	_01a44b_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000010(%esp)
		mov    %cx,0x000018(%esp)
		mov    %si,0x000020(%esp)

	_01a468_jump:
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    (%eax),%dh
		mov    %ebx,0x00001c(%esp)
		test   %dh,%dh
		je     _01a683_jump
		xor    %eax,%eax
		mov    %ax,0x000014(%esp)
		jmp    _01a66c_jump

	_01a48f_jump:
		cmp    $0x00002f,%cl
		jne    _01a4d9_jump
		mov    0x000016(%esp),%ecx
		xor    %eax,%eax
		mov    0x00001e(%esp),%ebx
		mov    0x000024(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01f1b0_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000014(%esp),%ebx
		mov    %dx,0x000008(%esp)
		cmp    $0x000001,%bx
		jle    _01a4d5_jump
		mov    0x000010(%esp),%eax
		add    %eax,0x00001c(%esp)

	_01a4d5_jump:
		xor    %ebx,%ebx
		jmp    _01a503_jump

	_01a4d9_jump:
		cmp    $0x000020,%cl
		jne    _01a4f1_jump
		mov    0x000020(%esp),%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000008(%esp)
		jmp    _01a503_jump

	_01a4f1_jump:
		mov    0x000004(%esp),%ecx
		xor    %eax,%eax
		inc    %edx
		mov    (%ebx),%al
		add    %ecx,%edx
		call   _01efb4_func
		mov    %eax,%ebx

	_01a503_jump:
		test   %ebx,%ebx
		je     _01a667_jump
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    0x000024(%esp),%al
		call   _01eeb8_func
		mov    %eax,%edi
		cmp    $0x0003e8,%ebx
		jb     _01a588_jump
		sub    $0x0003e8,%ebx
		imul   $0x00000c,%ebx,%ebp
		mov    _0ce644_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x00001c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    0x000006(%esp),%ecx
		shl    $0x000008,%edx
		xor    %esi,%esi
		add    %edx,%eax
		mov    _0ce648_data,%edx
		mov    %ax,%si
		mov    0x000000(%ebp),%eax
		mov    _0cd7b8_data,%edi
		add    %eax,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x000038(%esp),%al
		movswl %bx,%ebx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		mov    %esi,%ecx
		mov    %edx,%esi
		mov    (%esp),%edx
		call   *_0cd0f8_data
		addw   $0x000003,0x000014(%esp)
		jmp    _01a63d_jump

	_01a588_jump:
		mov    0x000024(%esp),%dl
		cmp    $0x000001,%dl
		jbe    _01a59b_jump
		cmp    $0x000002,%dl
		je     _01a5ea_jump
		jmp    _01a63d_jump

	_01a59b_jump:
		jne    _01a5a0_jump
		add    $0x000029,%ebx

	_01a5a0_jump:
		imul   $0x00000c,%ebx,%ebx
		mov    _0cedc8_data,%ebp
		add    %ebx,%ebp
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%ebp),%al
		sub    %eax,%edx
		movswl %dx,%ebx
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		mov    0x000000(%ebp),%esi
		add    %edi,%edx
		mov    0x000006(%esp),%eax
		mov    %dx,%cx
		mov    _0cedcc_data,%edx
		sar    $0x000010,%eax
		add    %esi,%edx
		movzbl 0x000038(%esp),%esi
		mov    _0cd7b8_data,%edi
		mov    %esi,(%esp)
		jmp    _01a632_jump

	_01a5ea_jump:
		imul   $0x00000c,%ebx,%ebx
		mov    _0ce6e0_data,%ebp
		add    %ebx,%ebp
		xor    %edx,%edx
		mov    0x00001c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    0x000006(%esp),%esi
		shl    $0x000008,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0ce6e4_data,%edx
		mov    %ax,%cx
		mov    0x000000(%ebp),%eax
		mov    _0cd7b8_data,%edi
		add    %eax,%edx
		xor    %eax,%eax
		sar    $0x000010,%esi
		mov    0x000038(%esp),%al
		movswl %bx,%ebx
		mov    %eax,(%esp)
		mov    %esi,%eax

	_01a632_jump:
		mov    %edx,%esi
		mov    (%esp),%edx
		call   *_0cd0f8_data

	_01a63d_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %dx,0x000008(%esp)

	_01a667_jump:
		incw   0x000014(%esp)

	_01a66c_jump:
		mov    0x000012(%esp),%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _01a48f_jump

	_01a683_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01a68c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebp
		mov    %dx,0x000010(%esp)
		mov    %cl,0x00001c(%esp)
		xor    %edx,%edx
		mov    %edx,(%esp)
		cmp    $0x000002,%cl
		jne    _01a6c6_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000018(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000014(%esp)
		jmp    _01a707_jump

	_01a6c6_jump:
		cmp    $0x000001,%cl
		jne    _01a6ea_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%ecx
		mov    %eax,0x000018(%esp)
		mov    %dx,0x00000c(%esp)
		mov    %cx,0x000014(%esp)
		jmp    _01a707_jump

	_01a6ea_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%edi
		mov    %edx,0x000018(%esp)
		mov    %cx,0x00000c(%esp)
		mov    %di,0x000014(%esp)

	_01a707_jump:
		mov    0x000010(%esp),%edi
		mov    0x000000(%ebp),%dh
		mov    %ebx,0x000004(%esp)
		test   %dh,%dh
		je     _01a8d0_jump
		xor    %ebx,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _01a8bc_jump

	_01a726_jump:
		cmp    $0x00002f,%bl
		jne    _01a76e_jump
		mov    0x00000a(%esp),%ecx
		xor    %eax,%eax
		mov    0x000012(%esp),%ebx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01f1b0_func
		movswl %ax,%edi
		mov    0x00000e(%esp),%eax
		sar    %edi
		sar    $0x000010,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		cmpw   $0x000001,0x000008(%esp)
		jle    _01a767_jump
		mov    0x000018(%esp),%eax
		add    %eax,0x000004(%esp)

	_01a767_jump:
		xor    %ecx,%ecx
		mov    %ecx,(%esp)
		jmp    _01a792_jump

	_01a76e_jump:
		cmp    $0x000020,%bl
		jne    _01a780_jump
		xor    %ebx,%ebx
		mov    0x000014(%esp),%ecx
		mov    %ebx,(%esp)
		add    %ecx,%edi
		jmp    _01a792_jump

	_01a780_jump:
		inc    %edx
		mov    %bl,%al
		add    %ebp,%edx
		and    $0x0000ff,%eax
		call   _01efb4_func
		mov    %eax,(%esp)

	_01a792_jump:
		mov    (%esp),%eax
		test   %eax,%eax
		je     _01a8b7_jump
		xor    %ebx,%ebx
		mov    0x00001c(%esp),%bl
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _01eeb8_func
		mov    %esp,%edx
		mov    %ebx,%eax
		call   _01f194_func
		mov    (%esp),%edx
		cmp    $0x0003e8,%edx
		jb     _01a811_jump
		lea    -0x0003e8(%edx),%esi
		imul   $0x00000c,%esi,%esi
		mov    _0ce644_data,%eax
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0ce648_data,%edx
		call   _01bea8_func
		addw   $0x000003,0x000008(%esp)
		jmp    _01a899_jump

	_01a811_jump:
		imul   $0x00000c,%edx,%eax
		cmp    $0x000001,%bl
		jbe    _01a820_jump
		cmp    $0x000002,%bl
		je     _01a85b_jump
		jmp    _01a899_jump

	_01a820_jump:
		mov    _0cedc8_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0cedcc_data,%edx
		jmp    _01a894_jump

	_01a85b_jump:
		mov    _0ce6e0_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0ce6e4_data,%edx

	_01a894_jump:
		call   _01bea8_func

	_01a899_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %edx,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		movswl %di,%edi
		sub    %edx,%eax
		add    %eax,%edi

	_01a8b7_jump:
		incw   0x000008(%esp)

	_01a8bc_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    (%edx,%ebp,1),%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01a726_jump

	_01a8d0_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01a8dc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x00000c(%esp)
		mov    %dx,0x000020(%esp)
		mov    %ecx,0x000014(%esp)
		xor    %edx,%edx
		mov    0x000040(%esp),%ah
		mov    %edx,(%esp)
		cmp    $0x000002,%ah
		jne    _01a91c_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000018(%esp)
		mov    %si,0x00001c(%esp)
		mov    %di,0x000028(%esp)
		jmp    _01a95d_jump

	_01a91c_jump:
		cmp    $0x000001,%ah
		jne    _01a940_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000018(%esp)
		mov    %ax,0x00001c(%esp)
		mov    %dx,0x000028(%esp)
		jmp    _01a95d_jump

	_01a940_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000018(%esp)
		mov    %cx,0x00001c(%esp)
		mov    %si,0x000028(%esp)

	_01a95d_jump:
		mov    0x000020(%esp),%eax
		mov    %ax,0x000010(%esp)
		mov    0x00000c(%esp),%eax
		mov    (%eax),%dh
		mov    %ebx,0x00002c(%esp)
		test   %dh,%dh
		je     _01abd5_jump
		xor    %eax,%eax
		mov    %ax,0x000024(%esp)
		jmp    _01abbe_jump

	_01a984_jump:
		cmp    $0x00002f,%bl
		jne    _01a9d1_jump
		mov    0x00001a(%esp),%ecx
		xor    %eax,%eax
		mov    0x000026(%esp),%ebx
		mov    0x000040(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000010(%esp),%eax
		call   _01f1b0_func
		cwtl   
		mov    0x00001e(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000024(%esp),%ebx
		mov    %dx,0x000010(%esp)
		cmp    $0x000001,%bx
		jle    _01a9ca_jump
		mov    0x000018(%esp),%eax
		add    %eax,0x00002c(%esp)

	_01a9ca_jump:
		xor    %esi,%esi
		mov    %esi,(%esp)
		jmp    _01aa02_jump

	_01a9d1_jump:
		cmp    $0x000020,%bl
		jne    _01a9ec_jump
		mov    0x000028(%esp),%eax
		mov    0x000010(%esp),%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    %ecx,(%esp)
		mov    %dx,0x000010(%esp)
		jmp    _01aa02_jump

	_01a9ec_jump:
		mov    0x00000c(%esp),%ebx
		inc    %edx
		mov    (%eax),%al
		add    %ebx,%edx
		and    $0x0000ff,%eax
		call   _01efb4_func
		mov    %eax,(%esp)

	_01aa02_jump:
		mov    (%esp),%edi
		test   %edi,%edi
		je     _01abb9_jump
		xor    %ecx,%ecx
		mov    0x000040(%esp),%cl
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _01eeb8_func
		mov    %esp,%edx
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _01f194_func
		mov    0x000024(%esp),%eax
		mov    0x000014(%esp),%esi
		shl    $0x000005,%eax
		add    %esi,%eax
		cwtl   
		mov    $0x000005,%cl
		call   _05dfc0_func
		test   %ax,%ax
		js     _01aa46_jump
		sar    %cl,%ax
		jmp    _01aa4f_jump

	_01aa46_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01aa4f_jump:
		mov    (%esp),%edx
		cmp    $0x0003e8,%edx
		jb     _01aac8_jump
		sub    $0x0003e8,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0ce644_data,%ebp
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x00002c(%esp),%ecx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ecx
		add    %ecx,%eax
		cwtl   
		mov    %eax,0x000004(%esp)
		xor    %ah,%ah
		mov    %dl,%al
		mov    0x00000e(%esp),%ecx
		shl    $0x000008,%eax
		sar    $0x000010,%ecx
		add    %ebx,%eax
		mov    _0cd7b8_data,%edi
		mov    _0ce648_data,%esi
		and    $0x00ffff,%eax
		xor    %edx,%edx
		mov    0x000000(%ebp),%ebx
		mov    0x000044(%esp),%dl
		mov    %eax,0x000008(%esp)
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		mov    %ecx,%eax
		mov    0x000008(%esp),%ecx
		call   *_0cd0f8_data
		addw   $0x000003,0x000024(%esp)
		jmp    _01ab91_jump

	_01aac8_jump:
		imul   $0x00000c,%edx,%edx
		mov    0x000040(%esp),%ch
		cmp    $0x000001,%ch
		jbe    _01aade_jump
		cmp    $0x000002,%ch
		je     _01ab35_jump
		jmp    _01ab91_jump

	_01aade_jump:
		mov    _0cedc8_data,%ebp
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x00002c(%esp),%ecx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ecx
		add    %ecx,%eax
		mov    _0cd7b8_data,%edi
		cwtl   
		xor    %esi,%esi
		mov    %eax,0x000008(%esp)
		xor    %ah,%ah
		mov    0x00000e(%esp),%ecx
		mov    %dl,%al
		sar    $0x000010,%ecx
		shl    $0x000008,%eax
		mov    0x000000(%ebp),%edx
		add    %eax,%ebx
		mov    _0cedcc_data,%eax
		mov    %bx,%si
		mov    0x000008(%esp),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000044(%esp),%dl
		mov    %ecx,%eax
		mov    %esi,%ecx
		mov    0x000008(%esp),%esi
		jmp    _01ab8b_jump

	_01ab35_jump:
		mov    _0ce6e0_data,%ebp
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x00002c(%esp),%ecx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ecx
		add    %ecx,%eax
		movswl %ax,%ecx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		xor    %ah,%ah
		xor    %edi,%edi
		mov    %dl,%al
		mov    0x000000(%ebp),%esi
		shl    $0x000008,%eax
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000044(%esp),%dl
		mov    %ax,%di
		mov    %ecx,%ebx
		mov    _0cd7b8_data,%eax
		mov    %edi,%ecx
		mov    %eax,0x000004(%esp)
		mov    _0ce6e4_data,%eax
		mov    0x000004(%esp),%edi
		add    %eax,%esi
		mov    0x000008(%esp),%eax

	_01ab8b_jump:
		call   *_0cd0f8_data

	_01ab91_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000010(%esp)

	_01abb9_jump:
		incw   0x000024(%esp)

	_01abbe_jump:
		mov    0x000022(%esp),%edx
		mov    0x00000c(%esp),%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01a984_jump

	_01abd5_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01abe0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%dx
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%cx
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		cmpb   $0x000000,0x0000d5(%esi)
		je     _01aca8_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000ff
		movswl %dx,%edx
		cwtl   
		call   _01a1c4_func
		mov    0x0000d6(%esi),%ah
		cmp    $0x000001,%ah
		jne    _01ac6f_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01acf0_jump

	_01ac6f_jump:
		cmp    $0x000002,%ah
		jne    _01accd_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01a3f0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01aca8_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01accd_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000fe
		movswl %dx,%edx
		cwtl   
		call   _01a1c4_func

	_01accd_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01acf0_jump:
		mov    %esi,%eax
		call   _01a3f0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ad00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000001,_095e2c_data
		jne    _01ad22_jump
		mov    $0x003e80,%ecx
		mov    _0cd7b8_data,%edi
		call   _012783_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ad22_jump:
		mov    $0x00fa00,%ebx
		mov    _0cd138_data,%eax
		xor    %edx,%edx
		call   _080420_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ad38_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%ecx
		mov    _0cf7fa_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0c99f8_data,%edx
		shl    $0x000002,%eax
		mov    $_018ce0_func,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%esi
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01ad92_jump
		mov    $0x000007,%eax
		call   _06bf60_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _06bf60_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01ad92_jump:
		mov    0x000008(%esp),%edx
		mov    _0cf89e_data,%bx
		mov    0x000002(%esi),%al
		sub    %ebx,%edx
		mov    _0cf8a6_data,%di
		xor    %ah,%ah
		sub    %edi,%ecx
		add    %eax,%edx
		add    %ecx,%eax
		test   %dx,%dx
		jle    _01ae30_jump
		movswl %dx,%ecx
		mov    $0x000140,%edx
		sub    %ecx,%edx
		test   %edx,%edx
		jle    _01ae30_jump
		test   %ax,%ax
		jle    _01ae30_jump
		movswl %ax,%ebx
		mov    $0x0000c8,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jle    _01ae30_jump
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    _0ce6dc_data,%eax
		shl    $0x000002,%esi
		mov    (%eax),%edx
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		movzbw 0x000005(%edx),%di
		shl    $0x000008,%esi
		add    %edi,%esi
		mov    0x000008(%eax),%eax
		movzwl %si,%ebp
		mov    (%edx),%esi
		add    %eax,%esi
		mov    0x00000a(%edx),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    _0cd7b8_data,%edi
		mov    %al,%dl
		mov    %ecx,%eax
		mov    %ebp,%ecx
		call   *_0cd10c_data

	_01ae30_jump:
		mov    _0cf7fc_data,%ax
		cmp    $0x00001e,%ax
		jge    _01ae46_jump
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0cf7fc_data

	_01ae46_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01ae50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0ce6bd_data
		jne    _01af12_jump
		testb  $0x000004,_0ce6d1_data
		je     _01af12_jump
		mov    _0cf840_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    %esp,%ecx
		add    %ebx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    %dx,_0cf7fc_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    $_0ce650_data,%eax
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x000028(%esi),%cx
		mov    %eax,%edi
		mov    0x000002(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x000068(%esi),%bl
		sub    $0x000006,%eax
		add    %ecx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000074(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01ad38_func,%eax
		movswl %di,%edx
		call   _01f520_func

	_01af12_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01af1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d8,%esp
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		xor    %edx,%edx
		xor    %eax,%eax
		call   _01a1c4_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _01a1c4_func
		cmpb   $0x0000ff,_0cfa5d_data
		je     _01b086_jump
		mov    _0cf820_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%ebp
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		mov    _0cfa5d_data,%dl
		add    %eax,%ebp
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cc578_data,%esi
		sub    %edx,%eax
		mov    $0x0000d8,%ecx
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01b086_jump
		testb  $0x000004,0x000081(%ebp)
		je     _01b07f_jump
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ebp),%al
		sub    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%ebp)
		mov    0x000068(%ebp),%bl
		add    0x000036(%ebp),%bx
		mov    0x0000c6(%esp),%eax
		movswl %bx,%esi
		sar    $0x000010,%eax
		lea    -0x000008(%esi),%edx
		cmp    %eax,%edx
		jle    _01b028_jump
		mov    0x0000ca(%esp),%edi
		sar    $0x000010,%edi
		add    %eax,%edi
		cmp    %edi,%esi
		jge    _01b028_jump
		sub    %eax,%edx
		mov    $0x000007,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		xor    %cl,%cl
		mov    %cl,(%esp,%eax,1)
		jmp    _01b045_jump

	_01b028_jump:
		mov    0x0000c6(%esp),%eax
		mov    0x0000ca(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     _01b04c_jump

	_01b045_jump:
		mov    %esp,%eax
		call   _01abe0_func

	_01b04c_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000069(%ebp),%al
		push   $0x000000
		add    %ecx,%eax
		push   $0x0000ff
		sub    $0x000014,%eax
		mov    $0x000012,%ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x00001e,%ebx
		call   _01a1c4_func
		mov    %ebp,%eax
		jmp    _01b086_jump

	_01b07f_jump:
		mov    %esp,%eax
		call   _01abe0_func

	_01b086_jump:
		mov    _0cfa59_data,%ch
		cmp    $0x0000ff,%ch
		je     _01b0d1_jump
		xor    %edx,%edx
		mov    %ch,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cc578_data,%esi
		sub    %edx,%eax
		mov    %esp,%edi
		shl    $0x000003,%eax
		mov    $0x0000d8,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01b0d1_jump
		mov    %esp,%eax
		call   _01abe0_func

	_01b0d1_jump:
		add    $0x0000d8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b0e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %dx,%ebp
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0cd8b0_data(%ebp),%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0cf7c4_data,%dx
		push   $0x000001
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x00001b,%edx
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		mov    _0ce6ec_data,%eax
		mov    0x000149(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf7c4_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000004(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0ce6ec_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf7c4_data,%cx
		xor    %edx,%edx
		add    %ecx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		xor    %edx,%edx
		mov    _0cd8b3_data(%ebp),%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0ce6ec_data,%eax
		mov    0x000155(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf7c4_data,%dx
		add    $0x00000a,%esi
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x000039,%edx
		movswl %ax,%ecx
		mov    $_0cd8cc_data,%eax
		call   _018eb0_func
		mov    _0cd8cc_data,%edx
		xor    %eax,%eax
		mov    0x0002b1(%edx),%al
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf7c4_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		xor    %edx,%edx
		mov    _0cd8b2_data(%ebp),%dl
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		shl    $0x000002,%edx
		mov    $0x000066,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000064,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x00000a,%ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,0x000008(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    %dx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    _0ce6ec_data,%eax
		mov    %dx,0x000004(%esp)
		mov    0x0001c1(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		xor    %edx,%edx
		mov    _0cf7c4_data,%cx
		mov    0x00000c(%esp),%dl
		add    %ecx,%eax
		add    $0x00000a,%esi
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce6ec_data,%edx
		mov    0x000005(%edx,%eax,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf7c4_data,%dx
		movswl %si,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000017,%eax
		mov    0x000004(%esp),%dl
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0ce6ec_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cf7c4_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0ce6ec_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cf7c4_data,%cx
		movswl %si,%edx
		add    %ecx,%eax
		mov    $0x000001,%ecx
		movswl %ax,%ebx
		mov    $_0c098c_data,%eax
		call   _01a3f0_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b424_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf7be_data,%cx
		mov    _0cf7b4_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %ecx,%eax
		mov    _0cf7c4_data,%dx
		push   $0x000000
		add    %edx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000002,%edx
		movswl %ax,%ecx
		mov    $_0cd8cc_data,%eax
		call   _018eb0_func
		mov    _0cf7c2_data,%bx
		test   %bx,%bx
		je     _01b4a5_jump
		mov    %ebx,%ecx
		mov    _0cf7b4_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %eax,%ecx
		push   $0x000000
		mov    _0cf7c4_data,%si
		mov    $0x000001,%edx
		add    %esi,%ecx
		mov    $0x00000a,%ebx
		sub    $0x000017,%ecx
		mov    $_0cd8cc_data,%eax
		movswl %cx,%ecx
		call   _018eb0_func

	_01b4a5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b56c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    _0cf87c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%ebx
		je     _01b790_jump
		mov    $0x00003c,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000258,%ecx
		mov    %dl,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x001770,%ecx
		mov    %dl,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ah,%ah
		mov    %ah,0x00001c(%esp)
		mov    _0cd0a0_data,%ax
		sub    $0x000020,%eax
		push   $0x000005
		movswl %ax,%ebx
		mov    _0cd098_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000034,%eax
		mov    %dl,0x000024(%esp)
		movswl %ax,%edx
		mov    _0c2dc4_data,%eax
		call   _01a3f0_func
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		je     _01b659_jump
		mov    _0cd0a0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cd098_data,%ax
		sub    $0x000032,%eax
		movswl %ax,%ebx
		mov    %dl,%al
		add    $0x00001c,%al
		xor    %edx,%edx
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018eb0_func
		movb   $0x00000f,0x00001c(%esp)

	_01b659_jump:
		mov    _0cd0a0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cd098_data,%ax
		movzbw 0x00001c(%esp),%di
		sub    $0x000032,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018eb0_func
		mov    _0cd0a0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cd098_data,%ax
		sub    $0x000023,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000018(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018eb0_func
		mov    _0cd8c0_data,%edx
		cmp    $0x000064,%edx
		jg     _01b761_jump
		xor    %eax,%eax
		mov    _0cfa56_data,%al
		push   %eax
		mov    _0c2db8_data,%edi
		push   %edi
		lea    0x000008(%esp),%eax
		xor    %esi,%esi
		push   %eax
		mov    %esi,_0ce674_data
		call   _08044b_func
		mov    _0cf9fd_data,%bl
		add    $0x00000c,%esp
		cmp    $0x000004,%bl
		jae    _01b790_jump
		mov    _095ec1_data,%al
		mov    _095ec0_data,%bh
		add    %al,%bh
		mov    %bh,_095ec0_data
		cmp    $0x000005,%bh
		jbe    _01b726_jump
		mov    %al,%dl
		neg    %dl
		mov    %dl,_095ec1_data
		movb   $0x000005,_095ec0_data
		jmp    _01b738_jump

	_01b726_jump:
		test   %bh,%bh
		jne    _01b738_jump
		neg    %al
		mov    %al,_095ec1_data
		movb   $0x000001,_095ec0_data

	_01b738_jump:
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    _095ec0_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b761_jump:
		cmp    $0x0000a0,%edx
		jg     _01b790_jump
		cmp    $0x000078,%edx
		jle    _01b790_jump
		mov    %esp,%edi
		push   $0x000005
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0990_data,%esi
		lea    0x000004(%esp),%eax
		xor    %ecx,%ecx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _01a3f0_func

	_01b790_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b79c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		cmpw   $0x0000ff,_0cf826_data
		jne    _01b7ec_jump
		cmpb   $0x000000,_0cfa35_data
		je     _01b7d1_jump
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c0998_data,%eax
		jmp    _01b910_jump

	_01b7d1_jump:
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c09a8_data,%eax
		jmp    _01b910_jump

	_01b7ec_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x000092,%ebx
		mov    $0x00001b,%edx
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		push   $0x000000
		mov    $0x000022,%ecx
		mov    $0x000016,%ebx
		push   $0x0000ff
		mov    $0x0000a2,%edx
		mov    $0x000092,%eax
		call   _01a1c4_func
		xor    %ebx,%ebx
		mov    _0cfa3b_data,%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x0000bc,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000cb,%ebx
		mov    %al,%dl
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		mov    _0cf824_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000034,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000043,%ebx
		mov    %al,%dl
		mov    $_0ce6ec_data,%eax
		call   _018eb0_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b8,%ebx
		mov    $0x000058,%edx
		mov    $_0c09b4_data,%eax

	_01b910_jump:
		call   _01a3f0_func
		mov    $_0ce650_data,%eax
		mov    $_0ced44_data,%eax
		testb  $0x000004,_0cd94d_data
		je     _01b93c_jump
		mov    $_0cd8cc_data,%eax

	_01b93c_jump:
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b944_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000060(%esp)
		cmp    %bx,%si
		jge    _01b97b_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000060(%esp)

	_01b97b_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01b98e_jump
		mov    %edi,%edx
		mov    %si,0x000060(%esp)

	_01b98e_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01b9a1_jump
		mov    %edi,%edx
		mov    %bx,0x000060(%esp)

	_01b9a1_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000064(%esp)
		cmp    %cx,%ax
		jge    _01b9c8_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000064(%esp)

	_01b9c8_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b9e0_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000064(%esp)

	_01b9e0_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b9f8_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000064(%esp)

	_01b9f8_jump:
		mov    0x00005e(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000058(%esp)
		test   %eax,%eax
		jge    _01ba46_jump
		mov    %edi,%esi
		mov    %edi,0x000048(%esp)
		neg    %esi
		neg    %eax
		mov    %esi,0x000048(%esp)
		jmp    _01ba4a_jump

	_01ba46_jump:
		mov    %edi,0x000048(%esp)

	_01ba4a_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01ba66_jump
		mov    0x000058(%esp),%esi
		mov    $0xffffffff,%ebp
		neg    %esi
		mov    %ebp,0x000040(%esp)
		mov    %esi,0x000058(%esp)
		jmp    _01ba6e_jump

	_01ba66_jump:
		movl   $0x000001,0x000040(%esp)

	_01ba6e_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000050(%esp)
		test   %esi,%esi
		jge    _01bab9_jump
		mov    %edi,%ebp
		mov    %edi,0x000044(%esp)
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000044(%esp)
		jmp    _01babd_jump

	_01bab9_jump:
		mov    %edi,0x000044(%esp)

	_01babd_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01bad2_jump
		movl   $0xffffffff,0x00004c(%esp)
		negl   0x000050(%esp)
		jmp    _01bada_jump

	_01bad2_jump:
		movl   $0x000001,0x00004c(%esp)

	_01bada_jump:
		test   %eax,%eax
		jne    _01badf_jump
		inc    %eax

	_01badf_jump:
		test   %esi,%esi
		jne    _01bae4_jump
		inc    %esi

	_01bae4_jump:
		mov    0x000040(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000048(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000058(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000050(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0cd7bc_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _014828_func
		mov    0x000064(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000060(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0cd7b8_data,%edi
		mov    _0cd7bc_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0cd10c_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01bbc4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x00005c(%esp)
		mov    %bx,0x000028(%esp)
		mov    %cx,0x000054(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000002,%eax
		mov    0x000004(%edx),%edx
		add    %eax,%edx
		mov    0x000008(%edx),%ax
		mov    %edx,0x00000c(%esp)
		and    $0x00003f,%ah
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,%dx
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		imul   %edx,%eax
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,(%esp)
		testb  $0x000020,0x000081(%ebx)
		je     _01bc8b_jump
		lea    0x000010(%esp),%eax
		lea    0x00001c(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x000018(%esp),%eax
		mov    0x000075(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000028(%esp),%ebx
		call   _01dbb4_func
		mov    0x00001e(%esp),%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000012(%esp),%edx
		mov    0x000008(%esp),%ebx
		sar    $0x000010,%edx
		add    $0x000008,%eax
		sar    %edx
		mov    _0cf8a6_data,%cx
		add    %edx,%eax
		mov    0x00001c(%esp),%edx
		mov    %eax,0x000030(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x000018(%esp)
		jmp    _01bcf7_jump

	_01bc8b_jump:
		lea    0x000034(%esp),%eax
		lea    0x000038(%esp),%ecx
		lea    0x00003c(%esp),%ebx
		push   %eax
		lea    0x000044(%esp),%edx
		mov    0x00000c(%esp),%eax
		call   _01d738_func
		mov    0x000040(%esp),%eax
		sub    _0cf89e_data,%ax
		mov    0x00003c(%esp),%ebx
		add    $0x000008,%eax
		mov    0x000036(%esp),%edx
		mov    %ax,0x000040(%esp)
		mov    _0cf8a6_data,%ax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		mov    0x00003e(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %bx,0x00003c(%esp)
		mov    %eax,0x000030(%esp)
		mov    0x000032(%esp),%eax
		mov    0x00003a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000018(%esp)

	_01bcf7_jump:
		xor    %esi,%esi
		mov    %si,0x000024(%esp)
		jmp    _01be80_jump

	_01bd03_jump:
		mov    (%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		test   %ax,%ax
		je     _01be7b_jump
		cwtl   
		imul   $0x00000c,%eax,%eax
		mov    0x000008(%esp),%ebp
		mov    0x000008(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%bl
		add    %edi,%eax
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%cl
		sub    %edi,%esi
		add    %ebx,%eax
		mov    %si,0x00002c(%esp)
		mov    %si,0x000048(%esp)
		sub    %edi,%eax
		mov    0x000018(%esp),%esi
		mov    0x000026(%esp),%edi
		mov    %ax,0x000058(%esp)
		mov    %edx,%eax
		sar    $0x000010,%edi
		sub    %esi,%eax
		add    %ecx,%edx
		mov    %ax,0x000050(%esp)
		mov    %ax,0x00004c(%esp)
		mov    %edi,%ecx
		sub    %esi,%edx
		mov    0x000052(%esp),%eax
		mov    0x00005a(%esp),%esi
		mov    %dx,0x000044(%esp)
		lea    0x000050(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000004(%esp)
		push   %eax
		mov    %esi,%ebx
		lea    0x000030(%esp),%eax
		call   _01c030_func
		mov    0x000004(%esp),%ebx
		lea    0x00004c(%esp),%edx
		lea    0x000058(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   _01c030_func
		mov    0x000004(%esp),%ecx
		lea    0x000044(%esp),%edx
		lea    0x000048(%esp),%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _01c030_func
		mov    0x000030(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    0x000058(%esp),%ebx
		mov    0x000048(%esp),%ecx
		mov    0x000050(%esp),%esi
		mov    0x00004c(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000018(%esp),%eax
		mov    %dx,0x00002c(%esp)
		mov    %bx,0x000058(%esp)
		mov    0x000044(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		add    %eax,%edx
		mov    %di,0x00004c(%esp)
		mov    %dx,0x000044(%esp)
		mov    %ebx,%eax
		mov    %edi,%edx
		mov    0x000044(%esp),%edi
		sub    %esi,%edx
		mov    0x00002c(%esp),%ebx
		add    %edi,%edx
		sub    %ebx,%eax
		movswl %dx,%edx
		add    %ecx,%eax
		push   %edx
		cwtl   
		push   %eax
		mov    0x00004a(%esp),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000050(%esp)
		push   %eax
		mov    0x000052(%esp),%eax
		mov    %si,0x00005c(%esp)
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ebx
		push   %eax
		mov    0x00005a(%esp),%eax
		mov    0x00005e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00006a(%esp),%eax
		mov    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01b944_func

	_01be7b_jump:
		incw   0x000024(%esp)

	_01be80_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _01bd03_jump
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01bea8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		movswl %bx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %al,%dl
		movswl %cx,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esi),%dl
		inc    %eax
		sar    %edx
		add    %edx,%eax
		mov    0x000024(%esp),%edx
		mov    %eax,0x000020(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00001c(%esp),%eax
		mov    0x000020(%esp),%edi
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x000036(%esp),%ebp
		sub    %edi,%eax
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000006(%esi),%al
		lea    0x000010(%esp),%edx
		add    %eax,%ecx
		mov    0x00003e(%esp),%eax
		sub    %edi,%ecx
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%eax
		mov    %cx,0x000014(%esp)
		mov    %eax,0x000004(%esp)
		push   %eax
		sar    $0x000010,%edi
		lea    0x000020(%esp),%eax
		mov    %edi,%ecx
		call   _01c030_func
		mov    0x000004(%esp),%ebx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %ebp,%ebx
		call   _01c030_func
		mov    0x000004(%esp),%ecx
		lea    0x000014(%esp),%edx
		lea    0x000018(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _01c030_func
		mov    0x000024(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000020(%esp),%eax
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00000c(%esp),%edx
		mov    0x000014(%esp),%ebx
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %eax,%edx
		add    %eax,%ebx
		mov    0x000008(%esp),%eax
		mov    %dx,0x00000c(%esp)
		mov    0x000018(%esp),%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		add    %ebx,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %bx,0x000018(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %di,0x00001c(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00001e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01b944_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01c030_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		lea    0x000008(%esp),%edx
		mov    %ax,(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _05e03c_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01c0c0_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x00006d(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x00006c(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01c10b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01c159_jump

	_01c10b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01c138_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01c138_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01c159_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01c160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01d824_func
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		call   _01d954_func
		mov    %ax,0x00001c(%esp)
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c19d_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001b,%dl
		je     _01c1b1_jump
		cmp    $0x000018,%dl
		je     _01c1b1_jump
		cmp    $0x00001e,%dl
		je     _01c1b1_jump
		cmp    $0x00000b,%dl
		je     _01c1b1_jump

	_01c19d_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01c264_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01c264_jump

	_01c1b1_jump:
		cmpb   $0x000000,_0ce77e_data
		je     _01c285_jump
		mov    _0ce6dc_data,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%bx
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		mov    %edx,%ecx
		mov    %bx,0x000010(%esp)
		xor    %eax,%eax
		xor    %edx,%ecx
		mov    0x000069(%esi),%al
		xor    %ebx,%ebx
		mov    0x000068(%edi),%cl
		mov    0x000074(%esi),%bl
		mov    0x000028(%edi),%si
		add    %edx,%eax
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    %si,0x000014(%esp)
		mov    0x000069(%edi),%cl
		mov    0x00002c(%edi),%si
		add    %edx,%ebx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%edi),%dx
		mov    0x000074(%edi),%cl
		add    %edx,%ecx
		add    $0x000005,%esi
		sub    $0x000005,%ecx
		cmp    %si,%ax
		jle    _01c222_jump
		cmp    %si,%bx
		jg     _01c285_jump

	_01c222_jump:
		cmp    %cx,%ax
		jge    _01c22c_jump
		cmp    %cx,%bx
		jl     _01c285_jump

	_01c22c_jump:
		mov    0x000012(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x00003c(%ecx),%esi
		cmp    %esi,%ebx
		jg     _01c285_jump
		sub    $0x00003c,%ecx
		cmp    %ecx,%ebx
		jl     _01c285_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01d818_func
		jmp    _01c285_jump

	_01c264_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c285_jump
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _01c285_jump
		cmpb   $0x000000,_0ce77e_data
		jne    _01c285_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01d808_func

	_01c285_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01c305_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01c305_jump
		mov    %edi,%eax
		call   _055ee4_func
		xor    %edx,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _0251f8_func
		mov    %al,%bl
		testb  $0x000001,_09253c_data(%ebx)
		je     _01c2fe_jump
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		mov    %cl,%al
		mov    0x000081(%edi),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		mov    %ch,%ah
		mov    %ch,0x000081(%edi)
		or     %al,%ah
		mov    $0x000018,%ebx
		mov    %ah,0x000081(%edi)
		mov    %edi,%eax
		call   _01d818_func
		mov    %edi,%eax
		call   _055ee4_func

	_01c2fe_jump:
		mov    %edi,%eax
		call   _025820_func

	_01c305_jump:
		mov    0x00001a(%esp),%esi
		mov    0x000016(%esp),%ecx
		mov    %edi,%eax
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		mov    %esi,%ebx
		mov    %ecx,%edx
		call   _01dac8_func
		test   %ax,%ax
		je     _01c3dd_jump
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _01c3dd_jump
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01c39d_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01c39d_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		movw   $0x000000,0x000040(%edi)
		mov    %cl,%al
		mov    0x000081(%edi),%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,0x000081(%edi)
		mov    %cl,%ch
		movw   $0x000000,0x000042(%edi)
		or     %al,%ch
		mov    %ch,0x000081(%edi)
		jmp    _01c53e_jump

	_01c39d_jump:
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%dl
		jne    _01c53e_jump
		mov    0x00006c(%edi),%dh
		cmp    $0x000003,%dh
		je     _01c3be_jump
		cmp    $0x000001,%dh
		je     _01c3be_jump
		cmp    %dl,%dh
		jne    _01c53e_jump

	_01c3be_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01c53e_jump

	_01c3dd_jump:
		cmpb   $0x000002,0x00006d(%edi)
		jne    _01c400_jump
		cmpb   $0x000001,0x00006c(%edi)
		jne    _01c400_jump
		cmpb   $0x000000,0x00006b(%edi)
		jne    _01c400_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01c53e_jump

	_01c400_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c53e_jump
		cmpb   $0x000014,0x00006c(%edi)
		jne    _01c53e_jump
		cmpb   $0x00001b,0x00006b(%edi)
		jne    _01c53e_jump
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _01c53e_jump

	_01c436_jump:
		cmpw   $0x0000c4,0x000060(%esi)
		jne    _01c52e_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c52e_jump
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000004(%esp),%ebx
		mov    $0x000002,%edx
		push   %ebx
		mov    %edi,%eax
		lea    0x000014(%esp),%ebx
		call   _01dbb4_func
		andb   $0x0000f7,0x000081(%esi)
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%ecx
		mov    0x000068(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		sar    %ebx
		add    %ebx,%ecx
		mov    %ecx,0x000028(%esi)
		mov    %ecx,%ebx
		mov    %cx,0x00003c(%esi)
		xor    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		mov    0x000069(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000081(%esi),%ah
		mov    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		movw   $0x000000,0x000040(%esi)
		or     $0x000004,%ah
		movw   $0x000020,0x000042(%esi)
		sar    $0x000010,%ecx
		movl   $0x000001,0x000024(%esi)
		sar    %ecx
		mov    %ah,0x000081(%esi)
		add    %ecx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %bx,0x00003e(%esi)
		call   _01f8e8_func
		mov    _0ce65c_data,%ecx
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		movw   $0x00ffff,0x000046(%esi)
		mov    _0ce6bd_data,%bl
		movw   $0x000000,0x000048(%esi)
		shl    $0x000002,%ebx
		or     $0x000010,%dl
		add    %ecx,%ebx
		mov    %dl,0x000081(%esi)
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0ce6bc_data,%cl
		mov    0x000007(%ebx,%ecx,8),%dh
		test   $0x000040,%dh
		setne  %al
		mov    %al,_0cfa9c_data
		mov    %esi,%eax
		call   _01c75c_func
		jmp    _01c53e_jump

	_01c52e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jl     _01c436_jump

	_01c53e_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c57c_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000014,%bh
		je     _01c556_jump
		cmp    $0x00000d,%bh
		je     _01c556_jump
		cmp    $0x000017,%bh
		jne    _01c57c_jump

	_01c556_jump:
		mov    _0ce678_data,%ebx
		mov    0x000028(%edi),%esi
		lea    0x000081(%edi),%ecx
		cmp    %esi,%ebx
		setg   %al
		and    $0x000001,%al
		mov    (%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,(%ecx)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ecx)

	_01c57c_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c588_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ecx)
		jne    _01c607_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c5b7_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x00000c,%dh
		je     _01c5d5_jump
		cmp    $0x00000d,%dh
		je     _01c5d5_jump
		cmp    $0x000017,%dh
		je     _01c5d5_jump
		cmp    $0x000014,%dh
		je     _01c5d5_jump

	_01c5b7_jump:
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		jne    _01c5dc_jump
		mov    0x00006c(%ecx),%dl
		cmp    %ah,%dl
		je     _01c5d5_jump
		cmp    $0x000003,%dl
		je     _01c5d5_jump
		cmp    $0x00001c,%dl
		je     _01c5d5_jump
		cmp    $0x000007,%dl
		jne    _01c5dc_jump

	_01c5d5_jump:
		mov    $0x000013,%ebx
		jmp    _01c5e1_jump

	_01c5dc_jump:
		mov    $0x000012,%ebx

	_01c5e1_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c607_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _01c613_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01c638_jump

	_01c613_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c657_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%al
		je     _01c638_jump
		cmp    $0x00001d,%al
		je     _01c638_jump
		cmp    $0x00001a,%al
		je     _01c638_jump
		cmp    $0x000019,%al
		je     _01c638_jump
		cmp    $0x00001b,%al
		je     _01c638_jump
		cmp    $0x000018,%al
		je     _01c638_jump
		cmp    $0x00001e,%al
		jne    _01c657_jump

	_01c638_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c657_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c69d_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x00000c,%dl
		je     _01c674_jump
		cmp    $0x00000d,%dl
		je     _01c674_jump
		cmp    $0x000017,%dl
		je     _01c674_jump
		cmp    $0x000014,%dl
		jne    _01c69d_jump

	_01c674_jump:
		mov    _0ce678_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01c688_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01c68f_jump

	_01c688_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01c68f_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func

	_01c69d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01c6a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c6c4_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x00000d,%dh
		je     _01c6b6_jump
		cmp    $0x00000c,%dh
		jne    _01c6c4_jump

	_01c6b6_jump:
		mov    $0x000014,%edx
		call   _01d808_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c6c4_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c6d0_jump
		cmpb   $0x00000b,0x00006c(%eax)
		je     _01c6e8_jump

	_01c6d0_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c6dc_jump
		cmpb   $0x00001e,0x00006c(%eax)
		je     _01c6e8_jump

	_01c6dc_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01c756_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _01c756_jump

	_01c6e8_jump:
		mov    _0ce678_data,%edx
		mov    0x000028(%eax),%ebx
		cmp    %ebx,%edx
		setg   %dl
		mov    %dl,%dh
		mov    0x000081(%eax),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %dh,%dl
		setne  %dl
		and    $0x0000ff,%edx
		je     _01c756_jump
		mov    _0ce678_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000081(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%edx)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01d818_func

	_01c756_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c75c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000001,0x000070(%eax)
		je     _01c9c8_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0cfa9c_data,%bl
		mov    %eax,%edi
		test   %bl,%bl
		je     _01c7ba_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0ce67c_data,%cx
		mov    _0ce6b9_data,%bl
		add    %ecx,%ebx
		sub    %eax,%ebx
		jmp    _01c7d9_jump

	_01c7ba_jump:
		xor    %eax,%eax
		mov    _0ce6b9_data,%al
		mov    _0ce67c_data,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_01c7d9_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01c7e2_jump
		neg    %eax

	_01c7e2_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01c7ed_jump
		neg    %eax

	_01c7ed_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00002c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce67c_data,%ecx
		mov    _0ce6b9_data,%al
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c98d_jump
		mov    _0ce678_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0ce6b8_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c843_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c872_jump

	_01c843_jump:
		mov    _0ce678_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%al
		mov    _0ce6b8_data,%dl
		add    %ebp,%eax
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01c98d_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c98d_jump

	_01c872_jump:
		cmpw   $0x000000,(%esp)
		jle    _01c8a0_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01c8a0_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c8be_jump
		mov    $0x000001,%eax
		jg     _01c8be_jump
		neg    %eax

	_01c8be_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c8c6_jump
		mov    %ebx,%eax

	_01c8c6_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01c8ce_jump
		mov    %ebx,%eax

	_01c8ce_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01c911_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c8f5_jump
		mov    $0x000001,%eax
		jg     _01c8f5_jump
		neg    %eax

	_01c8f5_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c8fd_jump
		mov    %ebx,%eax

	_01c8fd_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c908_jump
		mov    %ebx,%eax

	_01c908_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c9f7_jump

	_01c911_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01c955_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c944_jump
		mov    %ebx,%eax

	_01c944_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c94c_jump
		mov    %ebx,%eax

	_01c94c_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c9f7_jump

	_01c955_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c97f_jump
		mov    %ebx,%eax

	_01c97f_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c987_jump
		mov    %ebx,%eax

	_01c987_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c9f7_jump

	_01c98d_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c9a0_jump
		mov    %ebx,%eax

	_01c9a0_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c9ab_jump
		mov    %ebx,%eax

	_01c9ab_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c9c2_jump
		mov    %ebx,%eax

	_01c9c2_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01c9f7_jump

	_01c9c8_jump:
		mov    _0ce678_data,%ecx
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0ce6b8_data,%al
		add    %ebx,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c9ee_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c9f7_jump

	_01c9ee_jump:
		jge    _01c9f7_jump
		orb    $0x000008,0x000081(%esi)

	_01c9f7_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01ca1e_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01ca1e_jump
		testb  $0x000008,0x000081(%esi)
		je     _01ca15_jump
		mov    $0xffffffff,%eax
		jmp    _01ca1a_jump

	_01ca15_jump:
		mov    $0x000001,%eax

	_01ca1a_jump:
		mov    %ax,0x000040(%esi)

	_01ca1e_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01ca2a_jump
		neg    %eax

	_01ca2a_jump:
		movswl %ax,%edx
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%edx,4),%edi
		sar    $0x000010,%ebx
		sub    %edx,%edi
		cmp    %ebx,%edi
		jge    _01ca46_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01ca7b_jump

	_01ca46_jump:
		lea    0x000000(,%ebx,4),%eax
		lea    0x000000(,%edx,4),%ecx
		sub    %ebx,%eax
		cmp    %eax,%ecx
		jge    _01ca60_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01ca7b_jump

	_01ca60_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%edi
		jge    _01ca6d_jump
		movb   $0x00000b,0x00006b(%esi)
		jmp    _01ca7b_jump

	_01ca6d_jump:
		cmp    %eax,%edx
		jge    _01ca77_jump
		movb   $0x00000a,0x00006b(%esi)
		jmp    _01ca7b_jump

	_01ca77_jump:
		movb   $0x000009,0x00006b(%esi)

	_01ca7b_jump:
		cmpw   $0x000000,0x000040(%esi)
		jle    _01ca9a_jump
		mov    0x000081(%esi),%dl
		test   $0x000008,%dl
		je     _01ca9a_jump
		mov    %dl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _01cab7_jump

	_01ca9a_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _01cab7_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _01cab7_jump
		mov    %dh,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%esi)

	_01cab7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cac4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _01caee_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01caee_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01cb00_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01cb00_jump
		movw   $0x000000,0x000052(%ecx)

	_01cb00_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01cb13_jump
		cmp    $0x000002,%al
		je     _01cbbd_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cb13_jump:
		test   %al,%al
		jne    _01cb20_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01cb27_jump

	_01cb20_jump:
		orb    $0x000008,0x000081(%ecx)

	_01cb27_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    0x00006d(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		test   %dh,%dh
		jne    _01cb49_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func

	_01cb49_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		jne    _01cc1f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		test   %bl,_09253c_data(%eax)
		je     _01cbab_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01cb8e_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000002,%edx
		jmp    _01cba6_jump

	_01cb8e_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_01cba6_jump:
		call   _061220_func

	_01cbab_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cbbd_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _01cbcc_jump
		cmp    $0x000001,%al
		je     _01cbe9_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cbcc_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _01cbd8_jump
		movw   $0x000000,0x000052(%ecx)

	_01cbd8_jump:
		cmpb   $0x000008,0x00006c(%ecx)
		jne    _01cc1f_jump
		mov    %ecx,%eax
		call   _025388_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cbe9_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		jne    _01cc12_jump
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cc12_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		call   _025820_func

	_01cc1f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cc24_func:
		push   %edx
		mov    %eax,%edx
		call   _01cac4_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _01cc4c_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _01cc4c_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _01cc4c_jump
		mov    %edx,%eax
		call   _01cc50_func
		movw   $0x000001,0x000052(%edx)

	_01cc4c_jump:
		pop    %edx
		ret    



_01cc50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01cda5_jump

	_01cc72_jump:
		cmpw   $0x000042,0x000060(%esi)
		jne    _01cd95_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01cd95_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01ccc0_jump
		mov    $0xfffffffd,%eax
		jmp    _01ccc5_jump

	_01ccc0_jump:
		mov    $0x000003,%eax

	_01ccc5_jump:
		mov    %ax,0x000040(%esi)
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    $0x000001,%ebx
		mov    0x000081(%esi),%al
		movb   $0x000004,0x00007e(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		movb   $0x000000,0x00006d(%esi)
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x00006c(%esi)
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f8e8_func
		mov    0x000081(%esi),%bh
		movb   $0x000009,0x00006b(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cd95_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01cc72_jump

	_01cda5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cdb0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01cde3_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01cde3_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01ce04_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x000002,%dh
		je     _01ce00_jump
		cmp    $0x000003,%dh
		je     _01ce00_jump
		cmp    $0x000004,%dh
		je     _01ce00_jump
		cmp    $0x000005,%dh
		jne    _01ce04_jump

	_01ce00_jump:
		movb   $0x0000ff,0x00007c(%ecx)

	_01ce04_jump:
		mov    _0ce6dc_data,%eax
		movw   $0x000000,0x000050(%ecx)
		cmpw   $0x000000,0x000040(%eax)
		jle    _01ce30_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		orb    $0x000008,0x000081(%ecx)
		jmp    _01ce45_jump

	_01ce30_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func
		andb   $0x0000f7,0x000081(%ecx)

	_01ce45_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _0612c0_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006b(%ecx)
		call   _0612c0_func
		pop    %ecx
		pop    %ebx
		ret    



_01ce70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01ceda_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01ceda_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _01ceda_jump
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		test   $0x000008,%dh
		jne    _01ceb0_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _01cec4_jump

	_01ceb0_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01cec4_jump:
		call   _061220_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _0612c0_func

	_01ceda_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cee0_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_0cfaa0_data
		pop    %edx
		ret    



_01ceec_func:
		push   %ebx
		cmpl   $0x0000b4,_0cfaa0_data
		jle    _01cf01_jump
		xor    %ebx,%ebx
		mov    %ebx,_0cfaa0_data

	_01cf01_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01cf21_jump
		cmpl   $0x000000,_0cfaa0_data
		jne    _01cf21_jump
		call   _01d050_func
		test   %al,%al
		jne    _01cf21_jump
		call   _01cf2c_func

	_01cf21_jump:
		incl   _0cfaa0_data
		pop    %ebx
		ret    



_01cf2c_func:
		push   %edx
		cmpb   $0x000000,_0cfa2c_data
		je     _01cf3e_jump
		xor    %dl,%dl
		mov    %dl,_0cfa50_data

	_01cf3e_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01cf51_jump
		mov    $0x000012,%eax
		call   _02a710_func

	_01cf51_jump:
		pop    %edx
		ret    



_01cf54_func:
		push   %edx
		cmpb   $0x000000,_0cfa2c_data
		je     _01cf66_jump
		xor    %dl,%dl
		mov    %dl,_0cfa50_data

	_01cf66_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01cf79_jump
		mov    $0x00000c,%eax
		call   _02a710_func

	_01cf79_jump:
		pop    %edx
		mov    %eax,%eax



_01cf7c_func:
		ret    



_01cf80_func:
		cmpb   $0x000000,_0cfa17_data
		je     _01cf7c_func
		mov    $0x000008,%eax
		jmp    _07319c_jump



_01cf94_func:
		push   %ebx
		cmpl   $0x0000b4,_0cfaa0_data
		jle    _01cfa9_jump
		xor    %ebx,%ebx
		mov    %ebx,_0cfaa0_data

	_01cfa9_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01cfc9_jump
		cmpl   $0x000000,_0cfaa0_data
		jne    _01cfc9_jump
		call   _01d050_func
		test   %al,%al
		jne    _01cfc9_jump
		call   _01cfd4_func

	_01cfc9_jump:
		incl   _0cfaa0_data
		pop    %ebx
		ret    



_01cfd4_func:
		push   %edx
		cmpb   $0x000000,_0cfa2c_data
		je     _01cfe6_jump
		xor    %dl,%dl
		mov    %dl,_0cfa50_data

	_01cfe6_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01cff9_jump
		mov    $0x000013,%eax
		call   _02a710_func

	_01cff9_jump:
		pop    %edx
		ret    



_01cffc_func:
		push   %edx
		cmpb   $0x000000,_0cfa2c_data
		je     _01d00e_jump
		xor    %dl,%dl
		mov    %dl,_0cfa50_data

	_01d00e_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _01d021_jump
		mov    $0x00000a,%eax
		call   _02a710_func

	_01d021_jump:
		pop    %edx
		mov    %eax,%eax



_01d024_func:
		ret    



_01d028_func:
		push   %edx
		cmpb   $0x000000,_0cfa50_data
		je     _01d041_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a908_func

	_01d041_jump:
		xor    %edx,%edx
		mov    %edx,_0cd85c_data
		call   _01cee0_func
		pop    %edx
		ret    



_01d050_func:
		cmpb   $0x000000,_0cfa50_data
		je     _01d068_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		jmp    _029564_jump

	_01d068_jump:
		xor    %al,%al
		ret    

_01d070_switch:
		.long   0




_01d074_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ebx),%ecx
		shl    $0x000003,%edx
		add    %edx,%ecx
		testb  $0x000010,0x000007(%ecx)
		je     _01d09c_jump
		cmpb   $0x000000,0x00006b(%eax)
		jmp    _01d0c3_jump

	_01d09c_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		dec    %edx
		cmp    %edx,%eax

	_01d0c3_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01d0e6_jump
		mov    0x000005(%ecx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _01d0e6_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d0e6_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d0ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0ccdf2_data,%eax
		mov    _0ccdf0_data,%esi
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		test   %eax,%eax
		jle    _01d151_jump

	_01d10b_jump:
		mov    %ecx,%edx
		and    $0x00000f,%edx
		mov    %ecx,%edi
		mov    0x000081(%esi),%dh
		mov    0x000024(%esi),%eax
		shl    $0x000005,%dh
		xor    %ebx,%ebx
		shr    $0x000007,%dh
		add    %eax,%eax
		mov    %dh,%bl
		sar    $0x000004,%edi
		add    %eax,%ebx
		lea    0x000000(,%edi,4),%eax
		and    $0x0000ff,%edx
		add    $_0cce08_data,%eax
		inc    %ecx
		call   _05def0_func
		mov    (%esp),%ebx
		add    $0x000084,%esi
		cmp    %ebx,%ecx
		jl     _01d10b_jump

	_01d151_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d15c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0ccdf2_data,%ebp
		mov    _0ccdf0_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01d1d7_jump

	_01d17a_jump:
		cmpw   $0x00003a,0x000060(%esi)
		je     _01d1cc_jump
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		shl    $0x000002,%eax
		and    $0x0000ff,%edx
		add    $_0cce08_data,%eax
		call   _05df24_func
		mov    0x000004(%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_01d1cc_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    %ebp,%edi
		jl     _01d17a_jump

	_01d1d7_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01d1e4_switch:
		.long   _01d41f_case
		.long   _01d430_case
		.long   _01d439_case
		.long   _01d425_case

_01d1f4_switch:
		.long   _01d48a_case
		.long   _01d49b_case
		.long   _01d4a4_case
		.long   _01d490_case




_01d204_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bl,0x000024(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		shl    $0x000002,%eax
		mov    0x00000c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edi),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		xor    %edx,%edx
		mov    0x000002(%ebp),%dl
		mov    0x000005(%ebp),%al
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00006b(%edi),%dl
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _01d2e8_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x00000a(%ebx,%eax,4),%bl
		testb  $0x000010,0x000007(%ebp)
		je     _01d279_jump
		mov    $0xffffffff,%eax
		jmp    _01d27e_jump

	_01d279_jump:
		mov    $0x000001,%eax

	_01d27e_jump:
		xor    %ecx,%ecx
		movswl %dx,%edx
		mov    %bl,%cl
		add    %eax,%edx
		dec    %ecx
		movswl %dx,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _01d29c_jump
		cmp    %ecx,%eax
		jg     _01d29c_jump
		mov    $0x000001,%eax
		jmp    _01d29e_jump

	_01d29c_jump:
		xor    %eax,%eax

	_01d29e_jump:
		test   %eax,%eax
		jne    _01d2e8_jump
		mov    0x000003(%ebp),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000004(%ebp),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000002(%edx),%al
		mov    %al,%bl
		mov    %ax,0x000008(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x000007(%edx),%cl
		mov    0x00000a(%ebx,%eax,4),%al
		test   $0x000010,%cl
		je     _01d2e6_jump
		xor    %edx,%edx
		mov    %al,%dl
		dec    %edx
		jmp    _01d2e8_jump

	_01d2e6_jump:
		xor    %edx,%edx

	_01d2e8_jump:
		xor    %eax,%eax
		mov    0x00006b(%edi),%al
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00006a(%edi),%al
		lea    0x000014(%esp),%ecx
		mov    %ax,0x000020(%esp)
		mov    0x000008(%esp),%al
		lea    0x00000c(%esp),%ebx
		mov    %al,0x00006a(%edi)
		lea    0x000004(%esp),%eax
		mov    %dl,0x00006b(%edi)
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x00002c(%esp),%dl
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000020(%esp),%al
		mov    %al,0x00006a(%edi)
		mov    0x000010(%esp),%al
		mov    %al,0x00006b(%edi)
		mov    0x000018(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000028(%esi),%cx
		add    %edx,%ebx
		sub    %ecx,%ebx

	_01d343_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01d34e_jump
		neg    %eax

	_01d34e_jump:
		cmp    $0x000010,%eax
		jl     _01d385_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01d363_jump
		mov    $0x000001,%eax
		jg     _01d363_jump
		neg    %eax

	_01d363_jump:
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ecx
		add    %eax,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%esi)
		cmp    $0x000000,%eax
		je     _01d37e_jump
		mov    $0x000001,%eax
		jg     _01d37e_jump
		neg    %eax

	_01d37e_jump:
		shl    $0x000004,%eax
		sub    %eax,%ebx
		jmp    _01d343_jump

	_01d385_jump:
		mov    0x000014(%esp),%ecx
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esi),%dx
		add    %eax,%ecx
		sub    %edx,%ecx

	_01d395_jump:
		movswl %cx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01d3a0_jump
		neg    %eax

	_01d3a0_jump:
		cmp    $0x000010,%eax
		jl     _01d3d7_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01d3b5_jump
		mov    $0x000001,%eax
		jg     _01d3b5_jump
		neg    %eax

	_01d3b5_jump:
		shl    $0x000004,%eax
		mov    0x00002c(%esi),%ebp
		add    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    $0x000000,%eax
		je     _01d3d0_jump
		mov    $0x000001,%eax
		jg     _01d3d0_jump
		neg    %eax

	_01d3d0_jump:
		shl    $0x000004,%eax
		sub    %eax,%ecx
		jmp    _01d395_jump

	_01d3d7_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _09257d_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _09257d_data(,%eax,4),%al
		shl    $0x000003,%dl
		shl    $0x000003,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    %dl,%al
		add    %ebp,%eax
		cmp    $0x000003,%eax
		ja     _01d446_jump
		jmp    *%cs:_01d1e4_switch(,%eax,4)

	_01d41f_case:
		add    0x000040(%edi),%bx
		jmp    _01d446_jump

	_01d425_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		jmp    _01d43f_jump

	_01d430_case:
		add    0x000040(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01d446_jump

	_01d439_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax

	_01d43f_jump:
		call   _055e60_func
		add    %eax,%ebx

	_01d446_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _09257d_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _09257d_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d4b1_jump
		jmp    *%cs:_01d1f4_switch(,%eax,4)

	_01d48a_case:
		add    0x000042(%edi),%cx
		jmp    _01d4b1_jump

	_01d490_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		jmp    _01d4aa_jump

	_01d49b_case:
		add    0x000042(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01d4b1_jump

	_01d4a4_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax

	_01d4aa_jump:
		call   _055e60_func
		add    %eax,%ecx

	_01d4b1_jump:
		mov    %bx,0x000040(%esi)
		mov    %cx,0x000042(%esi)
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d4c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ccdf0_data,%eax
		mov    _0ccdf4_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _01d4ed_jump

	_01d4dc_jump:
		cmp    0x000060(%eax),%cx
		je     _01d4ed_jump
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _01d4dc_jump

	_01d4ed_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d528_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _05e000_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01d560_func:
		mov    %ax,_0cf838_data
		mov    %dx,_0cf836_data
		ret    



_01d570_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0cfa63_data
		jne    _01d582_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01d582_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d5b0_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d5d8_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf836_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d614_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf834_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d650_func:
		mov    %al,_0cfa63_data
		ret    



_01d658_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf836_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d690_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cf834_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d6c8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%ecx
		shl    $0x000002,%eax
		lea    (%ecx,%eax,1),%esi
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%esi),%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x000004(%ebx),%ebx
		mov    0x000002(%eax),%cl
		mov    0x000005(%eax),%dh
		lea    0x000000(,%ecx,4),%eax
		and    $0x00000f,%dh
		sub    %ecx,%eax
		movzbw %dh,%si
		imul   0x00000a(%ebx,%eax,4),%si
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   %esi,%ebx
		xor    %eax,%eax
		mov    %dh,%al
		mov    _0cf9f5_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		inc    %eax
		test   %ax,%ax
		jle    _01d72e_jump
		cwtl   
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01d72e_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01d738_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000081(%eax)
		jne    _01d78b_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%cx
		mov    (%edx),%bl
		add    %ebx,%ecx
		jmp    _01d7bb_jump

	_01d78b_jump:
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx

	_01d7bb_jump:
		mov    %cx,(%esi)
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d808_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006c(%eax)
		ret    



_01d810_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		ret    



_01d818_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		mov    %bl,0x00006c(%eax)
		ret    



_01d824_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01d8a0_jump
		jbe    _01d93e_jump
		cmp    $0x0000ae,%ax
		jb     _01d877_jump
		jbe    _01d937_jump
		cmp    $0x0000bd,%ax
		jb     _01d868_jump
		jbe    _01d917_jump
		cmp    $0x0000e1,%ax
		jb     _01d94c_jump
		cmp    $0x0000e2,%ax
		jbe    _01d937_jump
		jmp    _01d94c_jump

	_01d868_jump:
		cmp    $0x0000b8,%ax
		je     _01d937_jump
		jmp    _01d94c_jump

	_01d877_jump:
		cmp    $0x00008c,%ax
		jb     _01d94c_jump
		jbe    _01d945_jump
		cmp    $0x00009a,%ax
		jb     _01d94c_jump
		cmp    $0x00009b,%ax
		jbe    _01d93e_jump
		jmp    _01d94c_jump

	_01d8a0_jump:
		cmp    $0x000031,%ax
		jb     _01d8cd_jump
		jbe    _01d925_jump
		cmp    $0x00006a,%ax
		jb     _01d94c_jump
		jbe    _01d91e_jump
		cmp    $0x00007b,%ax
		je     _01d92c_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d8cd_jump:
		cmp    $0x000016,%ax
		jb     _01d94c_jump
		jbe    _01d8e6_jump
		cmp    $0x00002d,%ax
		je     _01d905_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d8e6_jump:
		mov    _0cf88c_data,%ax
		cmp    $0x000001,%ax
		jb     _01d94c_jump
		jbe    _01d94c_jump
		cmp    $0x000002,%ax
		jne    _01d94c_jump
		mov    $0x000040,%eax
		pop    %edx
		ret    

	_01d905_jump:
		mov    _0cf88c_data,%ax
		cmp    $0x000001,%ax
		jb     _01d917_jump
		jbe    _01d917_jump
		cmp    $0x000002,%ax

	_01d917_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01d91e_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01d925_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01d92c_jump:
		mov    0x000075(%edx),%al
		cmp    $0x000005,%al
		jb     _01d94c_jump
		cmp    $0x000007,%al
		ja     _01d94c_jump

	_01d937_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01d93e_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01d945_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01d94c_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01d954_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01d9cb_jump
		jbe    _01da9d_jump
		cmp    $0x0000b8,%ax
		jb     _01d9a8_jump
		jbe    _01daa7_jump
		cmp    $0x0000c3,%ax
		jb     _01d999_jump
		jbe    _01dab1_jump
		cmp    $0x0000e1,%ax
		jb     _01dabb_jump
		cmp    $0x0000e2,%ax
		jbe    _01daa7_jump
		jmp    _01dabb_jump

	_01d999_jump:
		cmp    $0x0000bd,%ax
		je     _01da57_jump
		jmp    _01dabb_jump

	_01d9a8_jump:
		cmp    $0x00009a,%ax
		jb     _01dabb_jump
		cmp    $0x00009b,%ax
		jbe    _01da93_jump
		cmp    $0x0000ae,%ax
		je     _01daa7_jump
		jmp    _01dabb_jump

	_01d9cb_jump:
		cmp    $0x000031,%ax
		jb     _01da05_jump
		jbe    _01da75_jump
		cmp    $0x00007b,%ax
		jb     _01d9f7_jump
		jbe    _01da61_jump
		cmp    $0x00008a,%ax
		je     _01da93_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d9f7_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da05_jump:
		cmp    $0x000016,%ax
		jb     _01dabb_jump
		jbe    _01da21_jump
		cmp    $0x00002d,%ax
		je     _01da45_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da21_jump:
		mov    _0cf88c_data,%ax
		cmp    $0x000001,%ax
		jb     _01dabb_jump
		jbe    _01dabb_jump
		cmp    $0x000002,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da45_jump:
		mov    _0cf88c_data,%ax
		cmp    $0x000001,%ax
		jb     _01da57_jump
		jbe    _01da57_jump
		cmp    $0x000002,%ax

	_01da57_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da61_jump:
		mov    0x000075(%ebx),%al
		cmp    $0x000005,%al
		jb     _01dac0_jump
		jbe    _01da89_jump
		cmp    $0x000007,%al
		ja     _01dac0_jump
		cmpw   $0x000000,0x000042(%ebx)
		jle    _01da7f_jump

	_01da75_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da7f_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da89_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da93_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01da9d_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01daa7_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01dab1_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01dabb_jump:
		mov    $0x000028,%edx

	_01dac0_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01dac8_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01e588_func
		and    $0x0000ff,%eax
		mov    _09253c_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %esi
		pop    %ecx
		ret    



_01db04_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006b(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000075(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000081(%eax)
		je     _01db8e_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01db98_jump

	_01db8e_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01db98_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01dbb4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01dcef_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01dcef_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01dca6_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $0x0000ff,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01dcba_jump

	_01dca6_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $0x0000ff,%ecx

	_01dcba_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $0x0000ff,%ebx
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01dcef_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01dcfc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    0x000018(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		shl    $0x000002,%eax
		mov    %eax,(%esp)
		mov    (%esp),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01dd5b_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01de17_jump

	_01dd5b_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000005,%dh
		jne    _01dd8b_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01de17_jump

	_01dd8b_jump:
		cmp    $0x000007,%dh
		jne    _01ddf4_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%ax
		jle    _01dd9e_jump
		sub    $0x000020,%eax

	_01dd9e_jump:
		cmp    $0x000009,%ax
		jle    _01ddcf_jump
		cmp    $0x000017,%ax
		jge    _01ddcf_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01de17_jump

	_01ddcf_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01de17_jump

	_01ddf4_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01de17_jump:
		cmpw   $0x000000,0x00005a(%esi)
		je     _01deb7_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %eax,0x000004(%esp)
		mov    0x000028(%esi),%ax
		add    0x000004(%esp),%eax
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01d560_func
		mov    0x000058(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01d5d8_func
		mov    %ax,(%edi)
		mov    0x000058(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01d614_func
		mov    %ax,(%ebx)
		mov    0x000058(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01d5b0_func
		mov    %ax,(%ecx)
		mov    0x000058(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01d5b0_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01d560_func

	_01deb7_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01dec0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movw   $0x000006,0x000008(%esp)
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %edi,%edx
		call   _01d738_func
		cmpb   $0x000002,0x00006d(%esi)
		jne    _01defb_jump
		mov    0x00006c(%esi),%dl
		test   %dl,%dl
		je     _01def4_jump
		cmp    $0x000004,%dl
		jne    _01defb_jump

	_01def4_jump:
		movw   $0x000003,0x000008(%esp)

	_01defb_jump:
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %esi,%eax
		mov    0x00000a(%esp),%edx
		push   %ebx
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01dbb4_func
		mov    (%edi),%ax
		mov    0x000020(%esp),%edx
		sub    $0x000007,%eax
		mov    %ax,(%edx)
		mov    0x00001c(%esp),%edx
		mov    0x000000(%ebp),%ax
		mov    (%edx),%cx
		mov    0x000024(%esp),%edx
		add    %ecx,%eax
		mov    %ax,(%edx)
		mov    (%esp),%eax
		mov    (%eax),%ax
		mov    0x000028(%esp),%edx
		add    $0x00000e,%eax
		mov    %ax,(%edx)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00002c(%esp),%eax
		sar    %edx
		mov    %dx,(%eax)
		mov    (%edi),%ax
		add    $0x000004,%eax
		mov    (%esp),%edx
		mov    %ax,(%edi)
		subw   $0x000008,(%edx)
		mov    0x000000(%ebp),%cx
		add    $0x000004,%ecx
		mov    0x00001c(%esp),%edx
		mov    %cx,0x000000(%ebp)
		subw   $0x000008,(%edx)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01df8a_jump
		cmpb   $0x000010,0x00006c(%esi)
		je     _01df96_jump

	_01df8a_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01dfac_jump
		cmpb   $0x000013,0x00006c(%esi)
		jne    _01dfac_jump

	_01df96_jump:
		mov    0x00001c(%esp),%ecx
		mov    (%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01dbb4_func

	_01dfac_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000014



_01dfb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0ce678_data,%ebx
		mov    _0ce6b8_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01dfe6_jump
		orb    $0x000008,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01dfe6_jump:
		andb   $0x0000f7,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dff4_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01e013_jump
		jbe    _01e019_jump
		cmp    $0x000090,%ax
		jb     _01e024_jump
		jbe    _01e019_jump
		cmp    $0x0000a5,%ax
		je     _01e019_jump
		jmp    _01e024_jump

	_01e013_jump:
		cmp    $0x000003,%ax
		jne    _01e024_jump

	_01e019_jump:
		cmpb   $0x000001,0x00007b(%edx)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01e024_jump:
		cmpb   $0x000001,0x00007b(%edx)
		setae  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01e030_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf8a6_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0cf89e_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e05c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $0x0000ff,(%esp)
		mov    0x000060(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01e0d8_jump
		jbe    _01e32f_jump
		cmp    $0x00009c,%ax
		jb     _01e0ae_jump
		jbe    _01e486_jump
		cmp    $0x0000c3,%ax
		jb     _01e09f_jump
		jbe    _01e4bd_jump
		cmp    $0x0000d9,%ax
		je     _01e3f0_jump
		jmp    _01e535_jump

	_01e09f_jump:
		cmp    $0x0000a5,%ax
		je     _01e20a_jump
		jmp    _01e535_jump

	_01e0ae_jump:
		cmp    $0x00007b,%ax
		jb     _01e0c9_jump
		jbe    _01e137_jump
		cmp    $0x000098,%ax
		je     _01e433_jump
		jmp    _01e535_jump

	_01e0c9_jump:
		cmp    $0x000064,%ax
		je     _01e413_jump
		jmp    _01e535_jump

	_01e0d8_jump:
		cmp    $0x000023,%ax
		jb     _01e112_jump
		jbe    _01e2ee_jump
		cmp    $0x00003c,%ax
		jb     _01e103_jump
		cmp    $0x00003d,%ax
		jbe    _01e384_jump
		cmp    $0x000041,%ax
		je     _01e3c9_jump
		jmp    _01e535_jump

	_01e103_jump:
		cmp    $0x00002b,%ax
		je     _01e2ee_jump
		jmp    _01e535_jump

	_01e112_jump:
		cmp    $0x000009,%ax
		jb     _01e12d_jump
		jbe    _01e20a_jump
		cmp    $0x000014,%ax
		je     _01e29d_jump
		jmp    _01e535_jump

	_01e12d_jump:
		test   %ax,%ax
		je     _01e193_jump
		jmp    _01e535_jump

	_01e137_jump:
		mov    0x000075(%ecx),%dh
		cmp    $0x000001,%dh
		je     _01e152_jump
		cmp    $0x000002,%dh
		je     _01e152_jump
		cmp    $0x000004,%dh
		je     _01e152_jump
		cmp    $0x000007,%dh
		jne    _01e535_jump

	_01e152_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e171_jump
		mov    0x000081(%ecx),%al
		mov    $0x000003,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e171_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000002,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e193_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e1c9_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000003,%dl
		je     _01e535_jump
		cmp    $0x000001,%dl
		je     _01e535_jump
		cmp    $0x000005,%dl
		je     _01e535_jump
		cmp    $0x000004,%dl
		je     _01e535_jump
		cmp    $0x000006,%dl
		je     _01e535_jump

	_01e1c9_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e1e8_jump
		mov    0x000081(%ecx),%al
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e1e8_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    0x000081(%ecx),%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e20a_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e225_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x000003,%bl
		je     _01e535_jump
		cmp    $0x000001,%bl
		je     _01e535_jump

	_01e225_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e266_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e248_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e248_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e266_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e27f_jump
		mov    $0x000006,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e27f_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    %al,%bl
		mov    $0x000005,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e29d_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e2ad_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e535_jump

	_01e2ad_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _01e2cd_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e2cd_jump:
		cmp    $0x000001,%dh
		jne    _01e535_jump
		mov    0x000081(%ecx),%al
		xor    %bh,%bh
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e2ee_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e30d_jump
		mov    0x000081(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e30d_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e32f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e33f_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _01e535_jump

	_01e33f_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e535_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e366_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e366_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e384_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e535_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01e3ab_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e535_jump

	_01e3ab_jump:
		cmp    $0x000001,%ah
		jne    _01e535_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e535_jump

	_01e3c9_jump:
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01e3df_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e535_jump

	_01e3df_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %dh,%dh
		mov    %dh,(%esp)
		jmp    _01e535_jump

	_01e3f0_jump:
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		jne    _01e408_jump
		mov    %dl,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _01e413_jump

	_01e408_jump:
		mov    %dl,%dh
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)

	_01e413_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e423_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e535_jump

	_01e423_jump:
		mov    $0x000003,%dh
		movw   $0x000000,0x00004a(%ecx)
		mov    %dh,(%esp)
		jmp    _01e535_jump

	_01e433_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e443_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01e535_jump

	_01e443_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%bl
		test   $0x000008,%bl
		jne    _01e471_jump
		mov    %bl,%ah
		mov    $0x000003,%dl
		or     $0x000008,%ah
		mov    %dl,(%esp)
		mov    %ah,0x000081(%ecx)
		jmp    _01e535_jump

	_01e471_jump:
		mov    %bl,%bh
		mov    $0x000002,%al
		and    $0x0000f7,%bh
		mov    %al,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e535_jump

	_01e486_jump:
		mov    0x000070(%ecx),%dl
		test   %dl,%dl
		jne    _01e49d_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e535_jump

	_01e49d_jump:
		cmp    $0x000001,%dl
		jne    _01e535_jump
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %dl,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e535_jump

	_01e4bd_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e4c9_jump
		cmpb   $0x000018,0x00006c(%ecx)
		je     _01e535_jump

	_01e4c9_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e4d5_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _01e535_jump

	_01e4d5_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e4e1_jump
		cmpb   $0x000013,0x00006c(%ecx)
		je     _01e535_jump

	_01e4e1_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)

	_01e535_jump:
		cmpb   $0x0000ff,(%esp)
		je     _01e581_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_09257d_data(,%eax,4)
		je     _01e55c_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01e56a_jump

	_01e55c_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01e56a_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _061220_func

	_01e581_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e588_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    _0ce636_data,%ecx
		movswl %ax,%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e5ab_jump
		cmp    %ecx,%eax
		jg     _01e5ab_jump
		mov    $0x000001,%eax
		jmp    _01e5ad_jump

	_01e5ab_jump:
		xor    %eax,%eax

	_01e5ad_jump:
		test   %eax,%eax
		je     _01e600_jump
		mov    _0ce638_data,%ecx
		movswl %dx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e5d1_jump
		cmp    %ecx,%eax
		jg     _01e5d1_jump
		mov    $0x000001,%eax
		jmp    _01e5d3_jump

	_01e5d1_jump:
		xor    %eax,%eax

	_01e5d3_jump:
		test   %eax,%eax
		je     _01e600_jump
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01e600_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01e608_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		cmpw   $0x000017,0x000060(%eax)
		jne    _01e62b_jump
		testb  $0x000002,_0cf81b_data
		je     _01e627_jump
		mov    $0x000004,%dl
		jmp    _01e62d_jump

	_01e627_jump:
		mov    $0x000008,%dl
		jmp    _01e62d_jump

	_01e62b_jump:
		mov    $0x000010,%dl

	_01e62d_jump:
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01e655_jump
		sar    %cl,%ax
		jmp    _01e65e_jump

	_01e655_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e65e_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x000014(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01e673_jump
		sar    %cl,%ax
		jmp    _01e67c_jump

	_01e673_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e67c_jump:
		mov    %ax,0x00000c(%esp)
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01e698_jump
		sar    %cl,%ax
		jmp    _01e6a1_jump

	_01e698_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e6a1_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01e6b5_jump
		sar    %cl,%ax
		jmp    _01e6be_jump

	_01e6b5_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e6be_jump:
		mov    %ax,0x000004(%esp)
		mov    %ebx,%eax
		mov    0x00000a(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01e588_func
		mov    %al,0x000065(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01e588_func
		mov    0x00006d(%esi),%dl
		mov    %al,0x000063(%esi)
		cmp    $0x000002,%dl
		jne    _01e721_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01e588_func
		and    $0x0000ff,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _024ec8_func
		cwtl   
		jmp    _01e72f_jump

	_01e721_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01e588_func
		and    $0x0000ff,%eax

	_01e72f_jump:
		mov    0x000012(%esp),%edx
		mov    %al,0x000062(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01e588_func
		mov    %al,0x000064(%esi)
		mov    0x000014(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01e588_func
		mov    %al,0x000066(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e790_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01e608_func
		movzbw 0x000068(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x000069(%ebx),%di
		mov    0x00002c(%ebx),%cx
		mov    0x000060(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%ax
		jne    _01e816_jump
		mov    $0xffffffff,%edx
		mov    _0ce6b2_data,%cl
		mov    %dx,_0ce6a0_data
		cmp    $0x00000c,%cl
		jb     _01e7fb_jump
		jbe    _01e805_jump
		cmp    $0x000012,%cl
		jb     _01e7ef_jump
		cmp    $0x000017,%cl
		jbe    _01e80e_jump
		cmp    $0x000019,%cl
		jbe    _01e816_jump
		cmp    $0x00001e,%cl
		je     _01e80e_jump
		jmp    _01e816_jump

	_01e7ef_jump:
		cmp    $0x00000e,%cl
		jb     _01e816_jump
		cmp    $0x00000f,%cl
		jbe    _01e805_jump
		jmp    _01e816_jump

	_01e7fb_jump:
		cmp    $0x000002,%cl
		jb     _01e816_jump
		cmp    $0x000007,%cl
		ja     _01e816_jump

	_01e805_jump:
		movb   $0x000001,_0cfa72_data
		jmp    _01e816_jump

	_01e80e_jump:
		xor    %ah,%ah
		mov    %ah,_0cfa72_data

	_01e816_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _01ea9d_jump
		cmpw   $0x000017,0x000060(%ebx)
		jne    _01e84d_jump
		mov    _0ce6a2_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01e862_jump

	_01e84d_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func

	_01e862_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000002,%cl
		jne    _01e88e_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %cl,_09253c_data(%edx)
		jne    _01e88e_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func

	_01e88e_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_09253c_data(%edx)
		je     _01e8a2_jump
		xor    %ah,%ah
		jmp    _01eaa2_jump

	_01e8a2_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%al
		mov    _09253c_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000063(%ebx),%al
		mov    _09253c_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %al,%cl
		cmp    $0x000003,%al
		jne    _01e8ef_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01e8ed_jump
		mov    $0x000001,%cl
		jmp    _01e8ef_jump

	_01e8ed_jump:
		mov    $0x000002,%cl

	_01e8ef_jump:
		test   %cl,%cl
		je     _01ea9d_jump
		mov    0x000060(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%ax
		jne    _01e991_jump
		cmpb   $0x000001,_0cfa72_data
		jne    _01ea9d_jump
		test   %cl,%cl
		je     _01e91d_jump
		add    $0x000010,%esi
		jmp    _01e920_jump

	_01e91d_jump:
		sub    $0x000010,%esi

	_01e920_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _01ea9d_jump
		cmpb   $0x000002,_0ce6bd_data
		je     _01e970_jump
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01e96a_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01e970_jump

	_01e96a_jump:
		movw   $0x000001,0x000050(%ebx)

	_01e970_jump:
		test   %cl,%cl
		setne  %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    _0ce6b2_data(%eax),%al
		mov    %al,_0ce6b2_data
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e991_jump:
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _01ea9d_jump
		cmpb   $0x000002,0x00006d(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _01ea9d_jump
		cmpw   $0x000000,0x000060(%ebx)
		jne    _01e9cb_jump
		testb  $0x000010,0x000081(%ebx)
		jne    _01ea92_jump

	_01e9cb_jump:
		mov    0x000060(%ebx),%cx
		cmp    $0x000009,%cx
		je     _01ea92_jump
		cmp    $0x0000a5,%cx
		je     _01ea92_jump
		cmp    $0x000014,%cx
		je     _01ea92_jump
		cmp    $0x000023,%cx
		je     _01ea92_jump
		cmp    $0x00002b,%cx
		je     _01ea92_jump
		cmp    $0x00003c,%cx
		je     _01ea92_jump
		cmp    $0x00003d,%cx
		je     _01ea92_jump
		cmp    $0x000041,%cx
		jne    _01ea27_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01ea92_jump

	_01ea27_jump:
		mov    0x000060(%ebx),%dx
		cmp    $0x000046,%dx
		je     _01ea92_jump
		cmp    $0x000064,%dx
		je     _01ea92_jump
		cmp    $0x0000d9,%dx
		je     _01ea92_jump
		cmp    $0x000098,%dx
		je     _01ea92_jump
		cmp    $0x00009c,%dx
		je     _01ea92_jump
		cmp    $0x0000c3,%dx
		je     _01ea92_jump
		cmp    $0x00007b,%dx
		jne    _01ea9d_jump
		mov    0x000075(%ebx),%cl
		cmp    $0x000001,%cl
		je     _01ea79_jump
		cmp    $0x000004,%cl
		je     _01ea79_jump
		cmp    $0x000007,%cl
		jne    _01ea9d_jump
		cmpb   $0x000002,0x00007d(%ebx)
		jne    _01ea9d_jump

	_01ea79_jump:
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _01ea85_jump
		cmpb   $0x000004,0x00006c(%ebx)
		je     _01ea8c_jump

	_01ea85_jump:
		mov    $0x000001,%eax
		jmp    _01ea8e_jump

	_01ea8c_jump:
		xor    %eax,%eax

	_01ea8e_jump:
		test   %eax,%eax
		je     _01ea9d_jump

	_01ea92_jump:
		mov    %ebx,%eax
		call   _01e05c_func
		movb   $0x00000f,0x000062(%ebx)

	_01ea9d_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al

	_01eaa2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01eaa8_func:
		movb   $0x000000,0x000071(%eax)
		movb   $0x000000,0x000072(%eax)
		ret    



_01eab4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _01ead3_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01eaca_jump
		neg    %eax

	_01eaca_jump:
		cmp    $0x000020,%eax
		jge    _01ead3_jump
		add    %dx,0x000040(%ecx)

	_01ead3_jump:
		cmpw   $0x000006,0x000060(%ecx)
		jne    _01eaf1_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _01eae6_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _01eb13_jump

	_01eae6_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01eb07_jump

	_01eaf1_jump:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%dl
		jne    _01eafe_jump
		cmp    0x00006c(%ecx),%dl
		je     _01eb13_jump

	_01eafe_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01eb07_jump:
		call   _01d818_func
		mov    %ecx,%eax
		call   _01eaa8_func

	_01eb13_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01eb18_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01d074_func
		test   %al,%al
		je     _01eb7b_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    _0cf868_data,%bx
		mov    %ah,0x000081(%edx)
		cmp    $0x000005,%bx
		jne    _01eb51_jump
		cmpw   $0x0000a1,0x000060(%edx)
		je     _01eb5c_jump

	_01eb51_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _01f918_func

	_01eb5c_jump:
		mov    0x000060(%edx),%si
		cmp    $0x0000aa,%si
		je     _01eb6d_jump
		cmp    $0x00004b,%si
		jne    _01eb7b_jump

	_01eb6d_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01eb7b_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_01eb80_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		mov    _0ce77f_data,%dh
		cmp    %dh,%dl
		jae    _01eb96_jump
		movb   $0x000000,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01eb96_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01eba0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000014(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0ce6b8_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00004c(%esi),%cx
		mov    _0ce6b9_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000e(%esp),%ebx
		mov    0x000069(%esi),%al
		sar    $0x000010,%ebx
		sub    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x00000c(%esp)
		test   %eax,%eax
		jge    _01ec0a_jump
		neg    %eax

	_01ec0a_jump:
		mov    0x00000a(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01ec20_jump
		neg    %eax

	_01ec20_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x00001c(%esp)
		cmpw   $0x000000,0x000010(%esp)
		je     _01ed59_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _01ed59_jump
		cmp    (%esp),%dx
		jle    _01ecec_jump
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		idivl  0x000004(%esp)
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		cmpw   $0x000000,0x000010(%esp)
		jle    _01ec83_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01ec8c_jump

	_01ec83_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01ec8c_jump:
		mov    0x00002e(%esp),%edx
		mov    %ax,(%edi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,0x000000(%ebp)
		test   %ax,%ax
		jne    _01edc6_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01ecd3_jump
		movl   $0x000010,0x000008(%esp)
		jmp    _01ecdb_jump

	_01ecd3_jump:
		movl   $0xfffffff0,0x000008(%esp)

	_01ecdb_jump:
		mov    0x000008(%esp),%eax
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01edc6_jump

	_01ecec_jump:
		movswl %dx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    0x00000c(%esp),%edx
		mov    %eax,%ebx
		test   %dx,%dx
		jle    _01ed1f_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01ed28_jump

	_01ed1f_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01ed28_jump:
		mov    0x000012(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,(%edi)
		jmp    _01edc6_jump

	_01ed59_jump:
		mov    0x00000c(%esp),%edx
		test   %dx,%dx
		jne    _01ed97_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01ed75_jump
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx
		jmp    _01ed7c_jump

	_01ed75_jump:
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx

	_01ed7c_jump:
		mov    %dx,(%edi)
		cmpw   $0x000000,0x000010(%esp)
		jle    _01ed8e_jump
		mov    $0x000001,%ebx
		jmp    _01ed93_jump

	_01ed8e_jump:
		mov    $0xffffffff,%ebx

	_01ed93_jump:
		xor    %ecx,%ecx
		jmp    _01edc6_jump

	_01ed97_jump:
		jle    _01eda2_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01edab_jump

	_01eda2_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01edab_jump:
		mov    0x00000c(%esp),%ecx
		xor    %ebx,%ebx
		mov    %ax,0x000000(%ebp)
		test   %cx,%cx
		jle    _01edc1_jump
		mov    $0x000001,%ecx
		jmp    _01edc6_jump

	_01edc1_jump:
		mov    $0xffffffff,%ecx

	_01edc6_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _01edd5_jump
		cmpw   $0x000000,(%edi)
		jg     _01ede4_jump

	_01edd5_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01edf4_jump
		cmpw   $0x000000,(%edi)
		jge    _01edf4_jump

	_01ede4_jump:
		negw   (%edi)
		cmpw   $0x000000,0x000000(%ebp)
		jne    _01edf4_jump
		movw   $0x000002,0x000000(%ebp)

	_01edf4_jump:
		mov    0x00004e(%esi),%ax
		mov    0x00004c(%esi),%dx
		add    %ebx,%ebx
		add    %ecx,%ecx
		add    %ebx,%eax
		add    %ecx,%edx
		mov    %ax,0x00004e(%esi)
		mov    %dx,0x00004c(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01eeb8_func:
		push   %ebx
		cmp    $0x0003e8,%edx
		jb     _01eed8_jump
		lea    -0x0003e8(%edx),%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0ce644_data,%ebx
		jmp    _01ef0d_jump

	_01eed8_jump:
		cmp    $0x000001,%al
		jbe    _01eee2_jump
		cmp    $0x000002,%al
		je     _01ef00_jump
		jmp    _01ef12_jump

	_01eee2_jump:
		jne    _01eee7_jump
		add    $0x000029,%edx

	_01eee7_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0cedc8_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    

	_01ef00_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0ce6e0_data,%ebx

	_01ef0d_jump:
		shl    $0x000002,%edx
		add    %edx,%ebx

	_01ef12_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01ef1c_func:
		push   %ebx
		cmp    $0x0003e8,%edx
		jb     _01ef3c_jump
		lea    -0x0003e8(%edx),%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0ce644_data,%ebx
		jmp    _01ef67_jump

	_01ef3c_jump:
		cmp    $0x000001,%al
		jbe    _01ef46_jump
		cmp    $0x000002,%al
		je     _01ef5a_jump
		jmp    _01ef6c_jump

	_01ef46_jump:
		jne    _01ef4b_jump
		add    $0x000029,%edx

	_01ef4b_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0cedc8_data,%ebx
		jmp    _01ef67_jump

	_01ef5a_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0ce6e0_data,%ebx

	_01ef67_jump:
		shl    $0x000002,%edx
		add    %edx,%ebx

	_01ef6c_jump:
		mov    0x000009(%ebx),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x000007(%ebx),%dl
		and    $0x0000ff,%eax
		add    %edx,%eax
		pop    %ebx
		ret    



_01ef80_func:
		push   %ebx
		push   %edx
		mov    _0c09b8_data,%dh
		xor    %eax,%eax

	_01ef8a_jump:
		add    $0x0000d8,%eax
		mov    %dh,%dl
		xor    %bl,%bl
		mov    %dh,_0cc4a0_data(%eax)
		mov    %bl,_0cc576_data(%eax)
		xor    %dh,%dl
		mov    %dl,_0cc575_data(%eax)
		cmp    $0x000870,%eax
		jne    _01ef8a_jump
		pop    %edx
		pop    %ebx
		ret    



_01efb4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %ecx,%ecx
		cmp    $0x00005d,%al
		jne    _01eff3_jump
		mov    $0x000003,%ecx
		mov    %esp,%edi
		mov    _01d070_switch,%eax
		mov    %edx,%esi
		mov    %eax,(%esp)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		call   _08047b_func
		lea    0x0003e8(%eax),%ecx
		jmp    _01f18a_jump

	_01eff3_jump:
		cmp    $0x000061,%al
		jb     _01f000_jump
		cmp    $0x00007a,%al
		ja     _01f000_jump
		mov    %al,%cl
		sub    $0x00005d,%ecx

	_01f000_jump:
		cmp    $0x000030,%al
		jb     _01f00f_jump
		cmp    $0x000039,%al
		ja     _01f00f_jump
		xor    %ecx,%ecx
		mov    %al,%cl
		sub    $0x000012,%ecx

	_01f00f_jump:
		mov    %al,%ah
		cmp    $0x00003f,%al
		jb     _01f08f_jump
		jbe    _01f0dd_jump
		cmp    $0x000081,%al
		jb     _01f063_jump
		jbe    _01f177_jump
		cmp    $0x000094,%al
		jb     _01f052_jump
		jbe    _01f169_jump
		cmp    $0x00009c,%al
		jb     _01f18a_jump
		jbe    _01f185_jump
		cmp    $0x0000f8,%al
		je     _01f13f_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f052_jump:
		cmp    $0x000084,%al
		je     _01f185_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f063_jump:
		cmp    $0x00007c,%al
		jb     _01f07e_jump
		jbe    _01f15b_jump
		cmp    $0x00007e,%al
		je     _01f131_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f07e_jump:
		cmp    $0x00005e,%al
		je     _01f131_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f08f_jump:
		cmp    $0x000027,%al
		jb     _01f0bd_jump
		jbe    _01f115_jump
		cmp    $0x00002e,%al
		jb     _01f0ac_jump
		jbe    _01f0f9_jump
		cmp    $0x00003a,%al
		je     _01f107_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f0ac_jump:
		cmp    $0x00002a,%al
		je     _01f14d_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f0bd_jump:
		cmp    $0x000023,%al
		jb     _01f0d0_jump
		jbe    _01f123_jump
		cmp    $0x000025,%al
		je     _01f13f_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f0d0_jump:
		cmp    $0x000021,%al
		je     _01f0eb_jump
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f0dd_jump:
		mov    $0x000001,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f0eb_jump:
		mov    $0x000002,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f0f9_jump:
		mov    $0x000003,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f107_jump:
		mov    $0x000028,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f115_jump:
		mov    $0x000029,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f123_jump:
		mov    $0x00002f,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f131_jump:
		mov    $0x00002e,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f13f_jump:
		mov    $0x00002d,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f14d_jump:
		mov    $0x000030,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f15b_jump:
		mov    $0x000031,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f169_jump:
		mov    $0x00002b,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f177_jump:
		mov    $0x00002c,%ecx
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_01f185_jump:
		mov    $0x00002a,%ecx

	_01f18a_jump:
		mov    %ecx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_01f194_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    (%edx),%bl
		cmp    $0x0003e8,%ebx
		jge    _01f1ac_jump
		cmp    $0x000001,%al
		jne    _01f1ac_jump
		mov    %bl,%ah
		add    $0x000029,%ah
		mov    %ah,(%edx)

	_01f1ac_jump:
		pop    %ebx
		ret    



_01f1b0_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %edx,%ecx
		xor    %esi,%esi
		jmp    _01f204_jump

	_01f1c4_jump:
		cmp    $0x00002f,%dl
		je     _01f211_jump
		cmp    $0x000020,%dl
		jne    _01f1d3_jump
		add    (%esp),%esi
		jmp    _01f204_jump

	_01f1d3_jump:
		inc    %eax
		lea    (%edi,%eax,1),%edx
		xor    %eax,%eax
		mov    (%ebx),%al
		call   _01efb4_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _01f204_jump
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    0x000014(%esp),%al
		call   _01ef1c_func
		sub    0x000004(%esp),%eax
		add    %eax,%esi
		cmp    $0x0003e8,%ebx
		jb     _01f204_jump
		add    $0x000003,%ecx

	_01f204_jump:
		inc    %ecx
		movswl %cx,%eax
		lea    (%edi,%eax,1),%ebx
		mov    (%ebx),%dl
		test   %dl,%dl
		jne    _01f1c4_jump

	_01f211_jump:
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01f21c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ec,%esp
		mov    %eax,%ebp
		mov    0x0000d4(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x0000cc(%esp)
		mov    %edx,0x0000dc(%esp)
		mov    %edx,0x0000d0(%esp)
		mov    %edx,0x0000e0(%esp)
		mov    %edx,0x0000d4(%esp)
		mov    %al,0x0000e8(%esp)
		cmp    $0x000002,%al
		jne    _01f289_jump
		mov    $0x00000f,%edx
		mov    $0x000001,%ecx
		mov    $0x000008,%esi
		mov    %edx,0x0000c8(%esp)
		mov    %ecx,0x0000e4(%esp)
		mov    %esi,0x0000d8(%esp)
		jmp    _01f2d7_jump

	_01f289_jump:
		cmp    $0x000001,%al
		jne    _01f2b3_jump
		mov    $0x000017,%esi
		mov    $0x000003,%edi
		mov    $0x00000a,%eax
		mov    %esi,0x0000c8(%esp)
		mov    %edi,0x0000e4(%esp)
		mov    %eax,0x0000d8(%esp)
		jmp    _01f2d7_jump

	_01f2b3_jump:
		mov    $0x000024,%eax
		mov    $0x000003,%edx
		mov    $0x00000c,%ecx
		mov    %eax,0x0000c8(%esp)
		mov    %edx,0x0000e4(%esp)
		mov    %ecx,0x0000d8(%esp)

	_01f2d7_jump:
		mov    $0x0000c8,%ecx
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01f481_jump
		xor    %esi,%esi
		jmp    _01f3cb_jump

	_01f301_jump:
		cmp    $0x00002f,%al
		jne    _01f35e_jump
		mov    $0x000001,%edx
		mov    0x0000dc(%esp),%ecx
		mov    0x0000cc(%esp),%edi
		add    %edx,%ecx
		mov    %edx,0x0000d4(%esp)
		mov    %ecx,0x0000dc(%esp)
		cmp    %di,%bx
		jle    _01f335_jump
		mov    %bx,0x0000cc(%esp)

	_01f335_jump:
		mov    0x0000e0(%esp),%eax
		mov    0x0000d0(%esp),%edx
		xor    %ebx,%ebx
		cmp    %dx,%ax
		jle    _01f351_jump
		mov    %eax,0x0000d0(%esp)

	_01f351_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x0000e0(%esp)
		xor    %ecx,%ecx
		jmp    _01f391_jump

	_01f35e_jump:
		cmp    $0x000020,%al
		jne    _01f37e_jump
		mov    0x0000d8(%esp),%edi
		mov    0x0000e0(%esp),%eax
		xor    %ecx,%ecx
		inc    %eax
		add    %edi,%ebx
		mov    %eax,0x0000e0(%esp)
		jmp    _01f391_jump

	_01f37e_jump:
		mov    %esp,%eax
		lea    0x000001(%ecx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%esp,%ecx,1),%al
		call   _01efb4_func
		mov    %eax,%ecx

	_01f391_jump:
		test   %ecx,%ecx
		je     _01f3ca_jump
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x0000e8(%esp),%al
		mov    0x0000e0(%esp),%edi
		call   _01ef1c_func
		mov    0x0000e4(%esp),%edx
		inc    %edi
		sub    %edx,%eax
		mov    %edi,0x0000e0(%esp)
		add    %eax,%ebx
		cmp    $0x0003e8,%ecx
		jb     _01f3ca_jump
		add    $0x000003,%esi

	_01f3ca_jump:
		inc    %esi

	_01f3cb_jump:
		movswl %si,%ecx
		mov    (%esp,%ecx,1),%al
		test   %al,%al
		jne    _01f301_jump
		mov    0x0000dc(%esp),%edi
		test   %di,%di
		jne    _01f3fb_jump
		mov    $0x000001,%edx
		mov    %bx,0x0000cc(%esp)
		mov    %edx,0x0000dc(%esp)
		jmp    _01f405_jump

	_01f3fb_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %eax,0x0000dc(%esp)

	_01f405_jump:
		cmpw   $0x000000,0x0000d4(%esp)
		je     _01f430_jump
		mov    0x0000ca(%esp),%eax
		mov    0x0000ce(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01f43e_jump

	_01f430_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01f43e_jump:
		mov    0x0000cc(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000c8(%esp),%ecx
		mov    0x0000d2(%ebp),%ax
		sub    %ecx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000dc(%esp),%eax
		imul   %ecx,%eax
		sub    $0x000002,%eax
		mov    %ax,0x0000ce(%ebp)

	_01f481_jump:
		add    $0x0000ec,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01f490_switch:
		.long   _01f4e2_case
		.long   _01f4ec_case
		.long   _01f4f6_case
		.long   _01f500_case




_01f4a0_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		cmp    $0x0000ff,%bx
		jne    _01f4c8_jump
		xor    %al,%al
		jmp    _01f4bc_jump

	_01f4b1_jump:
		cmp    $0x000024,%ah
		jne    _01f4ba_jump
		xor    %ebx,%ebx
		mov    %al,%bl

	_01f4ba_jump:
		inc    %al

	_01f4bc_jump:
		xor    %edx,%edx
		mov    %al,%dl
		add    %ecx,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		jne    _01f4b1_jump

	_01f4c8_jump:
		cmp    $0x0000ff,%bx
		je     _01f507_jump
		cmp    $0x000003,%si
		ja     _01f507_jump
		xor    %edx,%edx
		mov    %si,%dx
		jmp    *%cs:_01f490_switch(,%edx,4)

	_01f4e2_case:
		movswl %bx,%edx
		movb   $0x000061,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01f4ec_case:
		movswl %bx,%edx
		movb   $0x000062,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01f4f6_case:
		movswl %bx,%edx
		movb   $0x000063,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01f500_case:
		movswl %bx,%edx
		movb   $0x000064,(%ecx,%edx,1)

	_01f507_jump:
		pop    %esi
		pop    %ecx
		ret    



_01f50c_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01f520_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000024(%esp)
		mov    %cx,0x00001c(%esp)
		mov    0x000040(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    %eax,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x000022(%esp),%edi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %edi,%eax
		xor    %esi,%esi
		mov    %eax,%edi
		test   %ecx,%ecx
		je     _01f584_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01f578_jump
		neg    %eax

	_01f578_jump:
		cmp    $0x000001,%eax
		jge    _01f584_jump
		mov    $0x000001,%ebx
		jmp    _01f586_jump

	_01f584_jump:
		xor    %ebx,%ebx

	_01f586_jump:
		cmp    $0x000001,%bx
		jne    _01f702_jump
		test   %ecx,%ecx
		jge    _01f5b6_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    %ebx,%esi
		call   _01f50c_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01f50c_func
		jmp    _01f5cd_jump

	_01f5b6_jump:
		jne    _01f5cd_jump
		test   %edi,%edi
		jge    _01f5cd_jump
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		mov    %ebx,%esi
		call   _01f50c_func
		neg    %edi

	_01f5cd_jump:
		test   %edi,%edi
		jle    _01f5db_jump
		movl   $0x000001,0x000004(%esp)
		jmp    _01f5ed_jump

	_01f5db_jump:
		jge    _01f5e7_jump
		movl   $0xffffffff,0x000004(%esp)
		jmp    _01f5ed_jump

	_01f5e7_jump:
		xor    %ebp,%ebp
		mov    %ebp,0x000004(%esp)

	_01f5ed_jump:
		mov    %edi,%eax
		test   %eax,%eax
		jge    _01f5f5_jump
		neg    %eax

	_01f5f5_jump:
		mov    %eax,%edi
		lea    (%eax,%eax,1),%ebp
		add    %edi,%edi
		sub    %ecx,%eax
		mov    %di,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000010(%esp)
		test   %si,%si
		je     _01f690_jump
		mov    0x00001a(%esp),%esi
		mov    0x000012(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %esi,%eax
		imul   %edx,%eax
		negl   0x000004(%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%edi
		test   %eax,%eax
		je     _01f641_jump
		sar    %cl,%eax
		jmp    _01f647_jump

	_01f641_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f647_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f655_jump:
		cmp    %ecx,%esi
		jl     _01f877_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f671_jump
		mov    0x00000e(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01f678_jump

	_01f671_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01f678_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f68d_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f68d_jump:
		dec    %esi
		jmp    _01f655_jump

	_01f690_jump:
		mov    0x000012(%esp),%esi
		mov    0x00001a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		je     _01f6b8_jump
		sar    %cl,%eax
		jmp    _01f6be_jump

	_01f6b8_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f6be_jump:
		mov    0x000012(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f6cc_jump:
		cmp    %ecx,%esi
		jg     _01f877_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f6e3_jump
		add    0x000004(%esp),%edi
		mov    0x00000e(%esp),%eax
		jmp    _01f6e7_jump

	_01f6e3_jump:
		mov    0x00000a(%esp),%eax

	_01f6e7_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f6ff_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f6ff_jump:
		inc    %esi
		jmp    _01f6cc_jump

	_01f702_jump:
		test   %edi,%edi
		jge    _01f72b_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01f50c_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01f50c_func
		jmp    _01f745_jump

	_01f72b_jump:
		jne    _01f745_jump
		test   %ecx,%ecx
		jge    _01f745_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01f50c_func
		neg    %ecx

	_01f745_jump:
		test   %ecx,%ecx
		jle    _01f752_jump
		movl   $0x000001,(%esp)
		jmp    _01f762_jump

	_01f752_jump:
		jge    _01f75d_jump
		movl   $0xffffffff,(%esp)
		jmp    _01f762_jump

	_01f75d_jump:
		xor    %edx,%edx
		mov    %edx,(%esp)

	_01f762_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f76a_jump
		neg    %eax

	_01f76a_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %edi,%eax
		mov    %cx,0x000020(%esp)
		add    %eax,%eax
		sub    %edi,%ebp
		mov    %ax,0x000028(%esp)
		test   %si,%si
		je     _01f808_jump
		mov    0x00003a(%esp),%edi
		mov    (%esp),%edx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edi
		neg    %edx
		sar    $0x000010,%eax
		mov    %edx,(%esp)
		mov    0x000042(%esp),%edx
		sub    %edi,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		je     _01f7ba_jump
		sar    %cl,%eax
		jmp    _01f7c0_jump

	_01f7ba_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f7c0_jump:
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi

	_01f7ce_jump:
		cmp    %ecx,%edi
		jl     _01f877_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f7e9_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01f7f0_jump

	_01f7e9_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax

	_01f7f0_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f805_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f805_jump:
		dec    %edi
		jmp    _01f7ce_jump

	_01f808_jump:
		mov    0x000022(%esp),%edi
		mov    0x00003a(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000012(%esp),%esi
		test   %eax,%eax
		je     _01f830_jump
		sar    %cl,%eax
		jmp    _01f836_jump

	_01f830_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f836_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		cmp    %ecx,%edi
		jg     _01f877_jump

	_01f848_jump:
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f856_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01f85a_jump

	_01f856_jump:
		mov    0x00001e(%esp),%eax

	_01f85a_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f872_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f872_jump:
		inc    %edi
		cmp    %ecx,%edi
		jle    _01f848_jump

	_01f877_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01f880_func:
		push   %edx
		mov    _0cf81e_data,%ah
		mov    _0cf81f_data,%dl
		and    $0x000000,%ah
		and    $0x0000f0,%dl
		mov    %ah,_0cf81e_data
		mov    %dl,_0cf81f_data
		pop    %edx
		ret    



_01f8a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce65c_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0cfa71_data,%ah
		sub    %ah,%al
		mov    %al,_0cfa71_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f8e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ccdfc_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,2),%ecx
		inc    %edx
		mov    _0ccdf8_data,%ebx
		mov    0x000034(%eax),%ax
		mov    %dx,_0ccdfc_data
		mov    %ax,(%ecx,%ebx,1)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f918_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0ccdfc_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01f94f_jump

	_01f92c_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0ccdf8_data,%edx
		cmp    (%edx,%ebx,1),%cx
		je     _01f94f_jump
		mov    _0ccdfc_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _01f92c_jump

	_01f94f_jump:
		mov    _0ccdfc_data,%di
		cmp    %di,%ax
		jge    _01f983_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0ccdfc_data
		mov    _0ccdfa_data,%ebx
		sar    $0x000010,%ebx
		mov    _0ccdf8_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_01f983_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f988_func:
		push   %edx
		mov    %eax,%edx
		call   _01d028_func
		call   _03d9d4_func
		push   %edx
		push   $_0c09bc_data
		call   _07fce1_func
		add    $0x000008,%esp
		push   $_0c09dc_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _0804e8_func
		mov    (%eax),%edx
		push   %edx
		push   $_0c09ec_data
		call   _07fce1_func
		add    $0x000008,%esp
		push   $_0c09fc_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _07f410_func
		cmpb   $0x000001,_0cfa51_data
		je     _01f9f2_jump
		push   $_0c0a00_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _0804f4_func

	_01f9f2_jump:
		mov    $0xffffffff,%eax
		call   _080512_func
		pop    %edx
		ret    



_01fa00_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _01fa1d_jump

	_01fa0e_jump:
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		je     _01fa2c_jump
		inc    %eax

	_01fa1d_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jl     _01fa0e_jump
		xor    %al,%al

	_01fa2c_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_01fa40_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0cf862_data,%eax
		mov    _0cf85e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cf874_data,%eax
		mov    _0cf860_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %eax,%ebx
		movswl %si,%eax
		sub    %eax,%ebx
		test   %dx,%dx
		setg   %al
		mov    %al,0x000004(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,(%esp)
		cmpb   $0x000000,0x000004(%esp)
		jne    _01fa9d_jump
		neg    %edx

	_01fa9d_jump:
		cmpb   $0x000000,(%esp)
		jne    _01faa5_jump
		neg    %ebx

	_01faa5_jump:
		cmp    $0x0000c8,%dx
		jle    _01fade_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _01faba_jump
		sar    %cl,%ax
		jmp    _01fac3_jump

	_01faba_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01fac3_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _01fad3_jump
		sar    %cl,%ax
		jmp    _01fadc_jump

	_01fad3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01fadc_jump:
		mov    %eax,%ebx

	_01fade_jump:
		test   %bx,%bx
		jne    _01fb0d_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _01faf4_jump
		mov    $0x00001b,%eax
		jmp    _01fbaa_jump

	_01faf4_jump:
		test   %dx,%dx
		je     _01fb03_jump
		mov    $0x000009,%eax
		jmp    _01fbaa_jump

	_01fb03_jump:
		mov    $0xffffffff,%eax
		jmp    _01fbaa_jump

	_01fb0d_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmpb   $0x000000,0x000004(%esp)
		je     _01fb6c_jump
		cmpb   $0x000000,(%esp)
		je     _01fb57_jump
		cmp    $0x0000ff,%ax
		jle    _01fb47_jump
		mov    $0x00001b,%eax
		jmp    _01fbaa_jump

	_01fb47_jump:
		cwtl   
		mov    _094a9c_data(%eax),%al
		xor    %ah,%ah
		add    $0x00001b,%eax
		jmp    _01fbaa_jump

	_01fb57_jump:
		cmp    $0x0000ff,%ax
		jle    _01fb61_jump
		xor    %eax,%eax
		jmp    _01fbaa_jump

	_01fb61_jump:
		cwtl   
		mov    _094a9c_data(%eax),%al
		xor    %ah,%ah
		jmp    _01fbaa_jump

	_01fb6c_jump:
		cmpb   $0x000000,(%esp)
		je     _01fb8f_jump
		cmp    $0x0000ff,%ax
		jle    _01fb7f_jump
		mov    $0x000012,%eax
		jmp    _01fbaa_jump

	_01fb7f_jump:
		cwtl   
		mov    _094a9c_data(%eax),%al
		xor    %ah,%ah
		add    $0x000012,%eax
		jmp    _01fbaa_jump

	_01fb8f_jump:
		cmp    $0x0000ff,%ax
		jle    _01fb9c_jump
		mov    $0x000009,%eax
		jmp    _01fbaa_jump

	_01fb9c_jump:
		cwtl   
		mov    _094a9c_data(%eax),%al
		xor    %ah,%ah
		add    $0x000009,%eax

	_01fbaa_jump:
		movswl %ax,%ebx
		movswl %si,%edx
		movswl %di,%eax
		call   _07b920_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01fbc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01fa40_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fc18_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01fa40_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fc70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000f,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		cwtl   
		call   _01fa40_func
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000e,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01fa40_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fd14_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0ce678_data,%ebx
		mov    _0ce6b8_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		mov    0x000068(%eax),%al
		sub    %ecx,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		test   %edx,%edx
		setg   %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01fd44_switch:
		.long   _01fdf4_case
		.long   _01fe4d_case
		.long   _01fe4d_case
		.long   _01fe16_case
		.long   _01fe8d_case
		.long   _01fe8d_case
		.long   _01ff04_case
		.long   _01ff84_case
		.long   _01ff84_case
		.long   _01ff44_case
		.long   _01ff84_case
		.long   _01ff84_case

_01fd74_switch:
		.long   _01ffbc_case
		.long   _01ffa2_case
		.long   _01ffcc_case
		.long   _01ffbc_case
		.long   _01ffa2_case

_01fd88_switch:
		.long   _020030_case
		.long   _020023_case
		.long   _02004e_case
		.long   _02004a_case
		.long   _02003d_case




_01fd9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		movzbw 0x00006c(%eax),%si
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cf9f5_data(%eax),%al
		mov    %esi,%edx
		test   %al,%al
		sete   %al
		sub    $0x000002,%edx
		mov    %al,%ah
		cmp    $0x00000b,%dx
		ja     _02004e_case
		and    $0x00ffff,%edx
		jmp    *%cs:_01fd44_switch(,%edx,4)

	_01fdf4_case:
		cmpb   $0x00000e,0x00006b(%ecx)
		jne    _02004e_case
		test   %al,%al
		je     _02004e_case
		mov    %ecx,%eax
		call   _01fc70_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe16_case:
		cmpb   $0x000016,0x00006b(%ecx)
		jne    _02004e_case
		mov    $0x000001,%eax
		call   _06bf60_func
		test   %ax,%ax
		jne    _01feea_jump

	_01fe33_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe4d_case:
		cmpb   $0x000013,0x00006b(%ecx)
		jne    _02004e_case
		test   %ah,%ah
		je     _02004e_case
		incw   _0cf812_data
		cmp    $0x000004,%si
		jne    _01fe73_jump
		mov    %ecx,%eax
		call   _01fc18_func

	_01fe73_jump:
		cmp    $0x000003,%si
		jne    _02004e_case
		mov    %ecx,%eax
		call   _01fbc0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe8d_case:
		cmpb   $0x000014,0x00006b(%ecx)
		jne    _02004e_case
		mov    _0cf812_data,%ax
		cmp    $0x000001,%ax
		jb     _01fee0_jump
		jbe    _01fead_jump
		cmp    $0x000003,%ax
		je     _01fec2_jump
		jmp    _01fee0_jump

	_01fead_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d808_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fec2_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d808_func
		mov    %bx,_0cf812_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fee0_jump:
		cmp    $0x000006,%si
		jne    _01fe33_jump

	_01feea_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff04_case:
		mov    %ecx,%eax
		call   _01fd14_func
		test   %ax,%ax
		je     _01ff2a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff2a_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff44_case:
		mov    %ecx,%eax
		call   _01fd14_func
		test   %ax,%ax
		je     _01ff6a_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff6a_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01ff84_case:
		cmpb   $0x000014,0x000070(%ecx)
		jne    _01ffd4_jump
		mov    %esi,%eax
		sub    $0x000009,%eax
		cmp    $0x000004,%ax
		ja     _01ffcc_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01fd74_switch(,%eax,4)

	_01ffa2_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01ffae_jump
		neg    %eax

	_01ffae_jump:
		mov    %eax,%edx
		mov    %ax,0x000040(%ecx)
		neg    %edx
		mov    %dx,0x000040(%ecx)
		jmp    _01ffcc_case

	_01ffbc_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01ffc8_jump
		neg    %eax

	_01ffc8_jump:
		mov    %ax,0x000040(%ecx)

	_01ffcc_case:
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_01ffd4_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000068(%ecx),%al
		mov    0x000069(%ecx),%bl
		mov    %ax,(%esp)
		mov    %al,%dl
		mov    %ecx,%eax
		movzbw 0x000069(%ecx),%di
		call   _02f1e0_func
		test   %ax,%ax
		je     _02004e_case
		mov    -0x000002(%esp),%edx
		movswl %di,%ebx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		call   _01dac8_func
		test   %ax,%ax
		je     _02004e_case
		sub    $0x000009,%esi
		cmp    $0x000004,%si
		ja     _02004e_case
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *%cs:_01fd88_switch(,%eax,4)

	_020023_case:
		movb   $0x000009,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020030_case:
		movb   $0x00000a,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02003d_case:
		movb   $0x00000c,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02004a_case:
		movb   $0x00000d,0x00006c(%ecx)

	_02004e_case:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020058_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _020085_jump
		mov    _0cfa14_data,%dh
		test   %dh,%dh
		jne    _020085_jump
		andb   $0x0000f7,0x000081(%eax)
		mov    $0x000001,%ebx
		mov    %dx,_0cf812_data
		mov    %ebx,%edx
		call   _061220_func

	_020085_jump:
		pop    %edx
		pop    %ebx
		nop



_020088_func:
		ret    



_02008c_func:
		movw   $0x000028,_0ce6a6_data
		call   _01fd14_func
		test   %ax,%ax
		je     _0200a5_jump
		mov    $0x000001,%eax
		ret    

	_0200a5_jump:
		mov    $0xffffffff,%eax
		ret    



_0200b0_func:
		push   %ebx
		push   %edx
		mov    _0cfaa4_data,%dx
		cmp    $0x000002,%dx
		jb     _0200de_jump
		jbe    _0200c9_jump
		cmp    $0x000003,%dx
		je     _0200d2_jump
		jmp    _0200de_jump

	_0200c9_jump:
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		jmp    _0200e5_jump

	_0200d2_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		jmp    _0200e5_jump

	_0200de_jump:
		mov    $0x000001,%edx
		xor    %ebx,%ebx

	_0200e5_jump:
		call   _01d818_func
		pop    %edx
		pop    %ebx
		ret    



_0200f0_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _02014d_jump
		cmpw   $0x000000,0x000050(%eax)
		jne    _02014d_jump
		mov    _0ce6dc_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _020123_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		jmp    _020138_jump

	_020123_jump:
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax

	_020138_jump:
		mov    %eax,0x000028(%ebx)
		movw   $0x000000,0x000056(%ebx)
		movw   $0x0000ff,0x000050(%ebx)
		movb   $0x0000ff,0x00006b(%ebx)
		pop    %ebx
		ret    

	_02014d_jump:
		cmp    $0x000001,%dx
		jle    _020172_jump
		mov    _0ce6dc_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _020166_jump
		mov    $0x000007,%edx
		jmp    _02016b_jump

	_020166_jump:
		mov    $0x000006,%edx

	_02016b_jump:
		mov    %ebx,%eax
		call   _01d808_func

	_020172_jump:
		pop    %ebx
		ret    

_020174_switch:
		.long   _020387_case
		.long   _020298_case
		.long   _0202c9_case
		.long   _0202fa_case
		.long   _02032b_case
		.long   _020359_case




_02018c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebp
		mov    0x000050(%eax),%dx
		dec    %edx
		mov    %dx,0x000050(%eax)
		test   %dx,%dx
		jge    _0201ab_jump
		movw   $0x000000,0x000050(%eax)

	_0201ab_jump:
		cmpb   $0x000003,_0cfaa8_data
		jne    _0203d8_jump
		mov    _0ccdf0_data,%esi
		mov    0x000081(%ebp),%al
		movl   $0x000000,0x000024(%ebp)
		and    $0x0000fb,%al
		mov    _0ccdf4_data,%dx
		mov    %al,0x000081(%ebp)
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0205ba_jump

	_0201e5_jump:
		cmpw   $0x0000d3,0x000060(%esi)
		jne    _0203be_jump
		xor    %edi,%edi

	_0201f3_jump:
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		movswl %di,%edx
		mov    %ebp,%eax
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		test   %di,%di
		jne    _020246_jump
		mov    %di,0x000040(%esi)
		mov    %di,0x000042(%esi)
		jmp    _020279_jump

	_020246_jump:
		mov    $0x000004,%eax
		mov    $0x000002,%edx
		call   _06bf60_func
		sub    %ax,%dx
		mov    %dx,0x000040(%esi)
		jne    _020264_jump
		movw   $0x000001,0x000040(%esi)

	_020264_jump:
		mov    $0x000003,%eax
		mov    $0xfffffffc,%edx
		call   _06bf60_func
		sub    %eax,%edx
		mov    %dx,0x000042(%esi)

	_020279_jump:
		movb   $0x000000,0x000071(%esi)
		movb   $0x000005,0x000072(%esi)
		cmp    $0x000005,%di
		ja     _0203a8_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_020174_switch(,%eax,4)

	_020298_case:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x00002b,0x000069(%esi)
		movb   $0x000019,0x000068(%esi)
		mov    0x000081(%esi),%cl
		movb   $0x00001f,0x00006a(%esi)
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%esi)
		jmp    _0203a8_jump

	_0202c9_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000021,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _0203a8_jump

	_0202fa_case:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x000007,0x000069(%esi)
		movb   $0x000007,0x000068(%esi)
		mov    0x000081(%esi),%bl
		movb   $0x000022,0x00006a(%esi)
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%esi)
		jmp    _0203a8_jump

	_02032b_case:
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x00001c,0x000069(%esi)
		movb   $0x000011,0x000068(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000020,0x00006a(%esi)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%esi)
		jmp    _0203a8_jump

	_020359_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000021,0x00006a(%esi)
		or     $0x000008,%dl
		mov    %dl,0x000081(%esi)
		jmp    _0203a8_jump

	_020387_case:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%esi),%ch
		movb   $0x000025,0x00006a(%esi)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%esi)

	_0203a8_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    $0x000006,%di
		jge    _0205ba_jump
		jmp    _0201f3_jump

	_0203be_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _0201e5_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0203d8_jump:
		mov    0x00006c(%ebp),%dl
		cmp    $0x000007,%dl
		je     _0205ba_jump
		cmp    $0x000006,%dl
		je     _0205ba_jump
		cmp    $0x000003,%dl
		je     _0205ba_jump
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %ebp,%eax
		call   _01dbb4_func
		push   $0x000020
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%esi
		mov    0x000010(%esp),%edi
		mov    _0cfaae_data,%eax
		push   $0x000020
		sar    $0x000010,%eax
		add    $0x000005,%ecx
		add    $0x000005,%esi
		sub    $0x00000a,%edi
		push   %eax
		mov    %cx,0x000014(%esp)
		mov    %si,0x00000c(%esp)
		mov    _0cfaac_data,%eax
		mov    %di,0x000018(%esp)
		sar    $0x000010,%eax
		mov    0x000016(%esp),%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		mov    0x00000e(%esp),%edx
		sub    $0x00000a,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000014(%esp)
		sar    $0x000010,%edx
		mov    0x000012(%esp),%ecx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _0204bd_jump
		cmpb   $0x000000,_0cfaa8_data
		jne    _0204bd_jump
		mov    $0x000001,%cl
		mov    _0cfabe_data,%dx
		movw   $0x000004,0x000056(%ebp)
		inc    %edx
		mov    %cl,_0cfaa8_data
		mov    %dx,_0cfabe_data
		cmp    $0x000006,%dx
		jl     _0204b4_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0cfabe_data

	_0204b4_jump:
		xor    %esi,%esi
		mov    %si,_0cfab4_data

	_0204bd_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebp),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebp),%dl
		cmp    %eax,%edx
		jne    _02051c_jump
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		mov    0x00000c(%ebp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _02051c_jump
		mov    $0x000001,%al
		jmp    _02051e_jump

	_02051c_jump:
		xor    %al,%al

	_02051e_jump:
		mov    0x00006c(%ebp),%ah
		cmp    $0x000004,%ah
		jb     _0205ba_jump
		jbe    _02053b_jump
		cmp    $0x000005,%ah
		je     _020570_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02053b_jump:
		test   %al,%al
		je     _0205ba_jump
		mov    0x000056(%ebp),%dx
		inc    %edx
		mov    %dx,0x000056(%ebp)
		cmp    $0x000004,%dx
		jge    _020569_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01d808_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax
		jmp    _0205b7_jump

	_020569_jump:
		mov    $0x000006,%edx
		jmp    _0205aa_jump

	_020570_jump:
		test   %al,%al
		je     _0205ba_jump
		mov    0x000056(%ebp),%di
		inc    %edi
		mov    %di,0x000056(%ebp)
		cmp    $0x000004,%di
		jge    _0205a5_jump
		mov    $0x000004,%edx
		mov    %ebp,%eax
		call   _01d808_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		mov    %eax,0x000028(%ebp)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0205a5_jump:
		mov    $0x000007,%edx

	_0205aa_jump:
		mov    %ebp,%eax
		call   _01d808_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax

	_0205b7_jump:
		mov    %eax,0x000028(%ebp)

	_0205ba_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0205c4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpw   $0x000000,0x000042(%eax)
		jle    _02061b_jump
		xor    %eax,%eax
		mov    0x00002c(%ebx),%edx
		mov    0x000069(%ebx),%al
		add    %edx,%eax
		cmp    $0x000108,%eax
		jle    _02061b_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000042(%ebx)
		test   %ax,%ax
		jne    _020611_jump
		movb   $0x0000ff,0x000072(%ebx)

	_020611_jump:
		mov    $0x000005,%al
		mov    0x000071(%ebx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%ebx)

	_02061b_jump:
		pop    %edx
		pop    %ebx
		ret    



_020620_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000054,%eax
		call   _072960_func
		mov    0x000028(%edx),%ebx
		movw   $0x00ffff,0x000040(%edx)
		add    $0x000014,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%edx)
		call   _07d37c_func
		mov    0x000028(%edx),%ecx
		movw   $0x000001,0x000040(%edx)
		sub    $0x000028,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%edx)
		call   _07d37c_func
		mov    0x000028(%edx),%esi
		add    $0x000014,%esi
		mov    %edx,%eax
		mov    %esi,0x000028(%edx)
		call   _07b29c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020674_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x000050(%ecx),%ax
		cmp    $0x000002,%ax
		jb     _0206a0_jump
		jbe    _0206be_jump
		cmp    $0x000004,%ax
		je     _0206f0_jump
		jmp    _02073a_jump

	_0206a0_jump:
		test   %ax,%ax
		jne    _02073a_jump
		mov    $0x000003,%al
		mov    0x000071(%ecx),%bl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %bl,%al
		mov    %al,0x000071(%ecx)
		jmp    _02073a_jump

	_0206be_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%dl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %dl,%al
		mov    0x000081(%ecx),%dh
		mov    %al,0x000071(%ecx)
		test   $0x000008,%dh
		je     _0206e0_jump
		mov    $0xffffff7e,%eax
		jmp    _0206e5_jump

	_0206e0_jump:
		mov    $0x000019,%eax

	_0206e5_jump:
		add    0x000028(%ecx),%eax
		mov    %ax,_0cfac2_data
		jmp    _02073a_jump

	_0206f0_jump:
		mov    %ecx,%eax
		call   _020620_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0ce69a_data,%dx
		jne    _02073a_jump
		movw   $0x00ffff,_0ce69a_data
		mov    $0x000002,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d818_func

	_02073a_jump:
		mov    %ecx,%eax
		call   _025b30_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020748_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020862_jump

	_020765_jump:
		cmpw   $0x00007a,0x000060(%ecx)
		jne    _020852_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _020852_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    _0cfab4_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		test   $0x000001,%al
		jne    _0207ad_jump
		mov    0x000081(%ecx),%al
		or     $0x000008,%al
		mov    $0xffffffec,%edx
		mov    %al,0x000081(%ecx)
		jmp    _0207c1_jump

	_0207ad_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    $0x000104,%edx
		mov    %ah,0x000081(%ecx)

	_0207c1_jump:
		mov    %ecx,%eax
		call   _05e9bc_func
		movswl %dx,%eax
		movw   $0x00ffff,0x000046(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%ebx),%eax
		sub    $0x000014,%eax
		mov    %eax,0x00002c(%ecx)
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f8e8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000002,0x00006c(%ecx)
		test   $0x000008,%dh
		je     _02082b_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _020834_jump

	_02082b_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_020834_jump:
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		cmpw   $0x000000,_095ec4_data
		jne    _020862_jump
		movb   $0x000001,0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020852_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020765_jump

	_020862_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020868_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020b71_jump

	_02088d_jump:
		cmpw   $0x000061,0x000060(%esi)
		jne    _020b61_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020b61_jump
		cmpw   $0x000004,0x000004(%esp)
		jne    _0208b3_jump
		andb   $0x0000df,0x000081(%esi)
		jmp    _0208ba_jump

	_0208b3_jump:
		orb    $0x000020,0x000081(%esi)

	_0208ba_jump:
		cmpw   $0x000000,0x000004(%esp)
		sete   %al
		lea    0x000010(%esp),%ecx
		xor    %ah,%ah
		mov    0x000081(%esi),%bl
		mov    %eax,%edx
		and    $0x0000f7,%bl
		lea    0x000008(%esp),%eax
		add    $0x000008,%edx
		mov    %bl,0x000081(%esi)
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		movswl %dx,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000004(%esp),%ebx
		cmp    $0x000001,%bx
		jne    _02098c_jump
		mov    -0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%bl
		add    %eax,%edx
		test   $0x000008,%bl
		je     _020930_jump
		mov    $0x000040,%eax
		jmp    _020935_jump

	_020930_jump:
		mov    $0xffffffc0,%eax

	_020935_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020957_jump
		mov    $0x00000c,%eax
		jmp    _02095c_jump

	_020957_jump:
		mov    $0xfffffff4,%eax

	_02095c_jump:
		movw   $0x000000,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020ae0_jump

	_02098c_jump:
		test   %bx,%bx
		jne    _020a1c_jump
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%ch
		add    %eax,%edx
		test   $0x000008,%ch
		je     _0209c0_jump
		mov    $0x000009,%eax
		jmp    _0209c5_jump

	_0209c0_jump:
		mov    $0xfffffff7,%eax

	_0209c5_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0209e7_jump
		mov    $0x000002,%eax
		jmp    _0209ec_jump

	_0209e7_jump:
		mov    $0xfffffffe,%eax

	_0209ec_jump:
		movw   $0x00fffb,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020ae0_jump

	_020a1c_jump:
		cmp    $0x000003,%bx
		jne    _020a52_jump
		testb  $0x000008,0x000081(%edi)
		je     _020a32_jump
		mov    $0x000078,%edx
		jmp    _020a37_jump

	_020a32_jump:
		mov    $0xffffffdc,%edx

	_020a37_jump:
		mov    0x000028(%edi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%edi),%eax
		sub    $0x0000b9,%eax
		movw   $0x000004,0x000042(%esi)
		jmp    _020ad7_jump

	_020a52_jump:
		cmp    $0x00000a,%bx
		jge    _020a7e_jump
		mov    _0ce678_data,%eax
		mov    %eax,0x000028(%esi)
		cmp    $0x000028,%eax
		jge    _020a6c_jump
		movl   $0x000028,0x000028(%esi)

	_020a6c_jump:
		cmpl   $0x0000c8,0x000028(%esi)
		jle    _020ac9_jump
		movl   $0x0000c8,0x000028(%esi)
		jmp    _020ac9_jump

	_020a7e_jump:
		testb  $0x000008,0x000081(%edi)
		je     _020aab_jump
		xor    %edx,%edx
		mov    _0cfab2_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    $0x0000f0,%edx
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		jmp    _020ac9_jump

	_020aab_jump:
		xor    %edx,%edx
		mov    _0cfab2_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		add    %eax,%eax
		sub    $0x000014,%eax
		mov    %eax,0x000028(%esi)

	_020ac9_jump:
		mov    0x00002c(%edi),%eax
		sub    $0x0000c8,%eax
		movw   $0x000000,0x000042(%esi)

	_020ad7_jump:
		mov    %eax,0x00002c(%esi)
		movw   $0x000000,0x000040(%esi)

	_020ae0_jump:
		mov    0x000004(%esp),%ebx
		movw   $0x000026,0x000056(%esi)
		cmp    $0x000003,%bx
		je     _020af6_jump
		movb   $0x00000a,0x000072(%esi)
		jmp    _020afa_jump

	_020af6_jump:
		movb   $0x000007,0x000072(%esi)

	_020afa_jump:
		cmpw   $0x000000,0x000004(%esp)
		jne    _020b06_jump
		movb   $0x000003,0x000072(%esi)

	_020b06_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movb   $0x000002,0x00006d(%esi)
		mov    %ebx,%edx
		movb   $0x000006,0x00006c(%esi)
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%al
		or     $0x000004,%al
		mov    0x000004(%esp),%edi
		mov    %al,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f8e8_func
		movb   $0x000000,0x000071(%esi)
		cmp    $0x00000a,%di
		jge    _020b53_jump
		mov    %di,0x000050(%esi)
		jmp    _020b71_jump

	_020b53_jump:
		movw   $0x000004,0x000050(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_020b61_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02088d_jump

	_020b71_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_020b7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020c46_jump

	_020b97_jump:
		cmpw   $0x000061,0x000060(%ecx)
		jne    _020c36_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _020c36_jump
		movl   $0xffffffd8,0x000028(%ecx)
		movl   $0x0000a0,0x00002c(%ecx)
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		movw   $0x000026,0x000056(%ecx)
		add    $0x000019,%eax
		movb   $0x000003,0x000072(%ecx)
		mov    %ax,_0cfac2_data
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000006,0x00006c(%ecx)
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000024,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f8e8_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x000002,0x000050(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020c36_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020b97_jump

	_020c46_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020c4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01e030_func
		movl   $0x000000,0x000024(%edx)
		mov    $0x00000a,%bl
		movw   $0x000000,0x000050(%edx)
		mov    $0x000001,%cl
		mov    0x000081(%edx),%ah
		movb   $0x00000a,0x000072(%edx)
		xor    %esi,%esi
		or     $0x000004,%ah
		mov    %bl,_0cfa95_data
		mov    %cl,_0cfab2_data
		mov    %si,_0cfab6_data
		mov    %si,_0cf84e_data
		xor    %ebx,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%eax
		mov    %bx,_0cfaba_data
		mov    %bx,_0cfabe_data
		mov    %bx,_0cfab4_data
		mov    %bx,_0cfac0_data
		mov    %bx,_0cfaa4_data
		xor    %dl,%dl
		mov    %bx,_0cfaac_data
		mov    %dl,_0cfa94_data
		mov    %dl,_0cfa90_data
		mov    %ax,_0cfaa6_data
		xor    %bh,%bh
		mov    $0x00270f,%edx
		mov    %bh,_0cfaa8_data
		mov    %dx,_0cfac2_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020cf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0cfaba_data
		je     _020d68_jump
		call   _020620_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%bx
		cmp    _0ce69a_data,%bx
		jne    _020d54_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0ce650_data,%eax
		mov    %si,_0ce69a_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d818_func

	_020d54_jump:
		xor    %edi,%edi
		mov    $0x00270f,%eax
		mov    %di,_0cfaba_data
		mov    %ax,_0cfac2_data

	_020d68_jump:
		cmpw   $0x000003,0x000050(%ecx)
		jne    _020d91_jump
		mov    0x000056(%ecx),%bx
		dec    %bx
		mov    %bx,0x000056(%ecx)
		jne    _020d91_jump
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_020d91_jump:
		mov    0x000040(%ecx),%di
		mov    $0x000014,%eax
		test   %di,%di
		jge    _020da4_jump
		mov    $0xffffffec,%eax

	_020da4_jump:
		xor    %edx,%edx
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		cwtl   
		add    %ebx,%edx
		add    %edx,%eax
		mov    0x00002c(%ecx),%edx
		mov    _0ce636_data,%ebx
		add    $0x000028,%edx
		sar    $0x000010,%ebx
		sar    $0x000004,%edx
		imul   %ebx,%edx
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _020f32_jump
		mov    0x000050(%ecx),%ax
		test   %ax,%ax
		jbe    _020f16_jump
		cmp    $0x000001,%ax
		jne    _020f32_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020e26_jump
		neg    %eax

	_020e26_jump:
		cmp    $0x00000c,%eax
		jne    _020e4d_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020e39_jump
		mov    $0xfffffff3,%eax
		jmp    _020e3e_jump

	_020e39_jump:
		mov    $0x00000d,%eax

	_020e3e_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		jmp    _020f32_jump

	_020e4d_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020e59_jump
		neg    %eax

	_020e59_jump:
		cmp    $0x00000d,%eax
		jne    _020e81_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020e6c_jump
		mov    $0xfffffff2,%eax
		jmp    _020e71_jump

	_020e6c_jump:
		mov    $0x00000e,%eax

	_020e71_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020e81_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020e8d_jump
		neg    %eax

	_020e8d_jump:
		cmp    $0x00000e,%eax
		jne    _020eb5_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020ea0_jump
		mov    $0xfffffff1,%eax
		jmp    _020ea5_jump

	_020ea0_jump:
		mov    $0x00000f,%eax

	_020ea5_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020eb5_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020ec1_jump
		neg    %eax

	_020ec1_jump:
		cmp    $0x00000f,%eax
		jne    _020f32_jump
		mov    %ecx,%eax
		call   _020620_func
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0ce69a_data,%dx
		jne    _020f32_jump
		movw   $0x00ffff,_0ce69a_data
		mov    $0x000002,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020f16_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000050(%ecx)

	_020f32_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020f38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02108f_jump

	_020f5a_jump:
		cmpw   $0x000079,0x000060(%esi)
		jne    _02107f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _02107f_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _020fbb_jump
		cwtl   
		jmp    _020fbe_jump

	_020fbb_jump:
		cwtl   
		neg    %eax

	_020fbe_jump:
		mov    %ax,0x000040(%esi)
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000a,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    0x000081(%edi),%bl
		mov    %eax,%edx
		test   $0x000008,%bl
		je     _02100b_jump
		mov    $0x000010,%eax
		jmp    _021010_jump

	_02100b_jump:
		mov    $0xfffffff0,%eax

	_021010_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f8e8_func
		mov    %esi,%eax
		call   _07b29c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02107f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020f5a_jump

	_02108f_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021098_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0212bb_jump

	_0210ba_jump:
		cmpw   $0x000087,0x000060(%esi)
		jne    _0212ab_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0212ab_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		jne    _02110a_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _021110_jump

	_02110a_jump:
		movw   $0x00fff9,0x000040(%esi)

	_021110_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01dbb4_func
		testb  $0x000008,0x000081(%edi)
		jne    _02113c_jump
		xor    %ecx,%ecx
		mov    %cx,0x000008(%esp)

	_02113c_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f8e8_func
		mov    0x000105(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000105(%esi)
		mov    %cl,%ch
		add    $0x000084,%esi
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%al
		jne    _0211f2_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _0211f8_jump

	_0211f2_jump:
		movw   $0x00fff9,0x000040(%esi)

	_0211f8_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01dbb4_func
		testb  $0x000008,0x000081(%edi)
		jne    _021224_jump
		xor    %edi,%edi
		mov    %di,0x000008(%esp)

	_021224_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f8e8_func
		mov    %esi,%eax
		call   _07b29c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0212ab_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _0210ba_jump

	_0212bb_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0212e0_switch:
		.long   _021322_case
		.long   _02133b_case
		.long   _021354_case
		.long   _02136e_case
		.long   _021388_case
		.long   _0213a1_case
		.long   _0213ba_case
		.long   _0213e4_case




_021300_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cfabc_data,%ax
		cmp    $0x000007,%ax
		ja     _0213f9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0212e0_switch(,%eax,4)

	_021322_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000001,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02133b_case:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000002,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021354_case:
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000003,%ch
		call   _01d818_func
		mov    %ch,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02136e_case:
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000004,%cl
		call   _01d818_func
		mov    %cl,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021388_case:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000005,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213a1_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x00000c,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213ba_case:
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		movb   $0x00000b,_0cfa94_data
		mov    $0x000001,%dh
		movw   $0x000023,0x000056(%ecx)
		mov    %dh,_0cfab2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213e4_case:
		mov    $0x000016,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x00000d,_0cfa94_data

	_0213f9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021400_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfab4_data,%cx
		mov    %eax,%edx
		inc    %ecx
		cmp    $0x000007,%cx
		jge    _02143f_jump
		mov    _0cfabc_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095ec6_data(%ebx,%eax,4),%ax
		mov    %ax,_0cfabc_data
		jmp    _021448_jump

	_02143f_jump:
		movw   $0x0000ff,_0cfabc_data

	_021448_jump:
		cmpw   $0x0000ff,_0cfabc_data
		jne    _021475_jump
		mov    _0cfabc_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _095ec6_data(,%eax,4),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cfabc_data

	_021475_jump:
		mov    _0cfabc_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095ec8_data(%ebx,%eax,4),%al
		mov    %al,_0cfa95_data
		mov    %edx,%eax
		mov    %cx,_0cfab4_data
		call   _021300_func
		mov    _0cfab4_data,%cx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0214b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0cfa95_data
		je     _0214ea_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _061220_func
		movb   $0x000006,_0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0214ea_jump:
		mov    %ecx,%eax
		call   _021400_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0214f8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movw   $0x000000,0x000042(%eax)
		mov    $0x000006,%edx
		movw   $0x000000,0x000040(%eax)
		call   _025b30_func
		mov    %ebx,%eax
		call   _01d808_func
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _055d78_func
		mov    %dx,_0cf84c_data
		pop    %edx
		pop    %ebx
		ret    

_021530_switch:
		.long   _0218a5_case
		.long   _021913_case
		.long   _021983_case
		.long   _021aa0_case
		.long   _021b10_case
		.long   _021b78_case
		.long   _021bed_case
		.long   _021c1a_case
		.long   _021cd0_case
		.long   _021d48_case
		.long   _021de9_case
		.long   _021e2b_case
		.long   _021eea_case
		.long   _021f7b_case




_021568_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cfab6_data,%dx
		mov    %ah,_0cfa68_data
		test   %dx,%dx
		je     _0215b4_jump
		mov    _0cfab8_data,%bx
		dec    %ebx
		mov    %bx,_0cfab8_data
		test   %bx,%bx
		jge    _0215b4_jump
		mov    $0x000032,%edi
		mov    %esi,%eax
		mov    %di,_0cfab8_data
		call   _020748_func
		decw   _0cfab6_data

	_0215b4_jump:
		mov    %esp,%eax
		mov    $_0cfab0_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0cfaae_data,%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000028(%esi),%ax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _021637_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021637_jump
		movb   $0x000001,_0cfa93_data
		jmp    _02163f_jump

	_021637_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa93_data

	_02163f_jump:
		cmpb   $0x000002,_0cfaa8_data
		jne    _02169f_jump
		cmpb   $0x000000,_0cfa93_data
		je     _02169f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _021679_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    $0x000007,%ch
		call   _061220_func
		mov    %ch,_0cfa94_data

	_021679_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cfaaa_data,%bl
		mov    _0cfaa9_data,%dl
		call   _01d818_func
		movb   $0x000001,_0cfa95_data
		mov    _0cfaac_data,%al
		mov    %al,0x000070(%esi)

	_02169f_jump:
		cmpb   $0x000001,_0cfaa8_data
		jne    _021728_jump
		mov    0x00006d(%esi),%al
		mov    $0x000009,%ebx
		mov    %al,_0cfaa9_data
		mov    0x00006c(%esi),%al
		xor    %edx,%edx
		mov    %al,_0cfaaa_data
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000002,%dl
		mov    0x000076(%esi),%bl
		xor    %eax,%eax
		mov    %dl,_0cfaa8_data
		dec    %bl
		mov    0x000070(%esi),%al
		movw   $0x000000,0x000040(%esi)
		xor    %dh,%dh
		mov    %bl,0x000076(%esi)
		mov    %dh,_0cfa93_data
		mov    %ax,_0cfaac_data
		cmp    $0x000001,%bl
		jae    _021728_jump
		mov    $0x000003,%cl
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %cl,_0cfaa8_data
		call   _01d818_func
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%ch
		mov    %dx,_0cfaac_data
		mov    %ch,_0cfa78_data

	_021728_jump:
		cmpb   $0x000003,_0cfaa8_data
		jne    _02176f_jump
		mov    _0cfaac_data,%ax
		dec    %eax
		mov    %ax,_0cfaac_data
		cmp    $0x000001,%ax
		jge    _022047_jump
		movb   $0x000001,_0cfa76_data
		mov    _0cf81e_data,%ch
		mov    $0x0003e7,%ebx
		or     $0x000008,%ch
		mov    %bx,_0cfaac_data
		mov    %ch,_0cf81e_data
		jmp    _022047_jump

	_02176f_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000001,%al
		jb     _021785_jump
		jbe    _021794_jump
		cmp    $0x000002,%al
		je     _02188b_jump
		jmp    _02202d_jump

	_021785_jump:
		test   %al,%al
		jne    _02202d_jump
		andb   $0x0000f7,0x000081(%esi)

	_021794_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _0217a1_jump
		orb    $0x000008,0x000081(%esi)

	_0217a1_jump:
		mov    %esi,%eax
		call   _055ee4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _0217fd_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    $0x000006,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000008,%cl
		call   _061220_func
		mov    %cl,_0cfa94_data

	_0217fd_jump:
		cmpb   $0x000007,_0cfa94_data
		jne    _02187f_jump
		testb  $0x000008,0x000081(%esi)
		je     _02181a_jump
		mov    $0x00000a,%eax
		jmp    _02181f_jump

	_02181a_jump:
		mov    $0xfffffff6,%eax

	_02181f_jump:
		mov    _0cfac0_data,%edx
		sar    $0x000010,%edx
		add    $0x000004,%edx
		add    %edx,%eax
		cmp    0x000028(%esi),%eax
		jle    _02187f_jump
		testb  $0x000008,0x000081(%esi)
		je     _021842_jump
		mov    $0x00000a,%eax
		jmp    _021847_jump

	_021842_jump:
		mov    $0xfffffff6,%eax

	_021847_jump:
		mov    _0cfac0_data,%edx
		sar    $0x000010,%edx
		sub    $0x000004,%edx
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _02187f_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		movb   $0x000009,_0cfa94_data

	_02187f_jump:
		mov    %esi,%eax
		call   _025820_func
		jmp    _02202d_jump

	_02188b_jump:
		mov    _0cfa94_data,%al
		cmp    $0x00000d,%al
		ja     _02202d_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_021530_switch(,%eax,4)

	_0218a5_case:
		cmpb   $0x000000,_0cfab2_data
		je     _0218c3_jump
		mov    $0x000001,%dl
		call   _020b7c_func
		mov    %dl,_0cfa90_data
		xor    %dh,%dh
		mov    %dh,_0cfab2_data

	_0218c3_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		cmpb   $0x000000,_0cfa90_data
		je     _02202d_jump
		movb   $0x000000,0x00006b(%esi)
		mov    _095ec8_data,%al
		xor    %ecx,%ecx
		mov    %al,_0cfa95_data
		mov    _095ec6_data,%ax
		mov    %cx,_0cfabe_data
		mov    %ax,_0cfabc_data
		mov    %esi,%eax
		mov    %cx,_0cfab4_data
		call   _021300_func
		jmp    _02202d_jump

	_021913_case:
		mov    0x00006c(%esi),%bh
		cmp    $0x000004,%bh
		jne    _02196a_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _02196a_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _02196a_jump
		cmpw   $0x000000,_0cf84e_data
		jne    _02196a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    %bx,_0cf84e_data
		call   _020868_func

	_02196a_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    %esi,%eax
		call   _0214b8_func
		jmp    _02202d_jump

	_021983_case:
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _0219c3_jump
		cmpb   $0x000017,0x00006b(%esi)
		jne    _0219c3_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _0219c3_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020868_func

	_0219c3_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _021a49_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021a49_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021a49_jump
		cmpw   $0x000000,_0cf84e_data
		jne    _021a49_jump
		mov    $0x000001,%edi
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %di,_0cf84e_data
		call   _020868_func
		cmpw   $0x000000,_095ec4_data
		jne    _021a36_jump
		mov    $0x000003,%edx
		jmp    _021a3b_jump

	_021a36_jump:
		mov    $0x000001,%edx

	_021a3b_jump:
		xor    %eax,%eax
		mov    _0cfa95_data,%al
		add    %edx,%eax
		mov    %al,_0cfa95_data

	_021a49_jump:
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _021a76_jump
		cmpb   $0x000000,_0cfa93_data
		je     _021a76_jump
		mov    _0cfa95_data,%al
		dec    %al
		mov    %al,_0cfa95_data
		je     _021a76_jump
		mov    $0x00000a,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d808_func

	_021a76_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000b,%dl
		jne    _02202d_jump
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    %dl,_0cfa94_data
		movw   $0x000023,0x000056(%esi)
		jmp    _02202d_jump

	_021aa0_case:
		mov    0x00006c(%esi),%bl
		cmp    $0x000006,%bl
		jne    _021af7_jump
		cmpb   $0x000040,0x00006b(%esi)
		jne    _021af7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bl,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021af7_jump
		cmpw   $0x000000,_095ec4_data
		setne  %al
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		add    $0x000003,%eax
		mov    %bx,_0cfab8_data
		mov    %ax,_0cfab6_data

	_021af7_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    %esi,%eax
		call   _0214b8_func
		jmp    _02202d_jump

	_021b10_case:
		cmpb   $0x000007,0x00006c(%esi)
		jne    _021b5f_jump
		cmpb   $0x00002c,0x00006b(%esi)
		jne    _021b5f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021b5f_jump
		mov    %esi,%eax
		call   _021098_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_021b5f_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    %esi,%eax
		call   _0214b8_func
		jmp    _02202d_jump

	_021b78_case:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _021bc3_jump
		cmpb   $0x000015,0x00006b(%esi)
		jne    _021bc3_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021bc3_jump
		mov    %esi,%eax
		call   _020f38_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_021bc3_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    $0x000001,%edx
		mov    $0x00000a,%ch
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d808_func
		mov    %ch,_0cfa94_data
		jmp    _02202d_jump

	_021bed_case:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    _0cfa95_data,%ah
		dec    %ah
		mov    %ah,_0cfa95_data
		jne    _02202d_jump
		mov    %esi,%eax
		call   _021400_func
		jmp    _02202d_jump

	_021c1a_case:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _021c5c_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021c5c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021c5c_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _020868_func
		jmp    _02202d_jump

	_021c5c_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    _0cfa95_data,%bh
		dec    %bh
		mov    %bh,_0cfa95_data
		jne    _021cbf_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _021ca9_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _061220_func
		jmp    _02202d_jump

	_021ca9_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _061220_func
		jmp    _02202d_jump

	_021cbf_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _02202d_jump

	_021cd0_case:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _02202d_jump
		cmpb   $0x000000,_0cfab2_data
		jne    _021d3a_jump
		mov    _0cfabc_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		xor    %edi,%edi
		mov    _095ec8_data(,%eax,4),%dl
		mov    _095ec6_data(,%eax,4),%ax
		mov    %di,_0cfab4_data
		mov    %ax,_0cfabc_data
		mov    %esi,%eax
		mov    %dl,_0cfa95_data
		call   _021300_func
		jmp    _02202d_jump

	_021d3a_jump:
		mov    %esi,%eax
		call   _021400_func
		xor    %al,%al
		jmp    _022028_jump

	_021d48_case:
		cmpb   $0x000014,0x00006b(%esi)
		jne    _021d8d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021d8d_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021d8d_jump
		movw   $0x000001,_0cfaba_data

	_021d8d_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		cmpb   $0x000002,_0cfaa8_data
		je     _02202d_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _021dca_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		jmp    _021dd4_jump

	_021dca_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx

	_021dd4_jump:
		mov    %esi,%eax
		call   _061220_func
		xor    %esi,%esi
		mov    %si,_0cfaba_data
		jmp    _02202d_jump

	_021de9_case:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		movb   $0x000000,0x00006b(%esi)
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _021ca9_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _061220_func
		jmp    _02202d_jump

	_021e2b_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		jb     _021e41_jump
		jbe    _021e49_jump
		cmp    $0x000006,%al
		je     _021eac_jump
		jmp    _02202d_jump

	_021e41_jump:
		test   %al,%al
		jne    _02202d_jump

	_021e49_jump:
		mov    0x000056(%esi),%dx
		dec    %edx
		mov    %dx,0x000056(%esi)
		cmp    $0x000001,%dx
		jle    _021e82_jump
		movw   $0x00fff8,0x000042(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000000,0x000071(%esi)
		test   $0x000008,%dh
		je     _021e74_jump
		mov    $0x000004,%eax
		jmp    _021e79_jump

	_021e74_jump:
		mov    $0xfffffffc,%eax

	_021e79_jump:
		mov    %ax,0x000040(%esi)
		jmp    _02202d_jump

	_021e82_jump:
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _01d808_func
		testb  $0x000008,0x000081(%esi)
		je     _021e9e_jump
		mov    $0x000002,%eax
		jmp    _021ea3_jump

	_021e9e_jump:
		mov    $0xfffffffe,%eax

	_021ea3_jump:
		mov    %ax,0x000040(%esi)
		jmp    _02202d_jump

	_021eac_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _021ca9_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _061220_func
		jmp    _02202d_jump

	_021eea_case:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _021f4d_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021f4d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021f4d_jump
		cmpw   $0x000000,_0cf84e_data
		jne    _021f4d_jump
		movw   $0x000001,_0cf84e_data
		xor    %eax,%eax
		mov    _0cfab2_data,%al
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _020868_func
		incb   _0cfab2_data

	_021f4d_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		cmpb   $0x000003,_0cfab2_data
		jne    _02202d_jump
		xor    %ch,%ch
		mov    %esi,%eax
		mov    %ch,_0cfab2_data
		call   _0214b8_func
		jmp    _02202d_jump

	_021f7b_case:
		cmpb   $0x000016,0x00006c(%esi)
		jne    _02202d_jump
		cmpb   $0x00003f,0x00006b(%esi)
		jne    _021fbf_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _021fbf_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020868_func

	_021fbf_jump:
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _02200f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _02200f_jump
		cmpw   $0x000000,_0cf84e_data
		jne    _02200f_jump
		mov    $0x000001,%ecx
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %cx,_0cf84e_data
		call   _020868_func

	_02200f_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02202d_jump
		mov    $0x00000b,%ch
		mov    $0x000001,%al
		movw   $0x000023,0x000056(%esi)
		mov    %ch,_0cfa94_data

	_022028_jump:
		mov    %al,_0cfab2_data

	_02202d_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _022047_jump
		cmpb   $0x000002,_0cfaa8_data
		jne    _022047_jump
		xor    %bh,%bh
		mov    %bh,_0cfaa8_data

	_022047_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022050_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000009,%dx
		jne    _022077_jump
		mov    $0x000008,%edx
		call   _01d808_func
		mov    $0x000007,%ah
		mov    $0x000002,%dl
		movb   $0x000000,0x00006b(%ebx)
		mov    %ah,_0cfa94_data
		mov    %dl,_0cfa95_data

	_022077_jump:
		pop    %ebx
		ret    

_02207c_switch:
		.long   _0222a3_case
		.long   _022369_case
		.long   _0223f6_case
		.long   _022493_case
		.long   _0226ad_case
		.long   _02283f_case




_022094_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%dx
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000074(%esi),%al
		add    %edx,%edi
		add    %ebx,%eax
		xor    %edx,%edx
		add    $0x000040,%eax
		mov    0x00006a(%esi),%dl
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _022114_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _022114_jump
		movb   $0x000001,_0cfa93_data
		jmp    _02211c_jump

	_022114_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa93_data

	_02211c_jump:
		cmpb   $0x000002,_0cfa94_data
		jae    _022193_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _022193_jump
		mov    _0cf85e_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02215c_jump
		cmp    %ecx,%eax
		jg     _02215c_jump
		mov    $0x000001,%eax
		jmp    _02215e_jump

	_02215c_jump:
		xor    %eax,%eax

	_02215e_jump:
		test   %eax,%eax
		je     _022193_jump
		mov    -0x000002(%esp),%eax
		mov    _0cf860_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _022193_jump
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_022193_jump:
		mov    0x00006d(%esi),%ch
		cmp    $0x000001,%ch
		jne    _0221e4_jump
		cmpb   $0x000000,_0cfa94_data
		jne    _0221aa_jump
		mov    %ch,_0cfa94_data

	_0221aa_jump:
		mov    %esi,%eax
		call   _055ee4_func
		cmpb   $0x000004,_0cfa94_data
		jae    _0221c1_jump
		mov    %esi,%eax
		call   _025820_func

	_0221c1_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _0221e4_jump
		xor    %eax,%eax
		mov    _0cfaa2_data,%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _0221e4_jump
		mov    %esi,%eax
		call   _0200b0_func

	_0221e4_jump:
		cmpw   $0x000008,_0cfaa6_data
		jge    _02227d_jump
		mov    _0cfa94_data,%bl
		test   %bl,%bl
		je     _02227d_jump
		cmp    $0x000005,%bl
		je     _02227d_jump
		mov    _0cf872_data,%ax
		cmp    _0cf890_data,%ax
		jne    _022231_jump
		mov    _0cf89c_data,%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _022229_jump
		mov    %ebx,%eax

	_022229_jump:
		mov    %ax,_0cf872_data
		jmp    _02223f_jump

	_022231_jump:
		cmp    %ax,%di
		jle    _02223f_jump
		movw   $0x000001,_0cfaac_data

	_02223f_jump:
		cmpw   $0x000000,_0cfaac_data
		je     _022289_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022267_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0cf872_data,%bx
		inc    %eax
		add    %eax,%ebx
		mov    %bx,_0cf872_data
		jmp    _022289_jump

	_022267_jump:
		mov    _0cf872_data,%dx
		mov    0x000040(%esi),%ax
		add    %eax,%edx
		mov    %dx,_0cf872_data
		jmp    _022289_jump

	_02227d_jump:
		mov    _0cf890_data,%ax
		mov    %ax,_0cf872_data

	_022289_jump:
		mov    _0cfa94_data,%al
		cmp    $0x000005,%al
		ja     _022a70_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_02207c_switch(,%eax,4)

	_0222a3_case:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _0222b5_jump
		mov    $0x00003c,%al
		jmp    _0222b7_jump

	_0222b5_jump:
		mov    $0x000028,%al

	_0222b7_jump:
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		testb  $0x000002,_09253c_data(%edx)
		jne    _022321_jump
		xor    %edx,%edx
		movswl %di,%ebx
		mov    %al,%dl
		mov    _0cf85e_data,%eax
		add    %ebx,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _022a70_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022a70_jump
		cmpw   $0x000000,_0cfaa4_data
		je     _022a70_jump
		mov    0x000081(%esi),%bh
		mov    $0x000002,%edx
		or     $0x000008,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		mov    $0x000001,%ebx
		call   _01d818_func
		movw   $0x000002,0x000042(%esi)
		jmp    _022a70_jump

	_022321_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022a70_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _022a70_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    _0cf85e_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _022a70_jump
		mov    $0x000001,%dh
		mov    %esi,%eax
		mov    %dh,_0cfa94_data
		call   _0200b0_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022369_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022a70_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		lea    0x000008(%eax),%edx
		mov    _0ce636_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _022a70_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff8,0x000042(%esi)
		movw   $0x000003,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0223f6_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022a70_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0ce636_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _022a70_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    $0xffffffff,%ecx
		movw   $0x000000,0x000042(%esi)
		mov    %cx,_0cfaa6_data
		movw   $0x000000,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022493_case:
		mov    _0cf870_data,%eax
		mov    $0x0015cc,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _0224a6_jump
		mov    %ebx,%eax

	_0224a6_jump:
		mov    _0cf85e_data,%edx
		mov    %ax,_0cf872_data
		movswl %di,%eax
		sar    $0x000010,%edx
		add    $0x000020,%eax
		cmp    %eax,%edx
		jle    _02256a_jump
		mov    _0cfaa4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02256a_jump
		mov    (%esp),%edx
		cmp    _0cf862_data,%dx
		jge    _02256a_jump
		mov    _0cfaa2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _022503_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _0200b0_func
		mov    %bx,_0cfaa6_data
		jmp    _02256a_jump

	_022503_jump:
		mov    0x000050(%esi),%bx
		cmp    $0x0000c8,%bx
		jge    _02253e_jump
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,0x000050(%esi)
		cmp    $0x0000c8,%cx
		jne    _02253e_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0cfaa4_data
		call   _0200b0_func
		mov    %bx,_0cfaa6_data
		movw   $0x0000ff,0x000050(%esi)

	_02253e_jump:
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		cmp    %ax,%di
		jle    _02256a_jump
		mov    _0ce68e_data,%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _022563_jump
		mov    %ebx,%eax

	_022563_jump:
		add    %ax,_0cf872_data

	_02256a_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _022586_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022586_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _022586_jump
		mov    %esi,%eax
		call   _0200b0_func

	_022586_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _0225a2_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0225a2_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _0225a2_jump
		mov    %esi,%eax
		call   _0200b0_func

	_0225a2_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022a70_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		mov    _0ce636_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _022625_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movw   $0x00fffa,0x000042(%esi)
		mov    %esi,%eax
		movw   $0x000003,0x000040(%esi)
		call   _01d818_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)

	_022625_jump:
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _022a70_jump
		mov    _0cf85e_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _022660_jump
		cmp    %ecx,%eax
		jg     _022660_jump
		mov    $0x000001,%eax
		jmp    _022662_jump

	_022660_jump:
		xor    %eax,%eax

	_022662_jump:
		test   %eax,%eax
		je     _022a70_jump
		mov    -0x000002(%esp),%edx
		mov    _0cf860_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000020,%edx
		cmp    %edx,%eax
		jge    _022687_jump
		mov    $0x000010,%ebx
		jmp    _02268c_jump

	_022687_jump:
		mov    $0x000001,%ebx

	_02268c_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0226ad_case:
		mov    _0cf85e_data,%ax
		cmp    _0cfab0_data,%ax
		jle    _0226c6_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cf85e_data

	_0226c6_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02274b_jump
		mov    0x00006d(%esi),%ah
		cmp    $0x000002,%ah
		jne    _0226f5_jump
		cmp    0x00006c(%esi),%ah
		jne    _0226f5_jump
		mov    $0x000001,%ecx
		mov    %esi,%eax
		mov    %cx,_0cfaa4_data
		call   _0200b0_func
		jmp    _02274b_jump

	_0226f5_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02274b_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _02274b_jump
		mov    _0cfaae_data,%ax
		inc    %eax
		mov    %ax,_0cfaae_data
		cmp    $0x000003,%ax
		jge    _022729_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %bx,_0cfaa4_data
		call   _0200b0_func
		jmp    _02274b_jump

	_022729_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000005,%bh
		mov    _0cf8a6_data,%ax
		mov    %bh,_0cfa94_data
		mov    %ax,_0cfab0_data

	_02274b_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02280d_jump
		testb  $0x000008,0x000081(%esi)
		je     _022765_jump
		mov    $0x000010,%eax
		jmp    _02276a_jump

	_022765_jump:
		mov    $0xfffffff0,%eax

	_02276a_jump:
		mov    0x000028(%esi),%ebx
		mov    0x00002c(%esi),%ecx
		xor    %edx,%edx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%ebx
		add    %ecx,%eax
		mov    _0ce636_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _02280d_jump
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d818_func

	_02280d_jump:
		mov    _0cf862_data,%eax
		mov    _0cf85e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _02282f_jump
		neg    %eax

	_02282f_jump:
		cmp    $0x0000fa,%eax
		jle    _022a70_jump
		jmp    _022a34_jump

	_02283f_case:
		mov    _0cfaa6_data,%cx
		test   %cx,%cx
		jge    _022875_jump
		mov    %ecx,%eax
		inc    %ax
		mov    %ax,_0cfaa6_data
		jne    _02285f_jump
		mov    _0cf884_data,%ax
		jmp    _02286f_jump

	_02285f_jump:
		xor    %edx,%edx
		mov    _0cfab0_data,%ax
		mov    _0cf9fa_data,%dl
		sub    %edx,%eax

	_02286f_jump:
		mov    %ax,_0cf85e_data

	_022875_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _02289d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02289d_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _02289d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		mov    %bx,_0cfaa4_data
		call   _0200b0_func

	_02289d_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _0228fb_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _0228fb_jump
		cmpb   $0x000000,_0cfa93_data
		je     _0228c5_jump
		movw   $0x000002,_0cfaa4_data
		mov    %esi,%eax
		call   _0200b0_func
		jmp    _0228fb_jump

	_0228c5_jump:
		cmpb   $0x000015,0x00006b(%esi)
		jne    _0228fb_jump
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _0228fb_jump
		movw   $0x00ffe2,_0cfaa6_data

	_0228fb_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022a0b_jump
		testb  $0x000008,0x000081(%esi)
		je     _022915_jump
		mov    $0x000010,%eax
		jmp    _02291a_jump

	_022915_jump:
		mov    $0xfffffff0,%eax

	_02291a_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0ce636_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _022a0b_jump
		cmpw   $0x000003,_0cfaa4_data
		jne    _0229b9_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movw   $0x00fffe,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		mov    _0cf884_data,%ax
		movb   $0x0000ff,0x000072(%esi)
		mov    %ax,_0cf85e_data
		mov    _0cf890_data,%ax
		movb   $0x000000,0x000071(%esi)
		mov    %ax,_0cf872_data
		jmp    _022a0b_jump

	_0229b9_jump:
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d818_func

	_022a0b_jump:
		mov    _0cf862_data,%eax
		mov    _0cf85e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _022a2d_jump
		neg    %eax

	_022a2d_jump:
		cmp    $0x000190,%eax
		jle    _022a70_jump

	_022a34_jump:
		mov    _0cf884_data,%ax
		mov    0x000081(%esi),%cl
		xor    %bh,%bh
		movl   $0x000000,0x000024(%esi)
		mov    %bh,_0cfa8e_data
		and    $0x0000fb,%cl
		mov    %bh,_0cfa94_data
		mov    %ax,_0cf85e_data
		mov    _0cf890_data,%ax
		mov    %cl,0x000081(%esi)
		mov    %ax,_0cf872_data

	_022a70_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022a7c_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0cfaa4_data
		ret    

_022a88_switch:
		.long   _022ad5_case
		.long   _022ae7_case
		.long   _022b06_case
		.long   _022b3b_case




_022a98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022ba5_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _025b30_func
		mov    _0cfa94_data,%al
		cmp    $0x000003,%al
		ja     _022ba5_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_022a88_switch(,%eax,4)

	_022ad5_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022ae7_case:
		mov    %ebx,%eax
		mov    $0x000002,%dh
		call   _0200b0_func
		mov    _0cfaa4_data,%ax
		mov    %dh,_0cfa94_data
		mov    %ax,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022b06_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    $0x000003,%dl
		mov    $0xffffffff,%ecx
		mov    %dl,_0cfa94_data
		mov    0x000028(%ebx),%edx
		movw   $0x000000,0x000050(%ebx)
		sub    $0x000020,%edx
		mov    %cx,_0cfaa4_data
		mov    %edx,0x000028(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022b3b_case:
		mov    $0x000002,%edx
		mov    $0x0002b3,%esi
		movb   $0x000005,0x000072(%ebx)
		mov    _0cfaa6_data,%cx
		movb   $0x000000,0x000071(%ebx)
		mov    %ebx,%eax
		movw   $0x000002,0x000040(%ebx)
		inc    %ecx
		xor    %edi,%edi
		mov    %cx,_0cfaa6_data
		call   _01d808_func
		mov    _0cf8a6_data,%ax
		mov    %si,_0cfab0_data
		mov    %di,_0cfaae_data
		movw   $0x000000,0x000040(%ebx)
		mov    %ax,_0cf85e_data
		cmp    %si,%ax
		jge    _022b97_jump
		mov    %si,_0cf85e_data

	_022b97_jump:
		mov    $0x000004,%ah
		movw   $0x000000,0x000042(%ebx)
		mov    %ah,_0cfa94_data

	_022ba5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022bac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _022c08_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _022c08_jump
		movb   $0x000001,_0cfa93_data
		jmp    _022c10_jump

	_022c08_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa93_data

	_022c10_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _022c47_jump
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func
		cmpb   $0x000000,_0cfa93_data
		je     _022c47_jump
		xor    %eax,%eax
		mov    _0cfaa2_data,%edx
		mov    0x00006c(%ecx),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _022c47_jump
		mov    %ecx,%eax
		call   _0200b0_func

	_022c47_jump:
		mov    _0cfa94_data,%al
		test   %al,%al
		jbe    _022c5d_jump
		cmp    $0x000001,%al
		je     _022d1f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022c5d_jump:
		andb   $0x0000f7,0x000081(%ecx)
		cmpb   $0x000002,0x00006d(%ecx)
		je     _022c71_jump
		mov    %ecx,%eax
		call   _025820_func

	_022c71_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _022c93_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _022c93_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %dx,_0cfaa4_data
		call   _0200b0_func

	_022c93_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _022d94_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%esi
		mov    0x000069(%ecx),%al
		add    %esi,%eax
		mov    _0ce636_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x000028(%ecx),%ebx
		xor    %edx,%edx
		sub    $0x000008,%ebx
		mov    0x000068(%ecx),%dl
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _022d94_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022d1f_jump:
		cmp    0x00006d(%ecx),%al
		jne    _022d94_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		add    $0x000008,%edx
		mov    _0ce636_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _022d94_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000002,%dh
		movw   $0x000000,0x000040(%ecx)
		mov    %dh,_0cfa94_data

	_022d94_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022d9c_func:
		push   %edx
		mov    %eax,%edx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022dce_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _025820_func
		mov    _0cfa94_data,%al
		test   %al,%al
		jne    _022dce_jump
		mov    %edx,%eax
		call   _0200b0_func
		movb   $0x000001,_0cfa94_data

	_022dce_jump:
		pop    %edx
		ret    



_022dd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000081(%eax),%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    0x00006a(%ebx),%dl
		mov    %ah,0x000081(%ebx)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _022e41_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%edx),%eax
		mov    0x000005(%ecx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _022e41_jump
		movb   $0x000001,_0cfa93_data
		jmp    _022e49_jump

	_022e41_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa93_data

	_022e49_jump:
		mov    0x00006d(%ebx),%ch
		test   %ch,%ch
		jne    _022ea5_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _022e8a_jump
		cmpb   $0x00002c,0x00006b(%ebx)
		jne    _022e8a_jump
		xor    %eax,%eax
		mov    %ch,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _022e8a_jump
		mov    %ebx,%eax
		call   _021098_func

	_022e8a_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _022ea5_jump
		cmpb   $0x000000,0x00006c(%ebx)
		jne    _022ea5_jump
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _01d808_func

	_022ea5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022eac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _022ec0_jump
		cmp    $0x000001,%al
		je     _022ec7_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022ec0_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_022ec7_jump:
		cmpb   $0x000001,0x000070(%ecx)
		jne    _022ed4_jump
		orb    $0x000008,0x000081(%ecx)

	_022ed4_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		mov    _0ce636_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce640_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000002(%eax,%edx,2),%al
		and    $0x0000ff,%eax
		testb  $0x000020,_09253c_data(%eax)
		je     _023005_jump
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _022fef_jump

	_022f45_jump:
		cmpw   $0x000073,0x000060(%edx)
		jne    _022fdf_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _022fdf_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		sub    $0x000020,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		sub    $0x000030,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _01e030_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		movw   $0x0000ff,0x000056(%edx)
		movw   $0x00001e,0x000050(%edx)
		movw   $0x00001e,0x000052(%edx)
		movb   $0x000000,0x00006d(%edx)
		movb   $0x000004,0x00006c(%edx)
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		jmp    _022fef_jump

	_022fdf_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _022f45_jump

	_022fef_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_023005_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02300c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _02302a_jump
		jbe    _023024_jump
		cmp    $0x000003,%dl
		jne    _02302a_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_023024_jump:
		movw   $0x000000,0x000042(%eax)

	_02302a_jump:
		pop    %edx
		ret    



_023030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0ccde8_data,%ecx
		movswl (%ecx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		mov    _0ccdec_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _023116_jump
		mov    _0ccdec_data,%si

	_02306a_jump:
		cmpw   $0x000082,0x000060(%ecx)
		jne    _0230ea_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0230ea_jump
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x00006e(%ecx),%bl
		mov    0x00006f(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01d818_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    %ecx,%eax
		call   _01dfb8_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f8e8_func
		andb   $0x0000bf,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0230ea_jump:
		inc    %eax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%edx
		mov    _0ccde8_data,%ecx
		movswl (%ecx,%edx,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _02306a_jump

	_023116_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02311c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x00007d(%eax)
		je     _02319f_jump
		mov    %ecx,%eax
		call   _01d824_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _01d954_func
		movswl %si,%esi
		movswl %ax,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _023174_jump
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _023174_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _061220_func

	_023174_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    0x000040(%ecx),%dx
		mov    %ax,0x000042(%ecx)
		test   %dx,%dx
		jle    _023196_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _02319f_jump

	_023196_jump:
		jge    _02319f_jump
		andb   $0x0000f7,0x000081(%ecx)

	_02319f_jump:
		testb  $0x000008,0x00007d(%ecx)
		je     _0231b5_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_0231b5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0231bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0000ff,%dl
		mov    0x000070(%eax),%dh
		test   %dh,%dh
		jne    _0231db_jump
		mov    0x000081(%eax),%cl
		or     $0x000008,%cl
		mov    $0x000003,%dl
		mov    %cl,0x000081(%eax)
		jmp    _0231f1_jump

	_0231db_jump:
		cmp    $0x000001,%dh
		jne    _0231f1_jump
		mov    0x000081(%eax),%bh
		and    $0x0000f7,%bh
		mov    $0x000002,%dl
		mov    %bh,0x000081(%eax)

	_0231f1_jump:
		cmp    $0x0000ff,%dl
		je     _023206_jump
		mov    $0x000001,%ebx
		and    $0x0000ff,%edx
		call   _061220_func

	_023206_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02320c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02322f_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _02322f_jump
		mov    %esi,%eax
		call   _055ee4_func
		negw   0x000040(%esi)
		jmp    _02334a_jump

	_02322f_jump:
		cmpb   $0x000000,0x000070(%esi)
		jne    _02323e_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _023245_jump

	_02323e_jump:
		orb    $0x000008,0x000081(%esi)

	_023245_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023292_jump
		mov    %esi,%eax
		call   _055ee4_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _0251f8_func
		mov    %al,%cl
		testb  $0x000001,_09253c_data(%ecx)
		je     _02328b_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _02327a_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _023284_jump

	_02327a_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_023284_jump:
		mov    %esi,%eax
		call   _061220_func

	_02328b_jump:
		mov    %esi,%eax
		call   _025820_func

	_023292_jump:
		testb  $0x000001,0x00007d(%esi)
		je     _023337_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01d528_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d824_func
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _01d954_func
		movswl %cx,%ecx
		movswl %ax,%edi
		mov    %ecx,%edx
		mov    %edi,%ebx
		mov    %esi,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _023330_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _023330_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		mov    %edx,0x000028(%esi)
		cmpb   $0x000000,0x000070(%esi)
		jne    _023318_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _061220_func
		orb    $0x000008,0x000081(%esi)
		jmp    _023330_jump

	_023318_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _061220_func
		andb   $0x0000f7,0x000081(%esi)

	_023330_jump:
		mov    %esi,%eax
		call   _055ee4_func

	_023337_jump:
		testb  $0x000010,0x00007d(%esi)
		je     _02334a_jump
		mov    %esi,%eax
		call   _055ee4_func
		movw   $0x000000,0x000042(%esi)

	_02334a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023350_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x00007d(%eax)
		je     _023408_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02336c_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _023380_jump

	_02336c_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _023408_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _023408_jump

	_023380_jump:
		mov    0x00007f(%esi),%cl
		cmp    $0x0000ff,%cl
		jne    _0233bb_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0233a8_jump
		cmp    %ecx,%eax
		jg     _0233a8_jump
		mov    $0x000001,%eax
		jmp    _0233aa_jump

	_0233a8_jump:
		xor    %eax,%eax

	_0233aa_jump:
		test   %eax,%eax
		jne    _0233b5_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _023408_jump

	_0233b5_jump:
		movb   $0x00003c,0x00007f(%esi)
		jmp    _023408_jump

	_0233bb_jump:
		test   %cl,%cl
		jne    _0233fb_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _0233e2_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0233ec_jump

	_0233e2_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0233ec_jump:
		mov    %esi,%eax
		call   _061220_func
		movw   $0x000000,0x000042(%esi)
		jmp    _023408_jump

	_0233fb_jump:
		mov    %cl,%al
		movw   $0x000000,0x000042(%esi)
		dec    %al
		mov    %al,0x00007f(%esi)

	_023408_jump:
		cmpb   $0x000004,0x000075(%esi)
		jne    _02347d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02341e_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _02342a_jump

	_02341e_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02347d_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02347d_jump

	_02342a_jump:
		cmpb   $0x000000,0x00007b(%esi)
		je     _02346c_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _023450_jump
		cmp    %ecx,%eax
		jg     _023450_jump
		mov    $0x000001,%eax
		jmp    _023452_jump

	_023450_jump:
		xor    %eax,%eax

	_023452_jump:
		test   %eax,%eax
		je     _02347d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000042(%esi)
		jmp    _02347d_jump

	_02346c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func

	_02347d_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _0234c4_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _0234c4_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _0234c4_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _0234b3_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0234bd_jump

	_0234b3_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0234bd_jump:
		mov    %esi,%eax
		call   _061220_func

	_0234c4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0234cc_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _0234ec_jump
		jbe    _0234f8_jump
		cmp    $0x000014,%dl
		jb     _0234f8_jump
		jbe    _0234e5_jump
		cmp    $0x00001e,%dl
		je     _0234f3_jump
		pop    %edx
		ret    

	_0234e5_jump:
		call   _02311c_func
		pop    %edx
		ret    

	_0234ec_jump:
		call   _02320c_func
		pop    %edx
		ret    

	_0234f3_jump:
		call   _023350_func

	_0234f8_jump:
		pop    %edx
		ret    



_0234fc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _023582_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    _0ce6dc_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jl     _02354e_jump
		jle    _02353c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _023555_jump

	_02353c_jump:
		testb  $0x000008,0x000081(%eax)
		je     _02354e_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _023555_jump

	_02354e_jump:
		orb    $0x000008,0x000081(%ecx)

	_023555_jump:
		mov    %ecx,%eax
		call   _023030_func
		testb  $0x000008,0x000081(%ecx)
		je     _023571_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02357b_jump

	_023571_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02357b_jump:
		mov    %ecx,%eax
		call   _061220_func

	_023582_jump:
		pop    %ecx
		pop    %ebx
		ret    

_023588_switch:
		.long   _0237b1_case
		.long   _023729_case
		.long   _023608_case
		.long   _0237f5_case
		.long   _0237f5_case
		.long   _0235c4_case




_0235a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000075(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _0237f5_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023588_switch(,%eax,4)

	_0235c4_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _0237f5_case
		cmp    0x00006c(%esi),%ah
		jne    _0237f5_case
		cmpb   $0x000002,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _0237f5_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _061220_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023608_case:
		cmpb   $0x000002,_0ce6bd_data
		je     _0237f5_case
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0237f5_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0237f5_case
		mov    _0cf874_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cf862_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cf860_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cf85e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _0237f5_case
		xor    %edx,%edx
		mov    _0cf862_data,%ax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%edx
		mov    0x00004e(%esi),%eax
		sub    $0x000010,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _0237f5_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dfb8_func
		mov    %esi,%eax
		call   _061220_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000072(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023729_case:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _0237f5_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0237f5_case
		cmpb   $0x000002,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _0237f5_case
		mov    %esi,%eax
		call   _01dfb8_func
		xor    %eax,%eax
		mov    _0ce67c_data,%dx
		mov    _0ce6c4_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _0237f5_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _061220_func
		movb   $0x000006,0x000072(%esi)
		movb   $0x0000ff,0x00007f(%esi)
		mov    0x00002c(%esi),%ebx
		mov    %ch,0x000071(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0237b1_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0237f5_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0237f5_case
		cmpb   $0x000002,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _0237f5_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dfb8_func
		mov    %esi,%eax
		call   _061220_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000072(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_0237f5_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023800_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _06bf98_func
		xor    %ebp,%ebp
		xor    %eax,%eax

	_023817_jump:
		add    $0x000004,%eax
		xor    %edx,%edx
		mov    %edx,_0cfb10_data(%eax)
		cmp    $0x000500,%eax
		jne    _023817_jump
		xor    %ebx,%ebx
		mov    $0x00009f,%esi
		mov    $0x000001,%ecx

	_023835_jump:
		mov    %esi,%eax
		call   _06bf60_func
		cwtl   
		mov    %eax,_0cfaec_data(%ebx)
		mov    %ecx,%eax
		call   _06bf60_func
		cwtl   
		add    $0x000002,%eax
		imul   $0x000140,%eax,%eax
		add    $0x000004,%ebx
		mov    %eax,_0cfac0_data(%ebx)
		cmp    $0x000028,%ebx
		jne    _023835_jump

	_023862_jump:
		test   %ebp,%ebp
		jne    _0239f0_jump
		mov    $0x000001,%ebp
		xor    %edi,%edi

	_023871_jump:
		mov    _0cfaec_data(%edi),%eax
		mov    _0cfac4_data(%edi),%ebx
		mov    _0cfb14_data(,%eax,4),%ecx
		add    %ebx,%ecx
		mov    %ecx,_0cfb14_data(,%eax,4)
		cmp    $0x00fa00,%ecx
		jge    _023897_jump
		xor    %ebp,%ebp

	_023897_jump:
		mov    _0cfaec_data(%edi),%esi
		dec    %esi
		test   %esi,%esi
		jge    _0238f2_jump
		jmp    _023909_jump

	_0238a4_jump:
		mov    $0x000140,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    _0cfb18_data(%ebx),%eax
		mov    %eax,%edx
		movl   $0x000140,(%esp)
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    %ecx,%eax
		cwtl   
		call   _06bf60_func
		cwtl   
		add    %eax,%ecx
		imul   $0x000140,%ecx,%ecx
		mov    %ecx,_0cfb14_data(%ebx)
		cmp    $0x00fa00,%ecx
		jge    _0238e8_jump
		xor    %ebp,%ebp

	_0238e8_jump:
		sub    $0x000004,%ebx
		dec    %esi
		test   %ebx,%ebx
		jge    _0238f9_jump
		jmp    _023909_jump

	_0238f2_jump:
		lea    0x000000(,%esi,4),%ebx

	_0238f9_jump:
		mov    _0cfb18_data(%ebx),%eax
		mov    _0cfb14_data(%ebx),%edx
		cmp    %edx,%eax
		jge    _0238a4_jump

	_023909_jump:
		mov    _0cfaec_data(%edi),%esi
		inc    %esi
		cmp    $0x0000a0,%esi
		jl     _02396b_jump
		jmp    _023982_jump

	_02391a_jump:
		mov    $0x000140,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ecx
		mov    _0cfb10_data(%ebx),%eax
		mov    %eax,%edx
		movl   $0x000140,(%esp)
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    %ecx,%eax
		cwtl   
		call   _06bf60_func
		cwtl   
		add    %ecx,%eax
		imul   $0x000140,%eax,%eax
		mov    %eax,_0cfb14_data(%ebx)
		cmp    $0x00fa00,%eax
		jge    _02395d_jump
		xor    %ebp,%ebp

	_02395d_jump:
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x000280,%ebx
		jl     _023972_jump
		jmp    _023982_jump

	_02396b_jump:
		lea    0x000000(,%esi,4),%ebx

	_023972_jump:
		mov    _0cfb10_data(%ebx),%eax
		mov    _0cfb14_data(%ebx),%edx
		cmp    %edx,%eax
		jge    _02391a_jump

	_023982_jump:
		add    $0x000004,%edi
		cmp    $0x000028,%edi
		jne    _023871_jump
		test   %ebp,%ebp
		jne    _023862_jump
		call   _016e8a_func
		mov    $_0cfb14_data,%ebx
		mov    _0cd7d0_data,%edi
		mov    _0cd138_data,%esi
		mov    %edi,%edx
		mov    $0x0000c8,%ecx

	_0239b3_jump:
		push   %ecx
		mov    $0x000140,%ecx

	_0239b9_jump:
		mov    (%ebx),%eax
		add    %edx,%eax
		cmp    %edi,%eax
		jge    _0239ce_jump
		mov    (%ebx),%eax
		neg    %eax
		mov    (%esi,%eax,1),%ax
		mov    %ax,(%edi)
		jmp    _0239d3_jump

	_0239ce_jump:
		movw   $0x000000,(%edi)

	_0239d3_jump:
		add    $0x000004,%ebx
		add    $0x000002,%edi
		add    $0x000002,%esi
		sub    $0x000002,%ecx
		jne    _0239b9_jump
		pop    %ecx
		sub    $0x000280,%ebx
		dec    %ecx
		jne    _0239b3_jump
		jmp    _023862_jump

	_0239f0_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023a00_func:
		push   %edx
		mov    _0cf88a_data,%edx
		mov    _0cf87a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000005,%edx
		dec    %eax
		sub    $0x000020,%edx
		add    %edx,%eax
		mov    _0cb9c0_data(,%eax,2),%ax
		pop    %edx
		ret    



_023a28_func:
		push   %ebx
		push   %edx
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0cf806_data
		je     _023af1_jump
		mov    _0cf88a_data,%eax
		mov    _0cf87a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000005,%eax
		dec    %edx
		sub    $0x000020,%eax
		mov    _0cd8c0_data,%ebx
		add    %eax,%edx
		cmp    $0x000001,%ebx
		jne    _023a82_jump
		mov    _0cb9be_data(,%edx,2),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cd8c4_data
		cmp    $0xfffffffe,%eax
		je     _023a82_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    %eax,_0cd8c4_data

	_023a82_jump:
		mov    _0cb9be_data(,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _023af1_jump
		cmpl   $0x000000,_0cd8c4_data
		je     _023af1_jump
		mov    _0cd8c0_data,%edi
		cmp    $0x000078,%edi
		jle    _023af1_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    $0x000001,%ebp
		shl    $0x000002,%eax
		lea    -0x000078(%edi),%edx
		mov    %ebp,_0ce674_data
		sub    %edx,%eax
		mov    %eax,_0cd8c4_data
		jne    _023af1_jump
		cmpb   $0x000000,_0cfa56_data
		je     _023af1_jump
		mov    _0cd8ac_data,%al
		xor    %ebx,%ebx
		mov    %al,_0cef58_data
		mov    $_0ce650_data,%eax
		mov    %bx,_0cf8a0_data
		call   _07a474_func
		call   _03cadc_func

	_023af1_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_023af8_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0cbb40_data,%eax
		jmp    _05df98_jump



_023b10_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0cbb40_data,%eax
		jmp    _05df58_jump



_023b28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa55_data,%ah
		test   %ah,%ah
		jbe    _023b86_jump
		cmpw   $0x000000,_0cf806_data
		jne    _023b86_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _023b86_jump
		mov    %ah,%dh
		mov    _0cef58_data,%bl
		dec    %dh
		inc    %bl
		mov    %dh,_0cfa55_data
		mov    %bl,_0cef58_data
		cmp    $0x000063,%bl
		jbe    _023b86_jump
		mov    %bl,%cl
		sub    $0x000064,%cl
		mov    %cl,_0cef58_data
		call   _07b838_func
		mov    %ax,_0cf82c_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _023b86_jump
		call   _058644_func

	_023b86_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023b8c_func:
		push   %edx
		xor    %eax,%eax

	_023b8f_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0cbb3f_data(%eax)
		cmp    $0x000018,%eax
		jl     _023b8f_jump
		pop    %edx
		ret    



_023ba0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _055498_func
		call   _042134_func
		cmpw   $0x000000,_0cf810_data
		jne    _023c20_jump
		call   _03ca8c_func
		mov    $0x00003c,%ebx
		mov    _0cf88c_data,%cx
		mov    _0cf87c_data,%ax
		mov    _0cd8c0_data,%edx
		dec    %ecx
		dec    %eax
		shl    $0x000005,%ecx
		sub    $0x000078,%edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %cx,%eax
		mov    _0cb9be_data(,%eax,2),%ebx
		mov    _0cd8c4_data,%eax
		push   %edx
		mov    %eax,%edx
		mov    $0x00003c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		sar    $0x000010,%ebx
		dec    %ebx
		sub    %eax,%ebx
		push   %ebx
		push   $_0c0a18_data
		push   $_0d0014_data
		call   _08044b_func
		add    $0x000010,%esp

	_023c20_jump:
		mov    _0cf87a_data,%edx
		mov    _0cf88a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023af8_func
		test   %al,%al
		je     _023cdb_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _023c62_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _023c62_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03c770_func

	_023c62_jump:
		cmpw   $0x000000,_0cf8da_data
		jne    _023c86_jump
		cmpb   $0x000000,_0cf9fb_data
		jne    _023c86_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03c770_func

	_023c86_jump:
		call   _03cdf8_func
		push   $0x000005
		mov    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2dbc_data,%eax
		xor    %ecx,%ecx
		call   _01a3f0_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x00006e,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2dc0_data,%eax
		call   _01a3f0_func
		push   $0x000005
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0d0014_data,%eax
		xor    %ecx,%ecx
		call   _01a3f0_func
		jmp    _023d87_jump

	_023cdb_jump:
		cmpw   $0x000000,_0cf8da_data
		jne    _023cff_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _023cff_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03c770_func

	_023cff_jump:
		cmpw   $0x000000,_0cf8da_data
		jne    _023d23_jump
		cmpb   $0x000000,_0cf9fb_data
		jne    _023d23_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03c770_func

	_023d23_jump:
		call   _03cdf8_func
		cmpw   $0x00000f,_0cf810_data
		jne    _023d59_jump
		call   _07b56c_func
		movw   $0x00004b,0x000036(%eax)
		movw   $0x000032,0x000038(%eax)
		mov    %eax,_0d0028_data
		movl   $0x000001,0x000024(%eax)
		call   _0567ac_func
		call   _058644_func

	_023d59_jump:
		cmpw   $0x000014,_0cf810_data
		jle    _023d87_jump
		mov    _0d0028_data,%eax
		call   _0567ac_func
		mov    _0d0028_data,%eax
		call   _01eb18_func
		mov    _0d0028_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _023d87_jump

	_023d87_jump:
		mov    _0cf810_data,%bx
		xor    %edx,%edx
		cmp    $0x0001f4,%bx
		je     _023dc9_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _023dbf_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _023dbf_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _023dbf_jump
		call   _042048_func
		test   %ax,%ax
		je     _023dd8_jump

	_023dbf_jump:
		cmpw   $0x000032,_0cf810_data
		jle    _023dd8_jump

	_023dc9_jump:
		mov    $_0ce650_data,%eax
		mov    $0x000001,%edx
		call   _07a474_func

	_023dd8_jump:
		mov    _0cf810_data,%si
		inc    %esi
		mov    %edx,%eax
		mov    %si,_0cf810_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023df0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf810_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jge    _023f25_jump
		mov    %edx,%ecx
		inc    %ecx
		mov    %cx,_0cf810_data
		mov    _0cf80e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _023f25_jump
		mov    _095e2c_data,%ah
		mov    %ecx,%edi
		xor    %esi,%esi
		inc    %edi
		mov    %si,_0cf8a0_data
		mov    %di,_0cf810_data
		cmp    $0x000001,%ah
		jne    _023e51_jump
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		mov    $0x000001,%ebx
		call   _03d9e4_func

	_023e51_jump:
		mov    $0x00fa00,%edx
		mov    $_0cd8a0_data,%eax
		call   _07f7d0_func
		mov    _0cf87a_data,%edx
		mov    _0cf88a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023af8_func
		test   %al,%al
		je     _023e86_jump
		mov    $_0cd8a0_data,%eax
		call   _0365f0_func
		jmp    _023e90_jump

	_023e86_jump:
		mov    $_0cd8a0_data,%eax
		call   _036600_func

	_023e90_jump:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		call   _03cb04_func
		call   _01cf7c_func
		cmpb   $0x000000,_0cfa17_data
		je     _023ebc_jump
		call   _071c10_func
		mov    $0x000006,%eax
		call   _07319c_jump

	_023ebc_jump:
		mov    $_023ba0_func,%eax
		call   _03cb54_func
		cmpb   $0x000000,_0cfa17_data
		je     _023ed4_jump
		call   _03efa4_func

	_023ed4_jump:
		call   _03cadc_func
		mov    _0cd8ac_data,%al
		xor    %edx,%edx
		mov    %al,_0cef58_data
		mov    %edx,_0cd8ac_data
		mov    _0cf87a_data,%edx
		mov    _0cf88a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023b10_func
		test   %ebx,%ebx
		je     _023f11_jump
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d8ac_func

	_023f11_jump:
		call   _03cb04_func
		call   _03cd58_func
		mov    $_0cd8a0_data,%eax
		call   _07fadc_func

	_023f25_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023f30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_023f3f_jump:
		xor    %esi,%esi

	_023f41_jump:
		mov    $0x000040,%eax
		movswl %si,%edi
		sub    %edi,%eax
		imul   %eax,%eax
		mov    -0x000002(%esp),%ebp
		mov    $0x000040,%edx
		sar    $0x000010,%ebp
		sub    %ebp,%edx
		imul   %edx,%edx
		add    %edx,%eax
		call   _07fd04_func
		call   _080552_func
		call   _0805b8_func
		mov    $0xbca1af28,%ebx
		mov    $0x3fbaf286,%ecx
		and    $0x0000ff,%eax
		shl    $0x000007,%ebp
		call   _07fd11_func
		call   _07ff01_func
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _080872_func
		call   _07fd4a_func
		mov    $0x40440000,%ecx
		xor    %ebx,%ebx
		inc    %esi
		call   _07ff01_func
		call   _0805b8_func
		mov    %al,_0da43c_data(%edi,%ebp,1)
		cmp    $0x000080,%si
		jl     _023f41_jump
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000080,%bx
		jl     _023f3f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023fdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%ch
		cmpb   $0x000000,_0cfa37_data
		jne    _023ff5_jump
		movb   $0x00004a,_0de73c_data
		jmp    _023ffc_jump

	_023ff5_jump:
		movb   $0x000070,_0de73c_data

	_023ffc_jump:
		movzbl _0de73c_data,%edi
		xor    %eax,%eax

	_024005_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		add    %edi,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095f72_data(%edx),%cl
		mov    %cl,_0c7f88_data(%ebx)
		mov    _095f71_data(%edx),%cl
		mov    _095f70_data(%edx),%dl
		mov    %cl,_0c7f89_data(%ebx)
		inc    %eax
		mov    %dl,_0c7f8a_data(%ebx)
		cmp    $0x000010,%ax
		jl     _024005_jump
		test   %ch,%ch
		je     _024061_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7f88_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_024061_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024068_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %ebx,%edi
		mov    %cx,0x00000c(%esp)
		mov    %esp,%ebp
		mov    _0cd7b8_data,%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %ebx,%ecx
		add    %edx,%eax
		mov    0x000030(%esp),%bl
		shl    $0x000006,%eax
		mov    %bl,(%esp)
		mov    0x000038(%esp),%bl
		lea    (%ecx,%eax,1),%edx
		mov    $0x000140,%eax
		mov    %bl,0x000001(%esp)
		mov    0x000040(%esp),%bl
		sub    %edi,%eax
		mov    %bl,0x000002(%esp)
		mov    0x000048(%esp),%bl
		mov    %eax,0x000014(%esp)
		mov    %bl,0x000003(%esp)
		xor    %ebx,%ebx
		lea    0x000004(%esp),%eax
		mov    %ebx,0x000010(%esp)
		jmp    _0241dc_jump

	_0240cd_jump:
		mov    0x000000(%ebp),%esi
		add    $0x1010101,%esi
		mov    %esi,%ebx
		mov    %esi,0x000000(%ebp)
		and    $0x7f7f7f7f,%ebx
		mov    %ebx,0x000000(%ebp)
		mov    0x00002c(%esp),%bl
		mov    %bl,0x000004(%esp)
		mov    0x000034(%esp),%bl
		mov    %bl,0x000005(%esp)
		mov    0x00003c(%esp),%bl
		mov    %bl,0x000006(%esp)
		mov    0x000044(%esp),%bl
		mov    %bl,0x000007(%esp)
		xor    %ebx,%ebx
		jmp    _0241ba_jump

	_02410b_jump:
		mov    (%eax),%ecx
		add    $0x1010101,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		and    $0x7f7f7f7f,%esi
		xor    %ecx,%ecx
		mov    %esi,(%eax)
		mov    (%esp),%cl
		movzbl 0x000004(%esp),%esi
		shl    $0x000007,%ecx
		mov    _0da43c_data(%ecx,%esi,1),%cl
		mov    0x00004c(%esp),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000001(%esp),%cl
		movzbl 0x000005(%esp),%esi
		shl    $0x000007,%ecx
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		mov    _0da43c_data(%esi),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000002(%esp),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000006(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0da43c_data(%esi),%cl
		movzbl 0x000003(%esp),%esi
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000007(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0da43c_data(%esi),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		and    $0x0000ff,%esi
		mov    _0de73c_data,%cl
		sar    $0x000004,%esi
		add    %ecx,%esi
		mov    %esi,0x000008(%esp)
		inc    %edx
		mov    0x000008(%esp),%cl
		inc    %ebx
		mov    %cl,-0x000001(%edx)

	_0241ba_jump:
		xor    %esi,%esi
		movswl %di,%ecx
		mov    %bx,%si
		cmp    %ecx,%esi
		jl     _02410b_jump
		mov    0x000010(%esp),%esi
		xor    %ecx,%ecx
		inc    %esi
		mov    0x000014(%esp),%cx
		mov    %esi,0x000010(%esp)
		add    %ecx,%edx

	_0241dc_jump:
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%esi
		mov    0x000010(%esp),%cx
		sar    $0x000010,%esi
		cmp    %esi,%ecx
		jl     _0240cd_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000024



_0241fc_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00000c(%esp)
		je     _024329_jump
		incw   _095fa0_data
		subw   $0x000002,_095fa2_data
		incw   _095fa4_data
		subw   $0x000002,_095fa6_data
		addw   $0x000003,_095fa8_data
		subw   $0x000002,_095faa_data
		incw   _095fac_data
		subw   $0x000003,_095fae_data
		mov    _095fb0_data,%di
		mov    _095f9e_data,%eax
		add    $0x000005,%edi
		sar    $0x000010,%eax
		mov    %di,_095fb0_data
		call   _05e000_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de748_data
		mov    _095fa0_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de746_data
		mov    _095fa2_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de74c_data
		mov    _095fa4_data,%eax
		sar    $0x000010,%eax
		call   _05e000_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de74a_data
		mov    _095fa6_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de744_data
		mov    _095fa8_data,%eax
		sar    $0x000010,%eax
		call   _05e000_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de742_data
		mov    _095faa_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de740_data
		mov    _095fac_data,%eax
		sar    $0x000010,%eax
		call   _05e000_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0de73e_data

	_024329_jump:
		sub    $0x000003,%esi
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %si,%si
		jge    _024340_jump
		add    %esi,%ebx
		xor    %esi,%esi
		jmp    _024356_jump

	_024340_jump:
		movswl %si,%eax
		movswl %bx,%edi
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _024356_jump
		mov    $0x000140,%ebx
		sub    %esi,%ebx

	_024356_jump:
		test   %dx,%dx
		jge    _024361_jump
		xor    %edx,%edx
		add    %esi,%ecx
		jmp    _024377_jump

	_024361_jump:
		movswl %dx,%edi
		movswl %cx,%eax
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _024377_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_024377_jump:
		mov    _095fae_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de73c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de73e_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de740_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de742_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de744_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de746_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0de748_data,%eax
		sar    $0x000010,%eax
		movswl %cx,%ecx
		push   %eax
		mov    _0de74a_data,%eax
		movswl %bx,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %si,%eax
		call   _024068_func
		pop    %edi
		pop    %esi
		ret    $0x000004



_0243e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _06bf98_func
		cmpb   $0x000000,_0cfa37_data
		jne    _024404_jump
		movb   $0x00004a,_0de73c_data
		jmp    _02440b_jump

	_024404_jump:
		movb   $0x000070,_0de73c_data

	_02440b_jump:
		xor    %eax,%eax

	_02440d_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%ebx
		movzbl _095fb2_data(%ebx),%edi
		sar    $0x000002,%edi
		mov    %edi,(%esp)
		movzbl _0de73c_data,%edi
		add    %edi,%edx
		lea    (%edx,%edx,2),%edx
		mov    (%esp),%cl
		mov    %cl,_0c7f88_data(%edx)
		xor    %ecx,%ecx
		mov    _095fb4_data(%ebx),%cl
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    _095fb3_data(%ebx),%bl
		mov    %cl,_0c7f89_data(%edx)
		and    $0x0000ff,%ebx
		sar    $0x000002,%ebx
		inc    %eax
		mov    %bl,_0c7f8a_data(%edx)
		cmp    $0x000010,%ax
		jl     _02440d_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7f88_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		xor    %esi,%esi

	_02448c_jump:
		xor    %eax,%eax

	_02448e_jump:
		movswl %si,%edx
		imul   $0x000258,%edx,%ebx
		xor    %ecx,%ecx
		mov    _0de73c_data,%cl
		movswl %ax,%edx
		inc    %eax
		mov    %cx,_0d002c_data(%ebx,%edx,2)
		cmp    $0x00012c,%ax
		jl     _02448e_jump
		inc    %esi
		cmp    $0x000046,%si
		jl     _02448c_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0244c4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %cx,0x00000c(%esp)
		mov    _0cd7b8_data,%esi
		cwtl   
		movswl %dx,%ecx
		add    %eax,%esi
		lea    0x000000(,%ecx,4),%eax
		xor    %edi,%edi
		add    %ecx,%eax
		xor    %edx,%edx
		shl    $0x000006,%eax
		mov    _0de73c_data,%dl
		add    %eax,%esi
		xor    %eax,%eax
		mov    %esi,0x000008(%esp)
		call   _06bf98_func
		test   %bx,%bx
		jle    _024557_jump

	_024503_jump:
		mov    $0x00000a,%eax
		call   _06bf60_func
		cmp    $0x000005,%ax
		jge    _02452a_jump
		mov    $0x000001,%eax
		call   _06bf60_func
		imul   $0x00000f,%eax,%eax
		xor    %edx,%edx
		mov    _0de73c_data,%dl
		add    %eax,%edx

	_02452a_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		movswl %di,%ecx
		mov    %dx,_0d002c_data(%esi,%ecx,2)
		inc    %edi
		mov    %dx,_0d002c_data(%eax,%ecx,2)
		cmp    %bx,%di
		jl     _024503_jump

	_024557_jump:
		mov    $0x000001,%edi
		jmp    _0246c4_jump

	_024561_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0246c3_jump

	_02456c_jump:
		test   %dx,%dx
		jne    _0245e2_jump
		movswl %di,%eax
		lea    -0x000001(%eax),%ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ecx,0x000004(%esp)
		movswl %bx,%ecx
		mov    0x000004(%esp),%esi
		add    %ecx,%ecx
		add    %esi,%ecx
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		mov    _0d0028_data(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,(%esp)
		movswl %dx,%ecx
		add    %ecx,%ecx
		mov    _0d002a_data(%ecx,%esi,1),%ebp
		sar    $0x000010,%ebp
		mov    _0d002c_data(%ecx,%esi,1),%esi
		sar    $0x000010,%esi
		add    (%esp),%ebp
		mov    _0d002a_data(%ecx,%eax,1),%eax
		add    %ebp,%esi
		sar    $0x000010,%eax
		add    %esi,%eax
		add    0x000004(%esp),%ecx
		sar    $0x000002,%eax
		mov    %ax,_0d002c_data(%ecx)
		jmp    _0246b9_jump

	_0245e2_jump:
		movswl %bx,%eax
		movswl %dx,%ecx
		lea    -0x000001(%eax),%esi
		lea    0x000000(,%ecx,2),%eax
		cmp    %esi,%ecx
		jne    _02465d_jump
		movswl %di,%ecx
		imul   $0x000258,%ecx,%esi
		mov    _0d0028_data(%esi,%eax,1),%ebp
		mov    _0d002a_data(%esi,%eax,1),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		lea    0x000001(%ecx),%esi
		imul   $0x000258,%esi,%esi
		dec    %ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ebp,(%esp)
		mov    _0d002a_data(%esi),%ebp
		sar    $0x000010,%ebp
		mov    _0d002a_data(%esi,%eax,1),%esi
		mov    %ebp,0x000004(%esp)
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    0x000004(%esp),%ebp
		add    %ebp,%esi
		sar    $0x000002,%esi
		mov    %esi,0x000004(%esp)
		mov    0x000004(%esp),%esi
		mov    %si,_0d002c_data(%ecx,%eax,1)
		jmp    _0246b9_jump

	_02465d_jump:
		movswl %di,%esi
		imul   $0x000258,%esi,%ecx
		mov    _0d0028_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,(%esp)
		mov    _0d002a_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    _0d002c_data(%ecx,%eax,1),%ecx
		add    (%esp),%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		lea    0x000001(%esi),%ecx
		imul   $0x000258,%ecx,%ecx
		dec    %esi
		imul   $0x000258,%esi,%esi
		mov    _0d002a_data(%ecx,%eax,1),%ecx
		sar    $0x000010,%ecx
		add    %ebp,%ecx
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0d002c_data(%esi,%eax,1)

	_0246b9_jump:
		inc    %edx
		cmp    %bx,%dx
		jl     _02456c_jump

	_0246c3_jump:
		inc    %edi

	_0246c4_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%ecx
		add    $0x000002,%eax
		cmp    %eax,%ecx
		jl     _024561_jump
		mov    0x00000c(%esp),%edx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _02472f_jump

	_0246e4_jump:
		xor    %eax,%eax
		test   %bx,%bx
		jle    _024711_jump

	_0246eb_jump:
		movswl %di,%ecx
		imul   $0x000258,%ecx,%ecx
		movswl %ax,%esi
		mov    _0d002c_data(%ecx,%esi,2),%dl
		mov    0x000008(%esp),%ecx
		mov    %dl,(%ecx)
		lea    0x000001(%ecx),%edx
		inc    %eax
		mov    %edx,0x000008(%esp)
		cmp    %bx,%ax
		jl     _0246eb_jump

	_024711_jump:
		mov    $0x000140,%ecx
		movswl %bx,%eax
		mov    0x000008(%esp),%ebp
		sub    %eax,%ecx
		inc    %edi
		add    %ecx,%ebp
		mov    0x00000c(%esp),%ecx
		mov    %ebp,0x000008(%esp)
		cmp    %cx,%di
		jl     _0246e4_jump

	_02472f_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024738_func:
		push   %esi
		push   %edi
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %ax,%ax
		jge    _024751_jump
		add    %eax,%ebx
		xor    %eax,%eax
		jmp    _024768_jump

	_024751_jump:
		movswl %ax,%edi
		movswl %bx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _024768_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx

	_024768_jump:
		test   %dx,%dx
		jge    _024773_jump
		xor    %edx,%edx
		add    %eax,%ecx
		jmp    _02478a_jump

	_024773_jump:
		movswl %dx,%edi
		movswl %cx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _02478a_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_02478a_jump:
		movswl %cx,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _0244c4_func
		pop    %edi
		pop    %esi
		ret    



_02479c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa82_data,%ch
		xor    %eax,%eax

	_0247a7_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7f88_data(%edx,%ebx,1),%cl
		mov    %cl,_0de43c_data(%edx)
		mov    _0c7f89_data(%edx,%ebx,1),%cl
		mov    _0c7f8a_data(%edx,%ebx,1),%bl
		mov    %cl,_0de43d_data(%edx)
		inc    %eax
		mov    %bl,_0de43e_data(%edx)
		cmp    $0x000050,%ax
		jl     _0247a7_jump
		mov    $0x000046,%eax
		mov    %al,%dl
		add    %al,%dl
		mov    %dl,%bl
		sub    $0x00008c,%bl
		mov    %dl,%bh
		neg    %bh
		add    $0x00000a,%bh

	_0247fa_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		xor    %cl,%cl
		mov    %bh,_0de43c_data(%edx)
		inc    %eax
		mov    %bl,_0de43d_data(%edx)
		add    $0x000002,%bl
		mov    %cl,_0de43e_data(%edx)
		sub    $0x000002,%bh
		cmp    $0x000066,%ax
		jl     _0247fa_jump
		mov    $0x000066,%eax

	_024826_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7f88_data(%edx,%ebx,1),%cl
		mov    %cl,_0de43c_data(%edx)
		mov    _0c7f89_data(%edx,%ebx,1),%cl
		mov    _0c7f8a_data(%edx,%ebx,1),%bl
		mov    %cl,_0de43d_data(%edx)
		inc    %eax
		mov    %bl,_0de43e_data(%edx)
		cmp    $0x000070,%ax
		jl     _024826_jump
		mov    $0x000070,%eax

	_024869_jump:
		movswl %ax,%ebx
		lea    -0x000070(%ebx),%edx
		lea    (%edx,%edx,2),%edx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095f72_data(%edx),%cl
		mov    %cl,_0de43c_data(%ebx)
		mov    _095f71_data(%edx),%cl
		mov    _095f70_data(%edx),%dl
		mov    %cl,_0de43d_data(%ebx)
		inc    %eax
		mov    %dl,_0de43e_data(%ebx)
		cmp    $0x000080,%ax
		jl     _024869_jump
		mov    $0x000080,%eax
		mov    %al,%dl
		sub    $0x000080,%dl

	_0248aa_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    %dl,_0de43c_data(%ebx)
		mov    %dl,_0de43d_data(%ebx)
		inc    %eax
		mov    %dl,_0de43e_data(%ebx)
		inc    %dl
		cmp    $0x0000c0,%ax
		jl     _0248aa_jump
		mov    $0x0000c0,%eax
		xor    %cl,%cl

	_0248d2_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		mov    %cl,_0de43c_data(%edx)
		mov    %cl,_0de43d_data(%edx)
		lea    -0x0000c0(%ebx),%edx
		cmp    $0x000003,%edx
		jg     _0248f4_jump
		mov    $0x000003,%edx

	_0248f4_jump:
		mov    %dl,%bl
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		inc    %eax
		mov    %bl,_0de43e_data(%edx)
		cmp    $0x000100,%ax
		jl     _0248d2_jump
		cmpb   $0x000000,_0cfa53_data
		je     _024942_jump
		mov    $0x000010,%ah
		mov    $0x00000e,%dl
		mov    $0x000031,%bl
		mov    $0x00002d,%cl
		mov    %ah,_0de49c_data
		mov    %dl,_0de49d_data
		mov    %bl,_0de4ae_data
		mov    %cl,_0de4b0_data
		mov    $0x00000d,%dh
		mov    $0x00002f,%bh
		mov    %dh,_0de49e_data
		mov    %bh,_0de4af_data

	_024942_jump:
		mov    %ch,_0cfa82_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02494c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %dl,0x000008(%esp)
		cmpb   $0x000001,_095e2c_data
		jne    _024a07_jump
		xor    %ebx,%ebx
		mov    %bx,0x000004(%esp)
		mov    $0x000003,%ebp

	_024974_jump:
		mov    (%esp),%esi
		mov    0x000004(%esp),%ah
		xor    %ebx,%ebx
		mov    _0cd130_data,%edx
		mov    0x000004(%esp),%bx
		xor    %ecx,%ecx
		add    %edx,%ebx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)

	_024995_jump:
		mov    0x000008(%esp),%dh
		mov    (%esi),%al
		test   %dh,%dh
		je     _0249e0_jump
		movzbl _0cfa82_data,%edi
		imul   $0x000300,%edi,%edi
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		add    %edi,%edx
		xor    %eax,%eax
		mov    _0c7f89_data(%edx),%al
		movzbl _0c7f88_data(%edx),%edi
		mov    _0c7f8a_data(%edx),%dl
		add    %edi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		add    $0x000080,%eax

	_0249e0_jump:
		mov    %al,(%ebx)
		inc    %ecx
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x003e80,%cx
		jb     _024995_jump
		mov    0x000004(%esp),%edx
		inc    %edx
		mov    %dx,0x000004(%esp)
		cmp    $0x000004,%dx
		jae    _024a8f_jump
		jmp    _024974_jump

	_024a07_jump:
		mov    (%esp),%esi
		mov    _0cd130_data,%edi
		test   %dl,%dl
		je     _024a7a_jump
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)

	_024a1b_jump:
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		imul   $0x000300,%edx,%edx
		mov    (%esi),%al
		and    $0x0000ff,%eax
		lea    (%eax,%eax,2),%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c7f88_data(%eax),%bl
		mov    _0c7f89_data(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c7f8a_data(%eax),%dl
		add    %ebx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000004(%esp),%ecx
		inc    %edi
		inc    %esi
		inc    %ecx
		add    $0x000080,%eax
		mov    %cx,0x000004(%esp)
		mov    %al,-0x000001(%edi)
		cmp    $0x00fa00,%cx
		jae    _024a8f_jump
		jmp    _024a1b_jump

	_024a7a_jump:
		mov    $0x00fa00,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_024a8f_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024a98_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %ecx,%esi
		xor    %ah,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x000008(%esp)
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		add    %edx,%ebx
		mov    $0x000140,%edx
		movswl %bx,%eax
		mov    0x000006(%esp),%ecx
		sub    %eax,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		add    _0cd7b8_data,%ecx
		mov    0x000002(%esp),%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %bx,(%esp)
		shl    $0x000006,%eax
		sar    $0x000002,%bx
		add    %ecx,%eax
		xor    %ecx,%ecx
		test   %si,%si
		jle    _024b4e_jump

	_024b16_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _024b3c_jump

	_024b1d_jump:
		mov    (%eax),%edi
		test   %edi,%edi
		je     _024b2d_jump
		lea    0x40404040(%edi),%ebp
		mov    %ebp,(%eax)
		jmp    _024b33_jump

	_024b2d_jump:
		movl   $0xc8c8c8c8,(%eax)

	_024b33_jump:
		inc    %edx
		add    $0x000004,%eax
		cmp    %bx,%dx
		jl     _024b1d_jump

	_024b3c_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		inc    %ecx
		add    %edx,%eax
		cmp    %si,%cx
		jl     _024b16_jump

	_024b4e_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0x002026,%eax
		mov    _0cd7b8_data,%edi
		movswl %si,%ecx
		mov    0x000006(%esp),%esi
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014bbb_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024b80_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%esi
		cmpb   $0x000000,0x00001c(%esp)
		je     _024b98_jump
		movw   $0x002026,0x000008(%esp)
		jmp    _024b9f_jump

	_024b98_jump:
		movw   $0x002620,0x000008(%esp)

	_024b9f_jump:
		movswl %bx,%edi
		movswl %si,%esi
		movswl %ax,%ebp
		mov    %edi,(%esp)
		mov    %esi,%ebx
		movswl %cx,%edi
		mov    %ebp,%eax
		mov    %edi,0x000004(%esp)
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0cd7b8_data,%edi
		call   _014aef_func
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0cd7b8_data,%edi
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %ebp,%esi
		call   _014bbb_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_024bf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa82_data,%bh
		cmpb   $0x000000,_0cfa37_data
		je     _024c47_jump
		cmpb   $0x000000,_095e63_data
		jne    _024c47_jump
		xor    %al,%al
		mov    $0x00003f,%ah

	_024c0f_jump:
		mov    %al,%bl
		xor    %edx,%edx
		add    %al,%bl
		mov    %bh,%dl
		imul   $0x000300,%edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		add    $0x000046,%edx
		lea    (%edx,%edx,2),%edx
		mov    %ah,_0c7f88_data(%ecx,%edx,1)
		mov    %bl,_0c7f89_data(%ecx,%edx,1)
		sub    $0x000002,%ah
		xor    %bl,%bl
		inc    %al
		mov    %bl,_0c7f8a_data(%ecx,%edx,1)
		cmp    $0x000020,%al
		jb     _024c0f_jump

	_024c47_jump:
		mov    %bh,_0cfa82_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024c54_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00002c(%esp),%ecx
		mov    0x000034(%esp),%edx
		mov    _0cd7b8_data,%ebp
		cwtl   
		add    %eax,%ebp
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		inc    %eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		inc    %ebp
		shl    $0x000006,%ebx
		add    %ebx,%ebp
		cmp    %di,%dx
		jle    _024ca0_jump
		mov    %edi,%edx
		jmp    _024ca9_jump

	_024ca0_jump:
		cmp    %cx,%dx
		jge    _024ca9_jump
		xor    %edx,%edx
		jmp    _024cab_jump

	_024ca9_jump:
		sub    %ecx,%edx

	_024cab_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		sar    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _024cc0_jump
		mov    %ebx,%eax

	_024cc0_jump:
		mov    0x000010(%esp),%ebx
		sub    %eax,%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebx,%eax
		sub    $0x000003,%eax
		movswl %dx,%edx
		cwtl   
		imul   %eax,%edx
		movswl %di,%ebx
		movswl %cx,%eax
		sub    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%esp),%ecx
		mov    _0cd7b8_data,%edi
		sar    $0x000010,%ecx
		movswl %si,%edx
		mov    0x00000a(%esp),%ebx
		inc    %edx
		sar    $0x000010,%ebx
		movswl %si,%esi
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000014(%esp)
		mov    $0x002026,%eax
		sar    $0x000010,%edx
		call   _014bbb_func
		xor    %dh,%dh
		xor    %ah,%ah
		jmp    _024d62_jump

	_024d1f_jump:
		xor    %dl,%dl
		xor    %al,%al
		jmp    _024d41_jump

	_024d25_jump:
		mov    %ah,%cl
		add    $0x000046,%cl
		mov    %cl,0x000000(%ebp)
		xor    %ecx,%ecx
		sar    $0x000005,%ebx
		mov    %al,%cl
		cmp    %ebx,%ecx
		jle    _024d3c_jump
		xor    %al,%al
		inc    %ah

	_024d3c_jump:
		inc    %dl
		inc    %ebp
		inc    %al

	_024d41_jump:
		mov    0x00000e(%esp),%ecx
		sar    $0x000010,%ecx
		movzbl %dl,%esi
		lea    -0x000002(%ecx),%ebx
		cmp    %ebx,%esi
		jl     _024d25_jump
		mov    $0x000140,%ebx
		sub    %ecx,%ebx
		inc    %dh
		add    $0x000002,%ebx
		xor    %ah,%ah
		add    %ebx,%ebp

	_024d62_jump:
		mov    0x000016(%esp),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%esi
		mov    %dh,%bl
		lea    -0x000002(%esi),%ecx
		cmp    %ecx,%ebx
		jl     _024d1f_jump
		mov    0x000006(%esp),%eax
		mov    _0cd7b8_data,%edi
		lea    -0x000003(%esi),%ebp
		sar    $0x000010,%eax
		mov    0x000012(%esp),%esi
		mov    %eax,0x000004(%esp)
		mov    0x00000a(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		inc    %eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _014aef_func
		mov    $0x000308,%eax
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		mov    _0cd7b8_data,%edi
		mov    %ebp,%ecx
		call   _014bbb_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_024dcc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		mov    _0cd7b8_data,%ecx
		add    %ebx,%eax
		mov    _0cd7b8_data,%ebp
		shl    $0x000006,%eax
		xor    %edx,%edx
		mov    %eax,%ebx
		add    %eax,%ecx
		mov    %ebp,%eax
		call   _080420_func
		mov    -0x000002(%esp),%ebx
		mov    $0x0000c8,%ebp
		sar    $0x000010,%ebx
		sub    %ebx,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %eax,%ebp
		lea    0x000000(,%ebx,4),%eax
		mov    _0cd7b8_data,%edx
		add    %ebx,%eax
		shl    $0x000006,%ebp
		shl    $0x000006,%eax
		mov    %ebp,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    0x000004(%esp),%edx
		cmp    (%esp),%dx
		jge    _024e84_jump
		movswl %si,%ebx

	_024e4f_jump:
		xor    %eax,%eax
		test   %si,%si
		jle    _024e60_jump

	_024e56_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    %si,%ax
		jl     _024e56_jump

	_024e60_jump:
		movswl %di,%eax
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %edi,%eax
		cmp    $0x000140,%di
		jge    _024e7b_jump

	_024e70_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    $0x000140,%ax
		jl     _024e70_jump

	_024e7b_jump:
		mov    (%esp),%eax
		inc    %edx
		cmp    %ax,%dx
		jl     _024e4f_jump

	_024e84_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024e90_func:
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		call   _01e588_func
		cmp    $0x00000f,%al
		sete   %al
		xor    %ah,%ah
		ret    



_024eac_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0c2a48_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_024ec8_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _024eac_func
		test   %ax,%ax
		jg     _024ee0_jump
		mov    %ecx,%eax
		pop    %ecx
		ret    

	_024ee0_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

_024ee4_switch:
		.long   _025026_case
		.long   _025026_case
		.long   _025036_case
		.long   _025049_case
		.long   _02505c_case
		.long   _02505c_case
		.long   _025073_case
		.long   _025073_case
		.long   _025026_case
		.long   _025082_case
		.long   _025026_case
		.long   _02514f_case
		.long   _02514f_case
		.long   _02514f_case
		.long   _025082_case
		.long   _025082_case
		.long   _02514f_case
		.long   _02514f_case
		.long   _025036_case
		.long   _025049_case
		.long   _02505c_case
		.long   _02505c_case
		.long   _025073_case
		.long   _025073_case
		.long   _025026_case
		.long   _025026_case
		.long   _02514f_case
		.long   _02514f_case
		.long   _02514f_case
		.long   _02514f_case
		.long   _025082_case




_024f60_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x000017,%dx
		jne    _024fdd_jump
		testb  $0x000002,_0cf81b_data
		je     _024fdd_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000008(%esp),%al
		xor    %edx,%edx
		test   %ax,%ax
		js     _024f9b_jump
		sar    %cl,%ax
		jmp    _024fa4_jump

	_024f9b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024fa4_jump:
		mov    _0ce6bd_data,%dl
		mov    _0ce65c_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    _0ce6bc_data,%dl
		mov    %al,0x000008(%esp)
		testb  $0x000040,0x000007(%ecx,%edx,8)
		jne    _024fdd_jump
		test   %al,%al
		je     _024fd4_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _024fd9_jump

	_024fd4_jump:
		mov    $0x000001,%edx

	_024fd9_jump:
		mov    %dl,0x000008(%esp)

	_024fdd_jump:
		xor    %eax,%eax
		mov    0x00002c(%edi),%dx
		mov    0x000069(%edi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		movzbw 0x000068(%edi),%si
		sar    $0x000010,%eax
		mov    0x000028(%edi),%cx
		sar    $0x000004,%eax
		add    %ecx,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		cmp    $0x00001e,%al
		ja     _02514f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_024ee4_switch(,%eax,4)

	_025026_case:
		mov    $0x000008,%eax
		sub    0x000042(%edi),%ax
		add    %eax,%ebx
		jmp    _02514f_case

	_025036_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _02514f_case
		add    $0x000011,%ebx
		jmp    _02514f_case

	_025049_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _02514f_case
		add    $0x000011,%ebx
		jmp    _02514f_case

	_02505c_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _02506b_jump
		add    $0x000011,%ebx
		jmp    _02514f_case

	_02506b_jump:
		add    $0x000002,%ebx
		jmp    _02514f_case

	_025073_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _02506b_jump
		add    $0x000011,%ebx
		jmp    _02514f_case

	_025082_case:
		mov    0x000062(%edi),%al
		cmp    $0x000002,%al
		jb     _025098_jump
		cmp    $0x000003,%al
		jbe    _025095_jump
		cmp    $0x000012,%al
		jb     _025098_jump
		cmp    $0x000013,%al
		ja     _025098_jump

	_025095_jump:
		add    $0x000008,%ebx

	_025098_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		cmp    $0x00000a,%al
		jb     _0250f4_jump
		jbe    _02510c_jump
		cmp    $0x000013,%al
		jb     _0250dd_jump
		jbe    _02511d_jump
		cmp    $0x000016,%al
		jb     _025129_jump
		cmp    $0x000017,%al
		jbe    _025139_jump
		cmp    $0x000019,%al
		jbe    _02510c_jump
		jmp    _02514c_jump

	_0250dd_jump:
		cmp    $0x00000c,%al
		jb     _02514c_jump
		jbe    _025149_jump
		cmp    $0x000012,%al
		je     _025111_jump
		jmp    _02514c_jump

	_0250f4_jump:
		cmp    $0x000003,%al
		jb     _025108_jump
		jbe    _02511d_jump
		cmp    $0x000006,%al
		jb     _025129_jump
		cmp    $0x000007,%al
		jbe    _025139_jump
		cmp    $0x000008,%al
		je     _02510c_jump
		jmp    _02514c_jump

	_025108_jump:
		cmp    $0x000001,%al
		ja     _025111_jump

	_02510c_jump:
		add    $0x000009,%ebx
		jmp    _02514f_case

	_025111_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _02514f_case
		add    $0x000019,%ebx
		jmp    _02514f_case

	_02511d_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _02514f_case
		add    $0x000019,%ebx
		jmp    _02514f_case

	_025129_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _02506b_jump
		add    $0x000011,%ebx
		jmp    _02514f_case

	_025139_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _02506b_jump
		add    $0x000011,%ebx
		jmp    _02514f_case

	_025149_jump:
		inc    %ebx
		jmp    _02514f_case

	_02514c_jump:
		add    $0x000008,%ebx

	_02514f_case:
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    0x000008(%esp),%dl
		test   %ax,%ax
		js     _025161_jump
		sar    %cl,%ax
		jmp    _02516a_jump

	_025161_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02516a_jump:
		sub    %al,%dl
		mov    %dl,0x000008(%esp)
		cmp    $0x000080,%dl
		jbe    _02517b_jump
		xor    %cl,%cl
		mov    %cl,0x000008(%esp)

	_02517b_jump:
		mov    $0x000004,%cl
		mov    %esi,%eax
		mov    0x000004(%esp),%edi
		test   %ax,%ax
		js     _02518d_jump
		sar    %cl,%ax
		jmp    _025196_jump

	_02518d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_025196_jump:
		sub    %ebx,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _0251a6_jump
		sar    %cl,%ax
		jmp    _0251af_jump

	_0251a6_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0251af_jump:
		xor    %ebx,%ebx
		xor    %cl,%cl
		jmp    _0251d7_jump

	_0251b5_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		sub    %ebx,%eax
		mov    %edi,%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		movswl %dx,%edx
		movswl %si,%eax
		call   _024e90_func
		test   %ax,%ax
		je     _0251d6_jump
		inc    %cl

	_0251d6_jump:
		inc    %ebx

	_0251d7_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    %eax,%ebx
		jle    _0251b5_jump
		test   %cl,%cl
		je     _0251ec_jump
		movl   $0x00000f,(%esp)

	_0251ec_jump:
		mov    (%esp),%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0251f8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _025215_jump
		mov    $0x000001,%eax
		jg     _025215_jump
		neg    %eax

	_025215_jump:
		mov    %eax,%ecx
		test   %ax,%ax
		je     _02537b_jump
		cmpw   $0x000017,0x000060(%esi)
		jne    _025258_jump
		mov    _0cf81b_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _02523d_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _025242_jump

	_02523d_jump:
		mov    $0x00000e,%eax

	_025242_jump:
		mov    _0ce69e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _02525d_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _02525d_jump

	_025258_jump:
		mov    $0x00000e,%eax

	_02525d_jump:
		test   %cx,%cx
		jge    _025264_jump
		neg    %eax

	_025264_jump:
		test   %dl,%dl
		je     _02526a_jump
		neg    %eax

	_02526a_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _0252aa_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		mov    _09257d_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _0252a6_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02529d_jump
		sar    %cl,%ax
		jmp    _0252a6_jump

	_02529d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0252a6_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_0252aa_jump:
		testb  $0x000020,0x000081(%esi)
		je     _0252d3_jump
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		jmp    _0252d9_jump

	_0252d3_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000008(%esp)

	_0252d9_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _0252f9_jump
		sar    %cl,%ax
		jmp    _025302_jump

	_0252f9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_025302_jump:
		mov    0x000060(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%bx
		jne    _025358_jump
		xor    %ebx,%ebx
		mov    _0ce6bd_data,%bl
		mov    _0ce65c_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0ce6bc_data,%bl
		mov    %ecx,(%esp)
		lea    0x000000(,%ebx,8),%ecx
		mov    (%esp),%ebx
		mov    (%ebx),%ebx
		testb  $0x000040,0x000007(%ecx,%ebx,1)
		je     _025358_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _02534f_jump
		sar    %cl,%ax
		jmp    _025358_jump

	_02534f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_025358_jump:
		test   %al,%al
		je     _02535e_jump
		dec    %al

	_02535e_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _024f60_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02537b_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_025388_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _0256cd_jump
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _0253fa_jump
		jbe    _025637_jump
		cmp    $0x00007a,%ax
		jb     _0253db_jump
		jbe    _025637_jump
		cmp    $0x0000a5,%ax
		jb     _0256af_jump
		jbe    _025624_jump
		cmp    $0x0000ac,%ax
		je     _025690_jump
		jmp    _0256af_jump

	_0253db_jump:
		cmp    $0x000041,%ax
		jb     _0256af_jump
		jbe    _02565f_jump
		cmp    $0x000064,%ax
		je     _025654_jump
		jmp    _0256af_jump

	_0253fa_jump:
		cmp    $0x000003,%ax
		jb     _025421_jump
		jbe    _0255d1_jump
		cmp    $0x000009,%ax
		jb     _0256af_jump
		jbe    _025624_jump
		cmp    $0x000017,%ax
		je     _02542f_jump
		jmp    _0256af_jump

	_025421_jump:
		test   %ax,%ax
		je     _0255f0_jump
		jmp    _0256af_jump

	_02542f_jump:
		call   _06c138_func
		cmpb   $0x00000c,_0cfa7c_data
		je     _0256af_jump
		cmpb   $0x00000c,_0cfa80_data
		je     _0256af_jump
		cmpb   $0x00000c,_0cfa7f_data
		je     _0256af_jump
		cmpb   $0x000005,_0ce6bd_data
		je     _0256af_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _0254b3_jump
		xor    %edx,%edx
		mov    _0ce688_data,%bx
		mov    %dx,_0ce692_data
		mov    _0ce67c_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0ce688_data
		mov    %edx,_0ce67c_data

	_0254b3_jump:
		cmpb   $0x000000,_0cfa54_data
		je     _0254ec_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _0254dd_jump
		cmpb   $0x000028,_0ce6bc_data
		jne    _0254dd_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _025593_jump

	_0254dd_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _025593_jump

	_0254ec_jump:
		cmpb   $0x000001,_0ce6bd_data
		jne    _02552b_jump
		mov    _0ce6bc_data,%ah
		cmp    $0x000009,%ah
		je     _025505_jump
		cmp    $0x00000b,%ah
		jne    _02552b_jump

	_025505_jump:
		mov    _0ce6d1_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,_0ce6d1_data
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0ce6d1_data

	_02552b_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025539_jump
		neg    %eax

	_025539_jump:
		cmp    $0x000002,%eax
		jg     _02557f_jump
		xor    %eax,%eax
		call   _06caf8_func
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _025573_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _025593_jump

	_025573_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _025593_jump

	_02557f_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _06caf8_func

	_025593_jump:
		mov    %ecx,%eax
		call   _01d818_func
		xor    %esi,%esi
		mov    _0cfa72_data,%ah
		mov    %si,_0cf8a4_data
		test   %ah,%ah
		je     _0255b7_jump
		cmpw   $0x000000,_0cf870_data
		je     _0255c5_jump

	_0255b7_jump:
		movw   $0x000001,_0ce698_data
		jmp    _0256af_jump

	_0255c5_jump:
		mov    %si,_0ce698_data
		jmp    _0256af_jump

	_0255d1_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		jmp    _0256aa_jump

	_0255f0_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d810_func
		cmpb   $0x000002,0x00006c(%ecx)
		je     _025613_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d808_func
		jmp    _0256af_jump

	_025613_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d808_func
		jmp    _0256af_jump

	_025624_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d818_func
		jmp    _0256af_jump

	_025637_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		movb   $0x000007,0x000072(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _0256af_jump

	_025654_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		jmp    _0256aa_jump

	_02565f_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $0x0000ff,0x00007c(%ecx)
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _061220_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _0256af_jump

	_025690_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx

	_0256aa_jump:
		call   _061220_func

	_0256af_jump:
		movw   $0x000000,0x000052(%ecx)
		mov    0x000060(%ecx),%bx
		movb   $0x000000,0x000071(%ecx)
		cmp    $0x000028,%bx
		je     _0256cd_jump
		cmp    $0x00007a,%bx
		je     _0256cd_jump
		movb   $0x000000,0x000072(%ecx)

	_0256cd_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0256d4_func:
		push   %ecx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000009,0x000062(%eax)
		jne    _025702_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _025702_jump
		mov    0x000060(%eax),%cx
		cmp    $0x000017,%cx
		je     _025700_jump
		mov    %ecx,%eax
		and    $0x00ffff,%eax
		testb  $0x000008,_09257e_data(,%eax,4)
		je     _025702_jump

	_025700_jump:
		mov    $0x000001,%dl

	_025702_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ecx
		ret    



_025708_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    0x000062(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%dl
		jne    _025799_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _025799_jump
		mov    0x000060(%eax),%bx
		cmp    $0x000017,%bx
		jne    _025783_jump
		mov    $0x000001,%cl
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0cfa7d_data
		call   _01d818_func
		call   _06cd40_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		mov    $0x00000c,%esi
		call   _07228c_func
		mov    _0ce692_data,%di
		mov    $_0ce650_data,%eax
		sub    $0x000003,%edi
		mov    %si,_0cf8a4_data
		mov    %di,_0ce692_data
		call   _07c274_func
		jmp    _025799_jump

	_025783_jump:
		xor    %edx,%edx
		mov    %bx,%dx
		testb  $0x000008,_09257e_data(,%edx,4)
		je     _025799_jump
		call   _02f224_func
		mov    $0x000001,%cl

	_025799_jump:
		mov    %cl,%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0257a4_switch:
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _025996_case
		.long   _0259a2_case
		.long   _0259a9_case
		.long   _0259ba_case
		.long   _0259cb_case
		.long   _0259d4_case
		.long   _0259e0_case
		.long   _025946_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _025a38_case
		.long   _0259e0_case
		.long   _025946_case
		.long   _025946_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _025996_case
		.long   _0259a2_case
		.long   _0259a9_case
		.long   _0259ba_case
		.long   _0259cb_case
		.long   _0259d4_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _0259e0_case
		.long   _025946_case




_025820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_09257e_data(,%eax,4)
		jne    _025845_jump
		cmp    $0x000017,%ax
		jne    _025b23_jump

	_025845_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_09257d_data(,%eax,4)
		je     _02586a_jump
		cmp    $0x000017,%ax
		je     _02586a_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		mov    %eax,%edi
		jmp    _02586e_jump

	_02586a_jump:
		mov    0x000040(%ecx),%di

	_02586e_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000008(%esp)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%dx
		mov    0x000060(%ecx),%si
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		and    $0x00000f,%bl
		add    %edi,%eax
		cmp    $0x000017,%si
		jne    _0258e1_jump
		mov    _0ce69e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0258e1_jump
		test   %di,%di
		jle    _0258c3_jump
		mov    $0x00000f,%eax
		jmp    _0258c7_jump

	_0258c3_jump:
		jge    _0258c7_jump
		xor    %eax,%eax

	_0258c7_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c2848_data(%esi)
		mov    %eax,%ebx
		jmp    _0258f7_jump

	_0258e1_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c2848_data(%esi)

	_0258f7_jump:
		sub    %ebx,%eax
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		mov    0x000008(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01e588_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _0259e0_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0257a4_switch(,%eax,4)

	_025946_case:
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x000006(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0c2948_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		jmp    _025a3e_jump

	_025996_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _025a40_jump

	_0259a2_case:
		mov    %esi,%edx
		jmp    _025a40_jump

	_0259a9_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _025a40_jump

	_0259ba_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _025a40_jump

	_0259cb_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _025a40_jump

	_0259d4_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _025a40_jump

	_0259e0_case:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%esi
		mov    0x000008(%esp),%edx
		add    %esi,%eax
		add    %edx,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01e588_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0c2a48_data(,%edi,4)
		sub    %esi,%eax
		cmp    $0x000002,%ax
		jle    _025a3c_jump

	_025a38_case:
		mov    %ebx,%edx
		jmp    _025a40_jump

	_025a3c_jump:
		mov    %ebx,%edx

	_025a3e_jump:
		add    %eax,%edx

	_025a40_jump:
		mov    %ecx,%eax
		call   _025708_func
		test   %al,%al
		jne    _025b23_jump
		mov    0x000060(%ecx),%di
		cmp    $0x000017,%di
		jne    _025b10_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _025ad0_jump
		cmpb   $0x000002,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _025ad0_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025a87_jump
		neg    %eax

	_025a87_jump:
		cmp    $0x000002,%eax
		jle    _025ad0_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025a98_jump
		neg    %eax

	_025a98_jump:
		cmp    $0x000010,%eax
		jge    _025ad0_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _025ad0_jump
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01d818_func
		movb   $0x000001,_0cfa7d_data
		call   _06cd40_func
		mov    %si,0x000042(%ecx)
		jmp    _025b23_jump

	_025ad0_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _025ae2_jump
		cmpb   $0x000020,_0ce6bc_data
		je     _025ae9_jump

	_025ae2_jump:
		mov    $0x000001,%eax
		jmp    _025aeb_jump

	_025ae9_jump:
		xor    %eax,%eax

	_025aeb_jump:
		test   %eax,%eax
		je     _025b23_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _025b01_jump
		cmpb   $0x000016,_0ce6bc_data
		je     _025b08_jump

	_025b01_jump:
		mov    $0x000001,%eax
		jmp    _025b0a_jump

	_025b08_jump:
		xor    %eax,%eax

	_025b0a_jump:
		test   %eax,%eax
		je     _025b23_jump
		jmp    _025b12_jump

	_025b10_jump:
		je     _025b23_jump

	_025b12_jump:
		add    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _025388_func

	_025b23_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025b30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x000069(%ebx),%cl
		mov    0x000068(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01e588_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0c2748_data(%ebp)
		cmpw   $0x000017,0x000060(%ebx)
		je     _025b9e_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _025ba6_jump

	_025b9e_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_025ba6_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025bb0_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_025bb4_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_025bc0_jump:
		ret    



_025bc4_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025bd4_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025be4_func:
		cwtl   
		sar    %eax
		ret    



_025be8_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_025bf0_jump:
		mov    %edx,%eax
		ret    

	_025bf4_jump:
		xor    %eax,%eax
		ret    



_025bf8_func:
		mov    $0x000010,%eax
		ret    

_025c00_switch:
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025cac_case
		.long   _025cd9_case
		.long   _025d06_case
		.long   _025d37_case
		.long   _025d6d_case
		.long   _025da3_case
		.long   _025e1b_case
		.long   _025de5_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025dd4_case
		.long   _025e1b_case
		.long   _025de5_case
		.long   _025de5_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025cac_case
		.long   _025cd9_case
		.long   _025d06_case
		.long   _025d37_case
		.long   _025d6d_case
		.long   _025da3_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025e1b_case
		.long   _025de5_case




_025c7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_025bb4_func,%esi
		mov    $_025bc0_jump,%edi
		mov    $_025bc4_func,%ecx
		xor    %al,%al
		mov    $_025be8_func,%ebx

	_025c98_jump:
		cmp    $0x00001e,%al
		ja     _025e1b_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_025c00_switch(,%edx,4)

	_025cac_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0c2848_data(,%edx,4)
		mov    %esi,_0c2948_data(,%edx,4)
		mov    %esi,_0c2a48_data(,%edx,4)
		mov    %esi,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025cd9_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0c2848_data(,%edx,4)
		mov    %edi,_0c2948_data(,%edx,4)
		mov    %edi,_0c2a48_data(,%edx,4)
		mov    %edi,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025d06_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0c2848_data(,%edx,4)
		mov    %ecx,_0c2948_data(,%edx,4)
		mov    %ecx,_0c2a48_data(,%edx,4)
		mov    %ecx,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025d37_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025bd4_func,%ebp
		mov    %ebp,_0c2848_data(,%edx,4)
		mov    %ebp,_0c2948_data(,%edx,4)
		mov    %ebp,_0c2a48_data(,%edx,4)
		mov    %ebp,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025d6d_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025be4_func,%ebp
		mov    %ebp,_0c2848_data(,%edx,4)
		mov    %ebp,_0c2948_data(,%edx,4)
		mov    %ebp,_0c2a48_data(,%edx,4)
		mov    %ebp,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025da3_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,_0c2848_data(,%edx,4)
		mov    %ebx,_0c2948_data(,%edx,4)
		mov    %ebx,_0c2a48_data(,%edx,4)
		mov    %ebx,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025dd4_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025bf0_jump,_0c2848_data(,%edx,4)
		jmp    _025e2a_jump

	_025de5_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025bf4_jump,%ebp
		mov    %ebp,_0c2848_data(,%edx,4)
		mov    %ebp,_0c2948_data(,%edx,4)
		mov    %ebp,_0c2a48_data(,%edx,4)
		mov    %ebp,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025e1b_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025bb0_func,_0c2848_data(,%edx,4)

	_025e2a_jump:
		movl   $_025bf8_func,_0c2948_data(,%edx,4)
		movl   $_025bf0_jump,_0c2a48_data(,%edx,4)
		movl   $_025bf4_jump,_0c2748_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025c98_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025e60_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0de750_data,%eax
		mov    %eax,0x000010(%esp)
		call   _010010_func
		mov    0x000010(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _025e92_jump
		mov    %ebx,%eax

	_025e92_jump:
		mov    0x000010(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		test   %dx,%dx
		jl     _025eaf_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _025ead_jump
		mov    %ebx,%eax

	_025ead_jump:
		jmp    _025ec1_jump

	_025eaf_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _025ebf_jump
		mov    %ebx,%eax

	_025ebf_jump:
		neg    %eax

	_025ec1_jump:
		mov    0x000010(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _025ed9_jump
		mov    %ebx,%eax

	_025ed9_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _025ee6_jump
		mov    %ebx,%eax

	_025ee6_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _07fd11_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _0808e0_func
		mov    %edx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _07fd11_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _0808e0_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000020(%esp)
		mov    0x000010(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x00001c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %ah,%ah
		mov    %edx,0x000004(%esp)
		mov    %ah,0x000034(%esp)

	_025f58_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07fd11_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _080872_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07ff01_func
		mov    %eax,0x000024(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _080899_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07ff01_func
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000030(%esp)
		xor    %edi,%edi
		xor    %bh,%bh
		xor    %esi,%esi
		mov    %bh,0x000040(%esp)

	_025fb8_jump:
		mov    0x000028(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _080ae6_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    %edi,%eax
		mov    %esi,%edx
		call   _080872_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07ff01_func
		call   _0805b4_func
		mov    0x000018(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _0805b4_func
		mov    0x000018(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _080899_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07ff01_func
		call   _0805b4_func
		mov    0x000018(%esp),%edx
		mov    0x000020(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000018(%esp)
		mov    %edi,%eax
		mov    %esi,%edx
		mov    0x000008(%esp),%ecx
		call   _07fd4a_func
		mov    %eax,%edi
		mov    0x000040(%esp),%al
		mov    %edx,%esi
		inc    %al
		mov    0x000010(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		jbe    _025fb8_jump
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%esp),%ecx
		call   _07fd4a_func
		mov    %edx,0x00001c(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000004(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000010(%esp),%edx
		cmp    0x000001(%edx),%al
		jbe    _025f58_jump
		mov    0x000010(%esp),%eax
		mov    0x000010(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _0260f0_jump

	_0260a6_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000010(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _0260a6_jump

	_0260f0_jump:
		mov    0x000010(%esp),%eax
		mov    _0de752_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0de754_data,%edx
		mov    %al,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    0x000010(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %cl,%cl
		mov    0x000010(%esp),%edx
		mov    %al,%bh
		mov    0x000010(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _0261ef_jump

	_026143_jump:
		mov    0x000010(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _0261d8_jump

	_026153_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x00003c(%esp),%dl
		mov    %bl,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    %bh,%cl
		imul   %esi,%ecx
		cmpw   $0x000100,_0de754_data
		jg     _02617f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _02619c_jump

	_02617f_jump:
		cmp    $0x0000a0,%dx
		jae    _02618f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _02619c_jump

	_02618f_jump:
		mov    0x000010(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx

	_02619c_jump:
		mov    %esi,0x000008(%eax)
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    %cl,%dh
		mov    %cl,0x000033(%eax)
		add    %bh,%dh
		mov    %cl,0x00002d(%eax)
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    0x00003c(%esp),%ch
		mov    %dh,0x00002f(%eax)
		add    %ch,%dl
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000010(%esp),%edx
		inc    %bl
		mov    (%edx),%cl
		add    $0x000034,%eax
		cmp    %cl,%bl
		jb     _026153_jump

	_0261d8_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000010(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jb     _026143_jump

	_0261ef_jump:
		mov    0x000010(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_026200_case:
		push   %edx
		mov    _0de750_data,%edx
		test   %edx,%edx
		je     _02623a_jump
		cmpl   $0x000000,0x000020(%edx)
		je     _026219_jump
		lea    0x000020(%edx),%eax
		call   _07fbcc_func

	_026219_jump:
		cmpl   $0x000000,0x000024(%edx)
		je     _026227_jump
		lea    0x000024(%edx),%eax
		call   _07fbcc_func

	_026227_jump:
		cmpl   $0x000000,_0de750_data
		je     _02623a_jump
		mov    $_0de750_data,%eax
		call   _07fbcc_func

	_02623a_jump:
		pop    %edx
		ret    



_02623c_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0de754_data
		xor    %edx,%edx
		mov    %bx,_0de756_data
		mov    %dx,_0de75a_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0de758_data
		test   %edx,%edx
		je     _026362_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _026362_jump
		mov    $0x00003c,%eax
		call   _07fbb4_func
		mov    %eax,%edx
		mov    %eax,_0de750_data
		test   %eax,%eax
		je     _026362_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _0262c0_jump
		mov    %ebx,%eax

	_0262c0_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _0262d2_jump
		mov    %ebx,%eax

	_0262d2_jump:
		mov    %al,0x000001(%edx)
		mov    (%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    (%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000004(%edx)
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07fbb4_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _026362_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _07fbb4_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _026362_jump
		mov    _0cd130_data,%eax
		mov    _0de754_data,%bx
		mov    %eax,0x000018(%edx)
		cmp    $0x000100,%bx
		jg     _026358_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _026360_jump

	_026358_jump:
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_026360_jump:
		mov    $0x000001,%cl

	_026362_jump:
		test   %cl,%cl
		je     _0263f3_jump
		cmpw   $0x000100,_0de754_data
		jg     _0263aa_jump
		mov    _0de758_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x000010(%esi),%ebx
		mov    _0de752_data,%edi
		add    %ebx,%eax
		mov    _0de756_data,%ebx
		mov    0x000018(%esi),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		add    %ebx,%eax
		mov    %edi,%ebx
		jmp    _0263ca_jump

	_0263aa_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _07e380_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_0263ca_jump:
		call   _07e380_func
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    0x000008(%esp),%ax
		sar    $0x000010,%edx
		call   _025e60_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_0263f3_jump:
		call   _026200_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_026404_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0de750_data,%esi
		mov    0x00000d(%esi),%ah
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%ah
		jne    _0265a6_jump
		cmpw   $0x000000,0x00000a(%esi)
		jl     _026435_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _026447_jump

	_026435_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_026447_jump:
		mov    _0de752_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0de754_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000024(%esp)
		mov    _0de758_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000010(%esp)

	_02648d_jump:
		mov    _0de756_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x000030(%esp)
		sub    $0x0000a0,%ebp

	_0264a2_jump:
		mov    0x000002(%ecx),%edi
		movswl (%ecx),%edx
		sar    $0x000010,%edi
		shl    $0x000009,%edx
		add    $0x000200,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edi
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %ebx,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%ebx
		mov    0x000010(%esp),%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%ebx
		sub    %edi,%edx
		imul   %ebx,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%bx
		idiv   %ebx
		add    $0x00000a,%ecx
		add    $0x000064,%edi
		mov    0x000030(%esp),%dh
		add    %edi,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x000030(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		jbe    _0264a2_jump
		mov    0x000010(%esp),%edx
		mov    0x000034(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000024(%esp),%al
		mov    %bh,0x000034(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000010(%esp)
		cmp    %ah,%bh
		jbe    _02648d_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026569_jump
		neg    %eax

	_026569_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _0268b6_jump
		cmpw   $0x000000,0x00000a(%esi)
		jge    _026590_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _0268b6_jump

	_026590_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0265a6_jump:
		cmp    $0x000002,%ah
		jne    _0265f3_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_0265f3_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _02660c_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026605_jump
		neg    %eax

	_026605_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_02660c_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _026656_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _026656_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		inc    %eax
		mov    %ax,0x00002c(%esi)
		mov    0x000038(%esi),%al
		movb   $0x000001,0x000035(%esi)
		test   %al,%al
		je     _026650_jump
		movb   $0x000001,0x000037(%esi)

	_026650_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _0266a0_jump

	_026656_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02667f_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _02667f_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _0266a0_jump

	_02667f_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _02669c_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _0266a0_jump

	_02669c_jump:
		movb   $0x000000,0x000035(%esi)

	_0266a0_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %eax,%edx
		jle    _0266e0_jump
		cmpb   $0x000000,0x000034(%esi)
		jne    _0266e0_jump
		cmpb   $0x000000,0x000037(%esi)
		jne    _0266e0_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _026713_jump

	_0266e0_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%dl
		mov    $0x0000c8,%eax
		lea    0x000003(%edx),%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %ebx,%eax
		jg     _026701_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _026713_jump

	_026701_jump:
		add    $0x0000cb,%edx
		cmp    %edx,%eax
		jl     _026713_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_026713_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026734_jump
		neg    %eax

	_026734_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026764_jump
		neg    %eax

	_026764_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05e03c_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05e03c_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x00002c(%esp)
		mov    %eax,0x000004(%esp)

	_0267cb_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_0267d1_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%edx
		imul   %edx,%ebp
		add    %ebp,%ebx
		imul   0x000004(%esp),%eax
		imul   0x000014(%esp),%edx
		mov    0x000002(%ecx),%edi
		sar    $0x000010,%edi
		neg    %edi
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		sar    $0x000009,%eax
		mov    %edx,(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		add    (%esp),%edx
		imul   0x000018(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		jbe    _0267d1_jump
		mov    0x00002c(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x00002c(%esp)
		cmp    %ah,%bh
		jbe    _0267cb_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026885_jump
		neg    %eax

	_026885_jump:
		mov    0x000030(%esi),%dx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %dx,0x000030(%esi)
		test   %eax,%eax
		jge    _02689d_jump
		neg    %eax

	_02689d_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _0268b6_jump
		movw   $0x000000,0x000006(%esi)

	_0268b6_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0268c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0de750_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _026a0a_jump
		lea    0x000008(%edx),%ebx

	_0268f2_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000014(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000018(%esp)
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    0x000006(%esi),%esi
		dec    %ebp
		sar    $0x000010,%esi
		mov    %ebp,0x000010(%esp)
		mov    0x000014(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000018(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    %esi,%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    0x00001c(%esp),%ebp
		mov    %ebp,(%esp)
		mov    0x000024(%esp),%ebp
		sub    0x000010(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _0269f2_jump
		mov    %esi,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000018(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x00001c(%edx)
		mov    0x00001c(%esp),%esi
		mov    %ebp,0x000010(%edx)
		mov    0x000024(%esp),%ebp
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%esi
		mov    %ebp,0x000014(%edx)
		mov    0x00000c(%esp),%eax
		mov    %esi,0x000024(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _010045_func

	_0269f2_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _0268f2_jump

	_026a0a_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026a20_func:
		mov    _0962b9_data,%al
		ret    



_026a28_func:
		mov    %al,_0962b9_data
		ret    



_026a30_func:
		mov    _0962b8_data,%al
		ret    



_026a38_func:
		movb   $0x000001,_0962b8_data
		ret    



_026a40_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0962b8_data
		je     _026a8a_jump
		mov    $0x000016,%edx
		mov    _0cf82e_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0de80e_data
		mov    %dx,_0cf82e_data
		mov    %bx,_0cf88c_data
		mov    _0cf83a_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0de80c_data
		mov    %bx,_0cf83a_data
		mov    %dl,_0962b9_data

	_026a8a_jump:
		pop    %edx
		pop    %ebx
		ret    



_026a90_func:
		xor    %ah,%ah
		mov    %ah,_0962b5_data
		ret    



_026a9c_func:
		mov    _0de80e_data,%ax
		mov    %ax,_0cf82e_data
		mov    _0de80c_data,%ax
		mov    %ax,_0cf83a_data
		ret    



_026ab8_func:
		push   %edx
		mov    $0x000007,%edx
		xor    %ah,%ah
		mov    %dx,_0cf88c_data
		mov    %ah,_0962b8_data
		pop    %edx
		ret    



_026ad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _09629e_data,%dx
		mov    _0962a0_data,%cl
		mov    _0962a2_data,%si
		mov    _0962a4_data,%di
		test   %dx,%dx
		jge    _026afa_jump
		add    $0x000048,%edx
		jmp    _026b03_jump

	_026afa_jump:
		cmp    $0x000048,%dx
		jle    _026b03_jump
		sub    $0x000048,%edx

	_026b03_jump:
		mov    $0x000012,%ebx
		movswl %dx,%eax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _026b3b_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _09601a_data(%eax),%si
		mov    _09601c_data(%eax),%ax
		mov    %eax,%edi
		jmp    _026bdc_jump

	_026b3b_jump:
		mov    $0x000024,%ebx
		sub    %edx,%ebx
		test   %bx,%bx
		jl     _026b70_jump
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _09601a_data(%eax),%si
		mov    _09601c_data(%eax),%ax
		neg    %esi
		mov    %eax,%edi
		jmp    _026bdc_jump

	_026b70_jump:
		mov    $0x000036,%ebx
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _026ba9_jump
		mov    %edx,%eax
		sub    $0x000024,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    %cl,%bl
		add    %eax,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _09601a_data(%eax),%si
		mov    _09601c_data(%eax),%ax
		mov    %eax,%edi
		neg    %esi
		jmp    _026bda_jump

	_026ba9_jump:
		mov    $0x000048,%eax
		sub    %edx,%eax
		test   %ax,%ax
		jl     _026bdc_jump
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _09601a_data(%eax),%si
		mov    _09601c_data(%eax),%ax
		mov    %eax,%edi

	_026bda_jump:
		neg    %edi

	_026bdc_jump:
		mov    %di,_0962a4_data
		mov    %si,_0962a2_data
		mov    %cl,_0962a0_data
		mov    %dx,_09629e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026c00_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_09629e_data
		mov    %ah,_0962a0_data
		mov    %dx,_0962a4_data
		mov    %dx,_0962a2_data
		pop    %edx
		ret    



_026c30_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000012,%edx
		xor    %ah,%ah
		mov    %dx,_09629e_data
		mov    %ah,_0962a0_data
		call   _026ad0_func
		pop    %edx
		ret    



_026c5c_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    _0962a0_data,%ah
		inc    %ah
		mov    %ah,_0962a0_data
		cmp    $0x000007,%ah
		jbe    _026c85_jump
		movb   $0x000007,_0962a0_data

	_026c85_jump:
		call   _026ad0_func
		pop    %edx
		ret    



_026c8c_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000024,%eax
		mov    _09629e_data,%dx
		sub    %edx,%eax
		mov    %ax,_09629e_data
		call   _026ad0_func
		pop    %edx
		ret    



_026cb8_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000048,%eax
		mov    _09629e_data,%dx
		sub    %edx,%eax
		mov    %ax,_09629e_data
		call   _026ad0_func
		pop    %edx
		ret    



_026ce4_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,0x000028(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    $0x000008,%cl
		shl    %cl,%eax
		mov    $0x000008,%cl
		mov    %eax,_0962a8_data
		mov    %edx,%eax
		shl    %cl,%eax
		mov    %eax,_0962ac_data
		pop    %ecx
		ret    



_026d88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0962b6_data,%cl
		xor    %ebx,%ebx
		xor    %eax,%eax
		cmp    $0x000005,%cl
		ja     _026da6_jump
		cmpb   $0x000000,_0962b7_data
		je     _026de1_jump

	_026da6_jump:
		cmpb   $0x000005,_0962b6_data
		jbe    _026db7_jump
		xor    %ah,%ah
		mov    %ah,_0962b6_data

	_026db7_jump:
		mov    $0x000101,%eax
		call   _06bf60_func
		xor    %cl,%cl
		mov    %eax,%ebx
		mov    $0x000101,%eax
		sub    $0x000080,%ebx
		call   _06bf60_func
		sub    $0x000080,%eax
		mov    %cl,_0962b7_data

	_026de1_jump:
		mov    _0962a0_data,%ecx
		movswl %bx,%ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    _0962a8_data,%ecx
		add    %ebx,%ecx
		mov    _0962a2_data,%ebx
		cwtl   
		sar    $0x000010,%ebx
		mov    _0962ac_data,%esi
		add    %ebx,%eax
		mov    %ecx,_0962a8_data
		add    %eax,%esi
		mov    %ecx,%eax
		mov    $0x000008,%cl
		mov    %esi,_0962ac_data
		test   %eax,%eax
		je     _026e23_jump
		sar    %cl,%eax
		jmp    _026e29_jump

	_026e23_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_026e29_jump:
		cwtl   
		mov    $0x000008,%cl
		mov    %eax,0x000028(%edx)
		mov    _0962ac_data,%eax
		test   %eax,%eax
		je     _026e3c_jump
		sar    %cl,%eax
		jmp    _026e42_jump

	_026e3c_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_026e42_jump:
		cwtl   
		mov    %eax,0x00002c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026e4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000013,%eax
		call   _06bf60_func
		mov    %al,%cl
		xor    %ah,%ah

	_026e5d_jump:
		mov    %ah,%al
		add    %cl,%al
		cmp    $0x000014,%al
		jb     _026e67_jump
		sub    $0x000014,%al

	_026e67_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0de766_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0ccdf0_data,%edx
		add    %ebx,%edx
		cmp    _095fe8_data,%al
		je     _026ec4_jump
		mov    0x000050(%edx),%bx
		cmp    $0x000002,%bx
		je     _026ea1_jump
		cmp    $0x000001,%bx
		je     _026ea1_jump
		cmp    $0x000003,%bx
		jne    _026ec4_jump

	_026ea1_jump:
		mov    $0x000002,%bh
		movb   $0x00000a,0x000076(%edx)
		mov    %al,_095fe8_data
		mov    0x000050(%edx),%al
		mov    %bh,_095fe7_data
		mov    %al,_095fe9_data
		movw   $0x000006,0x000050(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026ec4_jump:
		inc    %ah
		cmp    $0x000014,%ah
		jb     _026e5d_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026ed0_func:
		push   %edx
		cmpb   $0x000005,_095feb_data
		jb     _026ef8_jump
		mov    _095fe7_data,%dl
		cmp    $0x000001,%dl
		jne    _026eec_jump
		call   _026e4c_func
		pop    %edx
		ret    

	_026eec_jump:
		cmp    $0x000002,%dl
		je     _026ef8_jump
		movb   $0x000001,_095fe7_data

	_026ef8_jump:
		pop    %edx
		ret    

_026efc_switch:
		.long   _026fcf_case
		.long   _026fca_case
		.long   _026fd4_case
		.long   _026fde_case
		.long   _026fd9_case
		.long   _026fe8_case
		.long   _026fe8_case
		.long   _026fe8_case
		.long   _026fe8_case
		.long   _026fe8_case
		.long   _026fe8_case
		.long   _026fe3_case




_026f2c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %edx,%eax
		mov    0x000020(%esp),%edx
		mov    0x000004(%esi),%ebx
		mov    0x000020(%ebx),%cx
		and    $0x00003f,%ch
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000008(%esp),%cx
		mov    %ecx,(%esp)
		mov    _096008_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		imul   0x000004(%esp),%ecx
		add    $0x000018,%ebx
		cwtl   
		mov    (%ebx),%ebx
		shl    $0x000002,%ecx
		shl    $0x000002,%eax
		add    %ecx,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%al
		mov    %al,%cl
		mov    %al,0x00000c(%esp)
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    (%esi),%ecx
		add    %ecx,%eax
		cmpb   $0x000000,0x00000c(%esp)
		je     _026fef_jump
		cmpb   $0x000000,0x000004(%eax)
		je     _026fef_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %cx,(%edi)
		mov    0x000002(%ebx),%bl
		xor    %bh,%bh
		mov    %bx,0x000000(%ebp)
		mov    0x000004(%eax),%al
		sub    $0x000027,%al
		cmp    $0x00000b,%al
		ja     _026fe8_case
		and    $0x0000ff,%eax
		jmp    *%cs:_026efc_switch(,%eax,4)

	_026fca_case:
		movb   $0x000002,(%edx)
		jmp    _026feb_jump

	_026fcf_case:
		movb   $0x000001,(%edx)
		jmp    _026feb_jump

	_026fd4_case:
		movb   $0x000003,(%edx)
		jmp    _026feb_jump

	_026fd9_case:
		movb   $0x000004,(%edx)
		jmp    _026feb_jump

	_026fde_case:
		movb   $0x000005,(%edx)
		jmp    _026feb_jump

	_026fe3_case:
		movb   $0x000007,(%edx)
		jmp    _026feb_jump

	_026fe8_case:
		movb   $0x000000,(%edx)

	_026feb_jump:
		mov    $0x000001,%al
		jmp    _026ff1_jump

	_026fef_jump:
		xor    %al,%al

	_026ff1_jump:
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_026ffc_switch:
		.long   _02703c_case
		.long   _027056_case
		.long   _02705f_case
		.long   _027068_case
		.long   _027071_case
		.long   _027083_case
		.long   _02708f_case
		.long   _027089_case




_02701c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%ax
		cmp    $0x000007,%ax
		ja     _0270d5_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_026ffc_switch(,%eax,4)

	_02703c_case:
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		jmp    _0270d5_jump

	_027056_case:
		movb   $0x000001,0x00006b(%edx)
		jmp    _0270d5_jump

	_02705f_case:
		movb   $0x000000,0x00006b(%edx)
		jmp    _0270d5_jump

	_027068_case:
		movb   $0x000002,0x00006b(%edx)
		jmp    _0270d5_jump

	_027071_case:
		cmpb   $0x000005,0x000076(%edx)
		ja     _02707d_jump
		movb   $0x000007,0x00006b(%edx)
		jmp    _0270d5_jump

	_02707d_jump:
		movb   $0x000003,0x00006b(%edx)
		jmp    _0270d5_jump

	_027083_case:
		movb   $0x000004,0x00006b(%edx)
		jmp    _0270d5_jump

	_027089_case:
		movb   $0x000005,0x00006b(%edx)
		jmp    _0270d5_jump

	_02708f_case:
		mov    0x000004(%edx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx
		jne    _0270c5_jump
		mov    0x000076(%edx),%bh
		movb   $0x000000,0x00006b(%edx)
		dec    %bh
		mov    %bh,0x000076(%edx)
		jne    _0270d5_jump
		xor    %eax,%eax
		mov    _095fe9_data,%al
		mov    %ax,0x000050(%edx)
		call   _026e4c_func
		jmp    _0270d5_jump

	_0270c5_jump:
		mov    _0cf9f9_data,%ah
		cmp    $0x000001,%ah
		jne    _0270d5_jump
		add    %ah,%bl
		mov    %bl,0x00006b(%edx)

	_0270d5_jump:
		cmpw   $0x000000,0x000050(%edx)
		je     _02713a_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		mov    _0cf89c_data,%ebx
		mov    _0de762_data(,%eax,8),%ecx
		mov    _09600e_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    0x000054(%edx),%eax
		mov    %ebx,0x000028(%edx)
		sar    $0x000010,%eax
		mov    _0cf8a4_data,%ebx
		mov    _0de764_data(,%eax,8),%ecx
		mov    _096010_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000069(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,0x00002c(%edx)

	_02713a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027140_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0271ee_jump

	_027162_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _0271de_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0271de_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d738_func
		movb   $0x000000,0x00006b(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000081(%esi),%ah
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		xor    %edx,%edx
		or     $0x000004,%ah
		mov    0x000069(%esi),%dl
		mov    %ah,0x000081(%esi)
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01f8e8_func
		jmp    _0271ee_jump

	_0271de_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _027162_jump

	_0271ee_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0271f8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %bl,(%esp)
		mov    %cl,0x000004(%esp)
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0272d0_jump

	_02721f_jump:
		cmp    0x000060(%ecx),%dx
		jne    _0272c0_jump
		mov    0x000024(%ecx),%edi
		test   %edi,%edi
		jne    _0272c0_jump
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%bl
		add    %ebp,%edx
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%bl
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000004(%esp),%bl
		mov    (%esp),%dl
		call   _01d818_func
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		add    %ebx,%edx
		mov    _0cf8a4_data,%ebx
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%ebx
		or     $0x000004,%ah
		sub    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		cmp    $0x000064,%edx
		setl   %al
		movb   $0x000001,0x00007e(%ecx)
		movw   $0x000000,0x00005e(%ecx)
		xor    %ah,%ah
		mov    %edi,0x000030(%ecx)
		inc    %eax
		mov    %ax,0x000042(%ecx)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0272c0_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _02721f_jump

	_0272d0_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0272d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cef5b_data,%dl
		mov    %ah,_095fe7_data
		cmp    $0x000004,%dl
		je     _0272fc_jump
		mov    $0x000052,%edx
		mov    $0x000006,%bl
		mov    $0x000002,%al
		jmp    _027341_jump

	_0272fc_jump:
		mov    _0ce6dc_data,%eax
		mov    0x00006e(%eax),%dh
		cmp    $0x000001,%dh
		je     _027313_jump
		cmp    $0x000003,%dh
		je     _027313_jump
		cmp    $0x000005,%dh
		jne    _02731e_jump

	_027313_jump:
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x000007,%al
		jmp    _027341_jump

	_02731e_jump:
		cmp    $0x00000c,%dh
		je     _02732e_jump
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x00000e,%al
		jmp    _027341_jump

	_02732e_jump:
		mov    $0x0000a1,%edx
		mov    $0x000007,%eax
		mov    $0x000005,%bl
		call   _06bf60_func
		add    $0x000018,%al

	_027341_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		and    $0x0000ff,%ebx
		and    $0x00ffff,%edx
		mov    %esi,%eax
		call   _0271f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_027360_switch:
		.long   _0274dc_case
		.long   _027508_case
		.long   _027534_case
		.long   _027587_case
		.long   _0275cd_case
		.long   _027534_case
		.long   _0275ee_case




_02737c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    _0cf89e_data,%dx
		mov    0x000028(%eax),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0cf8a6_data,%cx
		mov    0x000068(%ebp),%al
		xor    %bh,%bh
		add    %edx,%eax
		mov    %bh,0x000020(%esp)
		add    $0x000008,%eax
		mov    0x00002c(%ebp),%dx
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000069(%ebp),%al
		mov    %bh,_0de824_data
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x000008(%esp)

	_0273ce_jump:
		cmpb   $0x000001,_0de824_data
		jae    _027757_jump
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0de766_data(,%edx,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%ecx
		add    %ecx,%edx
		cmpw   $0x000000,0x000050(%edx)
		je     _02774c_jump
		cmp    _096008_data,%bl
		je     _02774c_jump
		mov    _0cf89e_data,%di
		xor    %ecx,%ecx
		mov    0x000028(%edx),%ax
		mov    0x000068(%edx),%cl
		sub    %edi,%eax
		add    %eax,%ecx
		add    $0x000008,%ecx
		movswl %cx,%eax
		mov    0x00001a(%esp),%ecx
		sar    $0x000010,%ecx
		sub    %eax,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x000012(%esp),%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _027445_jump
		neg    %eax

	_027445_jump:
		mov    %eax,%esi
		mov    %eax,0x00000c(%esp)
		cmp    $0x000015,%ax
		jg     _02774c_jump
		mov    _0cf8a6_data,%ax
		mov    0x00002c(%edx),%cx
		sub    %eax,%ecx
		mov    %ecx,0x000004(%esp)
		xor    %ecx,%ecx
		mov    0x000004(%esp),%eax
		mov    0x000069(%edx),%cl
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		movswl %cx,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    %ax,0x000018(%esp)
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _027490_jump
		neg    %eax

	_027490_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %eax,0x000010(%esp)
		cmp    $0x000015,%si
		jg     _02774c_jump
		imul   %edi,%edi
		imul   %ecx,%ecx
		mov    _0962b0_data,%esi
		add    %edi,%ecx
		cmp    %esi,%ecx
		jg     _02774c_jump
		mov    0x000050(%edx),%ax
		dec    %eax
		mov    %bl,_096008_data
		cmp    $0x000006,%ax
		ja     _027625_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_027360_switch(,%eax,4)

	_0274dc_case:
		movw   $0x000002,0x000050(%edx)
		xor    %dl,%dl
		mov    %dl,_0962b6_data
		mov    _095feb_data,%dh
		mov    $0x0000c1,%eax
		inc    %dh
		mov    %ax,_095fe4_data
		mov    %dh,_095feb_data
		jmp    _027625_jump

	_027508_case:
		xor    %al,%al
		mov    $0x0000c1,%edi
		mov    %al,_0962b6_data
		mov    _095feb_data,%ah
		movw   $0x000003,0x000050(%edx)
		inc    %ah
		mov    %di,_095fe4_data
		mov    %ah,_095feb_data
		jmp    _027625_jump

	_027534_case:
		mov    %edx,%eax
		call   _07b628_func
		mov    _095feb_data,%cl
		mov    _095fea_data,%ah
		inc    %cl
		dec    %ah
		mov    %cl,_095feb_data
		mov    0x000050(%edx),%cx
		mov    %ah,_095fea_data
		cmp    $0x000006,%cx
		jne    _027568_jump
		mov    %edx,%eax
		call   _0272d8_func

	_027568_jump:
		mov    $0x00000e,%esi
		xor    %ch,%ch
		movw   $0x000000,0x000050(%edx)
		mov    %ch,_0962b6_data
		mov    %si,_095fe4_data
		jmp    _027625_jump

	_027587_case:
		movw   $0x0000d6,_095fe4_data
		mov    _0962b6_data,%ah
		inc    %ah
		mov    0x000076(%edx),%cl
		mov    %ah,_0962b6_data
		dec    %cl
		mov    %cl,0x000076(%edx)
		jne    _027625_jump
		mov    %edx,%eax
		call   _07b628_func
		movw   $0x000000,0x000050(%edx)
		mov    $0x00000e,%edx
		mov    %cl,_0962b6_data
		mov    %dx,_095fe4_data
		jmp    _027625_jump

	_0275cd_case:
		mov    %ebp,%eax
		call   _026c5c_func
		mov    _0962b6_data,%al
		mov    $0x000036,%edi
		inc    %al
		mov    %di,_095fe4_data
		mov    %al,_0962b6_data
		jmp    _027625_jump

	_0275ee_case:
		mov    $0x000001,%edx
		mov    $0x000036,%ecx
		mov    _096012_data,%si
		mov    %dx,_09600e_data
		mov    %cx,_095fe4_data
		mov    _0962b6_data,%ch
		sub    $0x000005,%esi
		inc    %ch
		mov    %si,_096012_data
		mov    %ch,_0962b6_data

	_027625_jump:
		xor    %eax,%eax
		mov    _0de824_data,%al
		xor    %cl,%cl
		mov    %cl,_0de760_data(,%eax,8)
		mov    0x000010(%esp),%edx
		mov    %cl,_0de761_data(,%eax,8)
		cmp    0x00000c(%esp),%dx
		jg     _0276a6_jump
		mov    _0962a0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _02765d_jump
		mov    $0x000001,%eax
		jg     _02765d_jump
		neg    %eax

	_02765d_jump:
		mov    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _027674_jump
		mov    $0x000001,%eax
		jg     _027674_jump
		neg    %eax

	_027674_jump:
		cmp    %eax,%edx
		jne    _027694_jump
		mov    $0x000001,%dh
		mov    0x000020(%esp),%cl
		xor    %eax,%eax
		add    %dh,%cl
		mov    _0de824_data,%al
		mov    %cl,0x000020(%esp)
		mov    %dh,_0de761_data(,%eax,8)
		jmp    _0276a6_jump

	_027694_jump:
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0de824_data,%al
		add    %dl,%bh
		mov    %dl,_0de760_data(,%eax,8)

	_0276a6_jump:
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jg     _02770a_jump
		mov    _0962a2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0276c7_jump
		mov    $0x000001,%eax
		jg     _0276c7_jump
		neg    %eax

	_0276c7_jump:
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0276de_jump
		mov    $0x000001,%eax
		jg     _0276de_jump
		neg    %eax

	_0276de_jump:
		cmp    %eax,%edx
		jne    _0276f6_jump
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0de824_data,%al
		add    %dl,%bh
		mov    %dl,_0de760_data(,%eax,8)
		jmp    _02770a_jump

	_0276f6_jump:
		xor    %eax,%eax
		mov    _0de824_data,%al
		mov    $0x000001,%ch
		mov    %ch,_0de761_data(,%eax,8)
		add    %ch,0x000020(%esp)

	_02770a_jump:
		xor    %eax,%eax
		mov    _0de824_data,%al
		mov    0x000014(%esp),%edx
		mov    %dx,_0de75c_data(,%eax,8)
		mov    0x000018(%esp),%edx
		mov    %dx,_0de75e_data(,%eax,8)
		mov    %al,%dh
		mov    %bl,_0de762_data(,%eax,8)
		inc    %dh
		mov    _0962b4_data,%bl
		mov    %dh,_0de824_data
		cmp    %bl,%dh
		jbe    _027757_jump
		mov    %dh,_0962b4_data
		jmp    _027757_jump

	_02774c_jump:
		inc    %bl
		cmp    $0x000014,%bl
		jb     _0273ce_jump

	_027757_jump:
		cmpb   $0x000000,_0de824_data
		je     _027786_jump
		test   %bh,%bh
		je     _02776b_jump
		mov    %ebp,%eax
		call   _026c8c_func

	_02776b_jump:
		cmpb   $0x000000,0x000020(%esp)
		je     _027779_jump
		mov    %ebp,%eax
		call   _026cb8_func

	_027779_jump:
		mov    _095fe2_data,%eax
		sar    $0x000010,%eax
		call   _072960_func

	_027786_jump:
		mov    _0de824_data,%al
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027798_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		mov    %esi,%eax
		call   _01e030_func
		xor    %eax,%eax
		mov    0x000036(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    0x000038(%esi),%bx
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    $0x00002e,%edx
		mov    0x000069(%esi),%al
		mov    %dx,0x000004(%esp)
		add    %eax,%ebx
		mov    $_0ce650_data,%eax
		mov    $0x000002,%edx
		call   _01e030_func
		movzbw _0ce6b8_data,%di
		mov    _0ce686_data,%cx
		sub    $0x000008,%ebx
		add    %ecx,%edi
		mov    _0ce6bd_data,%cl
		mov    _0ce688_data,%ax
		test   %cl,%cl
		jne    _027812_jump
		cmpb   $0x000004,_0ce6bc_data
		je     _027825_jump

	_027812_jump:
		mov    _0ce6bd_data,%cl
		cmp    $0x000001,%cl
		jne    _027843_jump
		cmp    _0ce6bc_data,%cl
		jne    _027843_jump

	_027825_jump:
		mov    _096008_data,%cl
		sub    $0x000016,%edi
		add    $0x000020,%eax
		cmp    $0x000019,%cl
		je     _02789d_jump
		movb   $0x000019,0x000008(%esp)
		jmp    _02789d_jump

	_027843_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _027855_jump
		cmpb   $0x000014,_0ce6bc_data
		je     _027879_jump

	_027855_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _027867_jump
		cmpb   $0x000011,_0ce6bc_data
		je     _027879_jump

	_027867_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _02789d_jump
		cmpb   $0x000012,_0ce6bc_data
		jne    _02789d_jump

	_027879_jump:
		mov    0x000004(%esp),%ecx
		add    $0x000020,%ecx
		sub    $0x000026,%edi
		mov    %cx,0x000004(%esp)
		mov    _096008_data,%cl
		add    $0x00004a,%eax
		cmp    $0x00001a,%cl
		je     _02789d_jump
		movb   $0x00001a,0x000008(%esp)

	_02789d_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0279b0_jump
		movswl %dx,%edx
		push   %edx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		push   %edx
		cwtl   
		mov    $0x000010,%ecx
		push   %eax
		movswl %di,%eax
		movswl %bx,%edx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _0279b0_jump
		cmpw   $0x000000,_0962a4_data
		jl     _0279b0_jump
		cmpb   $0x000005,_095fea_data
		ja     _027903_jump
		cmpw   $0x000003,_09600a_data
		je     _027903_jump
		movb   $0x000001,_0962a0_data
		jmp    _02790a_jump

	_027903_jump:
		xor    %al,%al
		mov    %al,_0962a0_data

	_02790a_jump:
		mov    (%esp),%eax
		add    $0x000010,%eax
		sub    %edi,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		mov    0x000004(%esp),%ebx
		shl    $0x000004,%eax
		add    $0x00000f,%ebx
		sub    %edx,%eax
		mov    %bx,0x000004(%esp)
		lea    0x000000(,%eax,8),%edx
		mov    0x000002(%esp),%ebx
		neg    %edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x4062c000,%ecx
		xor    %ebx,%ebx
		call   _07fd04_func
		call   _07fd4a_func
		mov    $0x9999999a,%ebx
		mov    $0x3fc99999,%ecx
		call   _07ff01_func
		call   _0805b4_func
		mov    %ax,_09629e_data
		call   _026ad0_func
		mov    %esi,%eax
		call   _027140_func
		mov    $0x00002c,%eax
		mov    0x000008(%esp),%dl
		call   _072960_func
		cmp    $0x000019,%dl
		jne    _02799f_jump
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func

	_02799f_jump:
		mov    0x000008(%esp),%al
		xor    %dh,%dh
		mov    %al,_096008_data
		mov    %dh,_0962b6_data

	_0279b0_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0279bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _096012_data,%dx
		mov    _096016_data,%bx
		mov    _09600e_data,%cx
		cmpb   $0x000001,_095fe6_data
		jne    _027a2e_jump
		dec    %cx
		jne    _027a2e_jump
		add    %ebx,%edx
		mov    _0de814_data,%bx
		mov    $0x0001f4,%ecx
		cmp    %bx,%dx
		jl     _027a03_jump
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    %bx,_096014_data
		jmp    _027a2e_jump

	_027a03_jump:
		mov    _0de812_data,%si
		cmp    %si,%dx
		jg     _027a20_jump
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_096014_data
		jmp    _027a2e_jump

	_027a20_jump:
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_096014_data

	_027a2e_jump:
		mov    %cx,_09600e_data
		mov    %bx,_096016_data
		mov    %dx,_096012_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_027a4c_switch:
		.long   _027d86_case
		.long   _027d86_case
		.long   _027d86_case
		.long   _027d97_case
		.long   _027d9b_case
		.long   _027d9b_case
		.long   _027d8e_case




_027a68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    $0xfffffec0,%edx
		mov    $0xffffff38,%ebx
		mov    $0x000140,%ecx
		mov    $0x0000c8,%esi
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ah,_095fe6_data
		mov    %ah,_095fe7_data
		mov    $0x000014,%dh
		xor    %al,%al
		mov    %dh,_095fe8_data
		xor    %ebx,%ebx

	_027ab0_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0de764_data(,%edx,8)
		mov    %bx,_0de766_data(,%edx,8)
		mov    %bl,_0de76a_data(,%edx,8)
		inc    %al
		mov    %bx,_0de768_data(,%edx,8)
		cmp    $0x000014,%al
		jb     _027ab0_jump
		mov    _0ccdf0_data,%edi
		mov    _0ccdf4_data,%ax
		movw   $0x000064,0x000056(%ebp)
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,0x00001c(%esp)
		mov    %eax,0x000008(%esp)
		test   %ax,%ax
		jle    _027be4_jump

	_027b00_jump:
		mov    0x00001c(%esp),%bh
		cmp    $0x000014,%bh
		jae    _027be4_jump
		cmpw   $0x000100,0x000060(%edi)
		jne    _027bd0_jump
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		mov    %bh,%dl
		lea    0x00001c(%esp),%ebx
		mov    %ebp,%eax
		call   _026f2c_func
		test   %ax,%ax
		jne    _027b49_jump
		mov    $0x000080,%edx
		mov    %eax,0x000014(%esp)
		xor    %ah,%ah
		mov    %edx,0x000018(%esp)
		mov    %ah,0x000020(%esp)

	_027b49_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		add    $0x00002a,%eax
		mov    %ax,_0de764_data(%edx)
		mov    0x000014(%esp),%eax
		add    $0x000009,%eax
		mov    %ax,_0de766_data(%edx)
		mov    0x000020(%esp),%al
		mov    %al,_0de76a_data(%edx)
		mov    (%esp),%ecx
		mov    _0de764_data(%edx),%ax
		mov    %si,_0de768_data(%edx)
		cmp    %cx,%ax
		jle    _027b97_jump
		mov    %eax,(%esp)
		jmp    _027ba2_jump

	_027b97_jump:
		cmp    0x000004(%esp),%ax
		jge    _027ba2_jump
		mov    %eax,0x000004(%esp)

	_027ba2_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		shl    $0x000003,%edx
		mov    0x00000c(%esp),%ecx
		mov    _0de766_data(%edx),%ax
		cmp    %cx,%ax
		jle    _027bc1_jump
		mov    %eax,0x00000c(%esp)
		jmp    _027bcc_jump

	_027bc1_jump:
		cmp    0x000010(%esp),%ax
		jge    _027bcc_jump
		mov    %eax,0x000010(%esp)

	_027bcc_jump:
		incb   0x00001c(%esp)

	_027bd0_jump:
		mov    0x000008(%esp),%edx
		inc    %esi
		add    $0x000084,%edi
		cmp    %dx,%si
		jl     _027b00_jump

	_027be4_jump:
		mov    0x000004(%esp),%ebx
		cmp    $0x00000c,%bx
		jg     _027bf9_jump
		xor    %esi,%esi
		mov    %si,_0de810_data
		jmp    _027c06_jump

	_027bf9_jump:
		mov    $0x00000c,%eax
		sub    %ebx,%eax
		mov    %ax,_0de810_data

	_027c06_jump:
		mov    (%esp),%edi
		cmp    $0x000124,%di
		jle    _027c1b_jump
		xor    %ebx,%ebx
		mov    %bx,_0de816_data
		jmp    _027c28_jump

	_027c1b_jump:
		mov    $0x000124,%eax
		sub    %edi,%eax
		mov    %ax,_0de816_data

	_027c28_jump:
		mov    0x000010(%esp),%ecx
		cmp    $0x000008,%cx
		jg     _027c3d_jump
		xor    %edi,%edi
		mov    %di,_0de812_data
		jmp    _027c4a_jump

	_027c3d_jump:
		mov    $0x000008,%eax
		sub    %ecx,%eax
		mov    %ax,_0de812_data

	_027c4a_jump:
		cmpw   $0x000078,0x00000c(%esp)
		jle    _027c5d_jump
		xor    %ebx,%ebx
		mov    %bx,_0de814_data
		jmp    _027c6e_jump

	_027c5d_jump:
		mov    $0x000078,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,_0de814_data

	_027c6e_jump:
		mov    _096008_data,%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		add    %eax,%eax
		mov    %cx,_096012_data
		mov    _095fec_data(%eax),%dx
		mov    _095e2d_data,%cl
		mov    %dx,_096010_data
		cmp    $0x000001,%cl
		jne    _027cb7_jump
		mov    %edx,%esi
		sub    $0x000008,%esi
		mov    _0cfa20_data,%ch
		mov    %si,_096010_data
		cmp    %cl,%ch
		jne    _027cb7_jump
		mov    %dx,_096012_data

	_027cb7_jump:
		xor    %al,%al
		xor    %bl,%bl
		mov    %al,_095fea_data
		mov    $0x000004,%bh
		xor    %esi,%esi

	_027cc4_jump:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _0de766_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%ecx
		mov    _0de762_data(,%eax,8),%edi
		add    %ecx,%edx
		mov    _0cf89c_data,%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		movzbl 0x000068(%edx),%edi
		sub    %edi,%ecx
		mov    %ecx,%edi
		mov    _09600e_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x000028(%edx)
		mov    _0de764_data(,%eax,8),%ecx
		mov    _0cf8a4_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %edi,%ecx
		movzbl 0x000069(%edx),%edi
		sub    %edi,%ecx
		mov    _096010_data,%edi
		sar    $0x000010,%edi
		add    %edi,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    _0de76a_data(,%eax,8),%al
		movl   $0x000001,0x000024(%edx)
		xor    %ah,%ah
		mov    0x000081(%edx),%cl
		mov    %ax,0x000050(%edx)
		mov    %bl,%al
		or     %bh,%cl
		mov    %ax,0x000056(%edx)
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f8e8_func
		mov    %bh,0x00007e(%edx)
		mov    0x000050(%edx),%ax
		mov    %si,0x000040(%edx)
		dec    %eax
		mov    %si,0x000042(%edx)
		cmp    $0x000006,%ax
		ja     _027d9b_case
		and    $0x00ffff,%eax
		jmp    *%cs:_027a4c_switch(,%eax,4)

	_027d86_case:
		incb   _095fea_data
		jmp    _027d9b_case

	_027d8e_case:
		movb   $0x000002,_095fe6_data
		jmp    _027d9b_case

	_027d97_case:
		movb   $0x000014,0x000076(%edx)

	_027d9b_case:
		mov    %edx,%eax
		inc    %bl
		call   _02701c_func
		cmp    $0x000014,%bl
		jb     _027cc4_jump
		xor    %ah,%ah
		mov    %ah,_095feb_data
		mov    %ah,_0962b7_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027dc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %al,%al

	_027dcd_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0de766_data(,%ebx,8),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)
		mov    _0de766_data(,%ebx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		inc    %al
		movl   $0x000000,0x000024(%edx,%ebx,1)
		cmp    $0x000014,%al
		jb     _027dcd_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027e14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000005,_0cf868_data
		call   _026a9c_func
		call   _026a90_func
		cmpb   $0x000000,_095e2d_data
		jne    _027e42_jump
		xor    %esi,%esi
		mov    %si,_0cf89e_data
		jmp    _027e4b_jump

	_027e42_jump:
		movw   $0x00fffb,_0cf89e_data

	_027e4b_jump:
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf86e_data
		mov    _096008_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		add    %eax,%eax
		mov    %bx,_096012_data
		mov    _095fec_data(%eax),%dx
		mov    %bx,_0de820_data
		mov    %dx,_096010_data
		xor    %edx,%edx
		mov    $0x000038,%ebx
		mov    _0ce6b8_data,%dl
		mov    %bx,_0de81c_data
		sub    %edx,%ebx
		mov    $0x000018,%edi
		sub    $0x000008,%ebx
		mov    $0x000020,%esi
		mov    %bx,_0de818_data
		mov    $0x000108,%ebx
		mov    %di,_0cf8a6_data
		sub    %edx,%ebx
		mov    %di,_0cf85e_data
		mov    %ebx,%edx
		mov    %di,_0cf854_data
		sub    $0x000008,%edx
		mov    %si,_0de822_data
		mov    %dx,_0de81e_data
		mov    _095e2d_data,%dl
		mov    %si,_0de81a_data
		test   %dl,%dl
		jne    _027efc_jump
		addw   $0x000008,_0cf89e_data
		jmp    _027f80_jump

	_027efc_jump:
		mov    _096010_data,%si
		sub    $0x000008,%esi
		mov    _0cfa20_data,%dh
		mov    %si,_096010_data
		cmp    $0x000001,%dh
		jne    _027f31_jump
		mov    _095ffa_data(%eax),%ax
		mov    $0x00000a,%edi
		mov    %ax,_096012_data
		mov    %di,_0de820_data

	_027f31_jump:
		mov    $0xfffffff8,%eax
		mov    _0de822_data,%dx
		mov    _0de81a_data,%bx
		mov    _0de818_data,%si
		mov    _0de81e_data,%di
		mov    %ax,_0de81c_data
		sub    $0x000008,%edx
		add    $0x000008,%ebx
		sub    $0x000008,%esi
		sub    $0x000008,%edi
		mov    %dx,_0de822_data
		mov    %bx,_0de81a_data
		mov    %si,_0de818_data
		mov    %di,_0de81e_data

	_027f80_jump:
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026c00_func
		mov    _0cf8a4_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0ce6b9_data,%dl
		add    $0x0000c0,%eax
		sub    %edx,%eax
		mov    _0cd8c0_data,%edx
		mov    %eax,_0ce67c_data
		cmp    $0x000002,%edx
		jne    _027fe8_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		dec    %eax
		mov    $0x000001,%ebx
		cwtl   
		mov    $0x000003,%edx
		call   _06bf60_func
		mov    %ax,_09600a_data
		mov    %ax,_09600c_data
		mov    %ecx,%eax
		movb   $0x000003,0x000076(%ecx)
		call   _027a68_func
		mov    $_0ce650_data,%eax
		jmp    _027ff6_jump

	_027fe8_jump:
		cmp    $0x000032,%edx
		jne    _027ffb_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_027ff6_jump:
		call   _01d818_func

	_027ffb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028004_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    _0ce6bd_data,%ah
		mov    %dx,_096016_data
		mov    %dx,_096014_data
		test   %ah,%ah
		jne    _028031_jump
		cmpb   $0x000004,_0ce6bc_data
		je     _02804c_jump

	_028031_jump:
		mov    _0ce6bd_data,%dh
		cmp    $0x000001,%dh
		jne    _028167_jump
		cmp    _0ce6bc_data,%dh
		jne    _028167_jump

	_02804c_jump:
		mov    %esi,%eax
		call   _026c00_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01dbb4_func
		testb  $0x000008,_0ce6d1_data
		jne    _028089_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		jmp    _02808b_jump

	_028089_jump:
		xor    %eax,%eax

	_02808b_jump:
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000008(%esp),%ecx
		add    $0x000005,%eax
		sub    %eax,%ecx
		mov    0x000002(%esp),%edx
		mov    %cx,0x000008(%esp)
		sar    $0x000010,%edx
		mov    0x000006(%esp),%ebx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		call   _026ce4_func
		cmpb   $0x000000,0x00007e(%esi)
		jne    _0280e3_jump
		mov    %esi,%eax
		call   _07b628_func
		mov    $0x0000c2,%eax
		call   _072960_func

	_0280e3_jump:
		movb   $0x000002,0x00007e(%esi)
		mov    0x000081(%esi),%ch
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ch
		mov    %ch,0x000081(%esi)
		call   _041ea4_func
		test   %ax,%ax
		je     _028167_jump
		mov    %esi,%eax
		mov    $0x000002,%ebx
		call   _026c30_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		cmpb   $0x000002,_095fe6_data
		jne    _028158_jump
		mov    $0x000001,%dl
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    %dl,_095fe6_data
		mov    %si,_096014_data
		mov    %di,_096016_data
		jmp    _028160_jump

	_028158_jump:
		xor    %ah,%ah
		mov    %ah,_095fe6_data

	_028160_jump:
		movb   $0x000014,_096008_data

	_028167_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028170_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0ce686_data,%bx
		mov    _0ce6b8_data,%dl
		add    %ebx,%edx
		sub    %edx,%eax
		testb  $0x000008,_0ce6d1_data
		je     _028193_jump
		test   %ax,%ax
		jge    _0281a1_jump

	_028193_jump:
		testb  $0x000008,_0ce6d1_data
		jne    _0281a6_jump
		test   %ax,%ax
		jg     _0281a6_jump

	_0281a1_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_0281a6_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_0281ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _095fea_data,%ah
		test   %ah,%ah
		jne    _028265_jump
		mov    0x000056(%ecx),%di
		mov    %ah,0x00007e(%ecx)
		dec    %edi
		mov    %ecx,%eax
		mov    %di,0x000056(%ecx)
		call   _026c00_func
		cmpw   $0x000000,0x000056(%ecx)
		jne    _02847b_jump
		call   _027dc8_func
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		incw   _09600a_data
		and    $0x00ffff,%eax
		mov    _096008_data,%edx
		dec    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _02820e_jump
		xor    %ebx,%ebx
		mov    %bx,_09600a_data

	_02820e_jump:
		mov    _09600a_data,%ax
		cmp    _09600c_data,%ax
		jne    _028240_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d818_func
		mov    $0x00006b,%eax
		call   _072960_func
		jmp    _02847b_jump

	_028240_jump:
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _027a68_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    $0x000069,%eax
		call   _072960_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028265_jump:
		mov    _0cf89e_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    _0cf8a6_data,%bx
		add    %eax,%edx
		mov    0x00002c(%ecx),%ax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		add    $0x000008,%edx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    _0de818_data,%edx
		mov    $0x000140,%esi
		sar    $0x000010,%edx
		sub    %edx,%esi
		mov    %esi,%edx
		lea    0x000008(%eax),%esi
		cmp    %edx,%esi
		jl     _0282e1_jump
		cmpb   $0x000016,_096008_data
		je     _02846f_jump
		mov    %ecx,%eax
		call   _026c8c_func
		mov    $0x000016,%ah
		xor    %dl,%dl
		mov    %ah,_096008_data
		mov    $0x00002d,%eax
		mov    %dl,_0962b6_data
		call   _072960_func
		jmp    _02846f_jump

	_0282e1_jump:
		mov    _0de820_data,%edx
		lea    -0x000008(%eax),%esi
		sar    $0x000010,%edx
		cmp    %edx,%esi
		jg     _028331_jump
		cmpb   $0x000015,_096008_data
		je     _02846f_jump
		mov    %ecx,%eax
		mov    $0x000015,%bl
		call   _026c8c_func
		mov    %bl,_096008_data
		xor    %bh,%bh
		mov    $0x00002d,%eax
		mov    %bh,_0962b6_data
		call   _072960_func
		mov    %ecx,%eax
		call   _026d88_func
		call   _026ed0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028331_jump:
		mov    _0de81e_data,%esi
		movswl %bx,%edx
		sar    $0x000010,%esi
		lea    -0x000008(%edx),%edi
		cmp    %esi,%edi
		jg     _028397_jump
		cmpb   $0x000017,_096008_data
		je     _02846f_jump
		mov    %ecx,%eax
		mov    $0x000017,%bh
		call   _026cb8_func
		mov    _0962b6_data,%al
		mov    %bh,_096008_data
		test   %al,%al
		je     _028373_jump
		mov    %al,%ah
		inc    %ah
		mov    %ah,_0962b6_data

	_028373_jump:
		mov    $0x00002d,%eax
		mov    $0x000001,%dl
		call   _072960_func
		mov    %dl,_0962b7_data
		mov    %ecx,%eax
		call   _026d88_func
		call   _026ed0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028397_jump:
		mov    _0ce686_data,%esi
		sar    $0x000010,%esi
		add    $0x000008,%edx
		add    $0x000040,%esi
		cmp    %esi,%edx
		jle    _02845d_jump
		cmpw   $0x000000,_0ce690_data
		je     _02840a_jump
		call   _028170_func
		test   %al,%al
		je     _02840a_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _0283d3_jump
		cmpb   $0x000004,_0ce6bc_data
		je     _0283e4_jump

	_0283d3_jump:
		mov    _0ce6bd_data,%al
		cmp    $0x000001,%al
		jne    _02840a_jump
		cmp    _0ce6bc_data,%al
		jne    _02840a_jump

	_0283e4_jump:
		mov    $0x000011,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    %ecx,%eax
		call   _026d88_func
		call   _026ed0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02840a_jump:
		mov    _0de81e_data,%eax
		mov    $0x0000c8,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _028468_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026c00_func
		cmpb   $0x000001,_095fe6_data
		jne    _02846f_jump
		movb   $0x000002,_095fe6_data
		mov    %ecx,%eax
		call   _026d88_func
		call   _026ed0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02845d_jump:
		mov    %ecx,%eax
		call   _02737c_func
		test   %al,%al
		jne    _02846f_jump

	_028468_jump:
		mov    %ecx,%eax
		call   _027798_func

	_02846f_jump:
		mov    %ecx,%eax
		call   _026d88_func
		call   _026ed0_func

	_02847b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028484_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_095fe7_data
		jne    _0284bc_jump
		xor    %edx,%edx
		mov    _095fe8_data,%dl
		mov    _0de766_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0ccdf0_data,%ebx
		mov    _095fe9_data,%cl
		mov    %cx,0x000050(%ebx,%edx,4)

	_0284bc_jump:
		xor    %dh,%dh
		mov    0x000076(%eax),%bl
		mov    %dh,_095fe7_data
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _0284e7_jump
		mov    $0x000004,%ebx
		xor    %edx,%edx
		movw   $0x000064,0x000056(%eax)
		call   _01d818_func
		mov    $0x000016,%eax
		jmp    _0284f8_jump

	_0284e7_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x00000f,%eax

	_0284f8_jump:
		call   _072960_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028504_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		movb   $0x000000,0x00007e(%eax)
		xor    %ebx,%ebx
		call   _026c00_func
		mov    %bx,_096016_data
		mov    0x000056(%edx),%si
		mov    %bx,_096014_data
		dec    %si
		mov    %si,0x000056(%edx)
		jne    _028589_jump
		cmpb   $0x000000,0x000076(%edx)
		je     _028539_jump
		call   _058644_func

	_028539_jump:
		movw   $0x000001,_0cf868_data
		call   _027dc8_func
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    $_0ce650_data,%eax
		mov    %bl,0x000081(%edx)
		mov    $0x000002,%ebx
		mov    $0x000003,%edx
		call   _01d818_func
		movw   $0x000001,_0cf892_data
		call   _026a9c_func
		call   _026ab8_func
		call   _03cadc_func

	_028589_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_028590_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		jbe    _028613_jump
		mov    $0x000140,%ebx
		mov    _095e2d_data,%dl
		mov    $0x0000c8,%edi
		cmp    $0x000001,%dl
		jne    _0285cc_jump
		cmp    _0cfa20_data,%dl
		jne    _0285cc_jump
		mov    $0x00013d,%ebx
		mov    $0x0000c0,%edi

	_0285cc_jump:
		mov    $0x000001,%cl
		mov    %cl,0x00001c(%esp)
		cmp    0x000076(%esi),%cl
		jae    _028613_jump
		sub    $0x00001c,%ebx
		mov    %bx,0x000018(%esp)

	_0285df_jump:
		xor    %ebx,%ebx
		mov    0x00001c(%esp),%bl
		imul   $0x000014,%ebx,%ebx
		push   $0x000001
		mov    %edi,%eax
		mov    $0x00000b,%edx
		sub    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%ecx
		sar    $0x000010,%ebx
		mov    %esi,%eax
		call   _018eb0_func
		mov    0x00001c(%esp),%al
		inc    %al
		mov    %al,0x00001c(%esp)
		cmp    0x000076(%esi),%al
		jb     _0285df_jump

	_028613_jump:
		cmpb   $0x000014,_095fea_data
		ja     _0286ec_jump
		movl   $0x000010,0x000014(%esp)
		mov    _095e2d_data,%dh
		mov    $0x0000af,%eax
		cmp    $0x000001,%dh
		jne    _02864e_jump
		cmp    _0cfa20_data,%dh
		jne    _02864e_jump
		mov    $0x00000c,%ebx
		mov    $0x0000a9,%eax
		mov    %ebx,0x000014(%esp)

	_02864e_jump:
		push   $0x000001
		mov    _0cf87c_data,%edx
		mov    _0ccdf0_data,%edi
		sar    $0x000010,%edx
		movswl %ax,%ebp
		mov    %edx,%ebx
		mov    0x000018(%esp),%eax
		shl    $0x000005,%ebx
		mov    %ebp,%ecx
		add    %edx,%ebx
		sub    $0x000002,%eax
		shl    $0x000002,%ebx
		mov    $0x000039,%edx
		add    %ebx,%edi
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _018eb0_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000027,%eax
		mov    _095fea_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%eax
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    %al,%dl
		mov    %edi,%eax
		call   _018eb0_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000036,%eax
		mov    _095fea_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%edx
		and    $0x0000ff,%edx
		mov    %ebp,%ecx
		mov    %edi,%eax
		call   _018eb0_func

	_0286ec_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0287b4_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%dl
		jb     _0287b4_jump
		jbe    _02870e_jump
		cmp    $0x000004,%dl
		je     _028767_jump
		jmp    _0287b4_jump

	_02870e_jump:
		mov    _0cd8c0_data,%eax
		and    $0x00003f,%eax
		cmp    $0x000020,%eax
		jge    _0287b4_jump
		mov    _0c2e38_data,%edx
		push   %edx
		push   $_0c0a28_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _08044b_func
		add    $0x00000c,%esp
		mov    $0x000064,%ebx
		xor    %ecx,%ecx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2e18_data,%eax
		jmp    _0287af_jump

	_028767_jump:
		cmpb   $0x000000,_0962b5_data
		je     _028783_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2d48_data,%eax
		jmp    _0287ad_jump

	_028783_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _02879c_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2d48_data,%eax
		jmp    _0287ad_jump

	_02879c_jump:
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2dbc_data,%eax

	_0287ad_jump:
		xor    %ecx,%ecx

	_0287af_jump:
		call   _01a3f0_func

	_0287b4_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0287c0_switch:
		.long   _02883c_case
		.long   _028847_case
		.long   _028852_case
		.long   _02885d_case
		.long   _028868_case




_0287d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _02881a_jump
		mov    _0962b5_data,%ah
		test   %ah,%ah
		jne    _02881a_jump
		mov    $0x000001,%dl
		mov    $0x000004,%ebx
		mov    %ah,0x000076(%ecx)
		mov    %dl,_0962b5_data
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d818_func
		mov    $0x000016,%eax
		call   _072960_func

	_02881a_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02886f_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x00000a,%bl
		je     _02886f_jump
		mov    %bl,%al
		cmp    $0x000004,%bl
		ja     _02886f_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0287c0_switch(,%eax,4)

	_02883c_case:
		mov    %ecx,%eax
		call   _027e14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028847_case:
		mov    %ecx,%eax
		call   _028004_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028852_case:
		mov    %ecx,%eax
		call   _0281ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02885d_case:
		mov    %ecx,%eax
		call   _028484_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028868_case:
		mov    %ecx,%eax
		call   _028504_func

	_02886f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028874_func:
		push   %edx
		mov    %eax,%edx
		call   _0279bc_func
		mov    %edx,%eax
		call   _02701c_func
		pop    %edx
		ret    



_028888_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0ce6bd_data
		jne    _02889f_jump
		cmpb   $0x000004,_0ce6bc_data
		je     _0288ba_jump

	_02889f_jump:
		mov    _0ce6bd_data,%dh
		cmp    $0x000001,%dh
		jne    _028a2c_jump
		cmp    _0ce6bc_data,%dh
		jne    _028a2c_jump

	_0288ba_jump:
		call   _041d54_func
		test   %ax,%ax
		je     _02893d_jump
		mov    _0ce6d1_data,%ch
		test   $0x000008,%ch
		jne    _0288ec_jump
		mov    %ch,%al
		mov    _0ce690_data,%di
		or     $0x000008,%al
		neg    %edi
		mov    %al,_0ce6d1_data
		mov    %di,_0ce690_data

	_0288ec_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _02891d_jump
		cmpb   $0x000004,_0ce6bc_data
		jne    _02891d_jump
		mov    $0x000001,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,%edx
		call   _01d818_func
		movw   $0x000010,_0ce690_data
		jmp    _028a93_jump

	_02891d_jump:
		mov    _0ce68e_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00002f,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _028932_jump
		mov    %ebx,%eax

	_028932_jump:
		mov    %ax,_0ce690_data
		jmp    _028a93_jump

	_02893d_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _0289c5_jump
		mov    _0ce6d1_data,%dh
		test   $0x000008,%dh
		je     _028971_jump
		mov    %dh,%bl
		mov    _0ce690_data,%cx
		and    $0x0000f7,%bl
		neg    %ecx
		mov    %bl,_0ce6d1_data
		mov    %cx,_0ce690_data

	_028971_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _0289a5_jump
		cmpb   $0x000004,_0ce6bc_data
		jne    _0289a5_jump
		mov    $0x000001,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,%edx
		mov    $0xfffffff0,%esi
		call   _01d818_func
		mov    %si,_0ce690_data
		jmp    _028a93_jump

	_0289a5_jump:
		mov    _0ce68e_data,%ebx
		sar    $0x000010,%ebx
		mov    $0xffffffd1,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _0289ba_jump
		mov    %ebx,%eax

	_0289ba_jump:
		mov    %ax,_0ce690_data
		jmp    _028a93_jump

	_0289c5_jump:
		mov    _0ce690_data,%dx
		test   %dx,%dx
		jle    _0289e5_jump
		mov    _0ce68e_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _0289e3_jump
		mov    %ebx,%eax

	_0289e3_jump:
		jmp    _0289f9_jump

	_0289e5_jump:
		jge    _0289ff_jump
		mov    _0ce68e_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _0289f9_jump
		mov    %ebx,%eax

	_0289f9_jump:
		mov    %ax,_0ce690_data

	_0289ff_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _028a0d_jump
		neg    %eax

	_028a0d_jump:
		cmp    $0x000010,%eax
		jge    _028a93_jump
		mov    $0x000004,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _028a93_jump

	_028a2c_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _028a3e_jump
		cmpb   $0x000012,_0ce6bc_data
		je     _028a50_jump

	_028a3e_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _028a77_jump
		cmpb   $0x000014,_0ce6bc_data
		jne    _028a77_jump

	_028a50_jump:
		mov    $_0ce650_data,%eax
		call   _055ee4_func
		call   _041ea4_func
		test   %ax,%ax
		je     _028a93_jump
		mov    $0x000004,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _028a93_jump

	_028a77_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _028a93_jump
		cmpb   $0x000011,_0ce6bc_data
		jne    _028a93_jump
		mov    $_0ce650_data,%eax
		call   _055ee4_func

	_028a93_jump:
		mov    _0de816_data,%eax
		mov    _0ce678_data,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _028abf_jump
		cmpw   $0x000000,_0ce690_data
		jge    _028abf_jump
		xor    %esi,%esi
		mov    %eax,_0ce678_data
		mov    %si,_0ce690_data
		jmp    _028b07_jump

	_028abf_jump:
		mov    _0de81c_data,%eax
		mov    _0ce678_data,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _028aeb_jump
		cmpw   $0x000000,_0ce690_data
		jle    _028aeb_jump
		xor    %ecx,%ecx
		mov    %eax,_0ce678_data
		mov    %cx,_0ce690_data
		jmp    _028b07_jump

	_028aeb_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		call   _055e60_func
		mov    _0ce678_data,%ecx
		cwtl   
		add    %eax,%ecx
		mov    %ecx,_0ce678_data

	_028b07_jump:
		push   $_0cf876_data
		mov    $_0cf864_data,%ecx
		mov    $_0cf862_data,%ebx
		mov    $_0cf860_data,%edx
		mov    $_0ce650_data,%eax
		call   _01dcfc_func
		call   _02eae8_func
		mov    $_0ce650_data,%eax
		call   _0567ac_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028b40_func:
		movw   $0x000000,0x000040(%eax)
		movw   $0x00fff8,0x000042(%eax)
		ret    



_028b50_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _028b9f_jump
		cmpb   $0x000007,0x00006c(%eax)
		jne    _028b9f_jump
		mov    0x00006b(%eax),%bl
		test   %bl,%bl
		jne    _028b9f_jump
		xor    %edx,%edx
		mov    %bl,%dl
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		mov    0x000005(%ecx,%edx,1),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cf9f5_data(%edx)
		jne    _028b9f_jump
		movb   $0x000005,0x00007e(%eax)
		call   _02912c_func

	_028b9f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028ba4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   _01eb80_func
		mov    0x000076(%ebx),%ah
		test   %ah,%ah
		jne    _028c1a_jump
		mov    %ah,0x00006f(%ebx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    $0x00000c,%edx
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		movb   $0x000008,0x00006e(%ebx)
		call   _01d808_func
		mov    $0x000005,%dl
		movb   $0x000007,0x000078(%ebx)
		call   _028dd4_func
		mov    $0x000011,%eax
		mov    _0cfa5b_data,%cl
		mov    %dl,_0cfa66_data
		mov    0x000032(%ebx),%edx
		inc    %cl
		sar    $0x000010,%edx
		mov    %cl,_0cfa5b_data
		call   _07228c_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    %ebx,_0cd8c8_data
		call   _074270_func
		pop    %ecx
		pop    %ebx
		ret    

	_028c1a_jump:
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %ecx
		pop    %ebx
		ret    



_028c2c_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000020,%dl
		je     _028c4f_jump
		cmp    $0x000021,%dl
		je     _028c4f_jump
		cmp    $0x000022,%dl
		je     _028c4f_jump
		cmp    $0x000023,%dl
		je     _028c4f_jump
		cmp    $0x000024,%dl
		je     _028c4f_jump
		cmp    $0x000025,%dl
		jne    _028c82_jump

	_028c4f_jump:
		mov    0x00006b(%eax),%bl
		cmp    $0x000029,%bl
		jne    _028c6a_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		pop    %edx
		pop    %ebx
		ret    

	_028c6a_jump:
		cmp    $0x000040,%bl
		jne    _028c9d_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		pop    %edx
		pop    %ebx
		ret    

	_028c82_jump:
		cmp    $0x000026,%dl
		jne    _028c9d_jump
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)

	_028c9d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028ca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cf024_data,%cx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _028dce_jump

	_028cd1_jump:
		cmpw   $0x0000c5,0x000060(%edx)
		jne    _028da3_jump
		cmpw   $0x000000,_0cf766_data
		jne    _028cf8_jump
		mov    $0x000001,%ecx
		call   _0730dc_func
		mov    %cx,_0cf766_data

	_028cf8_jump:
		mov    _0cf8b0_data,%ax
		mov    %ax,_0cf89e_data
		mov    _0cf8ac_data,%ax
		mov    %ax,_0cf8a6_data
		mov    %edx,%eax
		call   _0567ac_func
		mov    0x00006c(%edx),%ah
		cmp    $0x000020,%ah
		je     _028d38_jump
		cmp    $0x000021,%ah
		je     _028d38_jump
		cmp    $0x000022,%ah
		je     _028d38_jump
		cmp    $0x000023,%ah
		je     _028d38_jump
		cmp    $0x000024,%ah
		je     _028d38_jump
		cmp    $0x000025,%ah
		jne    _028d5f_jump

	_028d38_jump:
		mov    0x00006b(%edx),%cl
		cmp    $0x000029,%cl
		jne    _028d4d_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		jmp    _028d94_jump

	_028d4d_jump:
		cmp    $0x000040,%cl
		jne    _028d99_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		jmp    _028d94_jump

	_028d5f_jump:
		cmp    $0x000026,%ah
		jne    _028d99_jump
		xor    %al,%al
		mov    %al,_0cfa62_data
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		xor    %esi,%esi
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%edx
		mov    $0x00003d,%eax
		mov    %si,_0cf766_data

	_028d94_jump:
		call   _07228c_func

	_028d99_jump:
		mov    $0x000001,%eax
		call   _055498_func

	_028da3_jump:
		inc    %ebx
		movswl %bx,%edx
		mov    _0cef5a_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%eax
		mov    _0cf024_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _028cd1_jump

	_028dce_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028dd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _028f0f_jump

	_028df0_jump:
		cmpw   $0x0000c5,0x000060(%ebx)
		jne    _028eff_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _028eff_jump
		mov    _0cf89c_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x0000a0,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    %edx,%eax
		mov    %dx,0x00003c(%ebx)
		xor    %edx,%eax
		mov    _0cf8a4_data,%edx
		mov    0x000069(%ebx),%al
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%ebx)
		sub    %eax,%edx
		mov    0x000081(%ebx),%ah
		mov    %edx,0x00002c(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00003e(%ebx)
		call   _01f8e8_func
		andb   $0x0000ef,0x000081(%ebx)
		xor    %edx,%edx
		mov    _0cfa60_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d65_data(,%eax,4),%al
		xor    %edx,%edx
		add    $0x000020,%al
		mov    %al,%dl
		mov    %ebx,%eax
		call   _01d808_func
		xor    %edx,%edx
		mov    _0cfa60_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpb   $0x000006,_094d65_data(%eax)
		jne    _028ea9_jump
		movb   $0x000005,_094d65_data(%eax)

	_028ea9_jump:
		xor    %edx,%edx
		mov    _0cfa60_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bh
		mov    _094d65_data(,%eax,4),%cl
		xor    %esi,%esi
		add    %bh,%cl
		mov    %bh,_0cfa62_data
		mov    %cl,_094d65_data(,%eax,4)
		mov    _0cf8b0_data,%ax
		mov    %si,_0cf8b2_data
		mov    %ax,_0cf89e_data
		mov    _0cf8ac_data,%ax
		mov    %si,_0cf8b4_data
		mov    %ax,_0cf8a6_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028eff_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %dx,%ax
		jl     _028df0_jump

	_028f0f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028f14_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000018(%esp)
		mov    $0x000003,%eax
		call   _01d4c4_func
		xor    %edi,%edi
		mov    %eax,%esi
		add    $0x000738,%eax
		mov    0x000060(%ebp),%dx
		mov    %eax,(%esp)
		cmp    $0x000017,%dx
		jne    _028f64_jump
		xor    %eax,%eax
		mov    _0ce6ba_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce654_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000014(%esp)
		jmp    _029117_jump

	_028f64_jump:
		movb   $0x000001,0x000014(%esp)
		cmp    (%esp),%esi
		jb     _028f77_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_028f77_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _029111_jump
		cmpw   $0x000003,0x000060(%esi)
		jne    _029111_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		movw   $0x000014,0x000056(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000000,0x000071(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000081(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000072(%esi)
		mov    _0962ca_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _0962bc_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _01f8e8_func
		cmpw   $0x000000,0x000040(%esi)
		jle    _02901c_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000081(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%esi)
		mov    $0x000001,%ebx
		jmp    _029050_jump

	_02901c_jump:
		mov    0x00000c(%esi),%edx
		mov    0x000040(%esi),%bl
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000081(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx

	_029050_jump:
		call   _061220_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x00000c(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x00001c(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01dbb4_func
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		mov    %esi,%eax
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x00002c(%esi)
		call   _01e030_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006b(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		inc    %edi
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		mov    %al,0x00006a(%esi)
		and    $0x0000bf,%bh
		mov    0x000018(%esp),%dl
		mov    %bh,0x000081(%esi)
		cmp    %dx,%di
		je     _029120_jump

	_029111_jump:
		add    $0x000084,%esi

	_029117_jump:
		cmp    (%esp),%esi
		jb     _028f77_jump

	_029120_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02912c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0291ad_jump

	_029146_jump:
		cmpw   $0x00003b,0x000060(%edx)
		jne    _0291a1_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0291a1_jump
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    _0cf89e_data,%di
		mov    0x000028(%edx),%ax
		mov    0x00002c(%ecx),%ecx
		sub    %edi,%eax
		mov    %ecx,0x00002c(%edx)
		mov    %ax,0x000036(%edx)
		mov    _0cf8a6_data,%bx
		mov    0x00002c(%edx),%ax
		movw   $0x00fffc,0x000042(%edx)
		sub    %ebx,%eax
		mov    %ax,0x000038(%edx)
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0291a1_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _029146_jump

	_0291ad_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0291b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000056(%eax),%dx
		test   %dx,%dx
		je     _0291c9_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%eax)

	_0291c9_jump:
		cmpb   $0x000000,_0cfa70_data
		je     _0291ed_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%bl
		testb  $0x000002,0x000007(%eax,%ebx,8)
		jne    _029200_jump

	_0291ed_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _02921a_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _02921a_jump
		cmpw   $0x000002,0x000042(%ecx)
		jle    _02921a_jump

	_029200_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_02921a_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%al
		mov    0x00006c(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		lea    0x000081(%ecx),%ebx
		cmp    $0x000003,%eax
		jb     _029269_jump
		cmp    $0x000005,%eax
		jbe    _029378_jump
		cmp    $0x000200,%eax
		jb     _02925e_jump
		cmp    $0x000201,%eax
		jbe    _0292f6_jump
		cmp    $0x000202,%eax
		je     _0292f0_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02925e_jump:
		cmp    $0x000100,%eax
		je     _0292a6_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029269_jump:
		cmp    $0x000001,%eax
		jbe    _029378_jump
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _029378_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0292a6_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _0292e5_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%dl
		or     %bl,%dl
		mov    %dl,(%eax)

	_0292e5_jump:
		mov    %ecx,%eax
		call   _025820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0292f0_jump:
		movw   $0x000000,0x000040(%ecx)

	_0292f6_jump:
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _029318_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)
		jmp    _029354_jump

	_029318_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _029354_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _029354_jump
		cmpb   $0x000000,_0cfa70_data
		jne    _02934e_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d808_func

	_02934e_jump:
		movw   $0x000000,0x000042(%ecx)

	_029354_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _029378_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _029378_jump
		movw   $0x000000,0x000040(%ecx)

	_029378_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02937c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _0293a5_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _061220_func

	_0293a5_jump:
		pop    %edx
		pop    %ebx
		ret    



_0293b0_func:
		mov    _0deefb_data,%al
		ret    



_0293d0_func:
		mov    %al,_0deefb_data
		ret    



_0293f0_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x00002f,%eax
		call   _0664f8_func
		pop    %edx
		ret    



_029400_func:
		test   $0x000080,%ah
		je     _029408_jump
		xor    %ah,%ah
		ret    

	_029408_jump:
		mov    $0x000100,%eax
		ret    



_029410_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %esi,%ecx
		xor    %dl,%dl
		shr    $0x000010,%ecx

	_029423_jump:
		movw   $0x001510,_0de8a2_data
		xor    %ah,%ah
		mov    %cx,_0de8b4_data
		mov    (%esp),%al
		mov    %si,_0de8a4_data
		mov    %ax,_0de8a6_data
		mov    $_0de8a2_data,%eax
		inc    %dl
		call   _0293f0_func
		cmp    $0x00000a,%dl
		je     _02945f_jump
		mov    %edi,%gs
		testb  $0x000080,%gs:0x000004(%ebx)
		jne    _029423_jump

	_02945f_jump:
		mov    %edi,%gs
		xor    %eax,%eax
		mov    %gs:0x000003(%ebx),%ax
		call   _029400_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_029474_func:
		push   %ecx
		push   %esi
		mov    %edx,%esi
		mov    %eax,%ecx
		mov    %edx,%gs
		movb   $0x00000d,%gs:(%ecx)
		movb   $0x000000,%gs:0x000001(%ecx)
		movw   $0x000000,%gs:0x000003(%ecx)
		xor    %al,%al
		mov    %bl,%gs:0x000002(%ecx)
		mov    %esi,%gs

	_029494_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		movb   $0x000000,%gs:0x000005(%ecx,%edx,1)
		cmp    $0x000008,%al
		jb     _029494_jump
		pop    %esi
		pop    %ecx
		ret    



_0294a8_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %edx,(%esp)
		mov    %eax,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    %cl,%bl
		call   _029474_func
		mov    (%esp),%gs
		movb   $0x000000,%gs:0x00000d(%esi)
		movw   $0x000000,%gs:0x000014(%esi)
		movl   $0x000000,%gs:0x000016(%esi)
		mov    0x000010(%esp),%ebx
		mov    %di,%gs:0x00000e(%esi)
		mov    %bx,%gs:0x000012(%esi)
		shr    $0x000010,%edi
		mov    %di,%gs:0x000010(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_029564_jump:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0de858_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de872_data,%eax
		movb   $0x000006,%gs:(%eax)
		xor    %ah,%ah
		mov    (%esp),%al
		mov    %ax,_0de8a6_data
		mov    _0de850_data,%eax
		shr    $0x000010,%eax
		mov    %ax,_0de8b4_data
		mov    _0de850_data,%ax
		mov    $0x001510,%edx
		mov    %ax,_0de8a4_data
		mov    $_0de8a2_data,%eax
		mov    %dx,_0de8a2_data
		call   _0293f0_func
		lgs    _0de878_data,%eax
		testb  $0x000002,%gs:0x000004(%eax)
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0295ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x00000b
		mov    $0x000003,%ecx
		mov    _0de844_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de890_data,%eax
		movb   $0x00000f,%gs:(%eax)
		xor    %ah,%ah
		mov    (%esp),%al
		mov    %ax,_0de8a6_data
		mov    _0de850_data,%eax
		shr    $0x000010,%eax
		mov    %ax,_0de8b4_data
		mov    _0de850_data,%ax
		mov    $0x001510,%edx
		mov    %ax,_0de8a4_data
		mov    $_0de8a2_data,%eax
		mov    %dx,_0de8a2_data
		call   _0293f0_func
		mov    _0de87c_data,%cx
		mov    _0de878_data,%ebx
		mov    %ecx,%gs
		mov    %gs:0x000004(%ebx),%ah
		test   $0x000002,%ah
		setne  %dl
		mov    %dl,_0deeff_data
		lgs    _0de890_data,%eax
		testb  $0x000001,%gs:0x000001(%eax)
		setne  %al
		and    $0x0000ff,%eax
		mov    %al,_0deef9_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		or     %edx,%eax
		sete   %al
		mov    %al,_0deefa_data
		mov    %ecx,%gs
		xor    %eax,%eax
		mov    %gs:0x000003(%ebx),%ax
		call   _029400_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0296c4_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0de8a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0de8a2_data
		mov    %bx,_0de8a4_data
		mov    %bx,_0de8a6_data
		call   _0293f0_func
		mov    _0de8a6_data,%al
		mov    %al,_0deefb_data
		mov    _0de8a4_data,%al
		pop    %edx
		pop    %ebx
		ret    



_029700_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _0296c4_func
		mov    %al,%dh
		mov    %al,_0deede_data
		xor    %dl,%dl
		mov    $0x00150b,%esi
		xor    %ecx,%ecx

	_029719_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %cl,_0deedf_data(%ebx)
		test   %dh,%dh
		je     _02975c_jump
		xor    %ah,%ah
		mov    %dl,%al
		mov    %si,_0de8a2_data
		mov    %ax,_0de8a6_data
		mov    $_0de8a2_data,%eax
		mov    %cx,_0de8a4_data
		call   _0293f0_func
		cmp    _0de8a2_data,%cx
		je     _02975c_jump
		mov    $0x000001,%ah
		sub    %ah,%dh
		mov    %ah,_0deedf_data(%ebx)

	_02975c_jump:
		inc    %dl
		cmp    $0x00001a,%dl
		jb     _029719_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029768_jump:
		push   %edx
		mov    _0de8b8_data,%dx
		xor    %al,%al
		test   %dx,%dx
		je     _029781_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _0664c4_func

	_029781_jump:
		test   %al,%al
		je     _02978e_jump
		movw   $0x000102,_0de8bc_data

	_02978e_jump:
		pop    %edx
		ret    



_029790_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000100,%edx
		xor    %ah,%ah
		mov    %dx,_0de8bc_data
		mov    %ah,_0deefe_data
		call   _029a8c_func
		cmp    $0x000001,%al
		jne    _029a28_jump
		call   _029ac8_func
		cmp    $0x000001,%al
		jne    _029a28_jump
		call   _0296c4_func
		test   %al,%al
		je     _029a1d_jump
		mov    $0x000030,%esi
		mov    $0x000035,%edi
		mov    $0x00003c,%ebp
		mov    %dx,_0de8bc_data
		call   _029700_func
		mov    $_0de840_data,%edx
		mov    $0x00008a,%eax
		mov    $0x000043,%ecx
		call   _066460_func
		mov    %ax,_0de8b8_data
		mov    %esi,_0de872_data
		mov    %edi,_0de866_data
		mov    %ebp,_0de884_data
		mov    %ecx,_0de890_data
		xor    %edx,%edx
		mov    $0x00004e,%esi
		mov    %edx,_0de88a_data
		mov    %edx,_0de878_data
		mov    $0x00001a,%edx
		mov    $0x000059,%edi
		mov    %edx,_0de86c_data
		mov    _0de840_data,%edx
		mov    $0x00005b,%ebp
		mov    %edx,_0de850_data
		add    $0x000030,%edx
		test   %ax,%ax
		sete   %bl
		mov    %edx,_0de858_data
		mov    _0de840_data,%edx
		mov    %ax,_0de88e_data
		add    $0x000035,%edx
		mov    %ax,_0de87c_data
		mov    %edx,_0de854_data
		mov    _0de840_data,%edx
		mov    %ax,_0de876_data
		add    $0x00003c,%edx
		mov    %ax,_0de86a_data
		mov    %edx,_0de84c_data
		mov    _0de840_data,%edx
		mov    %ax,_0de888_data
		add    $0x00001a,%edx
		mov    %ax,_0de870_data
		mov    %edx,_0de848_data
		mov    _0de840_data,%edx
		mov    %ax,_0de894_data
		add    %ecx,%edx
		mov    %ax,_0de864_data
		mov    %edx,_0de844_data
		mov    _0de840_data,%edx
		mov    %esi,_0de860_data
		add    %esi,%edx
		mov    %ax,_0de882_data
		mov    %edx,_0de838_data
		mov    _0de840_data,%edx
		mov    %edi,_0de87e_data
		add    %edi,%edx
		mov    %ax,_0de8a0_data
		mov    %edx,_0de830_data
		mov    _0de840_data,%edx
		mov    %ax,_0de89a_data
		add    %ebp,%edx
		mov    $0x000064,%eax
		mov    %edx,_0de83c_data
		mov    _0de840_data,%edx
		mov    %ebp,_0de89c_data
		add    %eax,%edx
		mov    %eax,_0de896_data
		mov    %edx,_0de834_data
		test   %bl,%bl
		je     _029944_jump
		movw   $0x000101,_0de8bc_data
		jmp    _029a31_jump

	_029944_jump:
		call   _0296c4_func
		cmp    $0x000001,%al
		ja     _0299be_jump
		jmp    _0299d3_jump

	_029956_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %edx,%eax
		call   _02a4a0_func
		cmp    $0x000001,%al
		jne    _0299b5_jump
		mov    %edx,%eax
		call   _02a318_func
		cmp    $0x000001,%al
		jne    _0299b5_jump
		mov    %edx,%eax
		call   _02a360_func
		test   %al,%al
		je     _0299b5_jump
		mov    %edx,%eax
		mov    %cl,_0deefe_data
		call   _02a734_func
		cmp    $0x000001,%al
		jne    _0299b5_jump
		mov    $0x000001,%eax
		call   _02a348_func
		test   %al,%al
		jne    _0299b5_jump
		mov    %cl,_0cfa2c_data
		call   _06bbe8_func
		cmp    _0cfa2c_data,%cl
		jne    _0299af_jump
		mov    %bl,%bh

	_0299af_jump:
		mov    %cl,_0cfa2c_data

	_0299b5_jump:
		inc    %bl
		cmp    $0x00001a,%bl
		jb     _0299c2_jump
		jmp    _0299c6_jump

	_0299be_jump:
		xor    %bh,%bh
		xor    %cl,%cl

	_0299c2_jump:
		test   %bh,%bh
		je     _029956_jump

	_0299c6_jump:
		test   %bh,%bh
		je     _0299d3_jump
		xor    %eax,%eax
		mov    %bh,%al
		call   _0293d0_func

	_0299d3_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a318_func
		test   %al,%al
		jne    _029a00_jump
		cmpb   $0x000000,_0cfa14_data
		jne    _0299f6_jump
		mov    $_0c0b38_data,%eax
		jmp    _0299fb_jump

	_0299f6_jump:
		mov    $_0c0b5c_data,%eax

	_0299fb_jump:
		call   _01f988_func

	_029a00_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		add    $0x000041,%eax
		push   %eax
		push   $_0c0b90_data
		call   _07fce1_func
		add    $0x000008,%esp
		jmp    _029a31_jump

	_029a1d_jump:
		movw   $0x000001,_0de8bc_data
		jmp    _029a31_jump

	_029a28_jump:
		movw   $0x00000c,_0de8bc_data

	_029a31_jump:
		cmpw   $0x000100,_0de8bc_data
		jne    _029a76_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a4a0_func
		test   %al,%al
		jne    _029a5a_jump
		movw   $0x000001,_0de8bc_data
		jmp    _029a76_jump

	_029a5a_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a734_func
		test   %al,%al
		jne    _029a76_jump
		movw   $0x000008,_0de8bc_data

	_029a76_jump:
		cmpw   $0x000100,_0de8bc_data
		sete   %al
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029a8c_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0de8a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0de8a2_data
		mov    %bx,_0de8a4_data
		mov    %bx,_0de8a6_data
		call   _0293f0_func
		cmpw   $0x000000,_0de8a4_data
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_029ac8_func:
		push   %ebx
		push   %edx
		mov    $0x00150c,%edx
		mov    $_0de8a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0de8a2_data
		mov    %bx,_0de8a4_data
		call   _0293f0_func
		xor    %eax,%eax
		mov    _0de8a4_data,%ax
		mov    %eax,%edx
		sar    $0x000008,%edx
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0de8a4_data,%ax
		shl    $0x000002,%edx
		xor    %ah,%ah
		and    $0x00ffff,%eax
		add    %edx,%eax
		mov    %ax,_0de8ba_data
		cmp    $0x0000d2,%ax
		setge  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_029b34_func:
		push   %ecx
		push   %esi
		mov    %dl,%cl
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		lea    0x000000(,%eax,8),%esi
		xor    %eax,%edx
		mov    %cl,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    %bl,%dl
		add    %edx,%eax
		sub    $0x000096,%eax
		pop    %esi
		pop    %ecx
		ret    



_029b7c_func:
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		and    $0x0000ff,%ecx
		mov    %dl,%al
		shl    $0x000010,%ecx
		shl    $0x000008,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    %bl,%cl
		add    %ecx,%eax
		pop    %ecx
		ret    



_029b9c_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %eax,%edx
		mov    $0x001194,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%esi
		mov    %edx,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ebx,%edx
		mov    %al,0x000000(%ebp)
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dl,(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029bdc_func:
		push   %esi
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    %eax,%ecx
		sar    $0x000010,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    %cl,(%edx)
		mov    %eax,%edx
		sar    $0x000008,%edx
		and    $0x0000ff,%edx
		mov    %dl,(%ebx)
		mov    %al,(%esi)
		add    $0x000004,%esp
		pop    %esi
		ret    



_029c0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029b9c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _029b7c_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029c40_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029bdc_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _029b34_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029c74_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000085,%ebx
		mov    _0de870_data,%dx
		mov    _0de86c_data,%eax
		call   _029474_func
		mov    _0de870_data,%cx
		mov    _0de86c_data,%ebx
		xor    %eax,%eax
		mov    _0de848_data,%edx
		mov    (%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029cc0_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029c74_func
		mov    %ax,_0de8bc_data
		mov    %edx,%eax
		call   _029c74_func
		mov    %ax,_0de8bc_data
		pop    %edx
		ret    



_029ce4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000088,%ebx
		mov    _0de870_data,%dx
		mov    _0de86c_data,%eax
		call   _029474_func
		mov    _0de870_data,%cx
		mov    _0de86c_data,%ebx
		xor    %eax,%eax
		mov    _0de848_data,%edx
		mov    (%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029d30_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%esi
		mov    $0x000084,%ebx
		mov    _0de870_data,%dx
		mov    _0de86c_data,%eax
		call   _029474_func
		lgs    _0de86c_data,%ebx
		mov    (%esp),%al
		mov    %al,%gs:0x00000d(%ebx)
		mov    _0de848_data,%edx
		mov    %ecx,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    %gs,%ecx
		mov    0x000004(%esp),%al
		mov    %esi,%gs:0x00000e(%ebx)
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000008,%esp
		pop    %esi
		ret    



_029d88_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0de830_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		mov    _0de882_data,%gs
		xor    %eax,%eax
		mov    _0de87e_data,%ebx
		mov    (%esp),%al
		mov    _0de87c_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0de850_data,%edx
		movb   $0x000000,%gs:0x000001(%ebx)
		mov    _0de878_data,%ebx
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029df0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0de830_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		mov    _0de882_data,%gs
		xor    %eax,%eax
		mov    _0de87e_data,%ebx
		mov    (%esp),%al
		mov    _0de87c_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0de850_data,%edx
		movb   $0x000001,%gs:0x000001(%ebx)
		mov    _0de878_data,%ebx
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029e58_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0de858_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de872_data,%eax
		mov    _0de87c_data,%cx
		mov    _0de878_data,%ebx
		movb   $0x000000,%gs:(%eax)
		xor    %eax,%eax
		mov    _0de850_data,%edx
		mov    (%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029eb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0de858_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de872_data,%eax
		mov    _0de87c_data,%cx
		mov    _0de878_data,%ebx
		movb   $0x000005,%gs:(%eax)
		xor    %eax,%eax
		mov    _0de850_data,%edx
		mov    (%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029f10_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ebx,%ebp
		mov    %ecx,%edi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0de854_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de866_data,%eax
		movb   $0x00000a,%gs:(%eax)
		movb   $0x000000,%gs:0x000001(%eax)
		mov    _0de87c_data,%cx
		movb   $0x000000,%gs:0x000002(%eax)
		mov    _0de878_data,%ebx
		movl   $0x000000,%gs:0x000003(%eax)
		xor    %eax,%eax
		mov    _0de850_data,%edx
		mov    (%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		lgs    _0de866_data,%edx
		mov    %gs:0x000001(%edx),%bl
		mov    %bl,(%esi)
		mov    %gs:0x000002(%edx),%bl
		mov    %bl,0x000000(%ebp)
		mov    %gs:0x000003(%edx),%edx
		mov    %edx,(%edi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029fa0_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0de84c_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de884_data,%eax
		movb   $0x00000b,%gs:(%eax)
		mov    (%esp),%dl
		movl   $0x000000,%gs:0x000002(%eax)
		mov    _0de87c_data,%cx
		movb   $0x000000,%gs:0x000006(%eax)
		mov    _0de878_data,%ebx
		mov    %dl,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0de850_data,%edx
		mov    0x000004(%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		lgs    _0de884_data,%ebx
		mov    %gs:0x000002(%ebx),%edx
		mov    %edx,(%edi)
		mov    %gs:0x000006(%ebx),%dl
		mov    %dl,(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_02a02c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    %ecx,%ebp
		push   $0x00000b
		mov    $0x000003,%ecx
		mov    _0de838_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de860_data,%eax
		mov    _0de87c_data,%cx
		mov    _0de878_data,%ebx
		movb   $0x00000c,%gs:(%eax)
		xor    %eax,%eax
		mov    _0de850_data,%edx
		mov    0x000004(%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		mov    _0de864_data,%gs
		mov    %eax,%ebx
		mov    _0de860_data,%eax
		mov    %gs:0x000002(%eax),%dl
		xor    %ecx,%ecx
		and    $0x0000f0,%dl
		mov    %dl,%cl
		sar    $0x000004,%ecx
		lea    0x000000(,%ecx,4),%edx
		add    %ecx,%edx
		mov    %gs:0x000002(%eax),%cl
		and    $0x00000f,%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    (%esp),%cl
		add    %ecx,%edx
		mov    %dl,(%edi)
		mov    %gs:0x000004(%eax),%dl
		mov    %dl,(%esi)
		mov    %gs:0x000005(%eax),%dl
		mov    %dl,0x000000(%ebp)
		mov    0x000018(%esp),%edx
		mov    %gs:0x000006(%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02a0e4_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0de858_data,%ebx
		mov    _0de87c_data,%dx
		mov    _0de878_data,%eax
		call   _0294a8_func
		lgs    _0de872_data,%eax
		mov    _0de87c_data,%cx
		movb   $0x000006,%gs:(%eax)
		mov    _0de878_data,%ebx
		movl   $0x000000,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0de850_data,%edx
		mov    (%esp),%al
		call   _029410_func
		mov    %ax,_0de8bc_data
		lgs    _0de872_data,%edx
		mov    %gs:0x000001(%edx),%edx
		mov    %edx,(%esi)
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02a2c8_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %esp,%edx
		and    $0x0000ff,%eax
		call   _02a0e4_func
		mov    %ax,_0de8bc_data
		mov    (%esp),%eax
		add    $0x000004,%esp
		pop    %edx
		ret    



_02a2e8_func:
		and    $0x0000ff,%eax
		call   _02a2c8_func
		test   $0x000001,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_02a300_func:
		and    $0x0000ff,%eax
		call   _02a2c8_func
		test   $0x000002,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_02a318_func:
		and    $0x0000ff,%eax
		call   _02a2c8_func
		test   $0x000010,%al
		setne  %al
		and    $0x0000ff,%eax
		ret    



_02a348_func:
		and    $0x0000ff,%eax
		testb  $0x000040,_0ded7b_data(%eax)
		sete   %al
		and    $0x0000ff,%eax
		ret    



_02a360_func:
		and    $0x0000ff,%eax
		call   _02a2c8_func
		test   $0x000008,%ah
		jne    _02a380_jump
		cmpw   $0x000100,_0de8bc_data
		jne    _02a380_jump
		mov    $0x000001,%eax
		ret    

	_02a380_jump:
		xor    %eax,%eax
		ret    



_02a384_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _02a300_func
		cmp    $0x000001,%al
		jne    _02a3a3_jump
		mov    %edx,%eax
		call   _029d88_func
		mov    %ax,_0de8bc_data
		pop    %edx
		ret    

	_02a3a3_jump:
		movw   $0x000100,_0de8bc_data
		pop    %edx
		ret    



_02a3b0_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _02a300_func
		test   %al,%al
		jne    _02a3da_jump
		mov    %edx,%eax
		call   _02a2e8_func
		cmp    $0x000001,%al
		jne    _02a3da_jump
		mov    %edx,%eax
		call   _029df0_func
		mov    %ax,_0de8bc_data
		pop    %edx
		ret    

	_02a3da_jump:
		movw   $0x000100,_0de8bc_data
		pop    %edx
		ret    



_02a3e8_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%eax
		call   _02a2e8_func
		cmp    $0x000001,%al
		jne    _02a432_jump
		mov    %ebx,%eax
		call   _02a300_func
		cmp    $0x000001,%al
		jne    _02a413_jump
		mov    %ebx,%eax
		call   _029d88_func
		mov    %ax,_0de8bc_data

	_02a413_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _029e58_func
		mov    %ax,_0de8bc_data

	_02a422_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a2e8_func
		cmp    $0x000001,%al
		je     _02a422_jump
		pop    %edx
		pop    %ebx
		ret    

	_02a432_jump:
		movw   $0x000100,_0de8bc_data
		pop    %edx
		pop    %ebx
		ret    



_02a440_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0cfa14_data
		jne    _02a488_jump
		cmpb   $0x000000,_0cfa12_data
		jne    _02a488_jump
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a2e8_func
		test   %al,%al
		setne  %al
		and    $0x0000ff,%eax
		je     _02a488_jump
		xor    %eax,%eax
		mov    %dl,%al
		call   _029eb4_func
		mov    %ax,_0de8bc_data

	_02a479_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a2e8_func
		test   %al,%al
		je     _02a479_jump
		pop    %edx
		ret    

	_02a488_jump:
		movw   $0x000100,_0de8bc_data
		pop    %edx
		ret    

	_02a493_jump:
		xor    %al,%al

	_02a495_jump:
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a4a0_func:
		and    $0x0000ff,%eax
		mov    _0deedf_data(%eax),%al
		ret    



_02a4ac_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %eax,%eax
		mov    (%esp),%al
		call   _02a734_func
		cmp    $0x000001,%al
		jne    _02a59c_jump
		cmp    _0de8c1_data,%dl
		jb     _02a583_jump
		cmp    _0de8c2_data,%dl
		ja     _02a583_jump
		movzbl %dl,%esi
		mov    %esi,%eax
		call   _02a348_func
		cmp    $0x000001,%al
		jne    _02a588_jump
		xor    %eax,%eax
		mov    %bl,%al
		movzbl %cl,%edi
		shl    $0x000008,%eax
		add    %eax,%edi
		lea    0x000000(,%esi,4),%eax
		shl    $0x000008,%edi
		mov    _0de8c7_data(%eax),%esi
		mov    _0de8c2_data,%bh
		add    %esi,%edi
		cmp    %bh,%dl
		jae    _02a520_jump
		mov    _0de8cb_data(%eax),%eax
		jmp    _02a525_jump

	_02a520_jump:
		mov    _0de8c3_data,%eax

	_02a525_jump:
		cmp    %eax,%edi
		jge    _02a593_jump
		movzbl (%esp),%esi
		mov    %esi,%eax
		call   _029c74_func
		mov    %ax,_0de8bc_data
		and    $0x0000ff,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %cl,%bl
		add    %eax,%ebx
		xor    %ecx,%ecx
		lea    0x000000(,%ebx,4),%eax
		mov    %dl,%cl
		add    %ebx,%eax
		mov    $0x000001,%edx
		mov    %eax,%ebx
		shl    $0x000004,%eax
		mov    _0debeb_data(,%ecx,4),%ecx
		sub    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ecx
		mov    %esi,%eax
		call   _029d30_func
		mov    %ax,_0de8bc_data
		jmp    _02a59c_jump

	_02a583_jump:
		cmp    $0x000064,%dl
		jne    _02a593_jump

	_02a588_jump:
		movw   $0x000007,_0de8bc_data
		jmp    _02a59c_jump

	_02a593_jump:
		movw   $0x000008,_0de8bc_data

	_02a59c_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_02a5a4_func:
		and    $0x0000ff,%eax
		call   _029c74_func
		mov    %ax,_0de8bc_data
		ret    



_02a5b8_func:
		and    $0x0000ff,%eax
		call   _029cc0_func
		mov    %ax,_0de8bc_data
		ret    



_02a5cc_func:
		and    $0x0000ff,%eax
		call   _029ce4_func
		mov    %ax,_0de8bc_data
		ret    



_02a654_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%ch
		call   _0293b0_func
		mov    $0x000084,%ebx
		mov    _0de870_data,%dx
		mov    %al,%cl
		mov    _0de86c_data,%eax
		call   _029474_func
		mov    _0de870_data,%gs
		xor    %eax,%eax
		mov    _0de86c_data,%ebx
		mov    %ch,%al
		movb   $0x000001,%gs:0x00000d(%ebx)
		mov    _0de8c7_data(,%eax,4),%edx
		mov    %edx,%gs:0x00000e(%ebx)
		mov    _0dea5b_data(,%eax,4),%eax
		mov    %eax,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    _0de848_data,%edx
		mov    %cl,%al
		mov    %gs,%ecx
		call   _029410_func
		mov    %ax,_0de8bc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a6bc_func:
		call   _02a6c4_func
		lea    0x000000(%eax),%eax



_02a6c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _0293b0_func
		mov    $0x000085,%ebx
		mov    _0de870_data,%dx
		mov    %al,%cl
		mov    _0de86c_data,%eax
		call   _029474_func
		movzbl %cl,%esi
		mov    _0de870_data,%ax
		mov    _0de86c_data,%ebx
		mov    _0de848_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _029410_func
		mov    %ax,_0de8bc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a710_func:
		push   %edx
		mov    %al,%dl
		call   _02a6c4_func
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a654_func
		pop    %edx
		ret    



_02a724_func:
		xor    %ah,%ah
		mov    %ah,_0deefe_data
		and    $0x0000ff,%eax
		lea    0x000000(%eax),%eax



_02a734_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00001c,%esp
		mov    %al,0x000018(%esp)
		mov    $0x000001,%al
		cmpb   $0x000000,_0deefe_data
		jne    _02a495_jump
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		mov    $0x0000ff,%dl
		call   _02a440_func

	_02a75b_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		call   _02a360_func
		test   %al,%al
		jne    _02a76e_jump
		dec    %dl
		jne    _02a75b_jump

	_02a76e_jump:
		movzbl 0x000018(%esp),%esi
		mov    %esi,%eax
		call   _02a360_func
		cmp    $0x000001,%al
		jne    _02a493_jump
		mov    $0x00051f,%ebx
		mov    $_0de8c0_data,%eax
		xor    %edx,%edx
		lea    0x000004(%esp),%ecx
		call   _080420_func
		lea    0x00000c(%esp),%ebx
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _029f10_func
		mov    %ax,_0de8bc_data
		mov    0x000014(%esp),%al
		mov    %al,_0de8c1_data
		mov    0x00000c(%esp),%al
		mov    %al,_0de8c2_data
		mov    0x000004(%esp),%eax
		mov    %eax,_0de8c3_data
		mov    0x00000c(%esp),%al
		mov    0x000014(%esp),%dl
		inc    %al
		mov    %dl,0x000010(%esp)
		sub    %dl,%al
		mov    0x00000c(%esp),%dh
		mov    %al,_0de8c0_data
		cmp    %dh,%dl
		ja     _02a828_jump

	_02a7e4_jump:
		movzbl 0x000010(%esp),%esi
		lea    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    %esp,%ebx
		mov    0x000018(%esp),%al
		mov    %esi,%edx
		call   _029fa0_func
		mov    %ax,_0de8bc_data
		mov    (%esp),%eax
		mov    0x000010(%esp),%bl
		mov    %eax,_0de8c7_data(,%esi,4)
		mov    0x000008(%esp),%al
		inc    %bl
		mov    %al,_0ded7b_data(%esi)
		mov    %bl,0x000010(%esp)
		cmp    _0de8c2_data,%bl
		jbe    _02a7e4_jump

	_02a828_jump:
		mov    _0de8c3_data,%eax
		mov    %eax,_0dea57_data
		xor    %eax,%eax
		mov    _0de8c2_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0de8c3_data,%eax
		mov    %eax,_0de8cb_data(%edx)
		mov    _0de8c1_data,%bl
		cmp    _0de8c2_data,%bl
		ja     _02a8ad_jump

	_02a859_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0de8cb_data(,%edx,4),%eax
		call   _029c40_func
		mov    %eax,%ecx
		mov    _0de8c7_data(,%edx,4),%eax
		call   _029c40_func
		sub    %eax,%ecx
		mov    _0de8cb_data(,%edx,4),%eax
		mov    %ecx,_0dea5b_data(,%edx,4)
		call   _029c40_func
		mov    %eax,%ecx
		mov    _0de8c7_data(,%edx,4),%eax
		call   _029c40_func
		sub    %eax,%ecx
		mov    %ecx,_0debeb_data(,%edx,4)
		inc    %bl
		cmp    _0de8c2_data,%bl
		jbe    _02a859_jump

	_02a8ad_jump:
		xor    %eax,%eax
		mov    _0de8c2_data,%al
		xor    %edx,%edx
		mov    %edx,_0de8cb_data(,%eax,4)
		mov    _0de8c3_data,%eax
		call   _029c40_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0de8c1_data,%al
		mov    _0de8c7_data(,%eax,4),%eax
		call   _029c40_func
		sub    %eax,%edx
		mov    %edx,%eax
		call   _029c0c_func
		mov    %eax,_0dea57_data
		mov    $0x000001,%al
		mov    _0de8bc_data,%dx
		mov    %al,_0deefe_data
		cmp    $0x000100,%dx
		sete   %al
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a908_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%eax
		call   _0295ec_func
		cmpb   $0x000000,_0deefa_data
		jne    _02a939_jump
		mov    %ebx,%eax
		call   _029cc0_func

	_02a927_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _0295ec_func
		cmpb   $0x000000,_0deefa_data
		je     _02a927_jump

	_02a939_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a940_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a970_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _02a970_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a970_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _02a98f_jump
		jbe    _02a9a3_jump
		cmp    $0x000014,%al
		jne    _02a9a3_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _02a9a3_jump

	_02a98f_jump:
		test   %al,%al
		jne    _02a99c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02a9a3_jump

	_02a99c_jump:
		orb    $0x000008,0x000081(%ecx)

	_02a9a3_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		mov    _0ce678_data,%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0ce6b8_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce690_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		movswl %dx,%ebx
		mov    %edx,%eax
		cmp    $0xfffffff6,%ebx
		jge    _02aa19_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _02aa08_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02aa08_jump
		mov    %dh,%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		call   _061220_func
		jmp    _02aa6c_jump

	_02aa08_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02aa6c_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _02aa6c_jump

	_02aa19_jump:
		cmp    $0x00000a,%dx
		jle    _02aa5f_jump
		mov    0x000081(%ecx),%bh
		test   $0x000008,%bh
		je     _02aa4e_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02aa4e_jump
		mov    %bh,%dl
		mov    %ecx,%eax
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		call   _061220_func
		jmp    _02aa6c_jump

	_02aa4e_jump:
		testb  $0x000008,0x000081(%ecx)
		jne    _02aa6c_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _02aa6c_jump

	_02aa5f_jump:
		jg     _02aa6c_jump
		cmp    $0xfffffff6,%ebx
		jl     _02aa6c_jump
		movw   $0x000000,0x000040(%ecx)

	_02aa6c_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02aa7c_jump
		mov    $0x000010,%ebx
		jmp    _02aa81_jump

	_02aa7c_jump:
		mov    $0xfffffff0,%ebx

	_02aa81_jump:
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		mov    %ecx,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000069(%ecx),%bl
		call   _01dac8_func
		test   %ax,%ax
		je     _02aaa2_jump
		movw   $0x000000,0x000040(%ecx)

	_02aaa2_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02aae3_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _02aae3_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jl     _02ab09_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%edx
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		movw   $0x000000,0x000052(%ecx)
		call   _061220_func
		jmp    _02ab09_jump

	_02aae3_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02ab09_jump
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _02ab09_jump
		cmpb   $0x00000f,0x00006b(%ecx)
		jbe    _02ab09_jump
		cmpw   $0x000001,0x000052(%ecx)
		jne    _02ab09_jump
		mov    %ecx,%eax
		call   _02af3c_func
		movw   $0x000002,0x000052(%ecx)

	_02ab09_jump:
		cmpw   $0x000000,0x000052(%ecx)
		je     _02ab27_jump
		mov    0x00007f(%ecx),%ah
		inc    %ah
		mov    %ah,0x00007f(%ecx)
		cmp    $0x000050,%ah
		jbe    _02ab27_jump
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_02ab27_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ab2c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02ab5a_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02ab5a_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02ab5a_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02ab79_jump
		jbe    _02ab8d_jump
		cmp    $0x000014,%al
		jne    _02ab8d_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02ab8d_jump

	_02ab79_jump:
		test   %al,%al
		jne    _02ab86_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02ab8d_jump

	_02ab86_jump:
		orb    $0x000008,0x000081(%edx)

	_02ab8d_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _02abc2_jump
		cmpb   $0x000008,0x00006c(%edx)
		jne    _02abc2_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _02abb6_jump
		cmpb   $0x000006,0x00006b(%edx)
		jb     _02abb6_jump
		mov    %edx,%eax
		call   _02af3c_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02abb6_jump:
		cmpb   $0x000001,0x00006b(%edx)
		jne    _02abc2_jump
		movw   $0x000000,0x000052(%edx)

	_02abc2_jump:
		pop    %edx
		pop    %ebx
		ret    



_02abc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02abfb_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02abfb_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%edx)
		jmp    _02ad13_jump

	_02abfb_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02ac1a_jump
		jbe    _02ac35_jump
		cmp    $0x000014,%al
		jne    _02ac35_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02ac35_jump

	_02ac1a_jump:
		test   %al,%al
		jne    _02ac27_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02ac2e_jump

	_02ac27_jump:
		orb    $0x000008,0x000081(%edx)

	_02ac2e_jump:
		mov    %edx,%eax
		call   _055ee4_func

	_02ac35_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		mov    _0ce678_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0ce6b8_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce67c_data,%si
		mov    _0ce6b9_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x000069(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000052(%edx),%cx
		test   %cx,%cx
		jne    _02acfb_jump
		cmp    $0x000012,%ax
		jl     _02accb_jump
		cmp    $0x000028,%ax
		jge    _02ac97_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _02accf_jump

	_02ac97_jump:
		cmp    $0x000041,%ax
		jge    _02aca5_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _02accf_jump

	_02aca5_jump:
		cmp    $0x000064,%ax
		jge    _02acb3_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _02accf_jump

	_02acb3_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02acbc_jump
		neg    %eax

	_02acbc_jump:
		cmp    $0x0000a5,%eax
		jge    _02accb_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _02accf_jump

	_02accb_jump:
		mov    %cx,0x000042(%edx)

	_02accf_jump:
		testb  $0x000008,0x000081(%edx)
		je     _02acde_jump
		cmp    $0x00005a,%bx
		jg     _02acef_jump

	_02acde_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _02ad13_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _02ad13_jump

	_02acef_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02acfb_jump:
		cmp    $0x000078,%ax
		jle    _02ad0d_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ad0d_jump:
		movw   $0x00ffff,0x000042(%edx)

	_02ad13_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ad1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02ad81_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02ad81_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02ad81_jump
		cmpb   $0x000010,0x00006b(%eax)
		jb     _02ad81_jump
		mov    $0x000001,%ebx
		mov    _0ce6bd_data,%dh
		movw   $0x000001,0x000052(%eax)
		mov    %bx,_0cf852_data
		test   %dh,%dh
		je     _02ad59_jump
		cmp    $0x000001,%dh
		jne    _02ad64_jump

	_02ad59_jump:
		movb   $0x000001,_0ce6cd_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ad64_jump:
		cmp    $0x000004,%dh
		je     _02ad6e_jump
		cmp    $0x000005,%dh
		jne    _02adb2_jump

	_02ad6e_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0ce6bd_data
		mov    %al,_0ce6bc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ad81_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02ad97_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02ad97_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ad97_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02adb2_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02adb2_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _061220_func

	_02adb2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02adb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02aedc_jump

	_02add6_jump:
		cmpw   $0x00003e,0x000060(%ecx)
		jne    _02aecc_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _02aecc_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ecx)
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%ecx)
		je     _02ae44_jump
		cwtl   
		jmp    _02ae47_jump

	_02ae44_jump:
		cwtl   
		neg    %eax

	_02ae47_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%esi
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%esi
		mov    %ax,0x00003c(%ecx)
		mov    %esi,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000072(%ecx)
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%bl
		and    $0x0000bb,%bl
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01f8e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02aecc_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _02add6_jump

	_02aedc_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02aee4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02aefb_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02aefb_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_02aefb_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02af1c_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02af1c_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02af1c_jump
		movw   $0x000001,0x000052(%eax)
		call   _02adb8_func
		pop    %edx
		pop    %ebx
		ret    

	_02af1c_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02af37_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02af37_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _061220_func

	_02af37_jump:
		pop    %edx
		pop    %ebx
		ret    



_02af3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02b0f2_jump

	_02af5e_jump:
		cmpw   $0x000077,0x000060(%esi)
		jne    _02b0e2_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _02b0e2_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		cmpw   $0x000074,0x000060(%edi)
		jne    _02afdb_jump
		mov    _0ce690_data,%ax
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%ax
		jge    _02afc2_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _02b00f_jump

	_02afc2_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02afd3_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _02b00f_jump

	_02afd3_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _02b00f_jump

	_02afdb_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		mov    0x000081(%esi),%dh
		movsbw (%ebx,%eax,8),%ax
		test   $0x000008,%dh
		je     _02b008_jump
		cwtl   
		jmp    _02b00b_jump

	_02b008_jump:
		cwtl   
		neg    %eax

	_02b00b_jump:
		mov    %ax,0x000040(%esi)

	_02b00f_jump:
		cmpw   $0x000074,0x000060(%edi)
		jne    _02b036_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		jmp    _02b074_jump

	_02b036_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    $0x000010,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%eax
		mov    %bx,(%esp)
		add    $0x000020,%ecx
		add    %ebx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_02b074_jump:
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x000081(%esi),%bh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%bh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f8e8_func
		mov    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01e030_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02b0e2_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02af5e_jump

	_02b0f2_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b0fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000076(%eax),%al
		cmp    0x000077(%ecx),%al
		je     _02b13a_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _02b156_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _02b156_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%bh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _02b156_jump

	_02b13a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d810_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d808_func
		orb    $0x000010,0x000081(%ecx)

	_02b156_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   $0x000008,%al
		jne    _02b172_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02b180_jump

	_02b172_jump:
		test   $0x000008,%al
		je     _02b187_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02b180_jump:
		mov    %ecx,%eax
		call   _061220_func

	_02b187_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b18c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		mov    _0ce6dc_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02b1ac_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02b1b5_jump

	_02b1ac_jump:
		jge    _02b1b5_jump
		orb    $0x000008,0x000081(%ecx)

	_02b1b5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02b1d8_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_02b1d8_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02b1fc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		mov    _0ce6dc_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02b21c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02b225_jump

	_02b21c_jump:
		jge    _02b225_jump
		orb    $0x000008,0x000081(%ecx)

	_02b225_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02b25c_jump
		testb  $0x000008,0x000081(%ecx)
		je     _02b248_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_02b248_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_02b25c_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02b274_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02b282_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _02b28e_jump

	_02b282_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02b29d_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02b29d_jump

	_02b28e_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _061220_func

	_02b29d_jump:
		pop    %edx
		pop    %ebx
		ret    



_02b2a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000052(%eax)
		jne    _02b2c5_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _061220_func
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_02b2c5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02b2d0_func:
		mov    0x00005c(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_02b2e0_func:
		mov    0x00005c(%eax),%ax
		and    $0x000007,%ah
		ret    



_02b2e8_func:
		push   %ebx
		call   _02b2e0_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_092dae_data,%eax
		pop    %ebx
		ret    



_02b308_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x000064,%dx
		jb     _02b326_jump
		jbe    _02b345_jump
		cmp    $0x0000d9,%dx
		je     _02b345_jump
		jmp    _02b37c_jump

	_02b326_jump:
		cmp    $0x000014,%dx
		jne    _02b37c_jump
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    $0x0000ff,%al
		mov    %bh,(%esp)
		mov    %cl,0x000001(%esp)
		mov    $0x000002,%ch
		mov    %al,0x000003(%esp)
		mov    %ch,0x000002(%esp)
		jmp    _02b387_jump

	_02b345_jump:
		movb   $0x000001,(%esp)
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02b375_jump
		cmpb   $0x000002,0x00006d(%eax)
		jne    _02b35c_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _02b36e_jump

	_02b35c_jump:
		cmpb   $0x00000f,0x00006b(%eax)
		jbe    _02b369_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _02b36e_jump

	_02b369_jump:
		movb   $0x0000ff,0x000001(%esp)

	_02b36e_jump:
		movb   $0x0000ff,0x000002(%esp)
		jmp    _02b387_jump

	_02b375_jump:
		movb   $0x0000ff,0x000001(%esp)
		jmp    _02b387_jump

	_02b37c_jump:
		xor    %dh,%dh
		mov    $0x0000ff,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000001(%esp)

	_02b387_jump:
		xor    %eax,%eax

	_02b389_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		cmp    %dx,%si
		sete   %dl
		mov    (%esp,%ebx,1),%cl
		mov    %edx,%edi
		cmp    $0x0000ff,%cl
		je     _02b3ab_jump
		cmp    $0x000001,%dx
		jne    _02b389_jump

	_02b3ab_jump:
		mov    %edi,%eax
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02b430_func:
		push   %esi
		push   %edi
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%edi
		sub    %esi,%eax
		sub    %edi,%edx
		add    %edi,%ecx
		mov    0x00000c(%esp),%edi
		add    %esi,%ebx
		cmp    %di,%ax
		jg     _02b482_jump
		cmp    0x000010(%esp),%dx
		jg     _02b482_jump
		movswl %ax,%esi
		movswl %bx,%eax
		add    %eax,%esi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jg     _02b482_jump
		movswl %dx,%eax
		movswl %cx,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _02b482_jump
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010

	_02b482_jump:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010



_02b48c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000060(%eax),%ax
		cmp    $0x00004f,%ax
		jb     _02b5af_jump
		jbe    _02b718_jump
		cmp    $0x000086,%ax
		jb     _02b546_jump
		jbe    _02b763_jump
		cmp    $0x0000a7,%ax
		jb     _02b505_jump
		jbe    _02b763_jump
		cmp    $0x0000be,%ax
		jb     _02b4f6_jump
		jbe    _02be23_jump
		cmp    $0x0000c3,%ax
		jb     _02b52a_jump
		jbe    _02be3c_jump
		cmp    $0x0000cc,%ax
		je     _02b701_jump
		jmp    _02b52a_jump

	_02b4f6_jump:
		cmp    $0x0000ac,%ax
		je     _02ba87_jump
		jmp    _02b52a_jump

	_02b505_jump:
		cmp    $0x000092,%ax
		jb     _02b520_jump
		jbe    _02b7cf_jump
		cmp    $0x0000a4,%ax
		je     _02bfa9_jump
		jmp    _02b52a_jump

	_02b520_jump:
		cmp    $0x000087,%ax
		je     _02b820_jump

	_02b52a_jump:
		mov    0x000028(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d738_func

	_02b53d_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b546_jump:
		cmp    $0x000077,%ax
		jb     _02b582_jump
		jbe    _02bd99_jump
		cmp    $0x00007a,%ax
		jb     _02b576_jump
		jbe    _02b9dd_jump
		cmp    $0x000081,%ax
		jb     _02b52a_jump
		jbe    _02bedd_jump
		cmp    $0x000084,%ax
		je     _02be53_jump
		jmp    _02b52a_jump

	_02b576_jump:
		cmp    $0x000079,%ax
		je     _02b820_jump
		jmp    _02b52a_jump

	_02b582_jump:
		cmp    $0x000061,%ax
		jb     _02b5a0_jump
		jbe    _02b8ca_jump
		cmp    $0x000069,%ax
		jb     _02b52a_jump
		cmp    $0x00006a,%ax
		jbe    _02b996_jump
		jmp    _02b52a_jump

	_02b5a0_jump:
		cmp    $0x000053,%ax
		je     _02bdc8_jump
		jmp    _02b52a_jump

	_02b5af_jump:
		cmp    $0x000039,%ax
		jb     _02b61a_jump
		jbe    _02b684_jump
		cmp    $0x00003e,%ax
		jb     _02b5fb_jump
		jbe    _02bc63_jump
		cmp    $0x000046,%ax
		jb     _02b5ec_jump
		jbe    _02bd44_jump
		cmp    $0x000047,%ax
		jbe    _02b875_jump
		cmp    $0x000049,%ax
		je     _02b7b8_jump
		jmp    _02b52a_jump

	_02b5ec_jump:
		cmp    $0x000042,%ax
		je     _02bc4a_jump
		jmp    _02b52a_jump

	_02b5fb_jump:
		cmp    $0x00003b,%ax
		jb     _02ba32_jump
		jbe    _02bb53_jump
		cmp    $0x00003c,%ax
		je     _02bb9d_jump
		jmp    _02b52a_jump

	_02b61a_jump:
		cmp    $0x000023,%ax
		jb     _02b65a_jump
		jbe    _02ba87_jump
		cmp    $0x00002b,%ax
		jb     _02b64b_jump
		jbe    _02ba87_jump
		cmp    $0x00002c,%ax
		jbe    _02b875_jump
		cmp    $0x000038,%ax
		je     _02ba87_jump
		jmp    _02b52a_jump

	_02b64b_jump:
		cmp    $0x000028,%ax
		je     _02b9dd_jump
		jmp    _02b52a_jump

	_02b65a_jump:
		cmp    $0x000005,%ax
		jb     _02b675_jump
		jbe    _02bb78_jump
		cmp    $0x000008,%ax
		je     _02b763_jump
		jmp    _02b52a_jump

	_02b675_jump:
		cmp    $0x000002,%ax
		je     _02b763_jump
		jmp    _02b52a_jump

	_02b684_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		push   %eax
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %esi,%eax
		mov    $0x000001,%edx
		call   _01dbb4_func
		mov    (%esp),%eax
		mov    0x000028(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _02b6d3_jump
		addw   $0x000004,0x000000(%ebp)
		mov    (%esp),%eax
		subw   $0x000008,(%eax)
		mov    (%edi),%bx
		add    $0x000008,%ebx
		mov    0x000028(%esp),%eax
		mov    %bx,(%edi)
		subw   $0x00000c,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b6d3_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		subw   $0x000020,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b701_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01dcfc_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b718_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b763_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b7b8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01d738_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b7cf_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d738_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000028(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b820_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b875_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b8ca_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		xor    %ah,%ah
		mov    0x000081(%esi),%dh
		mov    %ax,0x000004(%esp)
		and    $0x0000f7,%dh
		lea    0x000008(%esp),%eax
		mov    %dh,0x000081(%esi)
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%esi)
		mov    %bl,%bh
		or     %al,%bh
		mov    0x000050(%esi),%ax
		mov    %bh,0x000081(%esi)
		cmp    $0x000002,%ax
		je     _02b963_jump
		mov    0x000014(%esp),%eax
		add    $0x000003,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000028,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b963_jump:
		mov    0x000014(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000023,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000001,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000001,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b996_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000020,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b9dd_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ba32_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ba87_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%eax)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02b53d_jump
		mov    0x00006c(%esi),%bh
		cmp    $0x000005,%bh
		jne    _02baf8_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000028(%esp),%edx
		mov    0x00006b(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02baf8_jump:
		cmp    $0x000006,%bh
		jne    _02b53d_jump
		mov    (%eax),%cx
		sar    %cx
		mov    %cx,(%eax)
		mov    (%edi),%dx
		add    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		cmp    %ebx,%eax
		jle    _02bb22_jump
		mov    %ebx,%eax

	_02bb22_jump:
		mov    (%edi),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		mov    0x000028(%esp),%edx
		cmp    %ebx,%eax
		jle    _02bb40_jump
		mov    %ebx,%eax

	_02bb40_jump:
		mov    (%edx),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bb53_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%ecx)
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bb78_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%ecx)
		movw   $0x00006e,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bb9d_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bbf1_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02bbf1_jump
		cmpb   $0x000010,0x00006b(%esi)
		jb     _02bbf1_jump
		testb  $0x000008,0x000081(%esi)
		je     _02bbbf_jump
		mov    $0x000050,%eax
		jmp    _02bbc4_jump

	_02bbbf_jump:
		mov    $0x000010,%eax

	_02bbc4_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bbf1_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bc17_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02bc17_jump
		testb  $0x000008,0x000081(%esi)
		je     _02bc0d_jump
		mov    $0x000050,%eax
		jmp    _02bc12_jump

	_02bc0d_jump:
		mov    $0x000030,%eax

	_02bc12_jump:
		add    0x000028(%esi),%eax
		jmp    _02bc20_jump

	_02bc17_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_02bc20_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bc4a_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01d738_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bc63_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x00006d(%esi),%ch
		cmp    $0x000002,%ch
		jne    _02bcbe_jump
		cmp    0x00006c(%esi),%ch
		jne    _02bcbe_jump
		mov    0x000014(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bcbe_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02bcfd_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02bcfd_jump
		mov    0x000014(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bcfd_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b53d_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02b53d_jump
		mov    0x000014(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bd44_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000014(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bd99_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bdc8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02be09_jump
		mov    (%esp),%eax
		movw   $0x000016,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		mov    (%edx),%dx
		add    $0x000044,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%ebx),%bx
		add    $0x000041,%ebx
		mov    %bx,(%edi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be09_jump:
		mov    (%esp),%eax
		movw   $0x000000,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be23_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _064b70_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be3c_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01c0c0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be53_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02be5f_jump
		cmpb   $0x00000f,0x00006c(%esi)
		je     _02be77_jump

	_02be5f_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02be6b_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _02be77_jump

	_02be6b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02beaa_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _02beaa_jump

	_02be77_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02beaa_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bedd_jump:
		cmpb   $0x000001,0x000076(%esi)
		jne    _02bf0c_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000f,(%eax)

	_02bf0c_jump:
		cmpb   $0x000002,0x000076(%esi)
		jne    _02bf3c_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000031,(%eax)

	_02bf3c_jump:
		cmpb   $0x000003,0x000076(%esi)
		jne    _02bf6c_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000010,(%eax)

	_02bf6c_jump:
		cmpb   $0x000004,0x000076(%esi)
		jne    _02b53d_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bfa9_jump:
		mov    0x000028(%esp),%eax
		push   %eax
		mov    %esi,%eax
		call   _01d738_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $0x0000ff,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%dx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%edi),%bx
		add    %eax,%ebx
		mov    (%esp),%edx
		mov    %bx,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000028(%esp),%edx
		sub    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c028_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		lea    0x000020(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000060(%eax),%ax
		mov    %edx,0x00000c(%esp)
		mov    %edx,0x000010(%esp)
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		lea    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		push   %edx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		push   %edx
		movswl %di,%edx
		call   _01dbb4_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02c32f_jump
		mov    0x000014(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02c0a4_jump
		jbe    _02c0b3_jump
		cmp    $0x000064,%bx
		jb     _02c2f1_jump
		jbe    _02c229_jump
		cmp    $0x0000d9,%bx
		je     _02c229_jump
		jmp    _02c2f1_jump

	_02c0a4_jump:
		cmp    $0x000014,%bx
		je     _02c140_jump
		jmp    _02c2f1_jump

	_02c0b3_jump:
		cmp    $0x000004,%di
		jb     _02c0c6_jump
		jbe    _02c0f9_jump
		cmp    $0x000005,%di
		je     _02c11a_jump
		jmp    _02c2f1_jump

	_02c0c6_jump:
		cmp    $0x000003,%di
		jne    _02c2f1_jump
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _02c2f1_jump

	_02c0f9_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02c2f1_jump

	_02c11a_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _02c2f1_jump

	_02c140_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c14c_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _02c160_jump

	_02c14c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02c1db_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02c1db_jump

	_02c160_jump:
		cmp    $0x000001,%di
		jb     _02c173_jump
		jbe    _02c198_jump
		cmp    $0x000002,%di
		je     _02c1b5_jump
		jmp    _02c2f1_jump

	_02c173_jump:
		test   %di,%di
		jne    _02c2f1_jump
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		jmp    _02c2e9_jump

	_02c198_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _02c2f1_jump

	_02c1b5_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02c2f1_jump

	_02c1db_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c218_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02c218_jump
		mov    0x000028(%esi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000020(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000008(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _02c2f1_jump

	_02c218_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _02c2f1_jump

	_02c229_jump:
		cmp    $0x000002,%di
		jb     _02c244_jump
		jbe    _02c2b2_jump
		cmp    $0x000003,%di
		je     _02c2d0_jump
		jmp    _02c2f1_jump

	_02c244_jump:
		cmp    $0x000001,%di
		jne    _02c2f1_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c28c_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x000009,%bl
		je     _02c266_jump
		cmp    $0x00000a,%bl
		je     _02c266_jump
		cmp    $0x00000b,%bl
		jne    _02c28c_jump

	_02c266_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x000018(%esp)
		jmp    _02c2f1_jump

	_02c28c_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02c2f1_jump

	_02c2b2_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02c2f1_jump

	_02c2d0_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)

	_02c2e9_jump:
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000018(%esp)

	_02c2f1_jump:
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%ecx
		add    %ecx,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00001c(%esp),%esi
		mov    0x000020(%esp),%eax
		mov    (%esp),%ebx
		add    %esi,%eax
		mov    %ax,(%ebx)
		mov    0x000010(%esp),%edi
		mov    0x000008(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x000018(%esp),%eax
		add    0x00000c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)

	_02c32f_jump:
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c33c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    0x000048(%esp),%esi
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000034(%esp)
		mov    0x000060(%esi),%ax
		mov    $0xffffffff,%edi
		cmp    $0x000071,%ax
		jb     _02c394_jump
		jbe    _02c3a3_jump
		cmp    $0x0000c6,%ax
		jb     _02c664_jump
		jbe    _02c440_jump
		cmp    $0x0000c8,%ax
		jb     _02c664_jump
		cmp    $0x0000c9,%ax
		jbe    _02c440_jump
		jmp    _02c664_jump

	_02c394_jump:
		cmp    $0x00002e,%ax
		je     _02c440_jump
		jmp    _02c664_jump

	_02c3a3_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006b(%esi),%bl
		mov    %bl,%al
		mov    _094b9c_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _02c664_jump
		movswl %bx,%ebp
		mov    0x00002c(%esi),%cx
		mov    _094bea_data(,%ebp,2),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		push   %eax
		add    %ecx,%ebx
		mov    _094bc2_data(,%ebp,2),%eax
		add    %ebx,%edx
		mov    _094bec_data(,%ebp,2),%bx
		sar    $0x000010,%eax
		sub    %ebx,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x00003a(%esp),%ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		sar    %eax
		add    %ebx,%edx
		sar    $0x000010,%ecx
		sub    %eax,%edx
		mov    0x000026(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x000022(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c664_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c440_jump:
		mov    0x000034(%esp),%eax
		cmp    _0cf876_data,%ax
		jne    _02c52d_jump
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01dec0_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebp
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		mov    0x000026(%esp),%esi
		push   %eax
		mov    0x000042(%esp),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000010(%esp)
		mov    0x00002e(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		mov    %eax,0x000014(%esp)
		call   _02b430_func
		test   %ax,%ax
		je     _02c4e3_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c4e3_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000c(%esp),%ecx
		sar    $0x000010,%eax
		mov    %esi,%ebx
		push   %eax
		mov    %ebp,%edx
		mov    0x000014(%esp),%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c664_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02c52d_jump:
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01dec0_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c5a4_jump
		mov    $0x000006,%edi

	_02c5a4_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c5ef_jump
		mov    $0x000001,%edi

	_02c5ef_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c664_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _02c664_jump
		lea    0x000014(%esp),%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000030(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c664_jump
		mov    $0x000009,%edi

	_02c664_jump:
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c670_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,(%esp)
		mov    %dx,0x000024(%esp)
		mov    %dx,0x000028(%esp)
		mov    %dx,0x000008(%esp)
		mov    $0xffffffff,%eax
		mov    0x00005c(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _02c8ec_jump
		mov    %esi,%eax
		call   _02b2d0_func
		mov    _0cf88c_data,%di
		mov    %eax,0x000018(%esp)
		cmp    $0x000001,%di
		jne    _02c72c_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000032,%ax
		je     _02c6df_jump
		cmp    $0x0000e3,%ax
		jne    _02c6fe_jump

	_02c6df_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02c728_jump

	_02c6fe_jump:
		cmpw   $0x0000a5,0x000060(%esi)
		jne    _02c72c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02c72c_jump

	_02c728_jump:
		decl   0x000018(%esp)

	_02c72c_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x00002c(%esp)
		test   %ax,%ax
		jle    _02ca78_jump

	_02c740_jump:
		mov    0x00002a(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _02b2e8_func
		mov    0x000006(%eax),%ch
		mov    %eax,%edi
		test   $0x000004,%ch
		je     _02c764_jump
		cmpw   $0x00005e,0x000010(%esp)
		jne    _02c8c9_jump

	_02c764_jump:
		testb  $0x000002,0x000006(%edi)
		je     _02c819_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esi),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    0x00006b(%esi),%bl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		cmpb   $0x000000,0x000003(%ebx,%edx,4)
		je     _02c875_jump
		mov    %esp,%eax
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00002c(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %esi,%eax
		call   _01dbb4_func
		testb  $0x000008,0x000081(%esi)
		je     _02c7e7_jump
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    (%edi),%dx
		mov    0x000008(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02c7f5_jump

	_02c7e7_jump:
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)

	_02c7f5_jump:
		mov    0x000028(%esp),%ecx
		mov    0x000002(%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		jmp    _02c875_jump

	_02c819_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%dx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		testb  $0x000008,0x000081(%esi)
		je     _02c875_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%edx
		add    %ebx,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c875_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c8c9_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		jmp    _02ca78_jump

	_02c8c9_jump:
		mov    0x00002c(%esp),%ecx
		inc    %ecx
		mov    0x000018(%esp),%edi
		mov    %cx,0x00002c(%esp)
		cmp    %di,%cx
		jl     _02c740_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c8ec_jump:
		mov    0x000079(%esi),%ah
		cmp    $0x0000fe,%ah
		jne    _02c99a_jump
		mov    %esp,%eax
		lea    0x000024(%esp),%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02b48c_func
		testb  $0x000008,0x000081(%esi)
		je     _02c93a_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c93a_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02c985_jump
		movswl %ax,%edx
		jmp    _02c98a_jump

	_02c985_jump:
		mov    $0xffffffff,%edx

	_02c98a_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c99a_jump:
		cmp    $0x0000ff,%ah
		jne    _02ca78_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x000030(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jle    _02ca78_jump

	_02c9d0_jump:
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _02b308_func
		test   %ax,%ax
		je     _02ca61_jump
		mov    %esp,%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02c028_func
		test   %ax,%ax
		je     _02ca61_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02ca61_jump
		mov    0x000030(%esp),%eax
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02ca61_jump:
		mov    0x000030(%esp),%edx
		inc    %edx
		mov    0x000014(%esp),%ebx
		mov    %dx,0x000030(%esp)
		cmp    %bx,%dx
		jl     _02c9d0_jump

	_02ca78_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02ca84_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %edx,%edi
		mov    %bx,0x000018(%esp)
		mov    %cx,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02cb02_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02b430_func
		mov    %eax,%edx

	_02cb02_jump:
		test   %dx,%dx
		je     _02cb0e_jump
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		jmp    _02cb13_jump

	_02cb0e_jump:
		mov    $0xffffffff,%eax

	_02cb13_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02cb1c_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x000079(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _02cb7d_jump
		jbe    _02cb3d_jump
		cmp    $0x0000ff,%dx
		jbe    _02cb5c_jump
		jmp    _02cb7d_jump

	_02cb3d_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02c33c_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02cb5c_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _02c670_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02cb7d_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02ca84_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02cb9c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000060(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _02cbef_jump
		jbe    _02ccef_jump
		cmp    $0x0000a0,%ax
		jb     _02cbd6_jump
		jbe    _02ce08_jump
		cmp    $0x0000a9,%ax
		jb     _02ce25_jump
		jbe    _02cc35_jump
		cmp    $0x000102,%ax
		je     _02cc35_jump
		jmp    _02ce25_jump

	_02cbd6_jump:
		cmp    $0x00009b,%ax
		jbe    _02cd2f_jump
		cmp    $0x00009f,%ax
		je     _02cd71_jump
		jmp    _02ce25_jump

	_02cbef_jump:
		cmp    $0x000051,%ax
		jb     _02cc12_jump
		jbe    _02cc35_jump
		cmp    $0x00007d,%ax
		jb     _02ce25_jump
		jbe    _02cc68_jump
		cmp    $0x00008a,%ax
		je     _02ccaf_jump
		jmp    _02ce25_jump

	_02cc12_jump:
		cmp    $0x000010,%ax
		jb     _02ce25_jump
		cmp    $0x000011,%ax
		jbe    _02cd65_jump
		cmp    $0x000018,%ax
		je     _02cd65_jump
		jmp    _02ce25_jump

	_02cc35_jump:
		mov    $0x000001,%ecx
		mov    $0x000002,%esi
		xor    %ebx,%ebx
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02cc68_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		xor    %eax,%eax
		mov    $0x000004,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    $0x0000ff,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ccaf_jump:
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ccef_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x000004,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02cd2f_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02cd65_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		jmp    _02ce12_jump

	_02cd71_jump:
		testb  $0x000008,_0ce6d1_data
		je     _02cdb7_jump
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x000009,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		jmp    _02cdf2_jump

	_02cdb7_jump:
		mov    $0x000009,%esi
		mov    $0x000008,%edi
		mov    $0x000007,%eax
		mov    $0x000006,%ebx
		mov    $0x000005,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000004,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)

	_02cdf2_jump:
		movw   $0x0000ff,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ce08_jump:
		mov    $0x000004,%eax
		mov    $0x000005,%ebx

	_02ce12_jump:
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)

	_02ce25_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02ce34_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0ce678_data,%cx
		mov    _0ce6b8_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0ce6b9_data,%bl
		mov    _0ce67c_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0cf81b_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _02ce84_jump
		mov    $0x000004,%edx

	_02ce84_jump:
		movswl %bx,%edi
		movswl %ax,%esi
		movswl %dx,%edx
		mov    %esi,%ebx
		lea    (%edi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02ceac_jump
		cmp    %ecx,%eax
		jg     _02ceac_jump
		mov    $0x000001,%eax
		jmp    _02ceae_jump

	_02ceac_jump:
		xor    %eax,%eax

	_02ceae_jump:
		test   %eax,%eax
		jne    _02ceb9_jump
		mov    $0x002710,%eax
		jmp    _02cf0a_jump

	_02ceb9_jump:
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02cece_jump
		cmp    %ecx,%eax
		jg     _02cece_jump
		mov    $0x000001,%eax
		jmp    _02ced0_jump

	_02cece_jump:
		xor    %eax,%eax

	_02ced0_jump:
		test   %eax,%eax
		je     _02cef1_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02ceea_jump
		neg    %eax

	_02ceea_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_02cef1_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02cf07_jump
		neg    %eax

	_02cf07_jump:
		neg    %eax
		dec    %eax

	_02cf0a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02cf14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0cf81b_data,%ah
		mov    %dx,0x000010(%esp)
		test   $0x000002,%ah
		je     _02cf3b_jump
		movw   $0x000004,0x000010(%esp)

	_02cf3b_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02cf63_jump
		neg    %eax

	_02cf63_jump:
		mov    _094a7a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %edx,%edi
		movswl %dx,%edx
		sub    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%ecx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    _0ce678_data,%bx
		mov    0x000074(%esi),%al
		add    %edi,%edx
		movzbw _0ce6b9_data,%di
		dec    %edx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %ecx,0x00000c(%esp)
		mov    _0ce6b8_data,%al
		movswl %dx,%ebp
		add    %eax,%ebx
		mov    _0ce67c_data,%ax
		mov    %bx,0x000014(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x000012(%esp),%edx
		add    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %ebx,%eax
		lea    (%ebx,%ebp,1),%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02d004_jump
		cmp    %ecx,%eax
		jg     _02d004_jump
		mov    $0x000001,%eax
		jmp    _02d006_jump

	_02d004_jump:
		xor    %eax,%eax

	_02d006_jump:
		test   %eax,%eax
		je     _02d0c4_jump
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		movswl %ax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02d01f_jump
		neg    %eax

	_02d01f_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _02d0c4_jump
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02d058_jump
		sar    %cl,%ax
		jmp    _02d061_jump

	_02d058_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02d061_jump:
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02d080_jump
		cmp    %ecx,%eax
		jg     _02d080_jump
		mov    $0x000001,%eax
		jmp    _02d082_jump

	_02d080_jump:
		xor    %eax,%eax

	_02d082_jump:
		test   %eax,%eax
		je     _02d09d_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02d097_jump
		neg    %eax

	_02d097_jump:
		mov    %ax,0x000054(%esi)
		jmp    _02d0ca_jump

	_02d09d_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02d0ae_jump
		neg    %eax

	_02d0ae_jump:
		mov    %eax,%ecx
		mov    %ax,0x000054(%esi)
		neg    %ecx
		mov    %cx,0x000054(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d0c4_jump:
		movw   $0x002710,0x000054(%esi)

	_02d0ca_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d0d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0cf81b_data,%ah
		mov    %dx,0x00001c(%esp)
		test   $0x000002,%ah
		je     _02d0fa_jump
		movw   $0x000004,0x00001c(%esp)

	_02d0fa_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000018(%esp)
		mov    _0ce6b9_data,%al
		mov    _0ce67c_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0ce69a_data,%ax
		mov    %edx,0x000014(%esp)
		cmp    %cx,%ax
		jne    _02d223_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02d182_jump
		cmp    $0x00009a,%bx
		je     _02d182_jump
		cmp    $0x00009b,%bx
		jne    _02d19a_jump

	_02d182_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02d19a_jump:
		cmpw   $0x00009f,0x000060(%esi)
		jne    _02d207_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _02d207_jump
		mov    0x00006b(%esi),%dh
		cmp    $0x000009,%dh
		jbe    _02d207_jump
		cmp    $0x000028,%dh
		jae    _02d207_jump
		xor    %eax,%eax
		mov    _0ce678_data,%ebx
		mov    _0ce6b8_data,%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		jle    _02d1ea_jump
		decl   _0ce678_data
		jmp    _02d1f2_jump

	_02d1ea_jump:
		jge    _02d1f2_jump
		incl   _0ce678_data

	_02d1f2_jump:
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)

	_02d207_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ce34_func
		mov    %eax,%ebx

	_02d223_jump:
		cmp    $0x002710,%bx
		jne    _02d326_jump

	_02d22e_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02cb9c_func
		inc    %edi
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02d247_jump
		neg    %eax

	_02d247_jump:
		cmp    $0x000007,%eax
		jle    _02d326_jump
		cmpw   $0x0000ff,0x000010(%esp)
		je     _02d326_jump
		mov    %esp,%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02d2a4_jump
		cmp    $0x00009a,%bx
		je     _02d2a4_jump
		cmp    $0x00009b,%bx
		jne    _02d2bc_jump

	_02d2a4_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02d2bc_jump:
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ecx,%ebx
		sar    $0x000010,%eax
		add    %edx,%ebx
		cmp    %ebx,%eax
		jg     _02d30a_jump
		sub    %edx,%ecx
		cmp    %ecx,%eax
		jl     _02d30a_jump
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000060(%esi),%ax
		sub    %ecx,%ebx
		cmp    $0x00009f,%ax
		jne    _02d30f_jump
		cmp    $0x000008,%bx
		jl     _02d30f_jump
		cmp    $0x00000b,%bx
		jge    _02d30f_jump
		xor    %ebx,%ebx
		jmp    _02d30f_jump

	_02d30a_jump:
		mov    $0x002710,%ebx

	_02d30f_jump:
		cmp    $0x002710,%bx
		je     _02d22e_jump
		mov    0x000010(%esp),%al
		mov    %al,0x000075(%esi)
		jmp    _02d22e_jump

	_02d326_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d334_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000004(%esp)
		andb   $0x0000f7,0x000081(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000081(%esi)
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000074(%esi),%al
		mov    %ebx,(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000010(%esp)
		mov    %cx,0x00000c(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02ce34_func
		mov    %eax,%ebx
		cmp    $0x002710,%ax
		je     _02d3df_jump
		movb   $0x000002,0x000075(%esi)

	_02d3df_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d3ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000003,0x00006c(%eax)
		je     _02d402_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02d46f_jump

	_02d402_jump:
		cmpb   $0x00000c,0x00006b(%esi)
		jae    _02d46f_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,(%esp)
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000004(%esp)
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _02ce34_func
		jmp    _02d474_jump

	_02d46f_jump:
		mov    $0x002710,%eax

	_02d474_jump:
		mov    _0ce69a_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _02d4c0_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02d4c0_jump
		cmpb   $0x00000b,0x00006b(%esi)
		jne    _02d4c0_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0ce69a_data
		call   _01d818_func
		mov    _0ce692_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0ce692_data

	_02d4c0_jump:
		mov    %ax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d4d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_09257d_data(,%eax,4)
		je     _02d4f5_jump
		mov    %esi,%eax
		call   _02d0d4_func
		jmp    _02d5c1_jump

	_02d4f5_jump:
		cmp    $0x00006d,%ax
		je     _02d501_jump
		cmp    $0x000061,%ax
		jne    _02d510_jump

	_02d501_jump:
		mov    %esi,%eax
		call   _02d334_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d510_jump:
		cmp    $0x000083,%ax
		jne    _02d525_jump
		mov    %esi,%eax
		call   _02d3ec_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d525_jump:
		cmp    $0x0000fe,%ax
		jne    _02d53a_jump
		mov    %esi,%eax
		call   _02cf14_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d53a_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x000008,%bx
		je     _02d58d_jump
		cmp    $0x000086,%bx
		je     _02d58d_jump
		cmp    $0x0000a7,%bx
		je     _02d58d_jump
		cmp    $0x0000b1,%bx
		je     _02d58d_jump
		cmp    $0x000006,%bx
		jne    _02d5a3_jump

	_02d58d_jump:
		mov    0x00000c(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x000002,%ebx
		add    $0x000004,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,(%esp)

	_02d5a3_jump:
		mov    0x000002(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ce34_func
		mov    %ax,0x000054(%esi)

	_02d5c1_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d5cc_func:
		push   %edx
		call   _066ff8_func
		mov    $0x000001,%ah
		mov    _0ce77d_data,%dl
		mov    %ah,_0ce781_data
		test   %dl,%dl
		jne    _02d5f8_jump
		xor    %dh,%dh
		mov    _0ce6dc_data,%eax
		mov    %dx,_0ce778_data
		movw   $0x000000,0x000040(%eax)

	_02d5f8_jump:
		pop    %edx
		ret    



_02d5fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0ce6dc_data,%eax
		call   _01dbb4_func
		mov    _0ce6dc_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _02d660_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x000068(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _02d68b_jump

	_02d660_jump:
		jge    _02d694_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_02d68b_jump:
		call   _01e588_func
		mov    %al,0x000010(%esp)

	_02d694_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_09253c_data(%eax)
		je     _02d6b7_jump
		call   _02d5cc_func
		mov    $0x000001,%eax
		call   _066bf4_func
		jmp    _02d84d_jump

	_02d6b7_jump:
		mov    _0cef5a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		mov    _0ccdf0_data,%esi
		add    %ebx,%edx
		mov    _0cf024_data,%ax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%esi
		test   %ax,%ax
		jle    _02d84d_jump

	_02d6e3_jump:
		cmpw   $0x000000,_0cf892_data
		jne    _02d84d_jump
		cmpw   $0x000000,_0cf880_data
		jne    _02d84d_jump
		cmpb   $0x000000,_0cfa76_data
		jne    _02d84d_jump
		cmpb   $0x000000,_0cfa78_data
		jne    _02d84d_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _02d824_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02d824_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02d824_jump
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02cb1c_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _02d824_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		movswl %dx,%edx
		lea    0x000000(,%eax,4),%ebx
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %esi,%eax
		mov    0x000076(%esi),%cl
		call   *_093600_data(,%ebx,4)
		xor    %edx,%edx
		call   _02d5cc_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _02d7dd_jump
		cmp    $0x00000a,%edx
		je     _02d7dd_jump
		movb   $0x000000,0x000072(%esi)

	_02d7dd_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    %cx,%ax
		jne    _02d84d_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000001,_09257f_data(%eax)
		je     _02d84d_jump
		testb  $0x000080,_09257c_data(%eax)
		je     _02d80a_jump
		mov    _0cf88a_data,%ax
		jmp    _02d80e_jump

	_02d80a_jump:
		mov    0x000034(%esi),%ax

	_02d80e_jump:
		movswl %ax,%edx
		mov    $0x0000d6,%eax
		call   _07228c_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d824_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0cef5a_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%esi
		add    %edx,%esi
		cmp    _0cf024_data,%di
		jl     _02d6e3_jump

	_02d84d_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax

	_02d858_jump:
		ret    



_02d914_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%bl
		add    %edx,%ebx
		mov    _0ce638_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02da91_jump
		mov    _0ce698_data,%ebx
		mov    _0ce6a2_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%ebx
		jne    _02d96d_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0ce640_data,%ebx
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		sete   %al
		xor    %ah,%ah

	_02d96d_jump:
		test   %ax,%ax
		jne    _02da91_jump
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ebx
		mov    _0ce640_data,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,1)
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02da91_jump
		lea    0x000001(%edx),%ecx
		lea    -0x000001(%edx),%ebx
		cmpb   $0x000002,_0ce6bd_data
		jne    _02d9bf_jump
		cmpw   $0x000000,_0ce690_data
		je     _02d9ee_jump

	_02d9bf_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce640_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		je     _02d9e5_jump
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02d9ec_jump

	_02d9e5_jump:
		mov    $0x000001,%eax
		jmp    _02d9ee_jump

	_02d9ec_jump:
		xor    %eax,%eax

	_02d9ee_jump:
		test   %ax,%ax
		jne    _02da91_jump
		testb  $0x000002,_0cf81b_data
		jne    _02da2b_jump
		xor    %ecx,%ecx
		mov    _0ce6bd_data,%cl
		mov    _0ce65c_data,%ebx
		shl    $0x000002,%ecx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0ce6bc_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02da2b_jump
		mov    $0x000001,%ebx
		jmp    _02da2d_jump

	_02da2b_jump:
		xor    %ebx,%ebx

	_02da2d_jump:
		test   %ebx,%ebx
		je     _02da91_jump
		mov    _0ce636_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02da53_jump

	_02da44_jump:
		mov    _0ce636_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02da44_jump

	_02da53_jump:
		test   %eax,%eax
		jge    _02da64_jump
		mov    _0ce636_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%eax
		jmp    _02da53_jump

	_02da64_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0ce640_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%edx,2)
		je     _02da86_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02da8f_jump

	_02da86_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02da8f_jump:
		xor    %eax,%eax

	_02da91_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02da98_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		add    %eax,%edx
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02dba8_jump
		mov    _0ce6a2_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dl
		cmp    $0x000018,%dl
		jne    _02db32_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		cmpb   $0x000001,_0cfa7e_data
		je     _02db0f_jump
		movb   $0x000001,_0cfa7e_data
		call   _071c10_func
		call   _01cf80_func

	_02db0f_jump:
		xor    %ecx,%ecx
		mov    _0ce67c_data,%edx
		mov    %cx,_0ce692_data
		add    $0x000005,%edx
		mov    %cx,_0ce690_data
		mov    %edx,_0ce67c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02db32_jump:
		cmpb   $0x000018,_0ce6b5_data
		jne    _02db7d_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		cmpb   $0x000001,_0cfa7e_data
		je     _02db69_jump
		movb   $0x000001,_0cfa7e_data
		call   _071c10_func
		call   _01cf80_func

	_02db69_jump:
		xor    %edx,%edx
		mov    %dx,_0ce692_data
		mov    %dx,_0ce690_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02db7d_jump:
		cmp    $0x000019,%dl
		jne    _02dba8_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data

	_02dba8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dbac_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0ce692_data
		mov    %dx,_0ce690_data
		mov    %ah,_0ce6cd_data
		pop    %edx
		pop    %ebx
		ret    



_02dbdc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02dc31_jump
		call   _070408_func
		xor    %ebx,%ebx
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%bl
		add    %edx,%ebx

	_02dbfc_jump:
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		cmp    $0x00000a,%al
		jne    _02dc29_jump
		decl   _0ce67c_data
		jmp    _02dbfc_jump

	_02dc29_jump:
		xor    %ah,%ah
		mov    %ah,_0ce6b2_data

	_02dc31_jump:
		mov    _0ce6bd_data,%dl
		cmp    $0x000006,%dl
		jne    _02dc6f_jump
		mov    $0x000008,%ebx
		mov    $0x000006,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0ce692_data
		xor    %dl,%bl
		mov    %dx,_0ce690_data
		mov    %bl,_0ce780_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02dc6f_jump:
		testb  $0x000004,_0ce6d1_data
		je     _02df2e_jump
		cmp    $0x000003,%dl
		jne    _02dc91_jump
		mov    _0ce6bc_data,%bh
		cmp    $0x000016,%bh
		je     _02dc98_jump
		cmp    $0x000020,%bh
		je     _02dc98_jump

	_02dc91_jump:
		mov    $0x000001,%eax
		jmp    _02dc9a_jump

	_02dc98_jump:
		xor    %eax,%eax

	_02dc9a_jump:
		test   %eax,%eax
		je     _02df2e_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _02dcb4_jump
		cmpb   $0x00001f,_0ce6bc_data
		je     _02dcbb_jump

	_02dcb4_jump:
		mov    $0x000001,%eax
		jmp    _02dcbd_jump

	_02dcbb_jump:
		xor    %eax,%eax

	_02dcbd_jump:
		test   %eax,%eax
		je     _02df2e_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce6bc_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02dd13_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _02dd13_jump
		mov    $0x00003d,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		jmp    _02dd22_jump

	_02dd13_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax

	_02dd22_jump:
		call   _01d818_func
		xor    %ebx,%ebx
		mov    %bx,_0cf83c_data
		test   %ecx,%ecx
		jne    _02dd7e_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _02dd46_jump
		cmpb   $0x00003d,_0ce6bc_data
		je     _02dd4d_jump

	_02dd46_jump:
		mov    $0x000001,%eax
		jmp    _02dd4f_jump

	_02dd4d_jump:
		xor    %eax,%eax

	_02dd4f_jump:
		test   %eax,%eax
		je     _02dd7e_jump
		testb  $0x000008,_0ce6d1_data
		je     _02dd67_jump
		movw   $0x00fffe,_0ce690_data
		jmp    _02dd70_jump

	_02dd67_jump:
		movw   $0x000002,_0ce690_data

	_02dd70_jump:
		movw   $0x00fffd,_0ce692_data
		jmp    _02dec5_jump

	_02dd7e_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _02dd94_jump
		cmpb   $0x00003d,_0ce6bc_data
		je     _02dec5_jump

	_02dd94_jump:
		mov    0x000060(%ecx),%si
		cmp    $0x0000b4,%si
		jne    _02dda9_jump
		call   _0778cc_func
		jmp    _02de61_jump

	_02dda9_jump:
		cmp    $0x000096,%si
		jne    _02ddba_jump
		call   _079688_func
		jmp    _02de61_jump

	_02ddba_jump:
		cmp    $0x0000c6,%si
		je     _02de5c_jump
		cmp    $0x0000c8,%si
		jne    _02ddd6_jump
		mov    $0xffffffff,%eax
		jmp    _02de61_jump

	_02ddd6_jump:
		cmp    $0x000064,%si
		jne    _02ddf3_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _02de5c_jump
		mov    $0xffffffff,%eax
		jmp    _02de61_jump

	_02ddf3_jump:
		cmp    $0x000078,%si
		jne    _02de02_jump
		mov    %ecx,%eax
		call   _02008c_func
		jmp    _02de61_jump

	_02de02_jump:
		cmp    $0x0000bb,%si
		jne    _02de12_jump
		mov    %ecx,%eax
		call   _06628c_func
		jmp    _02de61_jump

	_02de12_jump:
		cmp    $0x0000d1,%si
		je     _02de5c_jump
		cmp    $0x0000d2,%si
		jne    _02de27_jump
		mov    $0xffffffff,%eax
		jmp    _02de61_jump

	_02de27_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0ce68e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02de47_jump
		mov    $0x000001,%eax
		jg     _02de47_jump
		neg    %eax

	_02de47_jump:
		test   %ax,%ax
		jne    _02de61_jump
		testb  $0x000008,_0ce6d1_data
		je     _02de5c_jump
		mov    $0xffffffff,%eax
		jmp    _02de61_jump

	_02de5c_jump:
		mov    $0x000001,%eax

	_02de61_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		testb  $0x000004,_09257d_data(,%edx,4)
		je     _02de78_jump
		mov    $0x000005,%edx
		jmp    _02de8b_jump

	_02de78_jump:
		cmp    $0x0000b4,%dx
		jne    _02de86_jump
		mov    $0x000004,%edx
		jmp    _02de8b_jump

	_02de86_jump:
		mov    $0x000002,%edx

	_02de8b_jump:
		cmp    $0x000001,%ax
		jne    _02de9a_jump
		mov    %dx,_0ce690_data
		jmp    _02deb2_jump

	_02de9a_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _02deb2_jump
		mov    %edx,%ecx
		mov    %dx,_0ce690_data
		neg    %ecx
		mov    %cx,_0ce690_data

	_02deb2_jump:
		inc    %edx
		mov    %edx,%esi
		mov    %dx,_0ce692_data
		neg    %esi
		mov    %si,_0ce692_data

	_02dec5_jump:
		mov    $0x000001,%cl
		mov    $0xffffffff,%esi
		mov    _0cf81a_data,%dl
		xor    %ebx,%ebx
		xor    %al,%al
		xor    %edi,%edi
		mov    %cl,_0cfa8c_data
		mov    %bx,_0cf8a4_data
		mov    %si,_0ce69a_data
		mov    %di,_0cf866_data
		mov    $0xffffffff,%ecx
		xor    %ah,%ah
		mov    %cx,_0cf898_data
		xor    %ch,%ch
		mov    %ax,_0ce698_data
		mov    %ch,_0ce6c1_data
		mov    %ch,_0ce6c2_data
		mov    %ch,_0ce780_data
		test   $0x000008,%dl
		je     _02df27_jump
		movb   $0x000001,_0cfa7d_data

	_02df27_jump:
		xor    %eax,%eax
		call   _06caf8_func

	_02df2e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02df34_func:
		push   %ecx
		push   %esi
		testb  $0x000008,0x000081(%eax)
		jne    _02df4e_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007a(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02df5b_jump

	_02df4e_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02df5b_jump:
		movswl (%ebx),%edx
		mov    0x00007a(%eax),%al
		sar    %edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02df70_switch:
		.long   _02e39a_case
		.long   _02e280_case
		.long   _02e34f_case
		.long   _02e091_case
		.long   _02e091_case
		.long   _02e2dc_case




_02df88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000060(%esi),%ax
		cmp    $0x00007b,%ax
		jb     _02e100_jump
		jbe    _02e266_jump
		cmp    $0x0000b5,%ax
		jb     _02e028_jump
		jbe    _02e44a_jump
		cmp    $0x0000d4,%ax
		jb     _02dffe_jump
		jbe    _02e6ca_jump
		cmp    $0x0000e2,%ax
		jb     _02dfef_jump
		jbe    _02e61d_jump
		cmp    $0x0000ef,%ax
		je     _02e215_jump
		jmp    _02e082_jump

	_02dfef_jump:
		cmp    $0x0000e1,%ax
		je     _02e600_jump
		jmp    _02e082_jump

	_02dffe_jump:
		cmp    $0x0000c3,%ax
		jb     _02e019_jump
		jbe    _02e654_jump
		cmp    $0x0000c7,%ax
		je     _02e44a_jump
		jmp    _02e082_jump

	_02e019_jump:
		cmp    $0x0000b8,%ax
		je     _02e61d_jump
		jmp    _02e082_jump

	_02e028_jump:
		cmp    $0x000099,%ax
		jb     _02e068_jump
		jbe    _02e1b2_jump
		cmp    $0x0000ac,%ax
		jb     _02e04f_jump
		jbe    _02e56e_jump
		cmp    $0x0000ae,%ax
		je     _02e600_jump
		jmp    _02e082_jump

	_02e04f_jump:
		cmp    $0x0000a8,%ax
		jb     _02e082_jump
		cmp    $0x0000a9,%ax
		jbe    _02e3bc_jump
		jmp    _02e082_jump

	_02e068_jump:
		cmp    $0x000084,%ax
		jb     _02e082_jump
		jbe    _02e3e3_jump
		cmp    $0x000093,%ax
		je     _02e427_jump

	_02e082_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx

	_02e08a_jump:
		mov    %esi,%eax
		call   _02df34_func

	_02e091_case:
		mov    _0cf874_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cf862_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cf860_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cf85e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02e719_jump
		mov    0x00007b(%esi),%dh
		cmp    $0x000002,%dh
		jae    _02e700_jump
		test   %dh,%dh
		jne    _02e6ee_jump
		movb   $0x000001,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e100_jump:
		cmp    $0x000038,%ax
		jb     _02e161_jump
		jbe    _02e56e_jump
		cmp    $0x000051,%ax
		jb     _02e142_jump
		jbe    _02e3bc_jump
		cmp    $0x000064,%ax
		jb     _02e133_jump
		jbe    _02e58b_jump
		cmp    $0x000074,%ax
		je     _02e4fe_jump
		jmp    _02e082_jump

	_02e133_jump:
		cmp    $0x000059,%ax
		je     _02e6e4_jump
		jmp    _02e082_jump

	_02e142_jump:
		cmp    $0x00003d,%ax
		jb     _02e082_jump
		jbe    _02e47d_jump
		cmp    $0x00004d,%ax
		je     _02e215_jump
		jmp    _02e082_jump

	_02e161_jump:
		cmp    $0x00000e,%ax
		jb     _02e193_jump
		jbe    _02e4b7_jump
		cmp    $0x000015,%ax
		jb     _02e184_jump
		jbe    _02e091_case
		cmp    $0x000035,%ax
		je     _02e1f6_jump
		jmp    _02e082_jump

	_02e184_jump:
		cmp    $0x000014,%ax
		je     _02e3bc_jump
		jmp    _02e082_jump

	_02e193_jump:
		cmp    $0x000005,%ax
		jb     _02e082_jump
		jbe    _02e3bc_jump
		cmp    $0x00000c,%ax
		je     _02e4d7_jump
		jmp    _02e082_jump

	_02e1b2_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000010,%edi
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,0x000008(%esp)
		addw   $0x000040,(%esp)
		jmp    _02e091_case

	_02e1f6_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		jmp    _02e091_case

	_02e215_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02df34_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e091_case
		cmpb   $0x000004,0x00006c(%esi)
		jne    _02e091_case
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		add    %eax,%edx
		add    %ebx,%edx
		mov    %dx,(%esp)
		jmp    _02e091_case

	_02e266_jump:
		mov    0x000075(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02e091_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02df70_switch(,%eax,4)

	_02e280_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e091_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02e091_case
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    0x00007a(%esi),%al
		add    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x00000a(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		jmp    _02e091_case

	_02e2dc_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _02e091_case
		cmp    0x00006c(%esi),%ah
		jne    _02e091_case
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    $0x000014,%edi
		add    %edx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		testb  $0x000008,0x000081(%esi)
		jne    _02e091_case
		sub    %di,0x00000c(%esp)
		jmp    _02e091_case

	_02e34f_case:
		mov    (%esp),%ecx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		mov    0x000006(%esp),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		sub    %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007a(%esi),%al
		add    %eax,%ebx
		mov    %bx,(%esp)
		jmp    _02e091_case

	_02e39a_case:
		xor    %eax,%eax
		mov    (%esp),%ebx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)

	_02e3bc_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x00007a(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _02e091_case

	_02e3e3_jump:
		testb  $0x000008,0x000081(%esi)
		je     _02e3f5_jump
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02e3fe_jump

	_02e3f5_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02e3fe_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    (%esp),%ecx
		sar    $0x000010,%eax
		sub    $0x000032,%ebx
		add    $0x000032,%ecx
		mov    %bx,0x000004(%esp)
		add    %edx,%eax
		mov    %cx,(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _02e091_case

	_02e427_jump:
		cmpb   $0x000000,0x000076(%esi)
		je     _02e091_case
		mov    _0ce63a_data,%ax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		mov    %ax,(%esp)
		jmp    _02e091_case

	_02e44a_jump:
		mov    0x000028(%esi),%dx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		mov    %bx,0x000004(%esp)
		add    %eax,%edx
		mov    _0ce63a_data,%ax
		mov    %dx,0x00000c(%esp)
		mov    $0x000010,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _02e091_case

	_02e47d_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		lea    0x000008(%esp),%ebx
		sub    %edx,%eax
		lea    0x00000c(%esp),%edx
		mov    %ax,0x000004(%esp)
		jmp    _02e08a_jump

	_02e4b7_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_02e4d7_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x00000c(%esp)
		jmp    _02e091_case

	_02e4fe_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02e524_jump
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _02e534_jump

	_02e524_jump:
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx

	_02e534_jump:
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    %ax,0x000008(%esp)
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    %edx,%eax
		mov    %ax,(%esp)
		jmp    _02e091_case

	_02e56e_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02df34_func
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,(%esp)
		jmp    _02e091_case

	_02e58b_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02e5a6_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    0x00007a(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		jmp    _02e5c3_jump

	_02e5a6_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_02e5c3_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    $0x000096,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007a(%esi),%al
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		jmp    _02e091_case

	_02e600_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02df34_func
		mov    %cx,(%esp)
		jmp    _02e091_case

	_02e61d_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02df34_func
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%eax
		mov    %cx,(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x00000c(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02e091_case

	_02e654_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e66c_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000018,%dl
		je     _02e678_jump
		cmp    $0x00001e,%dl
		je     _02e678_jump
		cmp    $0x00000b,%dl
		je     _02e678_jump

	_02e66c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02e69e_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02e69e_jump

	_02e678_jump:
		mov    $0x00000a,%eax
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000008(%esp)
		jmp    _02e091_case

	_02e69e_jump:
		mov    $0x0000c8,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%edi
		mov    %bx,(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		jmp    _02e091_case

	_02e6ca_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02df34_func
		movw   $0x0000fa,(%esp)
		jmp    _02e091_case

	_02e6e4_jump:
		addw   $0x000014,(%esp)
		jmp    _02e091_case

	_02e6ee_jump:
		cmp    $0x000001,%dh
		jne    _02e72e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e700_jump:
		mov    %dh,%bl
		inc    %bl
		mov    %bl,0x00007b(%esi)
		cmp    $0x000014,%bl
		jne    _02e72e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e719_jump:
		mov    0x000060(%esi),%cx
		movb   $0x000000,0x00007b(%esi)
		cmp    $0x000015,%cx
		jne    _02e72e_jump
		andb   $0x0000fe,0x000081(%esi)

	_02e72e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e738_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x000060(%ecx),%ax
		cmp    $0x00003c,%ax
		jb     _02e82c_jump
		jbe    _02e971_jump
		cmp    $0x00006d,%ax
		jb     _02e7c2_jump
		jbe    _02e8db_jump
		cmp    $0x000091,%ax
		jb     _02e7a3_jump
		jbe    _02e8db_jump
		cmp    $0x0000bc,%ax
		jb     _02e794_jump
		jbe    _02e8db_jump
		cmp    $0x0000f3,%ax
		je     _02e8db_jump
		jmp    _02e98d_jump

	_02e794_jump:
		cmp    $0x0000a5,%ax
		je     _02e8ff_jump
		jmp    _02e98d_jump

	_02e7a3_jump:
		cmp    $0x00007b,%ax
		jb     _02e98d_jump
		jbe    _02e939_jump
		cmp    $0x00008e,%ax
		je     _02e8db_jump
		jmp    _02e98d_jump

	_02e7c2_jump:
		cmp    $0x000052,%ax
		jb     _02e7fd_jump
		jbe    _02e8db_jump
		cmp    $0x000065,%ax
		jb     _02e98d_jump
		jbe    _02e8db_jump
		cmp    $0x000069,%ax
		jb     _02e98d_jump
		cmp    $0x00006b,%ax
		jbe    _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e7fd_jump:
		cmp    $0x00003f,%ax
		jb     _02e98d_jump
		jbe    _02e8db_jump
		cmp    $0x000044,%ax
		jb     _02e98d_jump
		cmp    $0x000045,%ax
		jbe    _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e82c_jump:
		cmp    $0x000019,%ax
		jb     _02e8a3_jump
		cmp    $0x00001d,%ax
		jbe    _02e8db_jump
		cmp    $0x00002d,%ax
		jb     _02e87e_jump
		jbe    _02e8db_jump
		cmp    $0x000039,%ax
		jb     _02e869_jump
		jbe    _02e8e6_jump
		cmp    $0x00003a,%ax
		je     _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e869_jump:
		cmp    $0x00002f,%ax
		je     _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e87e_jump:
		cmp    $0x00001e,%ax
		jbe    _02e8f7_jump
		cmp    $0x000029,%ax
		jb     _02e98d_jump
		cmp    $0x00002a,%ax
		jbe    _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e8a3_jump:
		cmp    $0x000009,%ax
		jb     _02e8cc_jump
		jbe    _02e8ff_jump
		cmp    $0x000010,%ax
		jb     _02e98d_jump
		cmp    $0x000011,%ax
		jbe    _02e8db_jump
		cmp    $0x000016,%ax
		je     _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e8cc_jump:
		test   %ax,%ax
		jbe    _02e8ff_jump
		cmp    $0x000001,%ax
		jne    _02e98d_jump

	_02e8db_jump:
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e8e6_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _02e8db_jump
		mov    %ecx,%eax
		call   _01dfb8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e8f7_jump:
		movb   $0x000001,0x00007f(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e8ff_jump:
		mov    %ecx,%eax
		call   _01dfb8_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e924_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e924_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e939_jump:
		mov    0x000075(%ecx),%al
		cmp    $0x000002,%al
		jb     _02e94c_jump
		cmp    $0x000003,%al
		jbe    _02e994_jump
		cmp    $0x000006,%al
		jb     _02e94c_jump
		cmp    $0x000007,%al
		jbe    _02e994_jump

	_02e94c_jump:
		mov    %ecx,%eax
		call   _01dfb8_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e924_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e971_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01dfb8_func
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e98d_jump:
		mov    %ecx,%eax
		call   _01dfb8_func

	_02e994_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02ea26_jump

	_02e9af_jump:
		movswl %cx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_09257d_data(,%eax,4)
		je     _02e9df_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0742a8_func
		test   %al,%al
		jne    _02ea08_jump

	_02e9df_jump:
		mov    %ebx,%eax
		call   _05e9bc_func
		mov    0x000081(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		mov    $0x000001,%edx
		call   _055fbc_func
		mov    %ebx,%eax
		call   _02e738_func

	_02ea08_jump:
		mov    0x000032(%ebx),%eax
		mov    _0cee58_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _0597fc_func
		cmp    %cx,%si
		jne    _02e9af_jump

	_02ea26_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ea2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0cf024_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02eae2_jump

	_02ea5c_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000004,_09257c_data(,%edx,4)
		jne    _02eab6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02eab6_jump
		mov    _0cf862_data,%ecx
		mov    _0cf860_data,%ebx
		mov    _0cf85e_data,%edx
		push   %eax
		mov    _0cf874_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02cb1c_func

	_02eab6_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		mov    _0cf024_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jl     _02ea5c_jump

	_02eae2_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000002,%eax
		mov    _0cf024_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _02ed4c_jump

	_02eb1a_jump:
		cmpw   $0x000000,_0cf892_data
		jne    _02ed4c_jump
		cmpw   $0x000000,_0cf880_data
		jne    _02ed4c_jump
		cmpb   $0x000000,_0cfa76_data
		jne    _02ed4c_jump
		cmpb   $0x000000,_0cfa78_data
		jne    _02ed4c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000020,0x000007(%eax,%edx,8)
		je     _02ed20_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000010,_09257e_data(%eax)
		jne    _02ecb3_jump
		cmpb   $0x000000,_0ce6cd_data
		jne    _02ed20_jump
		mov    _0ce6a4_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _02ed20_jump
		xor    %edx,%edx
		mov    _0ce6bd_data,%dl
		mov    _0ce65c_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0ce6bc_data,%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02ed20_jump
		testb  $0x000004,_09257c_data(%eax)
		jne    _02ed20_jump
		cmpw   $0x0000aa,0x000060(%esi)
		jne    _02ebfb_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000003,%cl
		ja     _02ebf4_jump
		test   %cl,%cl
		jne    _02ebfb_jump

	_02ebf4_jump:
		mov    $0xffffffff,%eax
		jmp    _02ec3f_jump

	_02ebfb_jump:
		cmpw   $0x000093,0x000060(%esi)
		jne    _02ec10_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02ec10_jump
		mov    $0xffffffff,%eax
		jmp    _02ec3f_jump

	_02ec10_jump:
		mov    _0cf874_data,%eax
		mov    _0cf862_data,%ecx
		mov    _0cf860_data,%ebx
		mov    _0cf85e_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02cb1c_func

	_02ec3f_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02ed20_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		imul   $0x000014,%edx,%edx
		mov    %esi,%eax
		call   *_093604_data(%edx)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_09257c_data(,%eax,4)
		je     _02ed20_jump
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02ed20_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _02ec91_jump
		cmpb   $0x000020,_0ce6bc_data
		je     _02ec98_jump

	_02ec91_jump:
		mov    $0x000001,%eax
		jmp    _02ec9a_jump

	_02ec98_jump:
		xor    %eax,%eax

	_02ec9a_jump:
		test   %eax,%eax
		je     _02ed20_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02dbdc_func
		jmp    _02ed4c_jump

	_02ecb3_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _02ecc5_jump
		cmpb   $0x000020,_0ce6bc_data
		je     _02ed20_jump

	_02ecc5_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000051,%dx
		je     _02ecd6_jump
		cmp    $0x0000a9,%dx
		jne    _02ecda_jump

	_02ecd6_jump:
		xor    %eax,%eax
		jmp    _02ed09_jump

	_02ecda_jump:
		mov    _0cf874_data,%eax
		mov    _0cf862_data,%ecx
		mov    _0cf860_data,%ebx
		mov    _0cf85e_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02cb1c_func

	_02ed09_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02ed20_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_093604_data(%edx)

	_02ed20_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%esi
		mov    _0cf024_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jl     _02eb1a_jump

	_02ed4c_jump:
		cmpb   $0x000000,_0ce6cd_data
		je     _02ed5a_jump
		call   _02dbac_func

	_02ed5a_jump:
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02ed6e_jump
		decw   _0ce6a6_data

	_02ed6e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ed74_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_09257e_data(,%eax,4)
		je     _02ee1a_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000020,0x000007(%ebx,%eax,8)
		je     _02ee1a_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _02edc1_jump
		cmpb   $0x000020,_0ce6bc_data
		je     _02edc8_jump

	_02edc1_jump:
		mov    $0x000001,%eax
		jmp    _02edca_jump

	_02edc8_jump:
		xor    %eax,%eax

	_02edca_jump:
		test   %eax,%eax
		je     _02ee1a_jump
		mov    _0ce6a6_data,%bx
		cmp    $0x00003c,%bx
		jge    _02ee0c_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _02ee0c_jump
		mov    $0x000001,%eax
		call   _02dbdc_func
		mov    _0cf868_data,%dx
		cmp    $0x000003,%dx
		je     _02ee1a_jump
		cmp    $0x000004,%dx
		je     _02ee1a_jump
		movw   $0x00003c,_0ce6a6_data
		pop    %edx
		pop    %ebx
		ret    

	_02ee0c_jump:
		xor    %eax,%eax
		call   _02dbdc_func
		mov    %bx,_0ce6a6_data

	_02ee1a_jump:
		pop    %edx
		pop    %ebx
		ret    



_02ee20_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000020(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %edi,%eax
		call   _01d738_func
		mov    0x000060(%edi),%dx
		cmp    $0x000008,%dx
		je     _02ee62_jump
		cmp    $0x000086,%dx
		je     _02ee62_jump
		cmp    $0x0000a7,%dx
		jne    _02ee96_jump

	_02ee62_jump:
		mov    0x000014(%esp),%esi
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x000020(%esp),%ebx
		add    $0x00000a,%esi
		add    $0x000014,%eax
		sub    $0x000014,%edx
		sub    $0x000019,%ebx
		mov    %si,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _02eec4_jump

	_02ee96_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %esi,%eax
		add    %esi,%edx
		mov    %ax,0x000014(%esp)
		add    %esi,%esi
		mov    %dx,0x000004(%esp)
		sub    %esi,%ebx
		sub    %esi,%ecx
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000020(%esp)

	_02eec4_jump:
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    _0cf024_data,%ax
		mov    %cx,0x00001c(%esp)
		test   %ax,%ax
		jle    _02f1ce_jump

	_02eef5_jump:
		cmp    %esi,%edi
		je     _02f195_jump
		mov    0x000060(%esi),%ax
		test   %ax,%ax
		jbe    _02ef15_jump
		cmp    $0x0000d6,%ax
		je     _02f05c_jump
		jmp    _02f18e_jump

	_02ef15_jump:
		mov    0x00006d(%esi),%cl
		cmp    $0x000002,%cl
		je     _02f18e_jump
		test   %cl,%cl
		jne    _02ef2b_jump
		cmpb   $0x000003,0x00006c(%esi)
		je     _02ef32_jump

	_02ef2b_jump:
		mov    $0x000001,%ebx
		jmp    _02ef34_jump

	_02ef32_jump:
		xor    %ebx,%ebx

	_02ef34_jump:
		test   %ebx,%ebx
		je     _02f18e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _02f18e_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		test   %ax,%ax
		je     _02f18e_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02f18e_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000004,0x000075(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x00000b,0x000074(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0ce69a_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02f012_jump
		call   _06df28_func

	_02f012_jump:
		cmpb   $0x000002,0x000070(%esi)
		jne    _02f03e_jump
		testb  $0x000008,0x000081(%esi)
		je     _02f02d_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02f037_jump

	_02f02d_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02f037_jump:
		mov    %esi,%eax
		call   _061220_func

	_02f03e_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d808_func
		mov    $0x000001,%al
		movl   $0x000000,0x000024(%edi)
		mov    %al,0x000024(%esp)
		jmp    _02f18e_jump

	_02f05c_jump:
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		test   %ax,%ax
		je     _02f18e_jump
		cmpw   $0x000068,0x000060(%edi)
		jne    _02f18e_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _02f18e_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02f0e2_jump
		cmpb   $0x000006,0x00006c(%esi)
		je     _02f0e9_jump

	_02f0e2_jump:
		mov    $0x000001,%eax
		jmp    _02f0eb_jump

	_02f0e9_jump:
		xor    %eax,%eax

	_02f0eb_jump:
		test   %eax,%eax
		je     _02f18e_jump
		testb  $0x000008,0x000081(%edi)
		je     _02f13f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%edi),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _02f120_jump
		mov    $0x000001,%eax
		jg     _02f120_jump
		neg    %eax

	_02f120_jump:
		test   %eax,%eax
		jl     _02f13f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _061220_func
		movw   $0x000008,0x000040(%esi)

	_02f13f_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _02f18e_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02f16f_jump
		mov    $0x000001,%eax
		jg     _02f16f_jump
		neg    %eax

	_02f16f_jump:
		test   %eax,%eax
		jge    _02f18e_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _061220_func
		movw   $0x00fff8,0x000040(%esi)

	_02f18e_jump:
		cmpb   $0x000000,0x000024(%esp)
		jne    _02f1ce_jump

	_02f195_jump:
		mov    0x00001c(%esp),%edx
		inc    %edx
		mov    %dx,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%esi
		mov    _0cf024_data,%bx
		add    %eax,%esi
		cmp    %bx,%dx
		jl     _02eef5_jump

	_02f1ce_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02f1e0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		mov    _0ce636_data,%ebx
		sar    $0x000004,%esi
		sar    $0x000010,%ebx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		mov    0x000058(%eax),%cx
		add    %esi,%ebx
		xor    %edx,%edx
		cmp    %cx,%bx
		je     _02f21d_jump
		mov    $0x000001,%edx
		mov    %bx,0x000058(%eax)

	_02f21d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02f224_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $0x0000ff,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000060(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02f2b8_jump
		jbe    _02f296_jump
		cmp    $0x0000ac,%ax
		jne    _02f2b8_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02f2b8_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01d818_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02f2b8_jump

	_02f296_jump:
		testb  $0x000002,0x00007d(%ecx)
		je     _02f2b8_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01d818_func

	_02f2b8_jump:
		cmpb   $0x0000ff,0x000004(%esp)
		je     _02f2f3_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000004(%esp),%dl
		call   _061220_func
		movb   $0x000000,0x000071(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000072(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e790_func

	_02f2f3_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f2fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01d824_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d954_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _02f348_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _02f348_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _061220_func

	_02f348_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%ecx),%dl
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%dl
		jne    _02f36f_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02f36f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f378_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		testb  $0x000080,_0cf81a_data
		je     _02f448_jump
		cmpw   $0x000003,_0cf868_data
		je     _02f448_jump
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000069(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02f3b8_jump
		neg    %eax

	_02f3b8_jump:
		cmp    $0x0000fa,%eax
		jge    _02f448_jump
		call   _06f29c_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf842_data
		mov    %ecx,%eax
		call   _07b470_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02f3f0_jump
		jne    _02f3f8_jump
		testb  $0x000008,_0ce6d1_data
		jne    _02f3f8_jump

	_02f3f0_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02f3fe_jump

	_02f3f8_jump:
		movw   $0x000001,0x000052(%ecx)

	_02f3fe_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02f418_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _02f418_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _061220_func

	_02f418_jump:
		mov    _0ce6dc_data,%ecx
		xor    %bh,%bh
		mov    0x000081(%ecx),%al
		mov    %bh,_0ce77e_data
		and    $0x0000fb,%al
		mov    %bh,_0ce77d_data
		mov    %al,0x000081(%ecx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _066bf4_func

	_02f448_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02f44c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02f46c_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01d818_func
		pop    %edx
		pop    %ebx
		ret    

	_02f46c_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _02f485_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02f485_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02f485_jump
		movw   $0x000000,0x000042(%eax)

	_02f485_jump:
		pop    %edx
		pop    %ebx
		ret    



_02f488_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    0x000060(%ecx),%dx
		cmp    $0x000001,%ax
		je     _02f51a_jump
		cmp    $0x000002,%ax
		je     _02f51a_jump
		cmp    $0x00000b,%ax
		je     _02f51a_jump
		cmp    $0x000016,%ax
		je     _02f51a_jump
		cmp    $0x000003,%ax
		je     _02f51a_jump
		cmp    $0x000009,%ax
		je     _02f51a_jump
		cmp    $0x000004,%ax
		je     _02f51a_jump
		cmp    $0x000005,%ax
		je     _02f51a_jump
		cmp    $0x000006,%ax
		je     _02f51a_jump
		cmp    $0x00000f,%ax
		je     _02f51a_jump
		cmp    $0x000010,%ax
		je     _02f51a_jump
		cmp    $0x000011,%ax
		je     _02f51a_jump
		cmp    $0x00000c,%dx
		je     _02f508_jump
		cmp    $0x00000e,%dx
		je     _02f508_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func

	_02f508_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f51a_jump:
		cmp    $0x000003,%ax
		je     _02f526_jump
		cmp    $0x000006,%ax
		jne    _02f53f_jump

	_02f526_jump:
		mov    0x000081(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f53f_jump:
		cmp    $0x00000b,%ax
		je     _02f551_jump
		cmp    $0x000002,%ax
		je     _02f551_jump
		cmp    $0x000016,%ax
		jne    _02f58e_jump

	_02f551_jump:
		cmp    $0x00000e,%dx
		jb     _02f56b_jump
		jbe    _02f571_jump
		cmp    $0x00003c,%dx
		jb     _02f58e_jump
		jbe    _02f57c_jump
		cmp    $0x00003d,%dx
		je     _02f587_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f56b_jump:
		cmp    $0x00000c,%dx
		jne    _02f58e_jump

	_02f571_jump:
		mov    %ecx,%eax
		call   _07ae78_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f57c_jump:
		mov    %ecx,%eax
		call   _02ad1c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02f587_jump:
		mov    %ecx,%eax
		call   _02aee4_func

	_02f58e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f594_func:
		push   %edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02f5a9_jump
		jbe    _02f5b1_jump
		cmp    $0x000018,%dx
		je     _02f5f0_jump
		pop    %edx
		ret    

	_02f5a9_jump:
		cmp    $0x000001,%dx
		je     _02f5d3_jump
		pop    %edx
		ret    

	_02f5b1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02f639_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02f639_jump
		cmpb   $0x000003,0x000070(%eax)
		jne    _02f5e8_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f5d3_jump:
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%dl
		jne    _02f5e3_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f5e3_jump:
		cmp    $0x000004,%dl
		jne    _02f639_jump

	_02f5e8_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02f5f0_jump:
		cmpb   $0x000002,0x000070(%eax)
		je     _02f639_jump
		mov    0x000048(%eax),%dx
		dec    %edx
		mov    %dx,0x000048(%eax)
		test   %dx,%dx
		jle    _02f621_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000003,%dh
		jne    _02f614_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02f614_jump:
		cmp    $0x000004,%dh
		jne    _02f639_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02f621_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000070(%eax)
		mov    %dx,0x00003e(%eax)

	_02f639_jump:
		pop    %edx
		ret    



_02f63c_func:
		cmpw   $0x000000,0x000060(%eax)
		jne    _02f656_jump
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02f656_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02f656_jump
		andb   $0x0000ef,0x000081(%eax)

	_02f656_jump:
		ret    



_02f658_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		call   _02f63c_func
		mov    0x000070(%edx),%al
		cmp    $0x000003,%al
		jb     _02f686_jump
		cmp    $0x000004,%al
		jbe    _02f6de_jump
		cmp    $0x000014,%al
		jb     _02f6f8_jump
		jbe    _02f6e8_jump
		pop    %edx
		pop    %ebx
		ret    

	_02f686_jump:
		cmp    $0x000001,%al
		jbe    _02f694_jump
		mov    %edx,%eax
		call   _02f44c_func
		pop    %edx
		pop    %ebx
		ret    

	_02f694_jump:
		test   %al,%al
		jne    _02f6a1_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02f6a8_jump

	_02f6a1_jump:
		orb    $0x000008,0x000081(%edx)

	_02f6a8_jump:
		cmp    $0x000001,%bx
		jne    _02f6bf_jump
		mov    %edx,%eax
		call   _055ee4_func
		mov    %edx,%eax
		call   _025820_func
		pop    %edx
		pop    %ebx
		ret    

	_02f6bf_jump:
		cmp    $0x000002,%bx
		jne    _02f6cf_jump
		mov    %edx,%eax
		call   _055ee4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f6cf_jump:
		test   %bx,%bx
		jne    _02f6f8_jump
		mov    %edx,%eax
		call   _02f488_func
		pop    %edx
		pop    %ebx
		ret    

	_02f6de_jump:
		mov    %edx,%eax
		call   _02f594_func
		pop    %edx
		pop    %ebx
		ret    

	_02f6e8_jump:
		mov    0x000056(%edx),%bx
		mov    %bx,0x000040(%edx)
		mov    0x00004a(%edx),%bx
		mov    %bx,0x000042(%edx)

	_02f6f8_jump:
		pop    %edx
		pop    %ebx
		ret    

_02f6fc_switch:
		.long   _02f742_case
		.long   _02f768_case
		.long   _02f75a_case
		.long   _02f79e_case
		.long   _02f79e_case
		.long   _02f780_case




_02f714_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		cmpw   $0x000091,0x000060(%eax)
		jne    _02f7a2_jump
		mov    0x00006c(%eax),%al
		cmp    $0x000005,%al
		ja     _02f79e_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02f6fc_switch(,%eax,4)

	_02f742_case:
		mov    0x000056(%esi),%cx
		dec    %cx
		mov    %cx,0x000056(%esi)
		jne    _02f79e_case
		movb   $0x000003,0x00006c(%esi)
		movw   $0x00001e,0x000056(%esi)
		jmp    _02f79e_case

	_02f75a_case:
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f79e_case
		jmp    _02f78c_jump

	_02f768_case:
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _02f79e_case
		movb   $0x000002,0x00006c(%esi)
		movw   $0x000005,0x000056(%esi)
		jmp    _02f79e_case

	_02f780_case:
		mov    0x000056(%esi),%bx
		dec    %bx
		mov    %bx,0x000056(%esi)
		jne    _02f79e_case

	_02f78c_jump:
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)

	_02f79e_case:
		movb   $0x000000,0x000073(%esi)

	_02f7a2_jump:
		mov    _0ce678_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0ce67c_data,%ax
		sub    %ebx,%eax
		mov    0x000060(%esi),%cx
		mov    %eax,%ebx
		add    $0x000020,%edx
		add    $0x000019,%ebx
		cmp    $0x000091,%cx
		jne    _02f7d3_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02f7d3_jump:
		test   %dx,%dx
		setg   %al
		mov    %al,(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02f7ee_jump
		neg    %edx

	_02f7ee_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02f7f7_jump
		neg    %ebx

	_02f7f7_jump:
		cmp    $0x0000c8,%dx
		jle    _02f830_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02f80c_jump
		sar    %cl,%ax
		jmp    _02f815_jump

	_02f80c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f815_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02f825_jump
		sar    %cl,%ax
		jmp    _02f82e_jump

	_02f825_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f82e_jump:
		mov    %eax,%ebx

	_02f830_jump:
		test   %bx,%bx
		jne    _02f85e_jump
		cmpb   $0x000000,(%esp)
		je     _02f845_jump
		mov    $0x00001b,%ecx
		jmp    _02f904_jump

	_02f845_jump:
		test   %dx,%dx
		je     _02f854_jump
		mov    $0x000009,%ecx
		jmp    _02f904_jump

	_02f854_jump:
		mov    $0xffffffff,%ecx
		jmp    _02f904_jump

	_02f85e_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02f8c3_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02f8ab_jump
		cmp    $0x0000ff,%cx
		jle    _02f89b_jump
		mov    $0x00001b,%ecx
		jmp    _02f904_jump

	_02f89b_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a9c_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02f904_jump

	_02f8ab_jump:
		cmp    $0x0000ff,%cx
		jle    _02f8b6_jump
		xor    %ecx,%ecx
		jmp    _02f904_jump

	_02f8b6_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a9c_data(%eax),%cl
		jmp    _02f904_jump

	_02f8c3_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02f8e8_jump
		cmp    $0x0000ff,%cx
		jle    _02f8d8_jump
		mov    $0x000012,%ecx
		jmp    _02f904_jump

	_02f8d8_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a9c_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02f904_jump

	_02f8e8_jump:
		cmp    $0x0000ff,%cx
		jle    _02f8f6_jump
		mov    $0x000009,%ecx
		jmp    _02f904_jump

	_02f8f6_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094a9c_data(%eax),%cl
		add    $0x000009,%ecx

	_02f904_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02f961_jump
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f961_jump
		movb   $0x000001,0x00006c(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x000056(%esi)
		movswl %ax,%ebx
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%ebx
		jle    _02f95b_jump
		movswl %dx,%ebx
		cmp    $0xffffffdc,%ebx
		jle    _02f95b_jump
		cmp    $0x000131,%ax
		jge    _02f95b_jump
		cmp    $0x0000c3,%dx
		jge    _02f95b_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _07b920_func
		jmp    _02f961_jump

	_02f95b_jump:
		movw   $0x000028,0x000050(%esi)

	_02f961_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02f96e_jump
		dec    %cl
		mov    %cl,0x00006b(%esi)

	_02f96e_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f978_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		je     _02f999_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d808_func
		movw   $0x000032,0x000056(%ebx)
		pop    %ebx
		ret    

	_02f999_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %ebx
		ret    

_02f9a8_switch:
		.long   _02fb2e_case
		.long   _02fb8a_case
		.long   _02f9db_case
		.long   _02fa82_case


	_02f9db_case:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x000068(%eax),%cl
		mov    _0ce636_data,%eax
		sar    $0x000004,%edi
		sar    $0x000010,%eax
		imul   %edi,%eax
		add    %ebp,%ecx
		sub    $0x000008,%ecx
		sar    $0x000004,%ecx
		lea    (%ecx,%eax,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0ce640_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_09253c_data(%ecx)
		je     _02fa26_jump
		mov    $0x000001,%esi

	_02fa26_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%eax
		mov    0x000068(%ebx),%cl
		lea    (%ecx,%eax,1),%edi
		mov    0x00002c(%ebx),%ebx
		mov    _0ce636_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0ce640_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_09253c_data(%ebx)
		je     _02fbe6_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fa82_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edx,1),%edi
		mov    0x00002c(%eax),%ecx
		add    $0x00009a,%ecx
		mov    _0ce636_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		sub    $0x000008,%edi
		sar    $0x000004,%edi
		add    %ecx,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0ce640_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_09253c_data(%ecx)
		je     _02fad3_jump
		mov    $0x000001,%esi

	_02fad3_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		mov    0x00002c(%ebx),%ebx
		add    %ecx,%edi
		mov    _0ce636_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0ce640_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_09253c_data(%ebx)
		je     _02fbe6_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fb2e_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ebp,%ecx
		sub    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp

	_02fb4b_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0ce636_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0ce640_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_09253c_data(%edi)
		je     _02fb7e_jump
		mov    $0x000001,%esi

	_02fb7e_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jge    _02fbe6_jump
		jmp    _02fb4b_jump

	_02fb8a_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebp

	_02fba9_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0ce636_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0ce640_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_09253c_data(%edi)
		je     _02fbdc_jump
		mov    $0x000001,%esi

	_02fbdc_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jl     _02fba9_jump

	_02fbe6_jump:
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02fbf4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _02f658_func
		cmpb   $0x000004,0x00006c(%edx)
		jne    _02fc61_jump
		cmpb   $0x00000e,0x00006b(%edx)
		jne    _02fc61_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _02fc61_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02fc61_jump
		cmpw   $0x0000fa,0x000036(%edx)
		jge    _02fc61_jump
		cmpw   $0x000064,0x000038(%edx)
		jge    _02fc61_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _055d78_func
		subl   $0x000056,0x00002c(%edx)

	_02fc61_jump:
		pop    %edx
		pop    %ebx
		ret    



_02fc64_func:
		push   %edx
		testb  $0x000080,_0cf81b_data
		jne    _02fc9c_jump
		mov    _0cf8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02fc9c_jump
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02fc9c_jump
		mov    _0ce6bd_data,%dl
		test   %dl,%dl
		je     _02fc97_jump
		cmp    $0x000001,%dl
		jne    _02fc9c_jump

	_02fc97_jump:
		call   _05b378_func

	_02fc9c_jump:
		pop    %edx
		ret    

_02fca0_switch:
		.long   _02fe4c_case
		.long   _02ff13_case
		.long   _02fce8_case
		.long   _02fd97_case




_02fcb0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		xor    %ecx,%ecx
		mov    0x000028(%eax),%si
		mov    0x000068(%eax),%cl
		xor    %ebx,%ebx
		mov    %ecx,%edi
		mov    0x00002c(%eax),%cx
		add    %esi,%edi
		movzbw 0x000074(%eax),%si
		sub    $0x000019,%edi
		add    %ecx,%esi
		cmp    $0x000003,%dx
		ja     _02ffd3_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02fca0_switch(,%eax,4)

	_02fce8_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _02ffd3_jump
		mov    _0ce636_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_09253c_data(%edx)
		je     _02fd3f_jump
		mov    $0x000001,%ebx

	_02fd3f_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_09253c_data(%edx)
		je     _02fd67_jump
		mov    $0x000001,%ebx

	_02fd67_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02ffd3_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fd97_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _02ffd3_jump
		add    $0x000030,%ecx
		mov    _0ce636_data,%edx
		sar    $0x000004,%ecx
		sar    $0x000010,%edx
		imul   %ecx,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce640_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02fdf1_jump
		mov    $0x000001,%ebx

	_02fdf1_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0ce640_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02fe1a_jump
		mov    $0x000001,%ebx

	_02fe1a_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02ffd3_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02fe4c_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _02ffd3_jump
		movswl %si,%eax
		mov    _0ce636_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce640_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02fea6_jump
		mov    $0x000001,%ebx

	_02fea6_jump:
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce640_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02fed6_jump
		mov    $0x000001,%ebx

	_02fed6_jump:
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02ffd3_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02ff13_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _02ffd3_jump
		movswl %si,%eax
		mov    _0ce636_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_09253c_data(%edx)
		je     _02ff70_jump
		mov    $0x000001,%ebx

	_02ff70_jump:
		mov    _0ce636_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_09253c_data(%edx)
		je     _02ffa2_jump
		mov    $0x000001,%ebx

	_02ffa2_jump:
		mov    _0ce636_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _02ffd3_jump
		mov    $0x000001,%ebx

	_02ffd3_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02ffdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03019b_jump
		cmpb   $0x00000c,0x00006c(%ecx)
		jne    _03019b_jump
		mov    %ecx,%eax
		call   _01d824_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01d954_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _03003e_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _03003e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _061220_func

	_03003e_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    0x000070(%ecx),%bl
		mov    %dh,0x000081(%ecx)
		cmp    $0x000014,%bl
		jne    _03005d_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_03005d_jump:
		mov    _0ce69a_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _0300da_jump
		xor    %ebx,%edx
		mov    0x000028(%ecx),%si
		mov    0x000068(%ecx),%dl
		add    %edx,%esi
		xor    %edx,%edx
		mov    _0ce678_data,%di
		mov    _0ce6b8_data,%dl
		add    %edi,%edx
		sub    %esi,%edx
		test   %dx,%dx
		jle    _0300b7_jump
		cmp    $0x00000a,%dx
		jle    _0300a1_jump
		mov    $0x000001,%eax

	_0300a1_jump:
		cmp    $0x00000f,%dx
		jle    _0300a8_jump
		inc    %eax

	_0300a8_jump:
		cmp    $0x000012,%dx
		jle    _0300af_jump
		inc    %eax

	_0300af_jump:
		cmp    $0x00002a,%dx
		jle    _0300da_jump
		jmp    _0300d8_jump

	_0300b7_jump:
		neg    %edx
		cmp    $0x00000a,%dx
		jle    _0300c4_jump
		mov    $0xffffffff,%eax

	_0300c4_jump:
		cmp    $0x00000f,%dx
		jle    _0300cb_jump
		dec    %eax

	_0300cb_jump:
		cmp    $0x000012,%dx
		jle    _0300d2_jump
		dec    %eax

	_0300d2_jump:
		cmp    $0x000029,%dx
		jle    _0300da_jump

	_0300d8_jump:
		xor    %eax,%eax

	_0300da_jump:
		mov    %ax,0x000040(%ecx)
		cmpw   $0x000000,0x000042(%ecx)
		jge    _030169_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02fcb0_func
		test   %ax,%ax
		je     _030165_jump
		mov    0x000050(%ecx),%dx
		movw   $0x000000,0x000042(%ecx)
		inc    %edx
		mov    %dx,0x000050(%ecx)
		cmp    $0x0000f0,%dx
		jle    _030169_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _07b29c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _07b628_func
		jmp    _030169_jump

	_030165_jump:
		mov    %ax,0x000050(%ecx)

	_030169_jump:
		mov    0x000040(%ecx),%si
		test   %si,%si
		jle    _030185_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02fcb0_func
		test   %ax,%ax
		je     _03019b_jump
		jmp    _030195_jump

	_030185_jump:
		jge    _03019b_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02fcb0_func
		test   %ax,%ax
		je     _03019b_jump

	_030195_jump:
		movw   $0x000000,0x000040(%ecx)

	_03019b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0301a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x000056(%eax),%ax
		add    %ax,0x00003c(%edx)

	_0301b3_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0301bf_jump
		neg    %eax

	_0301bf_jump:
		cmp    $0x000080,%eax
		jl     _0301fb_jump
		cmpw   $0x000000,0x000056(%edx)
		jle    _0301e4_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%ax
		inc    %ecx
		sub    $0x000080,%eax
		mov    %ecx,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		jmp    _0301b3_jump

	_0301e4_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%di
		dec    %ebx
		add    $0x000080,%edi
		mov    %ebx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _0301b3_jump

	_0301fb_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_030203_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03020f_jump
		neg    %eax

	_03020f_jump:
		cmp    $0x000080,%eax
		jl     _03024b_jump
		cmpw   $0x000000,0x00004a(%edx)
		jle    _030234_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%si
		inc    %edi
		sub    $0x000080,%esi
		mov    %edi,0x00002c(%edx)
		mov    %si,0x00003e(%edx)
		jmp    _030203_jump

	_030234_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%cx
		dec    %esi
		add    $0x000080,%ecx
		mov    %esi,0x00002c(%edx)
		mov    %cx,0x00003e(%edx)
		jmp    _030203_jump

	_03024b_jump:
		mov    %edx,%eax
		call   _01e030_func
		mov    0x000076(%edx),%al
		dec    %al
		mov    %al,0x00006b(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030260_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _030274_jump
		cmp    $0x000002,%al
		jne    _030296_jump
		jmp    _030288_jump

	_030274_jump:
		test   %al,%al
		jne    _030281_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _030288_jump

	_030281_jump:
		orb    $0x000008,0x000081(%ecx)

	_030288_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func

	_030296_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _030312_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x000068(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02f1e0_func
		test   %ax,%ax
		je     _030312_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _030312_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _0302f9_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000002,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _03030d_jump

	_0302f9_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_03030d_jump:
		call   _061220_func

	_030312_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030318_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cf882_data,%eax
		sar    $0x000010,%eax
		mov    _0cf89c_data,%edx
		add    $0x0000be,%eax
		mov    _0ccdf4_data,%bx
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		movw   $0x000082,0x000050(%ecx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    _0ccdf0_data,%edx
		test   %bx,%bx
		jle    _0303c7_jump

	_03035a_jump:
		cmpw   $0x00009d,0x000060(%edx)
		jne    _0303bb_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0303bb_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x000065,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01e030_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000001,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		jmp    _0303c7_jump

	_0303bb_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _03035a_jump

	_0303c7_jump:
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%bh
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x0000ca,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01e030_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%al
		movb   $0x000002,0x00006c(%edx)
		or     $0x000004,%al
		mov    %al,0x000081(%edx)
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%ah
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x00012f,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01e030_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000003,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030490_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		testb  $0x000004,_0ce6d1_data
		je     _03073b_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _0304b7_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _0304be_jump

	_0304b7_jump:
		mov    $0x000001,%eax
		jmp    _0304c0_jump

	_0304be_jump:
		xor    %eax,%eax

	_0304c0_jump:
		test   %eax,%eax
		je     _03073b_jump
		mov    _0cf88c_data,%ax
		cmp    $0x000003,%ax
		jb     _0304e9_jump
		jbe    _03058a_jump
		cmp    $0x000005,%ax
		jbe    _030680_jump
		jmp    _030747_jump

	_0304e9_jump:
		cmp    $0x000001,%ax
		jne    _030747_jump
		mov    0x000076(%edx),%al
		test   %al,%al
		jbe    _030513_jump
		cmp    $0x000001,%al
		jne    _030582_jump
		sub    %al,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _030318_func
		jmp    _030747_jump

	_030513_jump:
		cmpw   $0x000028,0x000050(%edx)
		jg     _030538_jump
		mov    _0cf880_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		cmpw   $0x000001,0x000056(%ebx,%eax,4)
		jne    _030577_jump

	_030538_jump:
		cmpb   $0x000000,_0cf9f7_data
		je     _030558_jump
		testb  $0x000004,_0ce6d1_data
		je     _030558_jump
		cmpl   $0x000078,0x00002c(%edx)
		jle    _030558_jump
		movw   $0x00ffff,0x000042(%edx)
		jmp    _03055e_jump

	_030558_jump:
		movw   $0x000000,0x000042(%edx)

	_03055e_jump:
		mov    0x000050(%edx),%si
		test   %si,%si
		jle    _030747_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000050(%edx)
		jmp    _030747_jump

	_030577_jump:
		movw   $0x000000,0x000042(%edx)
		jmp    _030747_jump

	_030582_jump:
		decb   0x000076(%edx)
		jmp    _030747_jump

	_03058a_jump:
		mov    _0cf88c_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _03062c_jump
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		je     _0305f5_jump
		mov    _0cf8a6_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00002c(%edx),%ebx
		mov    0x00003c(%edx),%eax
		sub    $0x000064,%ebx
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _0305cb_jump
		subl   $0x000003,0x00002c(%edx)

	_0305cb_jump:
		decl   0x00002c(%edx)
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _0305ea_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _0305ea_jump
		lea    -0x000001(%ebx),%ecx
		mov    %ecx,0x00002c(%edx)

	_0305ea_jump:
		movw   $0x000001,0x000056(%edx)
		jmp    _030673_jump

	_0305f5_jump:
		cmpw   $0x000001,0x000056(%edx)
		jne    _030617_jump
		xor    %ebx,%eax
		mov    _0ce6b9_data,%al
		add    _0ce67c_data,%ax
		movw   $0x000000,0x000056(%edx)
		sub    $0x00001e,%eax
		mov    %ax,0x00003e(%edx)

	_030617_jump:
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jge    _030673_jump
		lea    -0x000001(%esi),%edi
		mov    %edi,0x00002c(%edx)
		jmp    _030673_jump

	_03062c_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		cmpb   $0x000000,0x000076(%ebx,%eax,4)
		jbe    _030673_jump
		mov    _0cf882_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _030673_jump
		mov    0x00003a(%edx),%bx
		add    $0x00000e,%ebx
		mov    %bx,0x00003a(%edx)
		cmp    $0x000010,%bx
		jle    _030673_jump
		mov    %ebx,%esi
		mov    0x00002c(%edx),%ecx
		sub    $0x000010,%esi
		inc    %ecx
		mov    %si,0x00003a(%edx)
		mov    %ecx,0x00002c(%edx)

	_030673_jump:
		mov    0x00002c(%edx),%ax
		sub    $0x000078,%eax
		mov    %ax,_0cf85e_data

	_030680_jump:
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff5a,%eax
		jge    _0306c7_jump
		mov    0x000028(%edx),%edi
		mov    0x00006c(%edx),%bl
		add    $0x0001f9,%edi
		inc    %bl
		mov    %edi,0x000028(%edx)
		mov    %bl,0x00006c(%edx)
		cmp    $0x000003,%bl
		jbe    _0306aa_jump
		movb   $0x000000,0x00006c(%edx)

	_0306aa_jump:
		cmpw   $0x000008,_0cf87c_data
		jne    _03070f_jump
		mov    _0cf88c_data,%cx
		cmp    $0x000005,%cx
		jne    _03070f_jump
		sub    %cx,0x00003e(%edx)
		jmp    _030706_jump

	_0306c7_jump:
		cmpw   $0x00016e,0x000036(%edx)
		jle    _03070f_jump
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%al
		sub    $0x0001f9,%esi
		dec    %al
		mov    %esi,0x000028(%edx)
		mov    %al,0x00006c(%edx)
		cmp    $0x000003,%al
		jbe    _0306eb_jump
		movb   $0x000003,0x00006c(%edx)

	_0306eb_jump:
		cmpw   $0x000008,_0cf87c_data
		jne    _03070f_jump
		mov    _0cf88c_data,%di
		cmp    $0x000005,%di
		jne    _03070f_jump
		add    %di,0x00003e(%edx)

	_030706_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)

	_03070f_jump:
		cmpw   $0x000008,_0cf87c_data
		jne    _030747_jump
		cmpw   $0x000005,_0cf88c_data
		jne    _030747_jump
		mov    _0cf882_data,%eax
		mov    _0cd0a0_data,%ebp
		sar    $0x000010,%eax
		add    %ebp,%eax
		sub    $0x000050,%eax
		mov    %eax,0x00002c(%edx)
		jmp    _030747_jump

	_03073b_jump:
		movw   $0x000000,0x000042(%edx)
		movw   $0x000000,0x000040(%edx)

	_030747_jump:
		mov    _0cf8a4_data,%eax
		mov    _0cd0a0_data,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		sub    $0x000050,%eax
		cmp    %ecx,%eax
		jle    _030764_jump
		mov    %eax,0x00002c(%edx)

	_030764_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03076c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0cee58_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x00006d(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x00006c(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		mov    0x000034(%eax),%bx
		xor    %edi,%edi
		cmp    %bx,%dx
		je     _030880_jump
		mov    %edi,0x000004(%esp)
		xor    %esi,%esi

	_0307c9_jump:
		movswl %dx,%ebp
		imul   $0x000084,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0ccdf0_data,%ebx
		add    $0x000020,%eax
		add    %edx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ebx)
		mov    0x00006b(%ecx),%dl
		mov    %edx,(%esp)
		inc    %edi
		mov    (%esp),%eax
		movswl %di,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006b(%ebx)
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		mov    0x000004(%esp),%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01e030_func
		mov    _0cee58_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _0307c9_jump

	_030880_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03088c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x0000b2,%dx
		je     _0308a4_jump
		cmp    $0x0000f1,%dx
		jne    _0308e3_jump

	_0308a4_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _0308e3_jump
		xor    %ecx,%ecx
		mov    0x00006a(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%esi),%ecx
		mov    0x00000a(%ecx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _06bf60_func
		mov    %al,0x00006b(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _03076c_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0308e3_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d528_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030908_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _030955_jump
		cmpb   $0x000036,0x00006c(%ecx)
		jne    _030955_jump
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _03093c_jump
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _030949_jump

	_03093c_jump:
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _030949_jump
		mov    %ecx,%eax
		call   _07b628_func

	_030949_jump:
		mov    %ecx,%eax
		call   _0567ac_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030955_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _030967_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _030998_jump

	_030967_jump:
		cmpw   $0x000003,_0cf868_data
		jne    _030a36_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _030987_jump
		cmpb   $0x00001f,_0ce6bc_data
		je     _03098e_jump

	_030987_jump:
		mov    $0x000001,%eax
		jmp    _030990_jump

	_03098e_jump:
		xor    %eax,%eax

	_030990_jump:
		test   %eax,%eax
		je     _030a36_jump

	_030998_jump:
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _018ad0_func
		cwtl   
		mov    0x00002c(%ecx),%esi
		sub    %edx,%eax
		sub    %esi,%eax
		cmp    $0x000020,%eax
		jg     _0309db_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _018ad0_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d818_func
		movb   $0x00006b,0x00006a(%ecx)
		movb   $0x000000,0x00006b(%ecx)
		jmp    _0309f1_jump

	_0309db_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_0309f1_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _07b628_func
		mov    _0cf8bc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		mov    0x000081(%eax,%edx,4),%bl
		movl   $0x000000,0x000024(%eax,%edx,4)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax,%edx,4)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030a36_jump:
		mov    _0cfa88_data,%ah
		test   %ah,%ah
		je     _030bc0_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cfa8b_data,%al
		mov    _0cfa8a_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _030a9c_jump
		mov    _0cf8bc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		andb   $0x0000fb,0x000081(%ecx)
		andb   $0x0000fb,0x000081(%edx)
		mov    %ecx,%eax
		call   _07b628_func
		cmpl   $0x000000,0x000024(%edx)
		je     _030bdf_jump
		mov    %edx,%eax
		call   _07b628_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030a9c_jump:
		mov    %edx,%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		add    %edx,%edx
		add    $_0cf026_data,%edx
		movswl (%edx),%eax
		mov    %eax,0x000028(%ecx)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x000009(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x00000a(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000b(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000c(%edx),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000011(%edx),%al
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x00007e(%ecx),%bl
		mov    %ax,0x00005a(%ecx)
		test   %bl,%bl
		jne    _030b15_jump
		mov    %ecx,%eax
		call   _07b628_func

	_030b15_jump:
		mov    _0cf8bc_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x00007e(%ecx)
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ecx
		mov    0x000010(%edx),%bh
		add    %eax,%ecx
		test   %bh,%bh
		je     _030b99_jump
		mov    0x000081(%ecx),%ah
		movb   $0x000004,0x00007e(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000002(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00000d(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000e(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000f(%edx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000042(%ecx)
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _030ba0_jump

	_030b99_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_030ba0_jump:
		mov    _0cfa8a_data,%bl
		inc    %bl
		mov    %bl,_0cfa8a_data
		cmp    $0x000064,%bl
		jbe    _030bdf_jump
		xor    %cl,%cl
		mov    %cl,_0cfa8a_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030bc0_jump:
		mov    %ah,0x00007e(%ecx)
		mov    _0cf8bc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		andb   $0x0000fb,0x000081(%eax,%edx,4)

	_030bdf_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030be4_func:
		push   %edx
		cmpb   $0x000001,_0cfa88_data
		jne    _030bf6_jump
		xor    %dl,%dl
		mov    %dl,_0ce6c6_data

	_030bf6_jump:
		pop    %edx
		ret    



_030bf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    _0cfa54_data,%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000001,%dl
		jne    _030e02_jump
		mov    %ah,%bl
		and    $0x0000df,%bl
		mov    %bl,0x000081(%esi)
		cmpw   $0x000000,_0ce690_data
		jle    _030c3e_jump
		testb  $0x000008,_0ce6d1_data
		jne    _030c55_jump

	_030c3e_jump:
		cmpw   $0x000000,_0ce690_data
		jge    _030cb5_jump
		testb  $0x000008,_0ce6d1_data
		jne    _030cb5_jump

	_030c55_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030c63_jump
		neg    %eax

	_030c63_jump:
		cmp    $0x000002,%eax
		jge    _030c80_jump
		cmpw   $0x000000,_0ce690_data
		jle    _030c79_jump
		mov    $0x000002,%eax
		jmp    _030cb1_jump

	_030c79_jump:
		mov    $0xfffffffe,%eax
		jmp    _030cb1_jump

	_030c80_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030c8e_jump
		neg    %eax

	_030c8e_jump:
		cmp    $0x000007,%eax
		jl     _030cab_jump
		cmpw   $0x000000,_0ce690_data
		jle    _030ca4_jump
		mov    $0x000007,%eax
		jmp    _030cb1_jump

	_030ca4_jump:
		mov    $0xfffffff9,%eax
		jmp    _030cb1_jump

	_030cab_jump:
		mov    _0ce690_data,%ax

	_030cb1_jump:
		mov    %ax,0x000050(%esi)

	_030cb5_jump:
		mov    0x000056(%esi),%dx
		test   %dx,%dx
		jne    _030d36_jump
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030cd0_jump
		neg    %eax

	_030cd0_jump:
		test   %eax,%eax
		jg     _030ce9_jump
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030ce2_jump
		neg    %eax

	_030ce2_jump:
		cmp    $0x000002,%eax
		jle    _030d2e_jump
		jmp    _030d2a_jump

	_030ce9_jump:
		mov    _0ce692_data,%cx
		test   %cx,%cx
		jle    _030d0f_jump
		mov    _0ce690_data,%bx
		test   %bx,%bx
		jle    _030d07_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _030d2e_jump

	_030d07_jump:
		jge    _030d2a_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _030d2e_jump

	_030d0f_jump:
		jge    _030d2e_jump
		mov    _0ce690_data,%ax
		test   %ax,%ax
		jle    _030d22_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _030d2e_jump

	_030d22_jump:
		jge    _030d2a_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _030d2e_jump

	_030d2a_jump:
		movb   $0x000001,0x00006b(%esi)

	_030d2e_jump:
		movw   $0x000008,0x000056(%esi)
		jmp    _030d3d_jump

	_030d36_jump:
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%esi)

	_030d3d_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000074(%esi),%al
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    _0ce678_data,%ebx
		mov    _0ce6b8_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    _0ce67c_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0ce6b9_data,%al
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    _0ce6bd_data,%ch
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%ch
		jne    _030dc6_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _030de5_jump

	_030dc6_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _030dd8_jump
		cmpb   $0x000016,_0ce6bc_data
		je     _030de5_jump

	_030dd8_jump:
		call   _0701a8_func
		test   %al,%al
		jne    _030e89_jump

	_030de5_jump:
		mov    _0cf818_data,%ax
		xor    %dh,%dh
		mov    %ax,_0cf81a_data
		mov    %dh,_0cfa54_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030e02_jump:
		movw   $0x000000,0x000056(%esi)
		mov    %ah,%dh
		movb   $0x000001,0x00006b(%esi)
		or     $0x000020,%dh
		mov    _0ce6bd_data,%bl
		mov    %dh,0x000081(%esi)
		cmp    $0x000003,%bl
		jne    _030e3c_jump
		cmpb   $0x000016,_0ce6bc_data
		jne    _030e3c_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030e3c_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _030e4e_jump
		cmpb   $0x000001,_0ce6bc_data
		je     _030e71_jump

	_030e4e_jump:
		mov    _0ce6bd_data,%al
		cmp    $0x000002,%al
		jne    _030e5f_jump
		cmp    _0ce6bc_data,%al
		je     _030e71_jump

	_030e5f_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _030e83_jump
		cmpb   $0x000006,_0ce6bc_data
		jne    _030e83_jump

	_030e71_jump:
		xor    %edx,%edx
		mov    %dx,_0ce690_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030e83_jump:
		movw   $0x000000,0x000050(%esi)

	_030e89_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_030e94_switch:
		.long   _030f49_case
		.long   _030f4f_case
		.long   _030f55_case
		.long   _030f55_case
		.long   _030f5b_case




_030ea8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0cf88c_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _031054_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _030ef5_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _030eec_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _030ef2_jump

	_030eec_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_030ef2_jump:
		mov    %eax,0x00002c(%esi)

	_030ef5_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _031039_jump
		cmpb   $0x00000f,_0ce6bc_data
		jne    _031039_jump
		mov    _0ce67c_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x00006c(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0ce678_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _030f61_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_030e94_switch(,%ebx,4)

	_030f49_case:
		mov    $0x000030,%dl
		mov    $0x000018,%dh
		jmp    _030f63_jump

	_030f4f_case:
		mov    $0x000030,%dl
		mov    $0x000020,%dh
		jmp    _030f63_jump

	_030f55_case:
		mov    $0x000038,%dl
		mov    $0x000028,%dh
		jmp    _030f63_jump

	_030f5b_case:
		mov    $0x000038,%dl
		mov    $0x000040,%dh
		jmp    _030f63_jump

	_030f61_jump:
		xor    %eax,%eax

	_030f63_jump:
		test   %ax,%ax
		je     _030fa5_jump
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		add    %ecx,%eax
		push   $0x000004
		cwtl   
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _02b430_func

	_030fa5_jump:
		test   %ax,%ax
		je     _031039_jump
		mov    0x000076(%esi),%cl
		dec    %cl
		mov    %cl,0x000076(%esi)
		cmp    $0x000001,%cl
		jae    _030fde_jump
		mov    0x000077(%esi),%al
		mov    %al,0x000076(%esi)
		mov    0x00006c(%esi),%al
		cmp    $0x000013,%al
		jae    _030fd7_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01d808_func
		jmp    _030fde_jump

	_030fd7_jump:
		mov    %esi,%eax
		call   _07bff4_func

	_030fde_jump:
		mov    _0cf88c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		cmpw   $0x000000,0x000056(%edx,%eax,1)
		jne    _031013_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _07c0a4_func

	_031013_jump:
		mov    _0cf88c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		movw   $0x000000,0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031039_jump:
		mov    _0cf88c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		incw   0x000050(%edx,%eax,4)

	_031054_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031060_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000076(%eax)
		jne    _03109f_jump
		mov    _0ce678_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _03109f_jump
		mov    _0ce678_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _03109f_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x000076(%ecx)
		call   _01d818_func

	_03109f_jump:
		cmpb   $0x000001,0x000076(%ecx)
		jbe    _0310d8_jump
		mov    0x000042(%ecx),%dx
		cmp    $0x000010,%dx
		jge    _0310c1_jump
		cmpb   $0x000000,_0cf9fd_data
		jne    _0310de_jump
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0310de_jump

	_0310c1_jump:
		cmpb   $0x000000,_0cf9fd_data
		jne    _0310de_jump
		cmpb   $0x000000,_0cf9f8_data
		jne    _0310de_jump
		incl   0x00002c(%ecx)
		jmp    _0310de_jump

	_0310d8_jump:
		movw   $0x000000,0x000042(%ecx)

	_0310de_jump:
		cmpw   $0x000001,0x000050(%ecx)
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0310f8_func:
		push   %ebx
		push   %edx
		mov    _0ce67c_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006a(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx
		jne    _03118a_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cf9f5_data(%edx)
		jne    _03118a_jump
		mov    _0cf88c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0ccdf0_data,%ebx
		cmpw   $0x000000,0x000056(%ebx,%edx,4)
		jne    _03118a_jump
		mov    0x000081(%eax),%bh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%eax)

	_03118a_jump:
		pop    %edx
		pop    %ebx
		ret    



_031190_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpw   $0x0000ff,0x000050(%eax)
		je     _0311ef_jump
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0311cd_jump
		mov    %edx,%eax
		call   _01d074_func
		test   %al,%al
		je     _0311ef_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_0311cd_jump:
		mov    0x000050(%edx),%cx
		test   %cx,%cx
		jne    _0311e8_jump
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000050(%edx)
		movb   $0x000002,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_0311e8_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x000050(%edx)

	_0311ef_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

_0311f4_switch:
		.long   _0312f5_case
		.long   _031301_case
		.long   _03130e_case
		.long   _031320_case
		.long   _0312fb_case




_031208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0cf884_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		mov    %ax,_0cf8a6_data
		cmpb   $0x000000,_095e2d_data
		jne    _031244_jump
		mov    _0cf872_data,%ax
		mov    %ax,_0cf86e_data
		mov    %ax,_0cf89e_data

	_031244_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000014,%al
		jb     _031256_jump
		jbe    _031271_jump
		cmp    $0x00001e,%al
		je     _031286_jump
		jmp    _0313f8_jump

	_031256_jump:
		cmp    $0x000002,%al
		jne    _0313f8_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		jmp    _0313f8_jump

	_031271_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _0313f8_jump

	_031286_jump:
		cmpl   $0x000000,0x000020(%ecx)
		je     _0313f8_jump
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%bl
		cmp    $0xffffffff,%edx
		je     _0312b3_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		cmpl   $0x000000,0x000024(%edx,%eax,4)
		je     _0312b3_jump
		xor    %bl,%bl

	_0312b3_jump:
		test   %bl,%bl
		je     _0312ce_jump
		mov    0x00007f(%ecx),%dl
		test   %dl,%dl
		je     _0312ce_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _0312ce_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)

	_0312ce_jump:
		xor    %bh,%bh
		mov    0x00007f(%ecx),%al
		mov    %bh,(%esp)
		test   %al,%al
		jne    _0313ee_jump
		mov    0x000052(%ecx),%ax
		cmp    $0x000004,%ax
		ja     _03132b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0311f4_switch(,%eax,4)

	_0312f5_case:
		movw   $0x000002,0x000052(%ecx)

	_0312fb_case:
		mov    0x000060(%ecx),%si
		jmp    _03132b_jump

	_031301_case:
		mov    $0x00004d,%esi
		movw   $0x000003,0x000052(%ecx)
		jmp    _03132b_jump

	_03130e_case:
		mov    $0x000048,%esi
		mov    $0x000001,%ah
		movw   $0x000001,0x000052(%ecx)
		mov    %ah,(%esp)
		jmp    _03132b_jump

	_031320_case:
		mov    $0x0000bb,%esi
		movw   $0x000004,0x000052(%ecx)

	_03132b_jump:
		cmpb   $0x000000,(%esp)
		jne    _031335_jump
		movb   $0x000032,0x00007f(%ecx)

	_031335_jump:
		cmp    0x000060(%ecx),%si
		je     _0313ee_jump
		mov    %ecx,%eax
		call   _061180_func
		movw   $0x000000,0x000048(%ecx)
		mov    0x000034(%ecx),%ax

	_031350_jump:
		movswl %ax,%edx
		mov    _0cee58_data,%eax
		mov    (%eax,%edx,2),%ax
		movswl %ax,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%ebx
		add    %ebx,%edx
		mov    0x000060(%edx),%bx
		cmp    %bx,%si
		je     _03137c_jump
		cmp    0x000060(%ecx),%bx
		jne    _031350_jump

	_03137c_jump:
		mov    0x000060(%edx),%ax
		cmp    0x000060(%ecx),%ax
		je     _0313ee_jump
		cmp    $0x00004d,%ax
		jb     _03139a_jump
		jbe    _0313a2_jump
		cmp    $0x0000bb,%ax
		je     _0313b4_jump
		jmp    _0313c2_jump

	_03139a_jump:
		cmp    $0x000048,%ax
		je     _0313ab_jump
		jmp    _0313c2_jump

	_0313a2_jump:
		mov    %edx,%eax
		call   _03db68_func
		jmp    _0313c2_jump

	_0313ab_jump:
		mov    %edx,%eax
		call   _05d670_func
		jmp    _0313c2_jump

	_0313b4_jump:
		mov    %edx,%eax
		call   _0643f0_func
		mov    %edx,%eax
		call   _066218_func

	_0313c2_jump:
		mov    %edx,%eax
		call   _0597fc_func
		mov    %edx,%eax
		call   _058084_func
		mov    %edx,%eax
		call   _01e030_func
		mov    0x000081(%edx),%bl
		or     $0x000004,%bl
		mov    0x000034(%edx),%ax
		mov    %bl,0x000081(%edx)
		mov    %ax,0x000050(%ecx)

	_0313ee_jump:
		cmpb   $0x000000,(%esp)
		jne    _0312ce_jump

	_0313f8_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031400_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000042(%eax),%dx
		cmp    $0x000002,%dx
		jle    _031418_jump
		mov    $0x000002,%ebx
		mov    %ebx,%edx
		jmp    _031428_jump

	_031418_jump:
		cmp    $0x000001,%dx
		jle    _03142d_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_031428_jump:
		call   _01d818_func

	_03142d_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _031439_jump
		neg    %eax

	_031439_jump:
		cmp    $0x000001,%eax
		jle    _031471_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _03144a_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _031451_jump

	_03144a_jump:
		mov    $0x000001,%eax
		jmp    _031453_jump

	_031451_jump:
		xor    %eax,%eax

	_031453_jump:
		test   %eax,%eax
		je     _031471_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _031468_jump
		decw   0x000040(%ecx)
		jmp    _031471_jump

	_031468_jump:
		test   $0x000008,%dh
		jne    _031471_jump
		incw   0x000040(%ecx)

	_031471_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _03149e_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _03149e_jump
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _03149e_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_03149e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0314a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		mov    0x00006d(%eax),%ah
		shr    $0x000007,%cl
		test   %ah,%ah
		jne    _0314e0_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _0314e0_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0314e0_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_0314e0_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0315e5_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _0315e5_jump
		cmpw   $0x000086,0x000060(%esi)
		jne    _03151d_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03151d_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01d808_func
		movw   $0x000000,0x000040(%esi)
		jmp    _031570_jump

	_03151d_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031570_jump
		mov    0x000081(%esi),%bh
		mov    _0ce6d1_data,%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%ch
		mov    %bh,0x000081(%esi)
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _055ee4_func
		mov    %cl,%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_031570_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _0315e5_jump
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		mov    0x000040(%esi),%bx
		movswl %ax,%edx
		test   %bx,%bx
		jge    _0315aa_jump
		xor    %ebx,%ebx
		jmp    _0315b1_jump

	_0315aa_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx

	_0315b1_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _0315e5_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%esi)

	_0315e5_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0315f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _031627_jump
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _031627_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_031627_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _0314a4_func
		mov    %ecx,%eax
		call   _02ee20_func
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _031647_jump
		mov    %ecx,%eax
		call   _060288_func

	_031647_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03164c_switch:
		.long   _0316dc_case
		.long   _0316f1_case
		.long   _0316dc_case
		.long   _0316f1_case
		.long   _0316dc_case
		.long   _0316f1_case
		.long   _0316f1_case
		.long   _0316e6_case
		.long   _0316f1_case
		.long   _0316e6_case
		.long   _0316f1_case
		.long   _0316e6_case




_03167c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    0x000060(%eax),%ax
		cmp    $0x000086,%ax
		jb     _03169d_jump
		jbe    _0316ab_jump
		cmp    $0x0000a7,%ax
		jb     _0316c5_jump
		jbe    _0316ab_jump
		cmp    $0x0000b1,%ax
		je     _0316b5_jump
		jmp    _0316c5_jump

	_03169d_jump:
		cmp    $0x000006,%ax
		jb     _0316c5_jump
		jbe    _0316b5_jump
		cmp    $0x000008,%ax
		jne    _0316c5_jump

	_0316ab_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00002c,%eax
		jmp    _0316bd_jump

	_0316b5_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00008b,%eax

	_0316bd_jump:
		sar    $0x000010,%edx
		call   _07228c_func

	_0316c5_jump:
		mov    _0ce77c_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _0316f1_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_03164c_switch(,%edx,4)

	_0316dc_case:
		xor    %ebx,%ebx
		mov    _0ce77f_data,%bl
		jmp    _0316f1_case

	_0316e6_case:
		xor    %ebx,%ebx
		mov    _0ce77f_data,%bl
		sub    $0x000002,%ebx

	_0316f1_case:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0ce6dc_data,%edx
		mov    0x000040(%edx),%si
		add    $0x00000a,%ebx
		test   %si,%si
		jge    _03170c_jump
		neg    %ebx

	_03170c_jump:
		movswl %bx,%edx
		mov    %ecx,%eax
		call   _01eab4_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03171c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _055ee4_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _031761_jump
		mov    0x000081(%edx),%ch
		lea    0x000081(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		mov    %ch,(%eax)
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_031761_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031768_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x0000ff,0x00007f(%eax)
		je     _031839_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _031836_jump
		mov    0x00006d(%ecx),%al
		mov    _0ce6d1_data,%ah
		and    $0x0000fb,%ah
		or     $0x000004,%ah
		test   %al,%al
		jbe    _03179b_jump
		cmp    $0x000005,%al
		je     _0317bd_jump
		jmp    _0317e2_jump

	_03179b_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ecx),%dh
		mov    %ah,_0ce6d1_data
		and    $0x0000fb,%dh
		mov    %ebx,_0ce674_data
		mov    %dh,0x000081(%ecx)
		jmp    _0317e2_jump

	_0317bd_jump:
		mov    $0x000001,%edx
		mov    $0x000028,%ebx
		mov    %ah,_0ce6d1_data
		mov    $_0ce650_data,%eax
		mov    %edx,_0ce674_data
		mov    $0x000003,%edx
		call   _01d818_func

	_0317e2_jump:
		mov    0x000081(%ecx),%bl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bl
		sar    $0x000010,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f918_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce6b8_data,%al
		sub    %eax,%edx
		mov    0x00002c(%ecx),%esi
		mov    %edx,_0ce678_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    _0ce6b9_data,%dl
		add    %esi,%eax
		mov    $0x000040,%bh
		sub    %edx,%eax
		mov    %bh,_0cfa7e_data
		mov    %eax,_0ce67c_data

	_031836_jump:
		decb   0x00007f(%ecx)

	_031839_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031840_func:
		mov    _096318_data,%al
		ret    



_031848_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %al,%ah
		xor    %dl,%dl
		xor    %al,%al

	_031852_jump:
		xor    %ebx,%ebx
		mov    %al,%cl
		mov    %ah,%bl
		sar    %cl,%ebx
		xor    %ecx,%ecx
		mov    $0x000007,%esi
		mov    %al,%cl
		sub    %ecx,%esi
		and    $0x000001,%ebx
		mov    %esi,%ecx
		shl    %cl,%ebx
		and    $0x0000ff,%edx
		inc    %al
		or     %ebx,%edx
		cmp    $0x000008,%al
		jb     _031852_jump
		mov    %dl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031884_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    %esp,%eax
		mov    %ebx,%edx
		call   _080af5_func
		mov    (%esp),%ah
		xor    $0x000053,%ah
		mov    %ah,(%esp)
		mov    %ah,%al
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0318ac_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ecx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _080d12_func
		mov    (%esp),%ah
		mov    $0x000001,%ebx
		xor    $0x000053,%ah
		mov    %ebx,%edx
		mov    %ah,(%esp)
		mov    %esp,%eax
		call   _080e0e_func
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_0318e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		mov    %esp,%eax
		call   _080af5_func
		mov    (%esp),%edx
		xor    $0x54555657,%edx
		mov    %edx,(%esp)
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031910_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x000004,%edx
		xor    $0x54555657,%ebx
		mov    %esp,%eax
		mov    %ebx,(%esp)
		mov    $0x000001,%ebx
		call   _080e0e_func
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_03193c_func:
		push   %ebx
		push   %edx
		cmpl   $0x000000,0x000004(%eax)
		jle    _031958_jump
		testb  $0x000004,0x00000c(%eax)
		jne    _031958_jump
		mov    (%eax),%edx
		mov    (%edx),%bl
		cmp    $0x00000d,%bl
		je     _031958_jump
		cmp    $0x00001a,%bl
		jne    _03195f_jump

	_031958_jump:
		call   _080fce_func
		jmp    _031971_jump

	_03195f_jump:
		mov    0x000004(%eax),%ebx
		dec    %ebx
		mov    (%eax),%edx
		mov    %ebx,0x000004(%eax)
		lea    0x000001(%edx),%ebx
		mov    %ebx,(%eax)
		xor    %eax,%eax
		mov    (%edx),%al

	_031971_jump:
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _03197e_jump
		incl   _096328_data

	_03197e_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_031984_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    _096321_data,%al
		xor    %ecx,%ecx
		mov    %al,%cl
		inc    %al
		mov    %al,_096321_data
		mov    %ecx,%eax
		call   _031848_func
		xor    $0x0000b9,%al
		and    $0x0000ff,%eax
		xor    %ebx,%eax
		add    %bl,_0df70c_data
		mov    _096324_data,%ebx
		inc    %ebx
		mov    0x00000d(%edx),%cl
		mov    %ebx,_096324_data
		test   $0x000004,%cl
		jne    _0319cf_jump
		mov    0x000014(%edx),%ebx
		sub    0x000004(%edx),%ebx
		cmp    $0x000001,%ebx
		ja     _0319d8_jump

	_0319cf_jump:
		call   _081132_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0319d8_jump:
		mov    (%edx),%ebx
		mov    %al,(%ebx)
		cmp    $0x00000a,%al
		jne    _0319ee_jump
		mov    $0x00000a,%eax
		call   _081132_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0319ee_jump:
		mov    0x00000d(%edx),%ch
		mov    0x000004(%edx),%esi
		mov    (%edx),%eax
		or     $0x000010,%ch
		inc    %esi
		mov    %ch,0x00000d(%edx)
		lea    0x000001(%eax),%ebx
		mov    %esi,0x000004(%edx)
		mov    %ebx,(%edx)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031a10_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpl   $0x000000,0x000004(%eax)
		jle    _031a2d_jump
		testb  $0x000004,0x00000c(%eax)
		jne    _031a2d_jump
		mov    (%eax),%edx
		mov    (%edx),%bl
		cmp    $0x00000d,%bl
		je     _031a2d_jump
		cmp    $0x00001a,%bl
		jne    _031a36_jump

	_031a2d_jump:
		call   _080fce_func
		mov    %eax,%edx
		jmp    _031a4c_jump

	_031a36_jump:
		mov    0x000004(%eax),%ebx
		dec    %ebx
		mov    (%eax),%edx
		mov    %ebx,0x000004(%eax)
		lea    0x000001(%edx),%ebx
		mov    %ebx,(%eax)
		mov    (%edx),%dl
		and    $0x0000ff,%edx

	_031a4c_jump:
		mov    %edx,%ebx
		cmp    $0xffffffff,%edx
		je     _031a86_jump
		mov    _096321_data,%al
		xor    %edx,%ebx
		mov    %al,%bl
		inc    %al
		mov    %al,_096321_data
		mov    %ebx,%eax
		call   _031848_func
		xor    $0x0000b9,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0df70c_data,%cl
		xor    %edx,%ebx
		sub    %bl,%cl
		mov    %cl,_0df70c_data
		incl   _096324_data

	_031a86_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031a8c_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    _096328_data,%ebx
		dec    %ebx
		mov    %ebx,_096328_data
		test   %ebx,%ebx
		jge    _031aa7_jump
		movb   $0x000001,_096320_data

	_031aa7_jump:
		testb  $0x000004,0x00000d(%edx)
		jne    _031ab8_jump
		mov    0x000014(%edx),%ebx
		sub    0x000004(%edx),%ebx
		cmp    $0x000001,%ebx
		ja     _031ac1_jump

	_031ab8_jump:
		call   _081132_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

	_031ac1_jump:
		mov    (%edx),%ebx
		mov    %al,(%ebx)
		cmp    $0x00000a,%al
		jne    _031ad7_jump
		mov    $0x00000a,%eax
		call   _081132_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

	_031ad7_jump:
		mov    0x00000d(%edx),%cl
		mov    0x000004(%edx),%edi
		mov    (%edx),%eax
		or     $0x000010,%cl
		inc    %edi
		mov    %cl,0x00000d(%edx)
		lea    0x000001(%eax),%ebx
		mov    %edi,0x000004(%edx)
		mov    %ebx,(%edx)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_031afc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000008,%ecx
		xor    %edx,%edx

	_031b06_jump:
		lea    0x000000(,%edx,8),%eax
		mov    %ecx,%ebx

	_031b0f_jump:
		inc    %eax
		mov    %dl,_0def03_data(%eax)
		cmp    %ebx,%eax
		jne    _031b0f_jump
		inc    %edx
		add    $0x000008,%ecx
		cmp    $0x000100,%edx
		jl     _031b06_jump
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_096328_data
		mov    %edx,_096324_data
		mov    $0x000057,%dl
		mov    %ah,_096320_data
		mov    %dl,_096321_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031b48_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%ebp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_096318_data
		call   _031afc_func
		mov    %dl,_0df70c_data
		xor    %eax,%eax
		mov    %ebp,%edx
		call   _0318ac_func
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %edx,_096328_data
		mov    %ebp,%edx
		call   _031910_func
		cmpb   $0x000000,_096320_data
		jne    _031d05_jump

	_031b92_jump:
		mov    $0x000008,%esi
		xor    %edx,%edx

	_031b99_jump:
		mov    0x000004(%esp),%eax
		call   _03193c_func
		mov    %eax,0x000014(%esp)
		cmp    $0xffffffff,%eax
		jne    _031baf_jump
		mov    %edx,%esi
		jmp    _031bbf_jump

	_031baf_jump:
		inc    %edx
		mov    0x000014(%esp),%al
		mov    %al,_0df703_data(%edx)
		cmp    $0x000008,%edx
		jl     _031b99_jump

	_031bbf_jump:
		test   %esi,%esi
		jne    _031bcf_jump
		movb   $0x000001,_096320_data
		jmp    _031cf8_jump

	_031bcf_jump:
		mov    $0xffffffff,%ebx
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x000014(%esp)

	_031be0_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %esi,%esi
		jle    _031bff_jump
		mov    %edi,%edx

	_031bea_jump:
		mov    _0def04_data(%edx),%cl
		cmp    _0df704_data(%eax),%cl
		jne    _031bf9_jump
		inc    %ebx

	_031bf9_jump:
		inc    %eax
		inc    %edx
		cmp    %esi,%eax
		jl     _031bea_jump

	_031bff_jump:
		cmp    0x000010(%esp),%ebx
		jle    _031c15_jump
		mov    0x000014(%esp),%eax
		mov    %ebx,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    %esi,%ebx
		je     _031c29_jump

	_031c15_jump:
		mov    0x000014(%esp),%edx
		inc    %edx
		add    $0x000008,%edi
		mov    %edx,0x000014(%esp)
		cmp    $0x000100,%edx
		jl     _031be0_jump

	_031c29_jump:
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		mov    $0x000001,%edi
		call   _031984_func
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%edx
		shl    $0x000003,%eax
		mov    %ecx,0x000014(%esp)
		mov    %eax,(%esp)
		mov    %edx,0x000008(%esp)
		mov    (%esp),%edx
		xor    %eax,%eax

	_031c59_jump:
		cmp    %esi,%eax
		jge    _031c79_jump
		mov    _0def04_data(%edx),%cl
		cmp    _0df704_data(%eax),%cl
		je     _031c6d_jump
		add    %edi,%ebx

	_031c6d_jump:
		mov    0x000008(%esp),%ecx
		inc    %edx
		inc    %eax
		add    %edi,%edi
		cmp    %ecx,%eax
		jl     _031c59_jump

	_031c79_jump:
		mov    0x000014(%esp),%ecx
		mov    %ebp,%edx
		shl    $0x000003,%ecx
		mov    %ebx,%eax
		lea    0x000008(%ecx),%edi
		call   _031984_func
		cmp    %edi,%ecx
		jge    _031cc9_jump

	_031c90_jump:
		movl   $0x000002,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		cmp    $0x000001,%edx
		jne    _031cb7_jump
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0df704_data(%ecx),%al
		call   _031984_func

	_031cb7_jump:
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		inc    %ecx
		mov    %eax,%ebx
		cmp    %edi,%ecx
		jl     _031c90_jump

	_031cc9_jump:
		cmp    $0x000008,%esi
		jge    _031ce0_jump
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _031984_func
		movb   $0x000001,_096320_data
		jmp    _031cf8_jump

	_031ce0_jump:
		mov    (%esp),%edx
		xor    %eax,%eax

	_031ce5_jump:
		inc    %edx
		mov    _0df704_data(%eax),%bl
		inc    %eax
		mov    %bl,_0def03_data(%edx)
		cmp    $0x000008,%eax
		jl     _031ce5_jump

	_031cf8_jump:
		cmpb   $0x000000,_096320_data
		je     _031b92_jump

	_031d05_jump:
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0df70c_data,%al
		call   _0318ac_func
		mov    _096328_data,%eax
		mov    %ebp,%edx
		call   _031910_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031d28_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		xor    %ah,%ah
		mov    %ah,_096318_data
		call   _031afc_func
		mov    %ebp,%eax
		mov    $0xffffffff,%edx
		call   _031884_func
		mov    %al,_0df70c_data
		mov    %ebp,%eax
		mov    %edx,0x000004(%esp)
		call   _0318e0_func
		mov    _096320_data,%dl
		mov    %eax,_096328_data
		test   %dl,%dl
		jne    _031e8e_jump

	_031d70_jump:
		mov    0x000004(%esp),%esi
		cmp    $0xffffffff,%esi
		jne    _031da2_jump
		mov    %ebp,%eax
		call   _031a10_func
		mov    %eax,0x000004(%esp)
		cmp    %esi,%eax
		jne    _031d94_jump
		movb   $0x000001,_096320_data
		jmp    _031e20_jump

	_031d94_jump:
		mov    %ebp,%eax
		call   _031a10_func
		mov    %eax,%ebx
		jmp    _031e20_jump

	_031da2_jump:
		mov    %ebp,%eax
		call   _031a10_func
		mov    %eax,%edx
		mov    %eax,0x000004(%esp)
		cmp    $0xffffffff,%eax
		jne    _031dd4_jump
		xor    %esi,%esi

	_031db6_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0df704_data(%esi),%al
		inc    %esi
		call   _031a8c_func
		cmp    $0x000008,%esi
		jl     _031db6_jump
		movb   $0x000001,_096320_data
		jmp    _031e20_jump

	_031dd4_jump:
		mov    %ebp,%eax
		call   _031a10_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		jne    _031e09_jump
		xor    %esi,%esi
		test   %edx,%edx
		jle    _031e00_jump
		mov    0x000004(%esp),%edi

	_031dec_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0df704_data(%esi),%al
		inc    %esi
		call   _031a8c_func
		cmp    %edi,%esi
		jl     _031dec_jump

	_031e00_jump:
		movb   $0x000001,_096320_data
		jmp    _031e20_jump

	_031e09_jump:
		xor    %esi,%esi

	_031e0b_jump:
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    _0df704_data(%esi),%al
		inc    %esi
		call   _031a8c_func
		cmp    $0x000008,%esi
		jl     _031e0b_jump

	_031e20_jump:
		cmpb   $0x000000,_096320_data
		jne    _031e81_jump
		mov    0x000004(%esp),%edi
		mov    $0x000008,%eax
		xor    %esi,%esi
		shl    $0x000003,%edi
		mov    %eax,(%esp)

	_031e3a_jump:
		movl   $0x000002,0x000008(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000008(%esp)
		cmp    $0x000001,%edx
		jne    _031e5f_jump
		mov    %ebp,%eax
		call   _031a10_func
		mov    %al,_0def04_data(%edi)

	_031e5f_jump:
		mov    %ebx,%edx
		mov    _0def04_data(%edi),%al
		sar    $0x00001f,%edx
		mov    %al,_0df704_data(%esi)
		mov    %ebx,%eax
		sub    %edx,%eax
		sar    %eax
		inc    %edi
		inc    %esi
		mov    (%esp),%edx
		mov    %eax,%ebx
		cmp    %edx,%esi
		jl     _031e3a_jump

	_031e81_jump:
		cmpb   $0x000000,_096320_data
		je     _031d70_jump

	_031e8e_jump:
		cmpl   $0x000000,_096328_data
		jne    _031ea7_jump
		cmpb   $0x000000,_0df70c_data
		je     _031eb4_jump
		push   $_0c0bc0_data
		jmp    _031eac_jump

	_031ea7_jump:
		push   $_0c0bdc_data

	_031eac_jump:
		call   _031ec0_func
		add    $0x000004,%esp

	_031eb4_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_031ec0_func:
		push   %edx
		sub    $0x000004,%esp
		lea    0x000010(%esp),%edx
		push   $_0c0bf4_data
		mov    %edx,0x000004(%esp)
		call   _07fce1_func
		add    $0x000004,%esp
		mov    %esp,%edx
		mov    0x00000c(%esp),%eax
		call   _0811d6_func
		xor    %edx,%edx
		mov    $0x000001,%ah
		mov    %edx,(%esp)
		mov    %ah,_096318_data
		add    $0x000004,%esp
		pop    %edx
		ret    



_031f00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0ce678_data,%bx
		mov    _0ce6b8_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x000068(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0ce69a_data,%bx
		jne    _032052_jump
		movb   $0x000005,0x000072(%esi)
		mov    _0ce67c_data,%eax
		add    $0x000008,%eax
		test   %di,%di
		jle    _031fd9_jump
		cmp    $0x000062,%di
		jle    _031f61_jump
		mov    %eax,_0ce67c_data
		jmp    _031f97_jump

	_031f61_jump:
		cmp    $0x000046,%di
		jle    _031f6e_jump
		mov    $0x000004,%edx
		jmp    _031f97_jump

	_031f6e_jump:
		cmp    $0x00003c,%di
		jle    _031f7b_jump
		mov    $0x000003,%edx
		jmp    _031f97_jump

	_031f7b_jump:
		cmp    $0x000028,%di
		jle    _031f88_jump
		mov    $0x000002,%edx
		jmp    _031f97_jump

	_031f88_jump:
		cmp    $0x000014,%di
		jle    _031f95_jump
		mov    $0x000001,%edx
		jmp    _031f97_jump

	_031f95_jump:
		xor    %edx,%edx

	_031f97_jump:
		cmp    %dx,%cx
		jge    _031fb4_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031fb4_jump
		inc    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03206f_jump

	_031fb4_jump:
		cmp    %dx,%cx
		jle    _03206f_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _03206f_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03206f_jump

	_031fd9_jump:
		neg    %edi
		cmp    $0x000069,%di
		jle    _031fe8_jump
		mov    %eax,_0ce67c_data
		jmp    _03201e_jump

	_031fe8_jump:
		cmp    $0x000046,%di
		jle    _031ff5_jump
		mov    $0xfffffffc,%edx
		jmp    _03201e_jump

	_031ff5_jump:
		cmp    $0x00003c,%di
		jle    _032002_jump
		mov    $0xfffffffd,%edx
		jmp    _03201e_jump

	_032002_jump:
		cmp    $0x000028,%di
		jle    _03200f_jump
		mov    $0xfffffffe,%edx
		jmp    _03201e_jump

	_03200f_jump:
		cmp    $0x000014,%di
		jle    _03201c_jump
		mov    $0xffffffff,%edx
		jmp    _03201e_jump

	_03201c_jump:
		xor    %edx,%edx

	_03201e_jump:
		cmp    %dx,%cx
		jle    _032038_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _032038_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03206f_jump

	_032038_jump:
		cmp    %dx,%cx
		jle    _03206f_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _03206f_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _03206f_jump

	_032052_jump:
		mov    0x000072(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000072(%esi)
		test   %al,%al
		jne    _03206f_jump
		movb   $0x000005,0x000072(%esi)
		test   %cx,%cx
		je     _03206f_jump
		jle    _03206e_jump
		dec    %ecx
		jmp    _03206f_jump

	_03206e_jump:
		inc    %ecx

	_03206f_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		add    %ecx,%edx
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _032090_jump
		xor    %ecx,%ecx

	_032090_jump:
		mov    0x00006d(%esi),%ah
		mov    %cx,0x000040(%esi)
		test   %ah,%ah
		jne    _0320f0_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0320f0_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _032274_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _032274_jump
		mov    0x00007f(%esi),%bh
		cmp    $0x000064,%bh
		jbe    _0320e4_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00007f(%esi)
		call   _061220_func
		jmp    _032274_jump

	_0320e4_jump:
		mov    %bh,%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		jmp    _032274_jump

	_0320f0_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0321cb_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _0321cb_jump
		movw   $0x000000,0x000052(%esi)
		cmpb   $0x000002,_0ce6bd_data
		jne    _032274_jump
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _032274_jump
		mov    0x00006b(%esi),%ah
		cmp    $0x000014,%ah
		jb     _032274_jump
		cmp    $0x000016,%ah
		ja     _032274_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		movswl %di,%eax
		test   %eax,%eax
		jge    _032164_jump
		neg    %eax

	_032164_jump:
		cmp    $0x000064,%eax
		jge    _032274_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		mov    _0ce67c_data,%ebp
		mov    _0ce6b9_data,%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    -0x00001c(%edx),%eax
		test   %eax,%eax
		jge    _032197_jump
		neg    %eax

	_032197_jump:
		cmp    $0x000014,%eax
		jge    _032274_jump
		test   %di,%di
		jge    _0321ae_jump
		orb    $0x000008,_0ce6d1_data
		jmp    _0321b5_jump

	_0321ae_jump:
		andb   $0x0000f7,_0ce6d1_data

	_0321b5_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02dbdc_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0321cb_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _032274_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _032274_jump
		cmpl   $0x000000,_0ce674_data
		jne    _032274_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _032274_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _032274_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x000008(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0ce674_data
		mov    %cx,_0ce6a6_data
		push   %eax
		lea    0x000004(%esp),%eax
		mov    _0ce678_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0ce678_data
		mov    %esi,%eax
		lea    0x000014(%esp),%ecx
		call   _01dbb4_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0ce6b9_data,%dl
		sub    %edx,%eax
		mov    $0x000008,%ebx
		mov    %eax,_0ce67c_data
		xor    %edx,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func

	_032274_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032280_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000052(%esi),%dx
		mov    %ax,0x000024(%esp)
		test   %dx,%dx
		jne    _0322b5_jump
		mov    %dx,0x000040(%esi)
		mov    %dx,0x000042(%esi)
		jmp    _03236d_jump

	_0322b5_jump:
		cmp    $0x000001,%dx
		jne    _03236d_jump
		mov    _0ce69a_data,%ax
		mov    0x000034(%esi),%cx
		cmp    %cx,%ax
		jne    _032307_jump
		xor    %ecx,%eax
		mov    _0ce678_data,%di
		mov    _0ce6b8_data,%al
		mov    0x000028(%esi),%dx
		add    %edi,%eax
		mov    0x000018(%esp),%ebx
		sub    %edx,%eax
		mov    _0ce67c_data,%edx
		sub    %ebx,%eax
		add    $0x000008,%edx
		cmp    $0x000060,%ax
		jg     _032301_jump
		movswl %ax,%ebx
		cmp    $0xffffff95,%ebx
		jge    _032307_jump

	_032301_jump:
		mov    %edx,_0ce67c_data

	_032307_jump:
		mov    0x000022(%esp),%edi
		mov    0x000016(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01dac8_func
		test   %ax,%ax
		je     _032346_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _032346_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _061220_func

	_032346_jump:
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%esi),%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000014,%dl
		jne    _03236d_jump
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_03236d_jump:
		cmpw   $0x000001,0x000052(%esi)
		jl     _03272c_jump
		mov    0x000032(%esi),%edx
		mov    _0cee58_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%ax
		movswl %ax,%edi
		mov    %edi,%ecx
		shl    $0x000005,%ecx
		add    %edi,%ecx
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%ecx
		add    %edx,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0323aa_jump
		movl   $0x000001,0x000024(%ecx)

	_0323aa_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _03272c_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _03272c_jump
		cmpw   $0x000001,0x000052(%esi)
		jne    _0323de_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		movw   $0x000002,0x000052(%esi)
		call   _061220_func

	_0323de_jump:
		mov    0x000052(%esi),%bx
		cmp    $0x000002,%bx
		jne    _032505_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%ax
		mov    0x000028(%esi),%di
		mov    0x00002c(%esi),%dx
		sub    %edi,%eax
		mov    0x00002c(%ecx),%di
		sub    %edx,%edi
		cmp    $0x000006,%ax
		jle    _032417_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _03272c_jump

	_032417_jump:
		movswl %ax,%edx
		cmp    $0xfffffffa,%edx
		jge    _03242f_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03242f_jump:
		test   %ax,%ax
		jle    _032444_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032444_jump:
		jge    _032456_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032456_jump:
		movswl %di,%edx
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edx
		jge    _032474_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032474_jump:
		cmp    $0x000008,%di
		jle    _03248a_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03248a_jump:
		test   %di,%di
		jle    _03249f_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03249f_jump:
		jl     _032726_jump
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000004,0x000052(%esi)
		mov    0x000060(%ecx),%bx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%bx
		jne    _0324d0_jump
		movw   $0x000009,0x000028(%esp)
		mov    $0x000005,%eax
		jmp    _0324df_jump

	_0324d0_jump:
		mov    $0x000005,%edi
		mov    $0x000009,%eax
		mov    %di,0x000028(%esp)

	_0324df_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d818_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%bl
		call   _01d818_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032505_jump:
		cmp    $0x000004,%bx
		jne    _0325ff_jump
		cmpw   $0x0000a8,0x000060(%esi)
		jne    _032520_jump
		movw   $0x000007,0x000028(%esp)
		jmp    _032527_jump

	_032520_jump:
		movw   $0x00000b,0x000028(%esp)

	_032527_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03272c_jump
		xor    %eax,%eax
		mov    0x000028(%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _03272c_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _03272c_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0ce674_data
		jne    _03272c_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _03272c_jump
		mov    _0ce6a4_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _03272c_jump
		cmpw   $0x0000a9,0x000060(%esi)
		jne    _03272c_jump
		mov    $0x000001,%ecx
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ebx
		mov    _0ce678_data,%edi
		mov    %esi,%eax
		mov    %ecx,_0ce674_data
		push   %edx
		sub    $0x000004,%edi
		lea    0x00000c(%esp),%edx
		lea    0x000020(%esp),%ecx
		push   %edx
		mov    $0x000001,%edx
		mov    %edi,_0ce678_data
		call   _01dbb4_func
		mov    0x00001a(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0ce6b9_data,%dl
		sub    %edx,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,_0ce67c_data
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _01d818_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0325ff_jump:
		cmp    $0x000005,%bx
		jne    _03272c_jump
		xor    %eax,%eax
		mov    0x000022(%esp),%edx
		mov    0x000068(%ecx),%al
		sar    $0x000010,%edx
		mov    %ax,0x000020(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x000016(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x00001e(%esp),%ebp
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ecx),%al
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %edx,(%esp)
		mov    %esi,%eax
		mov    0x00000e(%esp),%edi
		call   _01dac8_func
		mov    %eax,0x00000c(%esp)
		sar    $0x000010,%edi
		mov    %ebp,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %ax,0x00001c(%esp)
		mov    %esi,%eax
		call   _02f1e0_func
		mov    %eax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _0326f4_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _0326f4_jump
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02f1e0_func
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _061220_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _061220_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0326f4_jump:
		mov    0x00000e(%esp),%ebx
		mov    0x00001e(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01dac8_func
		test   %ax,%ax
		jne    _03272c_jump
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _032726_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032726_jump:
		movw   $0x000001,0x000042(%ecx)

	_03272c_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032738_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x0000a9,%dx
		jne    _03280d_jump
		movl   $0x00000a,(%esp)
		mov    0x000032(%esi),%eax
		mov    _0cee58_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		je     _03284b_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		cmpw   $0x0000a8,0x000060(%edi)
		jne    _03284b_jump
		cmpw   $0x000080,0x000042(%edi)
		jle    _0327a3_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _0327b4_jump

	_0327a3_jump:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _0327b4_jump
		movw   $0x00ffff,0x000042(%edi)

	_0327b4_jump:
		mov    _0cf862_data,%ecx
		mov    _0cf860_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0cf874_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0cf85e_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c670_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _03284b_jump

	_03280d_jump:
		mov    $0x000001,%edi
		mov    _0cf862_data,%ecx
		mov    _0cf860_data,%ebx
		mov    _0cf85e_data,%edx
		push   %eax
		mov    _0cf874_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		push   %eax
		mov    $0x000017,%eax
		mov    %edi,0x000008(%esp)
		call   _02c670_func
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx

	_03284b_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _032a5d_jump
		mov    _0ce6bd_data,%ah
		dec    %ebx
		cmp    $0x000002,%ah
		jne    _0328d7_jump
		mov    _0ce6bc_data,%dl
		cmp    %ah,%dl
		je     _03287d_jump
		cmp    $0x000001,%dl
		je     _03287d_jump
		mov    $0x000001,%eax
		jmp    _03287f_jump

	_03287d_jump:
		xor    %eax,%eax

	_03287f_jump:
		test   %eax,%eax
		je     _0328d7_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _03289b_jump
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_03289b_jump:
		cmp    $0x000080,%cx
		jle    _0328a9_jump
		mov    $0x000001,%ecx
		jmp    _0328b6_jump

	_0328a9_jump:
		movswl %cx,%eax
		cmp    $0xffffff80,%eax
		jge    _0328b6_jump
		mov    $0xffffffff,%ecx

	_0328b6_jump:
		mov    _0ce67c_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0ce67c_data
		mov    %cx,_0ce6a2_data
		mov    %cx,_0ce692_data

	_0328d7_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _0328e9_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _0328f0_jump

	_0328e9_jump:
		mov    $0x000001,%eax
		jmp    _0328f2_jump

	_0328f0_jump:
		xor    %eax,%eax

	_0328f2_jump:
		test   %eax,%eax
		je     _032a5d_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _03290c_jump
		cmpb   $0x00003d,_0ce6bc_data
		je     _032913_jump

	_03290c_jump:
		mov    $0x000001,%eax
		jmp    _032915_jump

	_032913_jump:
		xor    %eax,%eax

	_032915_jump:
		test   %eax,%eax
		je     _032a5d_jump
		mov    0x00006b(%esi),%ch
		cmp    $0x000014,%ch
		jb     _032a5d_jump
		cmp    $0x000016,%ch
		ja     _032a5d_jump
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _032a5d_jump
		mov    (%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _032a5d_jump
		cmpb   $0x000001,0x000075(%esi)
		je     _03295c_jump
		cmp    $0x000001,%bx
		jne    _032a36_jump

	_03295c_jump:
		testb  $0x000004,_0ce6d1_data
		je     _032a36_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _03297b_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _032982_jump

	_03297b_jump:
		mov    $0x000001,%eax
		jmp    _032984_jump

	_032982_jump:
		xor    %eax,%eax

	_032984_jump:
		test   %eax,%eax
		je     _032a36_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _03299e_jump
		cmpb   $0x00003d,_0ce6bc_data
		je     _0329a5_jump

	_03299e_jump:
		mov    $0x000001,%eax
		jmp    _0329a7_jump

	_0329a5_jump:
		xor    %eax,%eax

	_0329a7_jump:
		test   %eax,%eax
		je     _032a36_jump
		mov    _0ce678_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    _0ce6b8_data,%al
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		jge    _0329d5_jump
		neg    %eax

	_0329d5_jump:
		cmp    $0x000019,%eax
		jge    _032a1f_jump
		mov    $0xffffffff,%ebx
		mov    $_0ce650_data,%eax
		xor    %edi,%edi
		xor    %ebp,%ebp
		xor    %edx,%edx
		mov    %di,_0ce690_data
		mov    %di,_0ce692_data
		mov    %di,_0cf866_data
		mov    %bx,_0ce6a6_data
		xor    %ebx,%ebx
		mov    %ebp,_0ce674_data
		call   _01d818_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0ce69a_data
		jmp    _032a5d_jump

	_032a1f_jump:
		test   %dx,%dx
		jge    _032a2d_jump
		orb    $0x000008,_0ce6d1_data
		jmp    _032a51_jump

	_032a2d_jump:
		andb   $0x0000f7,_0ce6d1_data
		jmp    _032a51_jump

	_032a36_jump:
		cmpb   $0x000000,0x000075(%esi)
		je     _032a41_jump
		test   %bx,%bx
		jne    _032a4a_jump

	_032a41_jump:
		orb    $0x000008,_0ce6d1_data
		jmp    _032a51_jump

	_032a4a_jump:
		andb   $0x0000f7,_0ce6d1_data

	_032a51_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02dbdc_func

	_032a5d_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032a70_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _018ad0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cf890_data,%ax
		add    $0x000090,%eax
		mov    %ax,0x00003c(%edx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		pop    %edx
		pop    %ebx
		ret    



_032aa8_func:
		push   %edx
		mov    _09637d_data,%dl
		inc    %dl
		cmp    $0x000003,%dl
		jne    _032abe_jump
		mov    %dl,_09637e_data
		jmp    _032acd_jump

	_032abe_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    _096366_data(%eax),%al
		mov    %al,_09637e_data

	_032acd_jump:
		mov    %dl,_09637d_data
		pop    %edx
		ret    



_032bd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    _0cf8cc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032f95_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _032f95_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cf888_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c7e_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0ce6dc_data,%eax
		call   _01d818_func
		movzbl 0x000068(%ecx),%edi
		mov    0x000028(%ecx),%edx
		mov    _0ce6dc_data,%eax
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		movzbl 0x000069(%eax),%edi
		add    %ebx,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    0x000024(%eax),%edi
		mov    %edx,0x00002c(%eax)
		test   %edi,%edi
		jne    _032c63_jump
		call   _01f8e8_func

	_032c63_jump:
		mov    _0ce6dc_data,%eax
		mov    0x000081(%eax),%dh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dh
		mov    %dh,0x000081(%eax)

	_032c7e_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001c,%al
		jb     _032c9c_jump
		jbe    _032ddd_jump
		cmp    $0x00001d,%al
		jbe    _032d54_jump
		cmp    $0x000028,%al
		je     _032cac_jump
		jmp    _032f95_jump

	_032c9c_jump:
		cmp    $0x00001a,%al
		jb     _032f95_jump
		jbe    _032ddd_jump
		jmp    _032cc9_jump

	_032cac_jump:
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _032f95_jump
		mov    %esi,%eax
		call   _033dd8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032cc9_jump:
		mov    0x00002c(%ecx),%ebx
		mov    _0df746_data,%eax
		sub    $0x000008,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x00002c(%ecx)
		cmp    %ebx,%eax
		jle    _032ce1_jump
		mov    %eax,0x00002c(%ecx)

	_032ce1_jump:
		mov    _0cf888_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032d09_jump
		mov    _0ce6dc_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		movzbl 0x000069(%eax),%edi
		add    %ebp,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_032d09_jump:
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _032f95_jump
		mov    0x000050(%ecx),%dx
		dec    %dx
		mov    %dx,0x000050(%ecx)
		jne    _032d39_jump
		mov    $0x000028,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032d39_jump:
		mov    $0x00001c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d818_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032d54_jump:
		mov    0x00002c(%ecx),%ebp
		mov    _0df748_data,%eax
		add    $0x000006,%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00002c(%ecx)
		cmp    %ebp,%eax
		jge    _032d6c_jump
		mov    %eax,0x00002c(%ecx)

	_032d6c_jump:
		mov    _0cf888_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032d95_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		add    %eax,%edi
		mov    _0ce6dc_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_032d95_jump:
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _032dbb_jump
		mov    $0x00001a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d818_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032dbb_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _032f95_jump
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032ddd_jump:
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0df746_data,%di
		mov    0x000068(%ecx),%al
		add    %edi,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0ce67c_data,%bx
		mov    _0ce6b9_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0df74a_data,%di
		mov    0x000069(%ecx),%al
		add    %edi,%eax
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %eax,%edi
		imul   %eax,%edi
		movswl %bx,%edx
		imul   %edx,%edx
		test   %eax,%eax
		jge    _032e31_jump
		neg    %eax

	_032e31_jump:
		add    %edi,%edx
		cmp    $0x000028,%eax
		jl     _032e40_jump
		cmp    $0x000bb8,%edx
		jae    _032e44_jump

	_032e40_jump:
		mov    $0x000001,%ah
		jmp    _032e46_jump

	_032e44_jump:
		xor    %ah,%ah

	_032e46_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001a,%al
		jb     _032f95_jump
		jbe    _032e62_jump
		cmp    $0x00001c,%al
		je     _032f22_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e62_jump:
		test   %ah,%ah
		jne    _032eb0_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _032e78_jump
		cmpb   $0x000000,_0ce6bc_data
		je     _032eb0_jump

	_032e78_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edi,%eax,8)
		je     _032ec5_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _032ea3_jump
		neg    %eax

	_032ea3_jump:
		cmp    $0x00001e,%eax
		jge    _032ec5_jump
		cmp    $0x000bb8,%edx
		jae    _032ec5_jump

	_032eb0_jump:
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032ec5_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _032f95_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0df748_data,%edx
		mov    _09632a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    _0cf888_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _032f91_jump
		movzbl 0x000069(%ecx),%esi
		mov    _0ce6dc_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%esi
		sub    $0x000005,%esi
		mov    %esi,0x00002c(%eax)
		incw   0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f22_jump:
		test   %ah,%ah
		jne    _032f44_jump
		cmpb   $0x000002,_0ce6bd_data
		je     _032f44_jump
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f44_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _032f95_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0df746_data,%edx
		mov    _09632a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cf888_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _032f91_jump
		xor    %edx,%edx
		mov    0x00002c(%ecx),%eax
		mov    0x000069(%ecx),%dl
		add    %eax,%edx
		mov    _0ce6dc_data,%eax
		movzbl 0x000069(%eax),%esi
		sub    %esi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_032f91_jump:
		incw   0x000056(%ecx)

	_032f95_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_032f9c_switch:
		.long   _032fcc_case
		.long   _03306e_case
		.long   _03312f_case
		.long   _0331cb_case




_032fac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _09637e_data,%al
		cmp    $0x000003,%al
		ja     _0331dc_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_032f9c_switch(,%eax,4)

	_032fcc_case:
		mov    _0cf8ce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0331dc_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000050(%edx),%ax
		test   %ax,%ax
		jne    _033027_jump
		mov    $_096369_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _034094_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_09257c_data(,%eax,4)
		movb   $0x000001,_0cfa68_data
		call   _03f040_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033027_jump:
		cmp    $0x000001,%ax
		jne    _0331dc_jump
		mov    0x000024(%edx),%esi
		test   %esi,%esi
		jne    _0331dc_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_09257c_data(,%eax,4)
		mov    0x000081(%edx),%cl
		xor    %bh,%bh
		mov    %esi,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bh,_0cfa68_data
		mov    %cl,0x000081(%edx)
		call   _032aa8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03306e_case:
		mov    _0cf8d6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0331dc_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%edx
		add    %ecx,%edx
		mov    0x000050(%edx),%si
		test   %si,%si
		jne    _0330e5_jump
		mov    _0cf8c6_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000002,0x000050(%edx)
		cmp    $0xffffffff,%ebx
		je     _0330bc_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000002,0x000050(%ecx,%eax,4)

	_0330bc_jump:
		mov    $_09636e_data,%eax
		call   _034094_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_09257c_data(,%eax,4)
		movb   $0x000001,_0cfa68_data
		call   _03f0f4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0330e5_jump:
		cmp    $0x000001,%si
		jne    _0331dc_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0331dc_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_09257c_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0cfa68_data
		mov    %cl,0x000081(%edx)
		call   _032aa8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03312f_case:
		mov    _0cf8d4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0331dc_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000050(%edx),%bx
		test   %bx,%bx
		jne    _033189_jump
		mov    $_096373_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _034094_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_09257c_data(,%eax,4)
		movb   $0x000001,_0cfa68_data
		call   _03f2a0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033189_jump:
		cmp    $0x000001,%bx
		jne    _0331dc_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0331dc_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_09257c_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0cfa68_data
		mov    %cl,0x000081(%edx)
		call   _032aa8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0331cb_case:
		mov    $_096378_data,%eax
		call   _034094_func
		mov    %edx,%eax
		call   _033f28_func

	_0331dc_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0331e4_switch:
		.long   _033228_case
		.long   _033228_case
		.long   _033231_case
		.long   _03323a_case
		.long   _03324a_case
		.long   _033243_case




_0331fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03324a_case
		cmpb   $0x000027,0x00006c(%esi)
		jne    _03324a_case
		mov    _0cfa8d_data,%al
		cmp    $0x000005,%al
		ja     _03324a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0331e4_switch(,%eax,4)

	_033228_case:
		mov    %esi,%eax
		call   _033d28_func
		jmp    _03324a_case

	_033231_case:
		mov    %esi,%eax
		call   _033dd8_func
		jmp    _03324a_case

	_03323a_case:
		mov    %esi,%eax
		call   _033e5c_func
		jmp    _03324a_case

	_033243_case:
		mov    %esi,%eax
		call   _033f28_func

	_03324a_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0332b5_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _0332b5_jump
		cmpb   $0x000004,0x00006b(%esi)
		jne    _033267_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _033624_jump

	_033267_jump:
		cmpb   $0x000004,_0cfa8d_data
		jne    _03328b_jump
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _033624_jump
		mov    %esi,%eax
		call   _033f28_func
		jmp    _033624_jump

	_03328b_jump:
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _033624_jump
		mov    0x000081(%esi),%dh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%esi)
		jmp    _033624_jump

	_0332b5_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0334ec_jump
		mov    0x00006c(%esi),%cl
		cmp    $0x000008,%cl
		je     _0332e9_jump
		cmp    $0x00000a,%cl
		je     _0332e9_jump
		cmp    $0x00000c,%cl
		je     _0332e9_jump
		cmp    $0x00000e,%cl
		je     _0332e9_jump
		cmp    $0x000016,%cl
		je     _0332e9_jump
		cmp    $0x000017,%cl
		je     _0332e9_jump
		cmp    $0x000018,%cl
		jne    _0334ec_jump

	_0332e9_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _0334ec_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffffb,%edi
		add    %eax,%edx
		xor    %eax,%eax
		mov    %di,_0df744_data
		mov    %ax,_0df742_data
		mov    0x00006c(%esi),%al
		sub    $0x000080,%edx
		cmp    $0x00000e,%al
		jb     _03338b_jump
		jbe    _0333fa_jump
		cmp    $0x000017,%al
		jb     _03337a_jump
		jbe    _03345e_jump
		cmp    $0x000018,%al
		je     _0334a5_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03337a_jump:
		cmp    $0x000016,%al
		je     _033418_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03338b_jump:
		cmp    $0x00000a,%al
		jb     _03339e_jump
		jbe    _0333c1_jump
		cmp    $0x00000c,%al
		je     _0333dc_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03339e_jump:
		cmp    $0x000008,%al
		jne    _033624_jump
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %ebx,%ebx
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0333c1_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ecx,%ebx
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0333dc_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000002,%ebx
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0333fa_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000003,%ebx
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033418_jump:
		mov    $0x000002,%al
		mov    $0x000003,%ecx
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000012,%ebx
		mov    %al,_0df74c_data
		mov    $_096369_data,%eax
		mov    %edi,%edx
		call   _034094_func
		mov    %esi,%eax
		call   _033a18_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03345e_jump:
		mov    $0x000002,%ch
		mov    $_09636e_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000013,%ebx
		mov    %ch,_0df74c_data
		call   _034094_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033a18_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0334a5_jump:
		mov    $0x000002,%cl
		mov    $_096373_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000014,%ebx
		mov    %cl,_0df74c_data
		call   _034094_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033a18_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0334ec_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _0335df_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x00000f,%ch
		jne    _0335df_jump
		mov    0x00006b(%esi),%al
		test   %al,%al
		jne    _03355a_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		mov    0x000005(%edx,%eax,8),%al
		and    %ch,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _033624_jump
		mov    %esi,%eax
		call   _07b708_func
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x00000c,%dh
		mov    %dh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03355a_jump:
		cmp    $0x000016,%al
		jne    _033624_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %ecx,%ecx
		sub    $0x000060,%eax
		mov    %cx,_0df742_data
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0df744_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx
		call   _033a18_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0335df_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0335fb_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _0335fb_jump
		mov    %esi,%eax
		call   _032fac_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0335fb_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _033624_jump
		mov    0x00006c(%esi),%dh
		cmp    $0x00001a,%dh
		je     _03361d_jump
		cmp    $0x00001b,%dh
		je     _03361d_jump
		cmp    $0x00001c,%dh
		je     _03361d_jump
		cmp    $0x00001d,%dh
		je     _03361d_jump
		cmp    $0x000028,%dh
		jne    _033624_jump

	_03361d_jump:
		mov    %esi,%eax
		call   _032bd4_func

	_033624_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033630_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03366b_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000010,%dh
		je     _033645_jump
		cmp    $0x000011,%dh
		jne    _03366b_jump

	_033645_jump:
		cmpb   $0x000000,0x00007e(%eax)
		je     _03366b_jump
		mov    0x000076(%eax),%cl
		test   %cl,%cl
		je     _033659_jump
		mov    %cl,%ch
		dec    %ch
		mov    %ch,0x000076(%eax)

	_033659_jump:
		cmpb   $0x000000,0x000076(%eax)
		jne    _03366b_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01d818_func

	_03366b_jump:
		pop    %ecx
		pop    %ebx
		ret    



_033670_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0336c2_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _03368c_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d808_func

	_03368c_jump:
		cmpb   $0x000009,0x00006c(%ebx)
		jne    _03369e_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d808_func

	_03369e_jump:
		cmpb   $0x00000b,0x00006c(%ebx)
		jne    _0336b0_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01d808_func

	_0336b0_jump:
		cmpb   $0x00000d,0x00006c(%ebx)
		jne    _0336c2_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01d808_func

	_0336c2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0336c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _033966_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000005,%dl
		jne    _0336fb_jump
		cmpb   $0x000001,_0cfa76_data
		jne    _03388b_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _03388b_jump

	_0336fb_jump:
		cmp    $0x000004,%dl
		jne    _0337f9_jump
		mov    _0cf8ba_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %ecx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		mov    0x000056(%esi),%di
		add    %eax,%ecx
		cmp    $0x000001,%di
		jne    _0337a2_jump
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ecx)
		xor    %ebx,%ebx
		movb   $0x0000fe,0x000076(%ecx)
		call   _01d818_func
		mov    _0ce678_data,%ax
		movl   $0x000000,0x000028(%ecx)
		mov    %ax,0x00003c(%ecx)
		mov    _0ce67c_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x00002c(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f8e8_func
		xor    %ah,%ah
		movb   $0x000000,0x00007e(%ecx)
		mov    %ah,_0cfa88_data
		mov    %ah,_0cfa8b_data
		mov    %ah,_0cfa8a_data

	_0337a2_jump:
		mov    0x00003c(%ecx),%dx
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%ecx),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00003e(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0cfa88_data,%cl
		sub    %eax,%ebx
		cmp    $0x000001,%cl
		jne    _03388b_jump
		cmpb   $0x000019,_0cfa8a_data
		jne    _03388b_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _03388b_jump

	_0337f9_jump:
		movzbw _0ce6b8_data,%di
		mov    _0ce678_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000056(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _033860_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce67c_data,%cx
		mov    _0ce6b9_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _03388b_jump

	_033860_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ce6b9_data,%dl
		mov    _0ce6c4_data,%al
		sub    %eax,%edx
		mov    _0ce67c_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_03388b_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _033894_jump
		neg    %eax

	_033894_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03389f_jump
		neg    %eax

	_03389f_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		test   %dx,%dx
		jle    _0338d1_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_0338d1_jump:
		cmpb   $0x000000,_0cf9f7_data
		jne    _033966_jump
		mov    _0df742_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _0338fb_jump
		mov    $0x000001,%eax
		jg     _0338fb_jump
		neg    %eax

	_0338fb_jump:
		add    %ax,_0df744_data
		mov    _0df740_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03391e_jump
		mov    $0x000001,%eax
		jg     _03391e_jump
		neg    %eax

	_03391e_jump:
		mov    _0df742_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0df742_data
		mov    0x00002c(%esi),%dx
		mov    _0df742_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0df744_data,%di
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _033a18_func
		movb   $0x000000,0x000076(%esi)

	_033966_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_033970_switch:
		.long   _0339bd_case
		.long   _0339d8_case
		.long   _0339f1_case
		.long   _033a03_case




_033980_func:
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000076(%eax)
		je     _033a14_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _033998_jump
		cmpb   $0x000004,0x00006c(%eax)
		je     _03399f_jump

	_033998_jump:
		mov    $0x000001,%edx
		jmp    _0339a1_jump

	_03399f_jump:
		xor    %edx,%edx

	_0339a1_jump:
		test   %edx,%edx
		je     _033a14_jump
		movb   $0x000000,0x000076(%eax)
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		ja     _033a14_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_033970_switch(,%eax,4)

	_0339bd_case:
		mov    _0cf81b_data,%ch
		and    $0x0000e7,%ch
		mov    %ch,%al
		mov    %ch,_0cf81b_data
		or     $0x000008,%al
		mov    %al,_0cf81b_data
		pop    %edx
		pop    %ecx
		ret    

	_0339d8_case:
		mov    $_0ce650_data,%eax
		call   _07b628_func
		andb   $0x00009f,_0cf81b_data
		call   _05b0a4_func
		pop    %edx
		pop    %ecx
		ret    

	_0339f1_case:
		mov    $_0ce650_data,%eax
		call   _07b628_func
		call   _05b154_func
		pop    %edx
		pop    %ecx
		ret    

	_033a03_case:
		mov    $_0ce650_data,%eax
		call   _07b628_func
		andb   $0x0000fe,_0cf81a_data

	_033a14_jump:
		pop    %edx
		pop    %ecx
		ret    



_033a18_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%si
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx

	_033a42_jump:
		cmpw   $0x0000d7,0x000060(%ecx)
		jne    _033a54_jump
		cmp    0x000024(%ecx),%edx
		jne    _033a54_jump
		mov    $0x000001,%ebx

	_033a54_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %bx,%bx
		jne    _033a65_jump
		cmp    %si,%ax
		jl     _033a42_jump

	_033a65_jump:
		sub    $0x000084,%ecx
		test   %bx,%bx
		je     _033aae_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f8e8_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%bl
		jmp    _033b2e_jump

	_033aae_jump:
		mov    _0ccdf0_data,%eax
		xor    %edx,%edx
		xor    %edi,%edi

	_033ab7_jump:
		cmpw   $0x0000d7,0x000060(%eax)
		jne    _033acd_jump
		xor    %ecx,%ecx
		mov    0x00006b(%eax),%cl
		cmp    %dx,%cx
		jle    _033acd_jump
		mov    %ebx,%edi
		mov    %ecx,%edx

	_033acd_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _033ab7_jump
		movswl %di,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f8e8_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		mov    0x00000c(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_033b2e_jump:
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d818_func
		movb   $0x000000,0x00006b(%ecx)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_033b4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cf81b_data,%ah
		test   $0x000018,%ah
		jne    _033b66_jump
		test   $0x000060,%ah
		jne    _033b66_jump
		test   $0x000002,%ah
		je     _033bb8_jump

	_033b66_jump:
		mov    $_0ce650_data,%eax
		call   _07b628_func
		mov    _0cf81b_data,%cl
		test   $0x000018,%cl
		je     _033b86_jump
		mov    %cl,%ch
		or     $0x000018,%ch
		mov    %ch,_0cf81b_data

	_033b86_jump:
		testb  $0x000060,_0cf81b_data
		je     _033b94_jump
		call   _05b0a4_func

	_033b94_jump:
		testb  $0x000002,_0cf81b_data
		je     _033ba2_jump
		call   _05b154_func

	_033ba2_jump:
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%edx)

	_033bb8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033bbc_func:
		push   %edx
		mov    _0cf8cc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _033bfb_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0df744_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    _0df748_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)

	_033bfb_jump:
		pop    %edx
		ret    



_033c00_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0cf8cc_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _033cae_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0df744_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0df746_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		test   %dl,%dl
		je     _033cae_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0ce6dc_data,%eax
		call   _01d818_func
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%bl
		mov    _0ce6dc_data,%eax
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ebx
		lea    -0x000005(%ebx),%edx
		mov    0x000024(%eax),%ebx
		mov    %edx,0x00002c(%eax)
		test   %ebx,%ebx
		jne    _033c93_jump
		call   _01f8e8_func

	_033c93_jump:
		mov    _0ce6dc_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_033cae_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033cb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00002c(%eax),%ax
		mov    %ax,_0df74a_data
		mov    _0cf8a6_data,%ax
		sub    $0x0000b8,%eax
		mov    %ax,_0df748_data
		mov    _0cf8cc_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0df746_data
		cmp    $0xffffffff,%eax
		je     _033d21_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%cx
		mov    %eax,%edx
		add    %ecx,%edx
		xor    %eax,%eax
		sub    $0x0000b8,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		add    $0x000024,%edx
		mov    %dx,_0df748_data

	_033d21_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033d28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000001,_0cfa8d_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cf872_data
		mov    %dx,_0cf86e_data
		mov    _09257c_data(,%eax,4),%dl
		and    $0x00007f,%dl
		xor    %ebx,%ebx
		mov    %dl,_09257c_data(,%eax,4)
		mov    %ecx,%eax
		mov    %bx,0x000050(%ecx)
		mov    _0cf81a_data,%bl
		xor    %dh,%dh
		and    $0x0000fe,%bl
		mov    %dh,_0cfa68_data
		mov    %bl,_0cf81a_data
		call   _032a70_func
		mov    %ecx,%eax
		call   _033cb4_func
		mov    _0cf8cc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _033dc1_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		movw   $0x000003,0x000050(%edx,%eax,4)
		movw   $0x00001d,0x000056(%edx,%eax,4)

	_033dc1_jump:
		call   _033bbc_func
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033dd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		movb   $0x000002,_0cfa8d_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cf872_data
		mov    %bx,_0cf86e_data
		andb   $0x00007f,_09257c_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0cfa68_data
		call   _032a70_func
		mov    %edx,%eax
		call   _033cb4_func
		mov    $0x000001,%eax
		call   _033c00_func
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000050(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _0402c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000003,_0cfa8d_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cf872_data
		mov    %dx,_0cf86e_data
		andb   $0x00007f,_09257c_data(,%eax,4)
		xor    %dh,%dh
		mov    %ecx,%eax
		mov    %dh,_0cfa68_data
		call   _032a70_func
		mov    %ecx,%eax
		call   _033cb4_func
		xor    %eax,%eax
		call   _033c00_func
		movl   $0x000000,0x000028(%ecx)
		xor    %ebx,%ebx
		movl   $0x000001,0x000024(%ecx)
		mov    %bx,0x000040(%ecx)
		mov    %bx,0x000042(%ecx)
		mov    _0cf8a4_data,%edx
		mov    0x000028(%ecx),%eax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bl
		mov    0x000069(%ecx),%al
		or     $0x000004,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%ecx)
		sub    $0x000014,%edx
		mov    $0x000015,%ebx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		mov    %dx,0x00003e(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000050(%ecx)
		call   _01d818_func
		xor    %bh,%bh
		mov    _096366_data,%al
		mov    %bh,_09637d_data
		mov    %al,_09637e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033f28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movb   $0x000005,_0cfa8d_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cf872_data
		mov    %bx,_0cf86e_data
		andb   $0x00007f,_09257c_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0cfa68_data
		call   _032a70_func
		mov    %edx,%eax
		call   _033cb4_func
		xor    %eax,%eax
		call   _033c00_func
		testb  $0x000002,_0cf81b_data
		je     _033f9b_jump
		mov    $_0ce650_data,%eax
		call   _07b628_func
		call   _05b154_func

	_033f9b_jump:
		movl   $0x000000,0x000028(%edx)
		mov    $0xffffffc4,%esi
		movw   $0x000000,0x000050(%edx)
		mov    _0cf8a4_data,%ebx
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		xor    %edi,%edi
		sar    $0x000010,%ebx
		and    $0x0000fb,%ch
		mov    %si,_0cf8ca_data
		mov    %di,_0cf8c2_data
		mov    0x000028(%edx),%eax
		mov    %di,_0cf8c6_data
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		mov    %di,_0cf8c0_data
		mov    0x000069(%edx),%al
		mov    %ch,0x000081(%edx)
		sub    %eax,%ebx
		mov    $0x000001,%al
		sub    $0x000014,%ebx
		mov    %al,_0cfa76_data
		mov    _0cf81e_data,%ah
		mov    %ebx,0x00002c(%edx)
		or     $0x000080,%ah
		mov    %bx,0x00003e(%edx)
		mov    %ah,_0cf81e_data
		mov    %al,_0cfa89_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034024_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jae    _034089_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    _0df717_data(%eax),%bl
		test   %bl,%bl
		je     _034082_jump
		movb   $0x000004,0x00007e(%edx)
		mov    _0df718_data(%eax),%bx
		dec    %bx
		mov    %bx,_0df718_data(%eax)
		jne    _03408d_jump
		mov    $0x000064,%esi
		mov    _0df717_data(%eax),%bh
		mov    %si,_0df718_data(%eax)
		dec    %bh
		mov    %bh,_0df717_data(%eax)
		jne    _03408d_jump
		mov    %bh,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_034082_jump:
		mov    %bl,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_034089_jump:
		movb   $0x000000,0x00007e(%edx)

	_03408d_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_034094_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %dl,%dl

	_03409b_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   $0x00000a,%ebx,%eax
		mov    _0df717_data(%eax),%dh
		test   %dh,%dh
		jne    _0340d9_jump
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,_0df717_data(%eax)
		movw   $0x000064,_0df718_data(%eax)
		mov    _0df714_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		mov    %dh,0x00006b(%ebx,%eax,1)

	_0340d9_jump:
		inc    %dl
		cmp    $0x000005,%dl
		jb     _03409b_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0340f0_func:
		adc    %eax,(%eax)
		add    %al,(%eax)
		adc    %al,(%eax)
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		add    $0x000000,%al
		add    %al,(%eax)

	_034108_jump:
		mov    $0x000001,%eax
		call   _055498_func
		call   _01ad00_func
		call   _042134_func
		mov    $_0ce650_data,%eax
		mov    $_0ce650_data,%eax
		call   _0567ac_func
		call   _036bc4_func
		call   _041ea4_func
		test   %ax,%ax
		jne    _03415d_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _03415d_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _03415d_jump
		call   _042048_func
		test   %ax,%ax
		je     _034164_jump

	_03415d_jump:
		movb   $0x000001,_0cfa40_data

	_034164_jump:
		call   *_0cd13c_data
		xor    %eax,%eax
		mov    _0cfa40_data,%al
		ret    



_034174_func:
		push   %edx
		call   _01ad00_func
		call   _036644_func
		call   _01b79c_func
		call   _06a798_func
		call   _042134_func
		mov    _0cf824_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		je     _0341a6_jump
		cmpb   $0x000000,_0cfa5c_data
		je     _0341a8_jump

	_0341a6_jump:
		mov    $0x000001,%dl

	_0341a8_jump:
		xor    %eax,%eax
		mov    %dl,%al
		pop    %edx
		ret    



_0341b0_func:
		push   %ebx
		cmpw   $0x000000,_0cef52_data
		jne    _03423c_jump
		cmpb   $0x000001,_0cfa7a_data
		jne    _03423c_jump
		cmpb   $0x000000,_0cfa3c_data
		jne    _03423c_jump
		mov    $_0cd84c_data,%eax
		call   _07fba4_func
		mov    $_0cd84c_data,%eax
		call   _036610_func
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		call   _03cb04_func
		call   _01cffc_func
		call   _03ca8c_func
		call   _06a3ec_func
		mov    $_034174_func,%eax
		call   _03cb54_func
		call   _03cadc_func
		call   _06aaa8_func
		call   _01d028_func
		call   _071c10_func
		call   _03cd58_func
		mov    $_0cd84c_data,%eax
		mov    $0x000001,%ebx
		call   _07fba4_func
		mov    %bx,_0cf880_data

	_03423c_jump:
		pop    %ebx
		ret    



_034240_func:
		push   %edx
		push   %esi
		push   %edi
		call   _042134_func
		mov    _096380_data,%al
		mov    %al,_0cfa7d_data
		call   _069dcc_func
		mov    _0cfa7d_data,%dl
		mov    _095eb1_data,%ah
		mov    %dl,_096380_data
		test   %ah,%ah
		je     _034295_jump
		xor    %dl,%dl
		mov    %dl,_095eb1_data
		call   _016e9a_func
		call   _016e8a_func
		mov    $0x000001,%eax
		call   _023fdc_func
		call   _03452c_func
		call   _03b4d0_func
		jmp    _03429a_jump

	_034295_jump:
		call   _03452c_func

	_03429a_jump:
		call   _03452c_func
		cmpw   $0x000003,_0cf7a2_data
		jne    _0342b2_jump
		movw   $0x000001,_0cf776_data

	_0342b2_jump:
		cmpw   $0x000000,_0cf784_data
		jne    _0342c6_jump
		mov    _0cfa39_data,%dh
		test   %dh,%dh
		je     _0342cd_jump

	_0342c6_jump:
		mov    $0x000001,%edx
		jmp    _0342cf_jump

	_0342cd_jump:
		xor    %dl,%dl

	_0342cf_jump:
		cmpb   $0x000000,_0cfa39_data
		je     _03432d_jump
		cmpw   $0x000001,_0cf7a2_data
		jne    _034318_jump
		mov    _0cf7ba_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0cd794_data,%esi
		add    $_0cd798_data,%edi
		push   %edi

	_0342fd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034315_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0342fd_jump

	_034315_jump:
		pop    %edi
		jmp    _03432d_jump

	_034318_jump:
		mov    _0cf7ba_data,%edi
		sar    $0x000010,%edi
		mov    _0c0c04_data,%al
		mov    %al,_0cd794_data(,%edi,4)

	_03432d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_034334_func:
		push   %ebx
		push   %edx
		call   _042134_func
		call   _01cf94_func
		mov    _0df757_data,%al
		mov    %al,_0cfa7d_data
		call   _069944_func
		mov    _0cfa7d_data,%al
		mov    %al,_0df757_data
		cmpb   $0x000000,_095eb1_data
		je     _03438a_jump
		xor    %dl,%dl
		mov    %dl,_095eb1_data
		call   _016e9a_func
		call   _016e8a_func
		mov    $0x000001,%eax
		call   _023fdc_func
		call   _03452c_func
		call   _03b4d0_func
		jmp    _03438f_jump

	_03438a_jump:
		call   _03452c_func

	_03438f_jump:
		call   _042134_func
		mov    _0df756_data,%al
		mov    %al,_0cfa7d_data
		call   _069c1c_func
		mov    _0cfa7d_data,%al
		mov    %al,_0df756_data
		call   _06a0f4_func
		cmpw   $0x000001,_0cf7a2_data
		jne    _0343c6_jump
		cmpw   $0x000000,_0cf7bc_data
		jne    _0343e4_jump

	_0343c6_jump:
		cmpw   $0x000003,_0cf7a2_data
		jne    _034412_jump
		cmpw   $0x000000,_0cf788_data
		jne    _034412_jump
		cmpw   $0x000000,_0cf7bc_data
		je     _034412_jump

	_0343e4_jump:
		cmpw   $0x000000,_0cf784_data
		jne    _0343fd_jump
		call   _069d54_func
		mov    $_034240_func,%eax
		call   _03cb54_func

	_0343fd_jump:
		cmpb   $0x000000,_0cfa39_data
		jne    _034412_jump
		xor    %eax,%eax
		mov    _0cf7bc_data,%al
		call   _074400_func

	_034412_jump:
		cmpw   $0x000000,_0cf778_data
		je     _034421_jump
		call   _0698f0_func

	_034421_jump:
		mov    _0cd134_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0cf768_data,%ax
		inc    %edx
		mov    %bx,_0cf7a2_data
		mov    %edx,_0cd134_data
		cmp    %edx,%eax
		jg     _03445b_jump
		cmpw   $0x000000,_0cf776_data
		jne    _03445b_jump
		cmpb   $0x000000,_0cfa7a_data
		jne    _03445b_jump
		call   _035908_func

	_03445b_jump:
		cmpb   $0x000000,_0cfa7a_data
		jne    _034480_jump
		cmpw   $0x000000,_0cf776_data
		jne    _034480_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _034480_jump
		cmpb   $0x000000,_0cfa39_data
		je     _034488_jump

	_034480_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_034488_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_034490_func:
		push   %ebx
		push   %edx
		movb   $0x000001,_0951d0_data
		mov    $_0cd84c_data,%eax
		call   _0365e0_func
		mov    $_0c7c88_data,%eax
		xor    %edx,%edx
		call   _03cce4_func
		xor    %eax,%eax
		xor    %bl,%bl
		call   _023fdc_func
		call   _03ca8c_func
		call   _06980c_func
		call   _0698f0_func
		mov    %edx,_0cd134_data
		call   _069d54_func
		mov    $0x000001,%dl
		mov    $_034334_func,%eax
		mov    %bl,_096380_data
		mov    $0x000064,%ebx
		mov    %dl,_0df757_data
		mov    %dl,_0df756_data
		xor    %edx,%edx
		mov    %bx,_0cf794_data
		mov    %dx,_0cf78a_data
		mov    %dx,_0cf834_data
		mov    %dx,_0cf832_data
		call   _03cb54_func
		call   _03cadc_func
		call   _03cd58_func
		mov    $_0cd84c_data,%eax
		call   _07fba4_func
		pop    %edx
		pop    %ebx
		ret    



_03452c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    _0cf78a_data,%ax
		mov    _0cf794_data,%bx
		mov    $0x00001e,%edx
		cmp    %bx,%ax
		jge    _03455e_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _03455e_jump
		incw   _0cf78a_data
		jmp    _03457f_jump

	_03455e_jump:
		cmpb   $0x000000,_0cfa7d_data
		jne    _034576_jump
		mov    _0cf79a_data,%ax
		inc    %eax
		mov    %ax,_0cf78a_data
		jmp    _03457f_jump

	_034576_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf78a_data

	_03457f_jump:
		mov    _0cf772_data,%di
		cmp    %di,%dx
		jle    _034597_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cf772_data
		jmp    _03459f_jump

	_034597_jump:
		xor    %eax,%eax
		mov    %ax,_0cf772_data

	_03459f_jump:
		call   _03cdf8_func
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf7aa_data,%ebx
		mov    _0c2cc8_data,%eax
		sar    $0x000010,%ebx
		call   _01a3f0_func
		cmpb   $0x000001,_0cfa35_data
		jne    _0345e7_jump
		mov    $0x000035,%edx
		mov    $0x000091,%esi
		mov    $0x0000ff,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000c(%esp)
		jmp    _034600_jump

	_0345e7_jump:
		mov    $0x000035,%edx
		mov    $0x00009f,%ebx
		mov    $0x000109,%ecx
		mov    %bx,0x000008(%esp)
		mov    %cx,0x00000c(%esp)

	_034600_jump:
		cmpw   $0x000001,_0cf7aa_data
		jne    _034638_jump
		mov    $_0cbd08_data,%edi
		mov    _0c2ccc_data,%esi
		push   %edi

	_034616_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03462e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034616_jump

	_03462e_jump:
		pop    %edi
		mov    %dx,_0cbdd8_data
		jmp    _034655_jump

	_034638_jump:
		push   $0x000005
		mov    $0x000001,%ecx
		mov    _0cf7b6_data,%ebx
		mov    _0c2ccc_data,%eax
		movswl %dx,%edx
		sar    $0x000010,%ebx
		call   _01a3f0_func

	_034655_jump:
		cmpw   $0x000002,_0cf7aa_data
		jne    _034690_jump
		mov    $_0cbd08_data,%edi
		mov    _0c2cd0_data,%esi
		push   %edi

	_03466b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034683_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03466b_jump

	_034683_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		mov    %ax,_0cbdd8_data
		jmp    _0346b1_jump

	_034690_jump:
		push   $0x000005
		mov    0x00000a(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cf7b6_data,%ebx
		mov    _0c2cd0_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a3f0_func

	_0346b1_jump:
		cmpw   $0x000003,_0cf7aa_data
		jne    _0346ec_jump
		mov    $_0cbd08_data,%edi
		mov    _0c2cd4_data,%esi
		push   %edi

	_0346c7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0346df_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0346c7_jump

	_0346df_jump:
		pop    %edi
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cbdd8_data
		jmp    _03470d_jump

	_0346ec_jump:
		push   $0x000005
		mov    0x00000e(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cf7b6_data,%ebx
		mov    _0c2cd4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a3f0_func

	_03470d_jump:
		mov    $_0cbd08_data,%eax
		mov    $0x000001,%edx
		mov    $0x000001,%ebp
		call   _01f21c_func
		mov    $_0cbd08_data,%eax
		xor    %ecx,%ecx
		call   _04f800_func
		mov    %cx,0x000014(%esp)
		jmp    _034a5d_jump

	_034737_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0c0c04_data,%edx
		add    $_0cd798_data,%eax
		call   _07fc40_func
		test   %eax,%eax
		je     _034a1c_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x000010(%esp)
		jmp    _0349cb_jump

	_03476d_jump:
		mov    0x000004(%esp),%edi
		cmp    _0cf7c0_data,%di
		jne    _034795_jump
		mov    _0cf7bc_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _034795_jump
		cmpw   $0x000000,_0cf782_data
		jne    _03487b_jump

	_034795_jump:
		mov    0x000012(%esp),%eax
		mov    $_0cd798_data,%esi
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    0x000002(%esp),%edx
		shl    $0x000002,%eax
		xor    %ch,%ch
		add    %eax,%esi
		sar    $0x000010,%edx
		push   %edi

	_0347b2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0347ca_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0347b2_jump

	_0347ca_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ch,(%esp,%edx,1)
		imul   _0cf7b6_data,%ax
		mov    _0cf7b4_data,%bx
		mov    0x000014(%esp),%esi
		add    $0x000017,%ebx
		imul   %esi,%ebx
		mov    _0cf7c4_data,%cx
		mov    _0cf76e_data,%di
		add    %ecx,%ebx
		mov    -0x000001(%esp,%edx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _03483b_jump
		mov    _0cf7d8_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cf7d6_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cf7da_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ebx
		push   %edx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %ax,%edx
		mov    $_0c0c08_data,%eax
		jmp    _0349b3_jump

	_03483b_jump:
		cmp    $0x000020,%cl
		jne    _034859_jump
		push   $0x000002
		movswl %bx,%ebx
		movswl %ax,%edx
		mov    %ebp,%ecx
		mov    $_0c0c0d_data,%eax
		call   _01a3f0_func
		jmp    _0349b8_jump

	_034859_jump:
		mov    %esp,%esi
		movswl %bx,%ebx
		cwtl   
		xor    %ecx,%ecx
		dec    %edx
		mov    _0cfa48_data,%cl
		add    %edx,%esi
		push   %ecx
		mov    %eax,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01a3f0_func
		jmp    _0349b8_jump

	_03487b_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_034880_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034898_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034880_jump

	_034898_jump:
		pop    %edi
		mov    0x000002(%esp),%eax
		mov    $0x001000,%esi
		mov    _0cf7cc_data,%di
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %si,_0cf7d8_data
		mov    %dl,(%esp,%eax,1)
		cmp    $0x000200,%di
		jl     _0348c7_jump
		xor    %eax,%eax
		mov    %ax,_0cf7cc_data

	_0348c7_jump:
		mov    _0cf7cc_data,%ax
		inc    %ah
		cwtl   
		call   _05dfc0_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000005,%eax
		mov    %eax,%edx
		mov    _0cf7ca_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		shl    $0x000003,%eax
		mov    _0cf7b6_data,%cx
		mov    %ax,_0cf7da_data
		mov    0x000010(%esp),%eax
		imul   %ecx,%eax
		mov    _0cf7cc_data,%bx
		add    %edx,%ebx
		mov    _0cf7b4_data,%dx
		mov    0x000014(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    _0cf76e_data,%di
		mov    %bx,_0cf7cc_data
		mov    0x000002(%esp),%ebx
		mov    _0cf7c4_data,%cx
		sar    $0x000010,%ebx
		add    %ecx,%edx
		mov    -0x000001(%esp,%ebx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _034977_jump
		mov    _0cf7d8_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cf7d6_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cf7da_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0c0c08_data,%eax
		jmp    _0349b3_jump

	_034977_jump:
		mov    _0cf7d8_data,%ecx
		inc    %edx
		sar    $0x000010,%ecx
		inc    %eax
		push   %ecx
		mov    _0cf7d6_data,%ecx
		dec    %ebx
		sar    $0x000010,%ecx
		movswl %dx,%edx
		push   %ecx
		mov    _0cf7da_data,%ecx
		movswl %ax,%esi
		sar    $0x000010,%ecx
		lea    0x000008(%esp),%eax
		push   %ecx
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    _0cfa48_data,%cl
		mov    %edx,%ebx
		push   %ecx
		mov    %esi,%edx
		mov    %ebp,%ecx

	_0349b3_jump:
		call   _01a68c_func

	_0349b8_jump:
		mov    0x000010(%esp),%esi
		mov    0x000004(%esp),%edi
		inc    %esi
		inc    %edi
		mov    %esi,0x000010(%esp)
		mov    %di,0x000004(%esp)

	_0349cb_jump:
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    $_0cd798_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _03476d_jump
		mov    _0cf7b6_data,%ax
		add    $0x00000b,%eax
		imul   $0x000003,%eax,%eax
		add    _0cf76e_data,%ax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01b0e0_func
		jmp    _034a58_jump

	_034a1c_jump:
		mov    _0cf7b4_data,%ax
		add    $0x000017,%eax
		imul   %esi,%eax
		mov    $0x000001,%cl
		push   $0x000002
		mov    _0cf7c4_data,%dx
		mov    %cl,_0951d0_data
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    _0cf76c_data,%edx
		movswl %ax,%ebx
		mov    _0c2db4_data,%eax
		sar    $0x000010,%edx
		call   _01a3f0_func

	_034a58_jump:
		incw   0x000014(%esp)

	_034a5d_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%esi
		mov    _0cfa3d_data,%al
		cmp    %si,%ax
		jg     _034737_jump
		call   _01b424_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034a80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    $0x000006,%ecx
		mov    %esp,%edi
		mov    $_0340f0_func,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		call   _042134_func
		call   _036ce8_func
		xor    %eax,%eax
		mov    $0x000064,%ebx
		mov    _0cfa48_data,%al
		mov    %ebx,%edx
		push   %eax
		xor    %ecx,%ecx
		mov    $_0c0c10_data,%eax
		call   _01a3f0_func
		mov    $0x00000a,%ebx
		mov    _0df74e_data,%eax
		lea    0x000018(%esp),%edx
		sar    $0x000010,%eax
		call   _081256_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cfa48_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000c8,%edx
		lea    0x00001c(%esp),%eax
		call   _01a3f0_func
		call   _041d54_func
		test   %ax,%ax
		je     _034b0b_jump
		cmpw   $0x000000,_0cf8f4_data
		jne    _034b0b_jump
		incw   _0df750_data
		jmp    _034b26_jump

	_034b0b_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _034b26_jump
		cmpw   $0x000000,_0cf8f4_data
		jne    _034b26_jump
		decw   _0df750_data

	_034b26_jump:
		mov    _0cf838_data,%eax
		sar    $0x000010,%eax
		mov    _0df74e_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		cmp    -0x000004(%esp,%eax,1),%edx
		jle    _034b4b_jump
		mov    -0x000004(%esp,%eax,1),%ax
		mov    %ax,_0df750_data

	_034b4b_jump:
		cmpw   $0x000001,_0df750_data
		jge    _034b5e_jump
		movw   $0x000001,_0df750_data

	_034b5e_jump:
		mov    _0cf8f4_data,%dx
		inc    %edx
		mov    %dx,_0cf8f4_data
		cmp    $0x000004,%dx
		jl     _034b7c_jump
		xor    %ecx,%ecx
		mov    %cx,_0cf8f4_data

	_034b7c_jump:
		call   _041ea4_func
		test   %ax,%ax
		jne    _034ba4_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _034ba4_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _034ba4_jump
		call   _042048_func
		test   %ax,%ax
		je     _034ba9_jump

	_034ba4_jump:
		mov    $0x000001,%eax

	_034ba9_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034bb4_func:
		push   %edx
		mov    %ax,_0df750_data
		xor    %edx,%edx
		mov    $_0cd84c_data,%eax
		mov    %dx,_0cf8f4_data
		mov    $0x000032,%edx
		call   _047d3c_func
		mov    $_0c7088_data,%eax
		call   _03cce4_func
		call   _03ca8c_func
		mov    $_034a80_func,%eax
		call   _03cb54_func
		call   _03cadc_func
		call   _03cd58_func
		mov    _0df750_data,%ax
		pop    %edx
		ret    



_034d2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		call   _068208_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _0161fa_func
		cmpb   $0x000001,_0cfa2d_data
		je     _034e2e_jump
		cmpb   $0x000000,_0cc650_data
		je     _034d8f_jump
		mov    _0cc720_data,%ebx
		mov    _0cc71e_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc727_data,%al
		mov    _0cc724_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc650_data,%eax
		call   _01a3f0_func

	_034d8f_jump:
		cmpb   $0x000000,_0cc578_data
		je     _034dc4_jump
		mov    _0cc648_data,%ebx
		mov    _0cc646_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc64f_data,%al
		mov    _0cc64c_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc578_data,%eax
		call   _01a3f0_func

	_034dc4_jump:
		cmpb   $0x000000,_0cc800_data
		je     _034df9_jump
		mov    _0cc8d0_data,%ebx
		mov    _0cc8ce_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc8d7_data,%al
		mov    _0cc8d4_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc800_data,%eax
		call   _01a3f0_func

	_034df9_jump:
		cmpb   $0x000000,_0cc728_data
		je     _034e2e_jump
		mov    _0cc7f8_data,%ebx
		mov    _0cc7f6_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cc7ff_data,%al
		mov    _0cc7fc_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cc728_data,%eax
		call   _01a3f0_func

	_034e2e_jump:
		cmpb   $0x000000,_0cfa2d_data
		je     _03501c_jump
		mov    _0cd0cc_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jle    _034f29_jump
		mov    $_0ceef8_data,%eax
		inc    %eax
		mov    %ebp,0x000014(%esp)
		mov    %eax,0x000008(%esp)

	_034e59_jump:
		mov    _0ceef8_data(%ebp),%ch
		cmp    $0x00002f,%ch
		je     _034e69_jump
		cmp    $0x000020,%ch
		jne    _034e6d_jump

	_034e69_jump:
		xor    %ebx,%ebx
		jmp    _034e7c_jump

	_034e6d_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    %ch,%al
		call   _01efb4_func
		mov    %eax,%ebx

	_034e7c_jump:
		test   %ebx,%ebx
		je     _034f06_jump
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0cd094_data,%al
		call   _01eeb8_func
		add    $0x000029,%ebx
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    0x000014(%esp),%ecx
		mov    _0cedc8_data,%ebx
		mov    _0c23b0_data(%ecx),%ecx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sar    $0x000004,%ecx
		mov    0x000006(%eax),%bl
		sub    %ebx,%ecx
		mov    0x000014(%esp),%ebx
		mov    _0c25b8_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ebx
		mov    %ebx,(%esp)
		xor    %bh,%bh
		mov    0x000006(%eax),%bl
		movswl %cx,%edi
		shl    $0x000008,%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0cedcc_data,%esi
		mov    %dx,%cx
		mov    _0cd7b8_data,%edx
		mov    %edi,%ebx
		mov    %edx,0x000010(%esp)
		mov    (%eax),%edx
		mov    0x000010(%esp),%edi
		add    %edx,%esi
		xor    %edx,%edx
		mov    (%esp),%eax
		mov    _0cd0a8_data,%dl
		call   *_0cd0f8_data

	_034f06_jump:
		mov    0x000008(%esp),%ebx
		mov    0x000014(%esp),%ecx
		mov    _0cd0cc_data,%esi
		inc    %ebp
		inc    %ebx
		add    $0x000004,%ecx
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000014(%esp)
		cmp    %esi,%ebp
		jl     _034e59_jump

	_034f29_jump:
		mov    _0cd0d0_data,%edi
		xor    %ebp,%ebp
		test   %edi,%edi
		jle    _03501c_jump
		mov    $_0cef16_data,%eax
		inc    %eax
		mov    %ebp,0x00000c(%esp)
		mov    %eax,0x000004(%esp)

	_034f47_jump:
		mov    _0cef16_data(%ebp),%ah
		cmp    $0x00002f,%ah
		je     _034f57_jump
		cmp    $0x000020,%ah
		jne    _034f5b_jump

	_034f57_jump:
		xor    %ebx,%ebx
		jmp    _034f6e_jump

	_034f5b_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    _0cef16_data(%ebp),%al
		call   _01efb4_func
		mov    %eax,%ebx

	_034f6e_jump:
		test   %ebx,%ebx
		je     _034ff9_jump
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0cd08c_data,%al
		call   _01eeb8_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    0x00000c(%esp),%ecx
		mov    _0ce6e0_data,%ebx
		mov    _0c2680_data(%ecx),%ecx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sar    $0x000004,%ecx
		mov    0x000006(%eax),%bl
		sub    %ebx,%ecx
		movswl %cx,%ebx
		mov    %ebx,0x000010(%esp)
		mov    0x00000c(%esp),%ebx
		mov    _0c24f0_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ecx
		xor    %bh,%bh
		mov    0x000006(%eax),%bl
		shl    $0x000008,%ebx
		add    %ebx,%edx
		mov    _0cd7b8_data,%edi
		mov    _0ce6e4_data,%ebx
		and    $0x00ffff,%edx
		mov    (%eax),%esi
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0cd090_data,%al
		mov    0x000010(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    %ecx,%eax
		mov    %edx,%ecx
		mov    0x000010(%esp),%edx
		call   *_0cd0f8_data

	_034ff9_jump:
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    _0cd0d0_data,%esi
		inc    %ebp
		inc    %ebx
		add    $0x000004,%ecx
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _034f47_jump

	_03501c_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035028_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _037528_func
		cmpb   $0x000000,_0cfa4b_data
		je     _035048_jump
		xor    %esi,%esi
		mov    _0cf7ee_data,%si
		add    %edx,%esi

	_035048_jump:
		xor    %dl,%dl
		mov    _0cd138_data,%edi
		mov    %dl,_0951d0_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0cd130_data,%eax
		mov    %eax,_0cd7b8_data
		call   _069078_func
		call   _06947c_func
		call   _043dbc_func
		mov    $_0ce650_data,%eax
		call   _06799c_func
		mov    _0cd138_data,%edx
		push   %edx
		mov    _0cd0ec_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cd130_data,%ebx
		mov    _0cd0c4_data,%edi
		push   %ebx
		mov    _0cd0ec_data,%ebx
		mov    _0cd0c0_data,%edx
		mov    %eax,%ecx
		mov    %edi,%eax
		call   _042e1c_func
		mov    _0cd138_data,%eax
		mov    %eax,_0cd7b8_data
		call   _034d2c_func
		call   _042134_func
		call   _01cf94_func
		call   _036bf8_func
		cmpb   $0x000000,_0cfa40_data
		je     _035100_jump
		mov    $0x00004d,%eax
		call   _072960_func

	_035100_jump:
		mov    _0cf892_data,%dx
		test   %dx,%dx
		jne    _03511e_jump
		cmpb   $0x000000,_0cfa40_data
		jne    _03511e_jump
		call   _026a30_func
		test   %al,%al
		je     _035123_jump

	_03511e_jump:
		mov    $0x000001,%edx

	_035123_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _035141_jump
		mov    %esi,%ebx
		call   _016f5d_func
		test   %ecx,%ecx
		jne    _035141_jump
		call   _069078_func
		call   _06947c_func

	_035141_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03514c_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _06bbe8_func
		call   _0372f8_func
		call   _01cee0_func
		call   _03cb04_func
		xor    %eax,%eax
		mov    _0cf880_data,%al
		xor    %edx,%edx
		call   _059948_func
		call   _042134_func
		mov    _0cfa36_data,%ah
		mov    %edx,_0cd8c0_data
		test   %ah,%ah
		jne    _0351ba_jump
		mov    $0x000030,%edx
		mov    $_0cd84c_data,%eax
		call   _047d3c_func
		mov    _0cd7ec_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0cf760_data
		mov    _0cf7e2_data,%ax
		mov    %dl,_0cfa45_data
		mov    %ax,_0cf75e_data
		call   _0678e8_func

	_0351ba_jump:
		mov    $_0c7088_data,%eax
		call   _03cce4_func
		call   _03ca8c_func
		call   _068cb8_func
		cmpw   $0x000000,_0cf834_data
		jne    _03522b_jump
		cmpw   $0x000000,_0cf832_data
		jne    _03522b_jump
		mov    _0cf870_data,%eax
		mov    _0cf86c_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cf852_data,%edx
		mov    %ax,_0cf89e_data
		mov    _0cf85c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,_0cf8a6_data
		call   _043038_func

	_03522b_jump:
		cmpb   $0x000000,_0cfa36_data
		jne    _035243_jump
		call   _036150_func
		mov    $_035028_func,%eax
		call   _03cb54_func

	_035243_jump:
		cmpb   $0x000000,_0cfa2c_data
		je     _03527d_jump
		cmpw   $0x000003,_0cf83a_data
		jle    _03527d_jump
		mov    $0x000001,%bh
		mov    $0x000001,%esi
		mov    %bh,_0cfa74_data
		mov    %si,_0cf892_data
		mov    %si,_0cf880_data
		mov    %bh,_0cfa7a_data
		mov    %bh,_0cfa40_data

	_03527d_jump:
		cmpb   $0x000000,_0cfa40_data
		je     _0352d7_jump
		movb   $0x000001,_0cfa7a_data
		xor    %eax,%eax
		mov    %ax,_0cf7bc_data
		mov    _0cf83a_data,%al
		mov    $0x000004,%dl
		mov    %al,_0cfa60_data
		mov    _0cf88c_data,%ax
		mov    %dl,_0cfa37_data
		mov    %ax,_0cf83a_data
		mov    _0cf87c_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf82e_data
		mov    $0x00004d,%eax
		mov    %dx,_0cf88c_data
		call   _072960_func
		jmp    _035360_jump

	_0352d7_jump:
		xor    %edx,%edx

	_0352d9_jump:
		call   _041ea4_func
		test   %ax,%ax
		jne    _035301_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _035301_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _035301_jump
		call   _042048_func
		test   %ax,%ax
		je     _035310_jump

	_035301_jump:
		cmp    _0cfa36_data,%dl
		jne    _035310_jump
		call   _042134_func
		jmp    _0352d9_jump

	_035310_jump:
		call   _0695dc_func
		call   _026a30_func
		test   %al,%al
		jne    _035343_jump
		cmpb   $0x000000,_0cfa61_data
		je     _035343_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _035343_jump
		mov    _0cf82c_data,%eax
		sar    $0x000010,%eax
		call   _034bb4_func
		mov    %ax,_0cf82e_data

	_035343_jump:
		cmpb   $0x000000,_0cfa36_data
		jne    _035360_jump
		mov    $0x000045,%eax
		call   _072960_func
		mov    $0x000005,%eax
		call   _03db24_func

	_035360_jump:
		call   _069570_func
		call   _01d028_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_035370_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0cfa58_data,%bl
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		mov    _0cc578_data(%eax),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     _0353c1_jump

	_035398_jump:
		xor    %eax,%eax
		mov    _0cfa58_data,%al
		inc    %eax
		cmp    %eax,%ebx
		ja     _0353c1_jump
		mov    $_0cc578_data,%eax
		add    %edx,%eax
		inc    %ebx
		call   _01abe0_func
		mov    _0cc650_data(%edx),%ch
		add    $0x0000d8,%edx
		test   %ch,%ch
		jne    _035398_jump

	_0353c1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0353c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _042134_func
		call   _03cdf8_func
		call   _035370_func
		mov    _0cf824_data,%dx
		inc    %edx
		mov    %dx,_0cf824_data
		cmp    $0x00003c,%dx
		jne    _035408_jump
		mov    _0cf826_data,%si
		xor    %ecx,%ecx
		dec    %esi
		mov    %cx,_0cf824_data
		mov    %si,_0cf826_data

	_035408_jump:
		call   _03715c_func
		test   %al,%al
		jne    _03541a_jump
		call   _0371a4_func
		test   %al,%al
		je     _035424_jump

	_03541a_jump:
		cmpw   $0x000003,_0cf826_data
		jle    _03542e_jump

	_035424_jump:
		cmpw   $0x000000,_0cf826_data
		jg     _035435_jump

	_03542e_jump:
		mov    $0x000001,%eax
		jmp    _035437_jump

	_035435_jump:
		xor    %eax,%eax

	_035437_jump:
		mov    %eax,%ebx
		test   %ax,%ax
		je     _035484_jump
		xor    %edx,%edx
		mov    _0cfa58_data,%dl
		add    $0x000002,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cc578_data(,%eax,8)
		jne    _03546a_jump
		movb   $0x00000a,_0cfa58_data
		jmp    _035484_jump

	_03546a_jump:
		movw   $0x000005,_0cf826_data
		mov    _0cfa58_data,%dh
		add    $0x000002,%dh
		xor    %ebx,%ebx
		mov    %dh,_0cfa58_data

	_035484_jump:
		test   %bx,%bx
		je     _03549c_jump
		cmpb   $0x00000a,_0cfa58_data
		jne    _03549c_jump
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03549c_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0354a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _073138_func
		mov    $0x000001,%edx
		lea    0x000004(%esp),%ecx
		xor    %ebx,%ebx
		mov    %dx,_0cf742_data
		mov    %bx,_0cf740_data
		call   _03cadc_func
		mov    %esp,%edx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _0161bd_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _0161fa_func
		xor    %ah,%ah
		mov    %ah,_0cfa47_data
		mov    $_0c5568_data,%eax
		call   _03cce4_func
		call   _03cd88_func
		mov    _095e2c_data,%dl
		xor    %esi,%esi
		cmp    $0x000001,%dl
		jne    _035525_jump
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		mov    $0x000001,%esi
		call   _03d9e4_func

	_035525_jump:
		call   _03ca8c_func
		call   _06abec_func
		cmpb   $0x000000,_0cfa17_data
		je     _035548_jump
		cmpb   $0x000000,_0cfa35_data
		jne    _035548_jump
		xor    %eax,%eax
		call   _07319c_jump

	_035548_jump:
		mov    $_0353c8_func,%eax
		call   _03cb54_func
		cmpb   $0x000000,_0cfa17_data
		je     _035569_jump
		cmpb   $0x000000,_0cfa35_data
		jne    _035569_jump
		call   _03efa4_func

	_035569_jump:
		call   _03cadc_func
		xor    %ch,%ch
		call   _03cb04_func
		mov    %ch,_0cfa44_data
		mov    %ch,_0cfa40_data
		test   %esi,%esi
		je     _035591_jump
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d8ac_func

	_035591_jump:
		call   _03cd58_func
		call   _03cdd8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _0161fa_func
		call   _03ca8c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0355bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0cfa34_data,%edi
		lea    0x000000(,%edi,4),%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		jmp    _035608_jump

	_0355d6_jump:
		mov    _0cd144_data(%esi),%ebx
		mov    _0cd142_data(%esi),%edx
		add    $0x00000c,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0cd13e_data(%esi),%al
		mov    _0cd13c_data(%esi),%cl
		push   %eax
		mov    _0cd134_data(%esi),%eax
		inc    %edi
		call   _01a3f0_func

	_035608_jump:
		xor    %eax,%eax
		mov    _0cfa3a_data,%al
		cmp    %eax,%edi
		jbe    _0355d6_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03561c_func:
		push   %edx
		call   _042134_func
		call   _01ceec_func
		call   _06b000_func
		call   _03cdf8_func
		call   _0355bc_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cfa40_data,%dl
		mov    %ah,_0cfa40_data
		call   _03715c_func
		test   %al,%al
		jne    _035658_jump
		call   _037280_func
		test   %al,%al
		je     _035666_jump

	_035658_jump:
		movb   $0x000001,_0cfa40_data
		movb   $0x000007,_0cfa47_data

	_035666_jump:
		cmpb   $0x000000,_0cfa40_data
		jne    _035674_jump
		test   %dx,%dx
		je     _03567b_jump

	_035674_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03567b_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0356b8_func:
		push   %edx
		call   _01d028_func
		call   _06af40_func
		cmpb   $0x000007,_0cfa47_data
		ja     _03571d_jump

	_0356cc_jump:
		xor    %eax,%eax
		mov    _0cfa47_data,%al
		imul   $0x000300,%eax,%eax
		add    $_0c5568_data,%eax
		call   _03cce4_func
		call   _03cd88_func
		call   _03ca8c_func
		mov    $_03561c_func,%eax
		xor    %dl,%dl
		call   _03cb54_func
		call   _03cadc_func
		mov    %dl,_0cfa40_data
		incb   _0cfa47_data
		call   _03cd58_func
		call   _03cdd8_func
		cmpb   $0x000007,_0cfa47_data
		jbe    _0356cc_jump

	_03571d_jump:
		call   _01d028_func
		call   _03ca8c_func
		pop    %edx
		ret    



_03572c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa47_data,%bh
		call   _01d028_func
		mov    $_0c7c88_data,%eax
		mov    $0x000001,%bl
		call   _03cce4_func
		xor    %edx,%edx
		xor    %cl,%cl
		mov    %bl,_0cfa19_data
		call   _06af40_func
		mov    _0cfa47_data,%bh
		mov    %cl,_0cfa19_data
		cmp    $0x000007,%bh
		ja     _0357c4_jump
		xor    %ch,%ch

	_035768_jump:
		call   _016f78_func
		call   _016e9a_func
		call   _016e8a_func
		cmp    _0cfa4b_data,%cl
		je     _035786_jump
		call   _016efd_func
		mov    %eax,%edx

	_035786_jump:
		test   %bl,%bl
		je     _03579a_jump
		call   _03ca64_func
		cmp    _0cf8da_data,%cx
		jne    _03579a_jump
		mov    %cl,%bl

	_03579a_jump:
		call   _03b4d0_func
		mov    %edx,%eax
		call   _03561c_func
		test   %ax,%ax
		je     _035768_jump
		mov    _0cfa47_data,%bh
		inc    %bh
		mov    %cl,_0cfa40_data
		mov    %bh,_0cfa47_data
		cmp    $0x000007,%bh
		jbe    _035768_jump

	_0357c4_jump:
		call   _03cadc_func
		call   _03cd58_func
		call   _01d028_func
		call   _03ca8c_func
		mov    _0cfa47_data,%bh
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0357e4_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000004,%ebx
		mov    %ah,_0cfa47_data
		mov    $_0c5568_data,%eax
		xor    %edx,%edx
		call   _03cce4_func
		call   _03cd88_func
		call   _03ca8c_func
		mov    %dx,_0cf824_data
		xor    %dl,%dl
		mov    %bx,_0cf826_data
		mov    %dl,_0cfa58_data
		call   _01ef80_func
		mov    $_0353c8_func,%eax
		mov    $_0cd84c_data,%edx
		call   _03cb54_func
		mov    $_0cd880_data,%eax
		call   _03681c_func
		call   _03cadc_func
		call   _03cd58_func
		call   _03cdd8_func
		pop    %edx
		pop    %ebx
		ret    



_035878_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cfa46_data,%ah
		mov    %edx,_0ce6d8_data
		mov    %edx,_0ce6d4_data
		test   %ah,%ah
		je     _0358fa_jump
		cmpw   $0x000001,_0cf82e_data
		jle    _0358ba_jump
		cmpb   $0x000046,_095e6c_data
		je     _0358ba_jump
		mov    $0x000015,%ebx
		mov    $_0c0c18_data,%edx
		mov    $_0ccfdc_data,%eax
		call   _03b4a8_func

	_0358ba_jump:
		mov    $0x000004,%ebx
		mov    $0x000006,%ecx
		mov    $_0cd84c_data,%eax
		mov    %bx,_0cf87c_data
		mov    %cx,_0cf88c_data
		call   _07fba4_func
		mov    $_0cd880_data,%eax
		call   _07fb90_func
		mov    $_0cd84c_data,%eax
		call   _036788_func
		call   _0357e4_func
		call   _0356b8_func

	_0358fa_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa40_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035908_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03cadc_func
		cmpb   $0x000001,_095e2d_data
		jne    _035939_jump
		mov    _0cf768_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000005,_095e10_data(%eax)
		jne    _035939_jump
		cmpw   $0x00000a,_095e1c_data(%eax)
		je     _03596a_jump

	_035939_jump:
		cmpb   $0x000000,_095e2d_data
		jne    _035986_jump
		cmpw   $0x000000,_095e6a_data
		je     _035986_jump
		mov    _0cf768_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000001,_095e10_data(%eax)
		jne    _035986_jump
		cmpw   $0x000009,_095e1c_data(%eax)
		jne    _035986_jump

	_03596a_jump:
		mov    _0cf76a_data,%ax
		inc    %eax
		mov    %ax,_0cf76a_data
		cmp    $0x000006,%ax
		jne    _035986_jump
		xor    %ebx,%ebx
		mov    %bx,_0cf76a_data

	_035986_jump:
		mov    $0x000001,%dh
		mov    _0cf81a_data,%ax
		mov    _0cf81a_data,%bl
		mov    %dh,_0cfa36_data
		mov    %ax,_0cf762_data
		or     $0x00000f,%bl
		mov    _0cf768_data,%eax
		mov    %bl,_0cf81a_data
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %bl,%bh
		add    %eax,%eax
		mov    %edx,_0cd134_data
		and    $0x0000cf,%bh
		mov    _095e10_data(%eax),%cx
		mov    %bh,_0cf81a_data
		cmp    $0x000001,%cx
		jne    _0359ea_jump
		cmpw   $0x000009,_095e1c_data(%eax)
		jne    _0359ea_jump
		mov    %bh,%ch
		or     $0x000040,%ch
		mov    %ch,_0cf81a_data
		jmp    _0359f1_jump

	_0359ea_jump:
		andb   $0x0000bf,_0cf81a_data

	_0359f1_jump:
		orb    $0x000080,_0cf81a_data
		mov    _0cf81b_data,%ah
		or     $0x000001,%ah
		mov    %ah,%dl
		mov    %ah,_0cf81b_data
		and    $0x0000fd,%dl
		mov    _0cf88c_data,%di
		mov    %dl,_0cf81b_data
		cmp    $0x000005,%di
		jne    _035a36_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _035a36_jump
		mov    %dl,%bl
		or     $0x000004,%bl
		mov    %bl,_0cf81b_data
		jmp    _035a3d_jump

	_035a36_jump:
		andb   $0x0000fb,_0cf81b_data

	_035a3d_jump:
		mov    $0x000008,%ecx
		mov    $_0c2f58_data,%edi
		mov    $_0c2f78_data,%esi
		mov    $0x000001,%edx
		mov    _0cf81b_data,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		and    $0x000087,%bh
		mov    $0x000002,%ecx
		mov    %bh,_0cf81b_data
		mov    %dx,_0c2f88_data
		mov    %cx,_0c2f8e_data
		xor    %ebx,%ebx
		mov    %cx,_0c2f8c_data
		mov    %bx,_0c2f8a_data
		call   _041af0_func
		mov    _0cf81f_data,%cl
		mov    %dx,_0cf892_data
		mov    %dx,_0cf880_data
		mov    %bx,_0cf88c_data
		mov    %bx,_0cf87c_data
		xor    %ah,%ah
		mov    _0cf768_data,%edx
		or     $0x00000a,%cl
		mov    %ah,_0cef58_data
		mov    %cl,_0cf81f_data
		sar    $0x000010,%edx
		mov    $0x000002,%ch
		mov    _095e10_data(,%edx,2),%bx
		mov    _095e02_data(,%edx,2),%eax
		mov    %bx,_0cf83a_data
		mov    %ch,_0ce6c6_data
		mov    %ch,_0cef5b_data
		sar    $0x000010,%eax
		mov    $0x000003,%ecx
		mov    _095e1c_data(,%edx,2),%bx
		mov    %eax,_0caf5c_data
		mov    %bx,_0cf82e_data
		mov    %edx,%eax
		mov    $0x000001,%bl
		shl    $0x000005,%eax
		mov    %bl,_0ce77c_data
		mov    %bl,_0caf65_data
		sub    %edx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %ebx,_0caf50_data
		add    %edx,%eax
		mov    $_095828_data,%edx
		add    %eax,%eax
		mov    $0x000a20,%ebx
		add    %eax,%edx
		mov    $_0cafa0_data,%eax
		mov    %edx,_0caf60_data
		xor    %edx,%edx
		mov    %cx,_0cef52_data
		call   _080420_func
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %cl,%cl
		mov    %cl,_094d65_data(,%eax,4)
		call   _055480_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035b78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03cadc_func
		mov    _0caf58_data,%eax
		cmp    _0caf54_data,%eax
		jne    _035b9a_jump
		movw   $0x0000b4,_0cf768_data
		jmp    _035ba3_jump

	_035b9a_jump:
		movw   $0x000708,_0cf768_data

	_035ba3_jump:
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		xor    %esi,%esi
		xor    %edi,%edi
		mov    %ah,_0cfa36_data
		mov    %ebx,_0cd134_data
		xor    %ebx,%ecx
		xor    %ebx,%esi
		mov    $0x000001,%eax
		xor    %ebx,%edi
		call   _059948_func
		mov    _0cf762_data,%ax
		mov    %dl,_0caf65_data
		mov    %ebx,_0caf50_data
		mov    %ebx,_0caf5c_data
		mov    %ebx,_0caf60_data
		mov    %cx,_0cf892_data
		mov    %si,_0cf880_data
		mov    %di,_0cf88c_data
		mov    $0x000008,%ecx
		mov    $_0c2f78_data,%edi
		mov    $_0c2f58_data,%esi
		xor    %dh,%dh
		mov    %ax,_0cf81a_data
		mov    %dx,_0cf83a_data
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cf81f_data,%dh
		mov    %ax,_0cf87c_data
		and    $0x0000f5,%dh
		mov    %ax,_0cf82e_data
		mov    %dh,_0cf81f_data
		call   _041af0_func
		mov    _0cf76a_data,%cx
		inc    %ecx
		mov    %cx,_0cf76a_data
		cmp    $0x000006,%cx
		jne    _035c5e_jump
		xor    %edi,%edi
		mov    %di,_0cf76a_data

	_035c5e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035c64_func:
		call   _042134_func
		call   _03715c_func
		test   %al,%al
		jne    _035c7b_jump
		call   _0371a4_func
		test   %al,%al
		je     _035c82_jump

	_035c7b_jump:
		movb   $0x000001,_0cfa40_data

	_035c82_jump:
		mov    $0x000001,%eax
		call   _055498_func
		call   _01cf94_func
		call   _03cdf8_func
		mov    $_0ce784_data,%eax
		call   _06b258_func
		cmpb   $0x000000,_0cfa40_data
		je     _035cbe_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _035cbe_jump
		mov    $0x000001,%eax
		ret    

	_035cbe_jump:
		xor    %eax,%eax
		ret    



_035cc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0cd8a0_data,%eax
		mov    $_016a9d_func,%edx
		mov    $_016b88_func,%ebx
		call   _037150_func
		mov    $_0cd8a0_data,%eax
		mov    $_016a24_jump,%ecx
		call   _0365e0_func
		mov    $_0c7c88_data,%eax
		mov    $_016b08_jump,%esi
		call   _03cce4_func
		call   _01cf7c_func
		call   _03ca8c_func
		call   _06b1ec_func
		mov    $_035c64_func,%eax
		mov    %edx,_0cd10c_data
		mov    %ebx,_0cd118_data
		call   _03cb54_func
		mov    %ecx,_0cd10c_data
		mov    %esi,_0cd118_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035d30_func:
		call   _03cadc_func
		jmp    _03cd58_func



_035d3c_func:
		push   %edx
		mov    $0x041a00,%edx
		mov    $_0cd8a0_data,%eax
		call   _07f7d0_func
		call   _01cee0_func
		call   _035cc4_func
		mov    $_0cd8a0_data,%eax
		call   _07fadc_func
		xor    %ah,%ah
		mov    %ah,_0cfa40_data
		call   _0464bc_func
		call   _035d30_func
		pop    %edx
		ret    



_035d74_func:
		push   %edx
		cmpb   $0x000001,_0cfa7a_data
		je     _035db1_jump
		call   _06b590_func
		mov    _0cfa40_data,%dl
		test   %dl,%dl
		jne    _035db1_jump
		call   _03cb04_func
		call   _01d028_func
		call   _03ca8c_func
		mov    $_034108_jump,%eax
		call   _03cb54_func
		call   _06ba34_func
		mov    %dl,_0cfa40_data

	_035db1_jump:
		pop    %edx
		ret    



_035f50_func:
		xor    $0x000000,%al
		add    %al,(%eax)
		cmp    (%eax),%al
		add    %al,(%eax)
		aaa    
		add    %al,(%eax)
		add    %dh,0x38000000
		add    %al,(%eax)
		add    %dh,(%esi)
		add    %al,(%eax)
		add    %bh,(%ebx)
		add    %al,(%eax)
		add    %bh,(%ecx)
		add    %al,(%eax)


_035f70_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %dl,0x000051(%ebx)
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _07f8d8_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _036090_jump
		mov    (%esp),%esi
		xor    %edx,%edx

	_035f95_jump:
		xor    %eax,%eax

	_035f97_jump:
		inc    %eax
		cmp    $0x0001f4,%ax
		jl     _035f97_jump
		movswl %dx,%ebx
		shl    $0x000002,%ebx
		add    %esi,%ebx
		call   _016efd_func
		inc    %edx
		mov    %eax,(%ebx)
		cmp    $0x0003e8,%dx
		jl     _035f95_jump
		mov    $0x000f9c,%eax
		call   _07f8d8_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _036088_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax

	_035fd0_jump:
		movswl %ax,%ebx
		mov    (%esp),%ecx
		shl    $0x000002,%ebx
		mov    0x000004(%ecx,%ebx,1),%edx
		mov    (%ecx,%ebx,1),%esi
		mov    %edx,%ecx
		lea    (%ebx,%ebp,1),%edx
		sub    %esi,%ecx
		mov    %ecx,(%edx)
		test   %ecx,%ecx
		jg     _035ff5_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)
		jmp    _035ffe_jump

	_035ff5_jump:
		inc    %eax
		add    %ecx,%edi
		cmp    $0x0003e7,%ax
		jl     _035fd0_jump

	_035ffe_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _036072_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		lea    0x000000(,%eax,4),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edi,%edx
		shl    $0x000002,%edx
		sub    %edi,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		xor    %esi,%esi
		mov    %eax,%edx

	_036044_jump:
		mov    0x000004(%esp),%ecx
		movswl %si,%eax
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _036060_jump
		cmp    %ecx,%eax
		jg     _036060_jump
		mov    $0x000001,%eax
		jmp    _036062_jump

	_036060_jump:
		xor    %eax,%eax

	_036062_jump:
		test   %eax,%eax
		jne    _03606a_jump
		incb   0x000008(%esp)

	_03606a_jump:
		inc    %esi
		cmp    $0x0003e7,%si
		jl     _036044_jump

	_036072_jump:
		mov    0x000008(%esp),%bh
		cmp    $0x00000a,%bh
		setb   %al
		mov    %al,_0cfa4b_data
		mov    %ebp,%eax
		call   _07fa70_func

	_036088_jump:
		mov    (%esp),%eax
		call   _07fa70_func

	_036090_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03609c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa4b_data
		je     _036149_jump
		call   _016e9a_func
		call   _016efd_func
		lea    0x000bb8(%eax),%ebx
		call   _016f5d_func
		call   _016e8a_func
		call   _016efd_func
		xor    %esi,%esi
		mov    %eax,%edi
		jmp    _0360ee_jump

	_0360d3_jump:
		call   _016e9a_func
		call   _016efd_func
		lea    0x000bb8(%eax),%ebx
		call   _016f5d_func
		call   _016e8a_func
		inc    %esi

	_0360ee_jump:
		xor    %edx,%edx
		mov    _0cfa4c_data,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %si,%edx
		cmp    %eax,%edx
		jl     _0360d3_jump
		call   _016efd_func
		movswl %si,%ebx
		sub    %edi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %edx,%edx
		mov    %ax,%dx
		mov    %ax,_0cf7f0_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shr    $0x000005,%eax
		mov    %ax,_0cf7ee_data
		mov    %edx,%eax
		mov    _0cf7e8_data,%dx
		imul   %eax,%edx
		mov    _0cf7ee_data,%ax
		add    %edx,%eax
		mov    %ax,_0cf7e6_data

	_036149_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036150_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,0x000004(%esp)
		mov    %ah,(%esp)
		xor    %dh,%dh
		cli    
		mov    %dx,_0cf7e8_data
		call   _016f78_func
		call   _035f70_func
		cmpb   $0x000000,_0cfa4b_data
		je     _036222_jump

	_036183_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _036222_jump
		call   _03609c_func
		call   _016e9a_func
		call   _016efd_func
		lea    0x000bb8(%eax),%ebx
		call   _016f5d_func
		call   _016e8a_func
		xor    %ebx,%ebx
		call   _016efd_func
		mov    _0cf7ee_data,%bx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    %eax,%esi
		call   _016f5d_func
		call   _016e8a_func
		call   _016efd_func
		mov    _0cf7f0_data,%dx
		imul   $0x000065,%edx,%edx
		mov    $0x000064,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %esi,%ebx
		cmp    %eax,%ebx
		jae    _0361f5_jump
		movb   $0x000001,0x000004(%esp)
		jmp    _0361f8_jump

	_0361f5_jump:
		incb   (%esp)

	_0361f8_jump:
		cmpb   $0x000002,(%esp)
		jbe    _036183_jump
		call   _04f50c_func
		cmp    $0x0000be,%ax
		setle  %al
		xor    %ah,%ah
		mov    %ax,_0cf7e8_data
		mov    %ah,_0cfa4b_data
		movb   $0x000001,0x000004(%esp)
		jmp    _036183_jump

	_036222_jump:
		sti    
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03622c_func:
		push   %ebx
		push   %edx
		mov    _0cd86c_data,%eax
		call   _07f768_func
		call   _03d9d4_func
		xor    %ah,%ah
		mov    %ah,_0cfa4a_data
		mov    %ah,_0caf64_data
		mov    %ah,_0caf65_data
		mov    %ah,_0cfa62_data
		call   _042790_func
		mov    $0x000003,%eax
		call   _04212c_func
		mov    $0x00fa40,%eax
		call   _07fbb4_func
		mov    %eax,_0cd138_data
		mov    $0x01f400,%eax
		call   _07fbb4_func
		mov    _0cd138_data,%edx
		mov    %eax,_0cd130_data
		test   %edx,%edx
		je     _036292_jump
		test   %eax,%eax
		jne    _03629c_jump

	_036292_jump:
		mov    $_0c0c24_data,%eax
		call   _01f988_func

	_03629c_jump:
		call   _042ec4_func
		mov    _095e6c_data,%bh
		cmp    $0x000046,%bh
		je     _0362b5_jump
		movb   $0x00003c,_0cfa4c_data
		jmp    _0362bb_jump

	_0362b5_jump:
		mov    %bh,_0cfa4c_data

	_0362bb_jump:
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d9e4_func
		mov    $0x000001,%al
		xor    %edx,%edx
		mov    %al,_0cfa4e_data
		call   _016eaa_func
		call   _035f70_func
		mov    %dx,_0cf8f2_data
		pop    %edx
		pop    %ebx

	_0362e3_jump:
		ret    



_0362e4_func:
		cmpb   $0x000000,_0cfa7a_data
		jne    _0362e3_jump
		movb   $0x0000ff,(%eax)
		call   _042134_func
		cmpl   $0x000000,_0caf50_data
		jne    _0362e3_jump
		cmpb   $0x000000,_0caf65_data
		jne    _036310_jump
		cmpb   $0x000000,_0caf64_data
		je     _0362e3_jump

	_036310_jump:
		mov    $_0caf50_data,%eax
		jmp    _042490_func



_03631c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c0c44_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _0812e0_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036349_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036361_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036349_jump

	_036361_jump:
		pop    %edi
		mov    $_0c0c48_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036370_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036388_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036370_jump

	_036388_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_036394_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c0c44_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _0812e0_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0363c1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0363d9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0363c1_jump

	_0363d9_jump:
		pop    %edi
		mov    $_0c0c50_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0363e8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036400_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0363e8_jump

	_036400_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03640c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0cd7f8_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0cd7fc_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0c7088_data,%esi
		mov    _0cd828_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _047d3c_func
		mov    _0cd828_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0cd82c_data
		mov    _0cd7f8_data,%edx
		mov    $_0c7088_data,%esi
		mov    %edx,_0cd820_data
		mov    _0cd7fc_data,%edx
		mov    $_0c7c88_data,%edi
		mov    %edx,_0cd7f0_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0c7088_data,%edi
		mov    %edx,_0cd7f8_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0cd828_data
		mov    %edx,_0cd7fc_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_03653c_switch:
		.long   _03657d_case
		.long   _03658b_case
		.long   _036599_case
		.long   _0365a7_case
		.long   _0365b5_case
		.long   _0365c3_case




_036554_func:
		push   %ebx
		mov    %eax,%ebx
		call   _026a30_func
		test   %al,%al
		je     _036567_jump
		mov    $0x000040,%edx
		jmp    _0365d6_jump

	_036567_jump:
		mov    %edx,%eax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0365d1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03653c_switch(,%eax,4)

	_03657d_case:
		mov    $0x000044,%edx
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    

	_03658b_case:
		mov    $0x000046,%edx
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    

	_036599_case:
		mov    $0x000045,%edx
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    

	_0365a7_case:
		mov    $0x000042,%edx
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    

	_0365b5_case:
		mov    $0x00003f,%edx
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    

	_0365c3_case:
		mov    $0x00003e,%edx
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    

	_0365d1_jump:
		mov    $0x00003d,%edx

	_0365d6_jump:
		mov    %ebx,%eax
		call   _03640c_func
		pop    %ebx
		ret    



_0365e0_func:
		push   %edx
		mov    $0x00000c,%edx
		call   _03640c_func
		pop    %edx
		ret    



_0365f0_func:
		push   %edx
		mov    $0x000049,%edx
		call   _03640c_func
		pop    %edx
		ret    



_036600_func:
		push   %edx
		mov    $0x000047,%edx
		call   _03640c_func
		pop    %edx
		ret    



_036610_func:
		push   %ecx
		push   %edx
		mov    $0x00000b,%edx
		call   _03640c_func
		mov    _0cfa27_data,%dl
		sub    $0x000040,%dl
		mov    $0x003600,%eax
		int    $0x000021
		cmp    $0x00ffff,%ax
		je     _03663a_jump
		cmp    $0x000000,%bx
		jne    _03663a_jump
		jmp    _036641_jump

	_03663a_jump:
		mov    $0x004c00,%eax
		int    $0x000021

	_036641_jump:
		pop    %edx
		pop    %ecx
		ret    



_036644_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x000089
		mov    _0cd7b8_data,%edi
		mov    _0cd82c_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014c19_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036678_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00030c,%esp
		mov    %eax,%ebp
		mov    _0cd828_data,%eax
		mov    $0x000300,%ecx
		mov    %eax,0x000308(%esp)
		mov    _0cd7f8_data,%eax
		mov    $_0c7088_data,%esi
		mov    %eax,0x000304(%esp)
		mov    _0cd7fc_data,%eax
		mov    %esp,%edi
		mov    %eax,0x000300(%esp)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0c5568_data,%edi
		mov    %ebp,%eax
		mov    $0x000300,%ecx
		call   _047d3c_func
		movswl %bx,%edx
		mov    _0cd828_data,%esi
		lea    0x000000(,%edx,4),%eax
		mov    %esi,_0c5528_data(,%edx,4)
		sub    %edx,%eax
		mov    _0cd7f8_data,%esi
		shl    $0x000008,%eax
		mov    %esi,_0c5548_data(,%edx,4)
		mov    _0cd7fc_data,%esi
		add    %eax,%edi
		mov    %esi,_0c6d68_data(,%edx,4)
		mov    $_0c7088_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000308(%esp),%eax
		mov    $0x000300,%ecx
		mov    %eax,_0cd828_data
		mov    0x000304(%esp),%eax
		mov    %esp,%esi
		mov    %eax,_0cd7f8_data
		mov    0x000300(%esp),%eax
		mov    $_0c7088_data,%edi
		mov    %eax,_0cd7fc_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x00030c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_036770_switch:
		.long   _0367b3_case
		.long   _0367fd_case
		.long   _0367c0_case
		.long   _0367cd_case
		.long   _0367da_case
		.long   _0367f2_case




_036788_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf87c_data,%cx
		mov    _0cf88c_data,%bx
		dec    %ebx
		mov    $0xffffffff,%edx
		cmp    $0x000005,%bx
		ja     _0367fd_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_036770_switch(,%ebx,4)

	_0367b3_case:
		cmp    $0x000009,%cx
		jne    _0367fd_case
		mov    $0x00004a,%edx
		jmp    _0367fd_case

	_0367c0_case:
		cmp    $0x000006,%cx
		jne    _0367fd_case
		mov    $0x00003c,%edx
		jmp    _0367fd_case

	_0367cd_case:
		cmp    $0x00000b,%cx
		jne    _0367fd_case
		mov    $0x000048,%edx
		jmp    _0367fd_case

	_0367da_case:
		cmp    $0x000003,%cx
		jne    _0367e5_jump
		mov    $0x000043,%edx

	_0367e5_jump:
		cmp    $0x00000b,%cx
		jne    _0367fd_case
		mov    $0x000033,%edx
		jmp    _0367fd_case

	_0367f2_case:
		cmp    $0x000004,%cx
		jne    _0367fd_case
		mov    $0x000041,%edx

	_0367fd_case:
		mov    %cx,_0cf87c_data
		cmp    $0xffffffff,%edx
		je     _036810_jump
		xor    %ebx,%ebx
		call   _036678_func

	_036810_jump:
		mov    _0cf87c_data,%cx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03681c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000020(%esp)
		mov    %edx,%ebp
		mov    $0x000008,%ecx
		mov    %esp,%edi
		mov    $_035f50_func,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ecx,%ecx
		xor    %esi,%esi

	_03683c_jump:
		mov    0x000020(%esp),%eax
		movswl %cx,%ebx
		mov    (%esp,%esi,1),%edx
		call   _036678_func
		inc    %ecx
		add    $0x000004,%esi
		cmp    $0x000003,%ecx
		jbe    _03683c_jump
		mov    $0x000004,%ecx
		mov    $0x000010,%esi

	_03685e_jump:
		movswl %cx,%ebx
		mov    %ebp,%eax
		mov    (%esp,%esi,1),%edx
		call   _036678_func
		inc    %ecx
		add    $0x000004,%esi
		cmp    $0x000007,%ecx
		jbe    _03685e_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_036880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa50_data
		je     _036892_jump
		call   _01d028_func

	_036892_jump:
		cmpb   $0x000000,_0cfa33_data
		jne    _0368a2_jump
		movb   $0x000001,_095e2d_data

	_0368a2_jump:
		cmpb   $0x000002,_0cfa1a_data
		jne    _0368b2_jump
		movb   $0x000001,_0cfa20_data

	_0368b2_jump:
		mov    _0cf83a_data,%ax
		cmp    _0cf88c_data,%ax
		je     _0368de_jump
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf87c_data
		mov    %dx,_0cf892_data
		mov    %dx,_0cf880_data
		jmp    _036910_jump

	_0368de_jump:
		call   _026a30_func
		test   %al,%al
		je     _0368fe_jump
		xor    %ecx,%ecx
		mov    $0x000001,%esi
		mov    %cx,_0cf87c_data
		mov    %si,_0cf892_data
		jmp    _036907_jump

	_0368fe_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cf892_data

	_036907_jump:
		movw   $0x000001,_0cf880_data

	_036910_jump:
		cmpb   $0x000001,_0cfa46_data
		jne    _03692d_jump
		cmpw   $0x000006,_0cf83a_data
		jne    _03692d_jump
		call   _035878_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03692d_jump:
		cmpb   $0x000000,_0cfa7a_data
		jne    _036993_jump
		cmpw   $0x000000,_0cf892_data
		je     _036993_jump
		call   _036e60_func
		mov    $_0cd880_data,%eax
		call   _07fb90_func
		mov    $_0cd860_data,%eax
		call   _07fb78_func
		mov    _0cf838_data,%eax
		mov    $_0cd7d8_data,%edx
		sar    $0x000010,%eax
		mov    $_0cd7d8_data,%ebx
		call   _036394_func
		mov    $_0cd860_data,%edx
		mov    $_0cd880_data,%eax
		call   _044de0_func
		mov    $_0cd860_data,%eax
		call   _07fb60_func
		call   _05a6d8_func
		call   _036f48_func

	_036993_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa50_data
		je     _0369ab_jump
		call   _01d028_func

	_0369ab_jump:
		call   _06bae0_func
		mov    $0x000001,%ebx
		mov    _0cf83a_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf88c_data
		mov    %dx,_0cf892_data
		mov    %bx,_0cf880_data
		mov    _0cf82e_data,%ax
		mov    _0cfa7a_data,%dl
		mov    %ax,_0cf87c_data
		test   %dl,%dl
		jne    _036b05_jump
		cmpb   $0x000000,_0cfa2a_data
		je     _036a8d_jump
		call   _026a30_func
		mov    $0x0000a0,%esi
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _036a15_jump
		mov    $0x0000f0,%esi
		mov    $0x0000a0,%ebx

	_036a15_jump:
		mov    $_0c7c88_data,%edx
		mov    $0x000002,%eax
		call   _03c54c_func
		mov    _0cd7b8_data,%edi
		movswl %bx,%ebx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		movswl %si,%edx
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c2d9c_data,%eax
		call   _01a3f0_func
		call   _016e8a_func
		call   _016e9a_func
		call   _03b4d0_func
		cmpw   $0x000000,_0cf8da_data
		je     _036a8d_jump
		mov    $_0c7988_data,%ebx
		mov    $_0c7c88_data,%edi

	_036a70_jump:
		call   _016e9a_func
		call   _016e8a_func
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03c5cc_func
		cmpw   $0x000000,_0cf8da_data
		jne    _036a70_jump

	_036a8d_jump:
		call   _06bbe8_func
		cmpb   $0x000000,_0cfa50_data
		je     _036aa3_jump
		xor    %edx,%edx
		mov    %edx,_0cd85c_data

	_036aa3_jump:
		mov    _0cf87a_data,%eax
		mov    $_0cd80c_data,%edx
		sar    $0x000010,%eax
		call   _03631c_func
		mov    $_0cd84c_data,%eax
		call   _07fba4_func
		mov    $_0cd860_data,%eax
		mov    $_0cd80c_data,%ebx
		call   _07fb84_func
		mov    $_0cd84c_data,%eax
		mov    $_0cd860_data,%edx
		call   _036788_func
		mov    $_0cd84c_data,%eax
		call   _045688_func
		call   _049098_func
		cmpw   $0x000002,_0cf88c_data
		jl     _036b05_jump
		cmpw   $0x000007,_0cf87c_data
		jl     _036b05_jump
		call   _06bf58_func

	_036b05_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036b0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    $_0ccfdc_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		push   %edi

	_036b1e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036b36_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036b1e_jump

	_036b36_jump:
		pop    %edi
		mov    $_0c0c58_data,%esi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036b4c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036b64_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036b4c_jump

	_036b64_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $_0c0c60_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0cf7ba_data,%eax
		add    %ecx,%edx
		sar    $0x000010,%eax
		mov    %esp,%edi
		call   _081256_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036b90_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036ba8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036b90_jump

	_036ba8_jump:
		pop    %edi
		mov    %esp,%eax
		call   _0812fb_func
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036bc4_func:
		cmpb   $0x000001,_0cfa51_data
		jne    _036bdd_jump
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _036bf6_jump
		jmp    _036bef_jump

	_036bdd_jump:
		call   _081300_func
		test   %eax,%eax
		je     _036bf6_jump
		call   _0804f4_func
		cmp    $0x00001b,%al
		jne    _036bf6_jump

	_036bef_jump:
		movb   $0x000001,_0cfa40_data

	_036bf6_jump:
		ret    



_036bf8_func:
		cmpb   $0x000001,_0cfa51_data
		jne    _036c29_jump
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _036c42_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _036c42_jump
		mov    $0x000004,%eax
		call   _04fb94_func
		test   %al,%al
		je     _036c42_jump
		jmp    _036c3b_jump

	_036c29_jump:
		call   _081300_func
		test   %eax,%eax
		je     _036c42_jump
		call   _0804f4_func
		cmp    $0x00001b,%al
		jne    _036c42_jump

	_036c3b_jump:
		movb   $0x000001,_0cfa40_data

	_036c42_jump:
		ret    



_036c44_func:
		call   _081300_func
		test   %eax,%eax
		je     _036c42_jump
		call   _0804f4_func
		jmp    _036c44_func



_036c54_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $0x00000d,%edx
		mov    _0cd130_data,%eax
		call   _048038_func
		mov    $_0c7c88_data,%edx
		mov    $0x00000d,%eax
		call   _047280_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036c88_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $0x00000c,%edx
		mov    _0cd130_data,%eax
		call   _048038_func
		mov    $_0c7c88_data,%edx
		mov    $0x00000c,%eax
		call   _047280_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036cbc_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000001,_0cfa51_data
		je     _036ce6_jump
		call   _081300_func
		test   %eax,%eax
		je     _036ce3_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _036ce3_jump
		call   _0804f4_func
		mov    %al,(%edx)
		pop    %edx
		ret    

	_036ce3_jump:
		movb   $0x0000ff,(%edx)

	_036ce6_jump:
		pop    %edx
		ret    



_036ce8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_095e2c_data
		je     _036d02_jump
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d9e4_func

	_036d02_jump:
		push   $0x0000c8
		mov    _0cd7b8_data,%edi
		mov    _0cd828_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014c19_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		nop

	_036d30_jump:
		ret    



_036d34_func:
		cmpb   $0x000000,_0cfa7a_data
		je     _036d30_jump
		call   _073b80_func
		mov    $_0cd880_data,%eax
		call   _07fb90_func
		mov    $_0cd860_data,%eax
		jmp    _07fb78_func



_036d58_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cf81b_data,%ah
		mov    _0cfa2c_data,%dl
		test   $0x000002,%ah
		je     _036d71_jump
		call   _05b154_func

	_036d71_jump:
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _036d8a_jump
		mov    $0x000003,%eax
		int    $0x000010
		mov    $0x004c00,%eax
		int    $0x000021

	_036d8a_jump:
		pop    %edx
		nop



_036d8c_func:
		ret    



_036d90_func:
		push   %edx
		call   _06bb48_func
		call   _03d9d4_func
		cmpb   $0x000000,_0caf64_data
		je     _036dbb_jump
		call   _042774_func
		mov    $0x000001,%dl
		mov    $_0caf50_data,%eax
		mov    %dl,_0caf66_data
		call   _042490_func

	_036dbb_jump:
		cmpb   $0x000000,_0cfa7a_data
		je     _036e09_jump
		mov    $_0cd84c_data,%eax
		call   _07fadc_func
		mov    $_0cd880_data,%eax
		call   _07fadc_func
		mov    $_0cd860_data,%eax
		call   _07fadc_func
		mov    $_0cd874_data,%eax
		call   _07fadc_func
		mov    $_0cd128_data,%eax
		call   _07fbcc_func
		cmpb   $0x000002,_0cfa1a_data
		je     _036e09_jump
		mov    $_0cd130_data,%eax
		call   _07fbcc_func

	_036e09_jump:
		call   _07f740_func
		call   _06bb48_func
		xor    %eax,%eax
		call   _080512_func
		pop    %edx
		nop



_036e1c_func:
		ret    



_036e20_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _03cdf8_func
		call   _026a30_func
		mov    $0x0000a0,%edx
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _036e45_jump
		mov    $0x0000f0,%edx
		mov    $0x0000a0,%ebx

	_036e45_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c2d9c_data,%eax
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a3f0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0cd84c_data,%eax
		mov    $0x000300,%ecx
		mov    _0cf838_data,%edx
		mov    $_0c7988_data,%esi
		sar    $0x000010,%edx
		mov    $_0c6d88_data,%edi
		call   _036554_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7c88_data,%esi
		mov    $_0c7988_data,%edi
		mov    $_0c7c88_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _03c54c_func
		call   _016e8a_func
		call   _016e9a_func
		call   _03b4d0_func
		call   _036e20_func
		mov    $0x000064,%edx
		mov    _0cd138_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _038208_func
		test   %al,%al
		je     _036f03_jump
		call   _038258_func
		call   _038290_func
		call   _036e20_func

	_036f03_jump:
		call   _016e9a_func
		call   _016e8a_func
		call   _03b4d0_func
		cmpw   $0x000000,_0cf8da_data
		je     _036f41_jump
		mov    $_0c7988_data,%ebx

	_036f21_jump:
		call   _016e9a_func
		call   _016e8a_func
		mov    $_0c7c88_data,%eax
		mov    %ebx,%edx
		call   _03c5cc_func
		cmpw   $0x000000,_0cf8da_data
		jne    _036f21_jump

	_036f41_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036f48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0cd138_data,%ecx
		mov    _0cd7d0_data,%ebx
		call   _038220_func
		test   %al,%al
		je     _036f76_jump
		call   _038258_func
		call   _038290_func

	_036f76_jump:
		mov    $_0c7c88_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0c6d88_data,%esi
		mov    $_0c7988_data,%edi
		call   _03c6bc_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036fac_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _080408_func
		cli    
		mov    _0df7c8_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0df7c8_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _0370cd_jump
		mov    _0df7c0_data,%eax
		mov    _0df7c4_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0df7c4_data
		cmp    $0x000080,%ebx
		jl     _03700f_jump
		mov    %eax,%ebx
		mov    $0x000080,%edx
		neg    %ebx
		mov    %edx,_0df7c4_data
		mov    %ebx,_0df7c0_data
		jmp    _037026_jump

	_03700f_jump:
		cmp    $0x000020,%ebx
		jg     _037026_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0df7c4_data
		mov    %eax,_0df7c0_data

	_037026_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_037030_jump:
		xor    %eax,%eax
		mov    _0c7c88_data(%edx),%al
		mov    _0df7c4_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _03704e_jump
		mov    %ebx,%eax

	_03704e_jump:
		mov    %al,_0c7988_data(%edx)
		xor    %eax,%eax
		mov    _0c7c89_data(%edx),%al
		mov    _0df7c4_data,%edi
		mov    %eax,%ebx
		imul   %edi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _037072_jump
		mov    %ebx,%eax

	_037072_jump:
		xor    %ebx,%ebx
		mov    %al,_0c7989_data(%edx)
		mov    _0df7c4_data,%eax
		mov    _0c7c8a_data(%edx),%bl
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _037096_jump
		mov    %ebx,%eax

	_037096_jump:
		mov    %al,_0c7987_data(%edx)
		cmp    $0x00001b,%edx
		jne    _037030_jump
		call   _016e8a_func
		mov    $_0c7988_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_0370cd_jump:
		mov    _0df7d0_data,%dx
		mov    _0df7cc_data,%eax
		call   _081318_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_037150_func:
		call   _046078_func
		mov    $0x000001,%eax
		ret    



_03715c_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jne    _0371a0_jump
		cmpw   $0x000001,_0cf7f6_data
		je     _03719a_jump
		cmpb   $0x000001,_0cfa51_data
		jne    _03719e_jump
		mov    $0x00001c,%eax
		call   _041cb0_func
		test   %al,%al
		jne    _03719a_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _03719e_jump

	_03719a_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_03719e_jump:
		xor    %al,%al

	_0371a0_jump:
		pop    %edx
		ret    



_0371a4_func:
		push   %edx
		mov    _0cfa51_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _0371c2_jump
		mov    $0x00001c,%eax
		call   _041cb0_func
		test   %al,%al
		je     _0371ce_jump
		jmp    _0371cc_jump

	_0371c2_jump:
		call   _041f30_func
		test   %ax,%ax
		je     _0371ce_jump

	_0371cc_jump:
		mov    $0x000001,%dl

	_0371ce_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_037280_func:
		push   %edx
		mov    _0cfa51_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _03729e_jump
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _0372b2_jump
		jmp    _0372b0_jump

	_03729e_jump:
		call   _081300_func
		test   %eax,%eax
		je     _0372b2_jump
		call   _0804f4_func
		cmp    $0x00001b,%al
		jne    _0372b2_jump

	_0372b0_jump:
		mov    $0x000001,%dl

	_0372b2_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_0372b8_func:
		push   %edx
		call   _042774_func
		call   _016eea_func
		cmpb   $0x000000,_0cfa50_data
		je     _0372d1_jump
		call   _0733bc_func

	_0372d1_jump:
		cmpb   $0x0000ff,_095e2c_data
		je     _0372df_jump
		call   _03d9d4_func

	_0372df_jump:
		mov    _0c2ee4_data,%edx
		push   %edx
		push   $_0c0c68_data
		call   _07fce1_func
		add    $0x000008,%esp
		pop    %edx
		ret    



_0372f8_func:
		push   %ebx
		push   %edx
		mov    $0x000009,%ebx
		mov    $_095eb7_data,%eax
		xor    %edx,%edx
		call   _080420_func
		pop    %edx
		pop    %ebx
		ret    



_037310_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0cfa35_data
		jne    _037424_jump
		mov    $_0963d8_data,%ecx
		mov    $_096384_data,%esi
		mov    $_0963e2_data,%edi
		mov    $_096396_data,%ebp
		mov    $_0963a6_data,%eax
		mov    $_0963ae_data,%edx
		mov    $_0963ba_data,%ebx
		mov    %ecx,_0df794_data
		mov    %esi,_0df7b0_data
		mov    %edi,_0df790_data
		mov    %ebp,_0df7b4_data
		mov    %eax,_0df7ac_data
		mov    %edx,_0df7bc_data
		mov    %ebx,_0df7a8_data
		mov    $_0963f0_data,%ecx
		mov    $_09640a_data,%esi
		mov    $_09642a_data,%edi
		mov    $_096400_data,%ebp
		mov    $_09641a_data,%eax
		mov    $_0963c6_data,%edx
		mov    $_096436_data,%ebx
		mov    %ecx,_0df79c_data
		mov    %esi,_0df7a4_data
		mov    %edi,_0df778_data
		mov    %ebp,_0df798_data
		mov    %eax,_0df78c_data
		mov    %edx,_0df7a0_data
		mov    %ebx,_0df77c_data
		mov    $_096442_data,%ecx
		mov    $_096452_data,%esi
		mov    $_096464_data,%edi
		mov    $_096484_data,%ebp
		mov    $_0964a2_data,%eax
		mov    $_096476_data,%edx
		mov    $_096492_data,%ebx
		mov    %ecx,_0df770_data
		mov    %esi,_0df780_data
		mov    %edi,_0df784_data
		mov    %ebp,_0df788_data
		mov    %eax,_0df768_data
		mov    %edx,_0df76c_data
		mov    %ebx,_0df774_data
		mov    $_0964ac_data,%ecx
		mov    $_0964b8_data,%esi
		mov    %ecx,_0df764_data
		mov    %esi,_0df760_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037424_jump:
		mov    $_0963dd_data,%edx
		mov    $_09638d_data,%ebx
		mov    $_0963e9_data,%ecx
		mov    $_09639e_data,%esi
		mov    $_0963aa_data,%edi
		mov    $_0963b4_data,%ebp
		mov    $_0963c0_data,%eax
		mov    %edx,_0df794_data
		mov    %ebx,_0df7b0_data
		mov    %ecx,_0df790_data
		mov    %esi,_0df7b4_data
		mov    %edi,_0df7ac_data
		mov    %ebp,_0df7bc_data
		mov    %eax,_0df7a8_data
		mov    $_0963f8_data,%edx
		mov    $_096412_data,%ebx
		mov    $_096430_data,%ecx
		mov    $_096405_data,%esi
		mov    $_096422_data,%edi
		mov    $_0963cf_data,%ebp
		mov    $_09643c_data,%eax
		mov    %edx,_0df79c_data
		mov    %ebx,_0df7a4_data
		mov    %ecx,_0df778_data
		mov    %esi,_0df798_data
		mov    %edi,_0df78c_data
		mov    %ebp,_0df7a0_data
		mov    %eax,_0df77c_data
		mov    $_09644a_data,%edx
		mov    $_09645b_data,%ebx
		mov    $_09646d_data,%ecx
		mov    $_09648b_data,%esi
		mov    $_0964a7_data,%edi
		mov    $_09647d_data,%ebp
		mov    $_09649a_data,%eax
		mov    %edx,_0df770_data
		mov    %ebx,_0df780_data
		mov    %ecx,_0df784_data
		mov    %esi,_0df788_data
		mov    %edi,_0df768_data
		mov    %ebp,_0df76c_data
		mov    %eax,_0df774_data
		mov    $_0964b2_data,%edx
		mov    $_0964c0_data,%ebx
		mov    %edx,_0df764_data
		mov    %ebx,_0df760_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037528_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa15_data
		je     _037846_jump
		xor    %dl,%dl
		mov    %dl,_0cfa15_data
		cmpb   $0x000000,_0cfa53_data
		je     _037846_jump
		cmpb   $0x000000,_0cfa2c_data
		jne    _037846_jump
		mov    $0x000005,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df794_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037577_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037577_jump:
		test   %eax,%eax
		je     _03759a_jump
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df770_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037596_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037596_jump:
		test   %eax,%eax
		jne    _0375b9_jump

	_03759a_jump:
		testb  $0x000080,_0cf81e_data
		je     _037846_jump
		xor    %bh,%bh
		mov    %bh,_0cfa2d_data
		call   _026a38_func
		jmp    _037846_jump

	_0375b9_jump:
		mov    $0x000009,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7b0_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0375d4_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0375d4_jump:
		test   %eax,%eax
		jne    _0375eb_jump
		xor    %dh,%dh
		mov    %dh,_0cfa2d_data
		call   _026a38_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0375eb_jump:
		mov    $0x000004,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7ac_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037606_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037606_jump:
		test   %eax,%eax
		jne    _03765b_jump
		cmpl   $0x000000,_095e30_data
		jne    _03763d_jump
		mov    $0x00001a,%esi
		mov    $0x007d96,%edi
		mov    $0x000001,%ah
		mov    %esi,_095e30_data
		mov    %edi,_095e34_data
		mov    %ah,_0cfa30_data
		mov    %ah,_0cfa31_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03763d_jump:
		mov    $0x000001,%ch
		mov    %eax,_095e30_data
		mov    %eax,_095e34_data
		mov    %ch,_0cfa30_data
		mov    %ch,_0cfa31_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03765b_jump:
		mov    $0x000005,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df798_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037676_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037676_jump:
		test   %eax,%eax
		je     _037699_jump
		mov    $0x000007,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df76c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037695_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037695_jump:
		test   %eax,%eax
		jne    _0376bd_jump

	_037699_jump:
		mov    _0cf81a_data,%bh
		mov    _0cf81b_data,%cl
		or     $0x000087,%bh
		or     $0x000001,%cl
		mov    %bh,_0cf81a_data
		mov    %cl,_0cf81b_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0376bd_jump:
		mov    $0x000007,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df790_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0376d8_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0376d8_jump:
		test   %eax,%eax
		je     _0376ff_jump
		mov    $0x000009,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df780_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0376f7_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0376f7_jump:
		test   %eax,%eax
		jne    _037778_jump

	_0376ff_jump:
		xor    %bl,%bl
		xor    %eax,%eax
		mov    %bl,_0cfa61_data

	_037709_jump:
		mov    _094d64_data(%eax),%cl
		test   $0x000001,%cl
		jne    _037730_jump
		cmpb   $0x000006,_094d66_data(%eax)
		je     _037730_jump
		mov    %cl,%dl
		or     $0x000004,%dl
		mov    %dl,_094d64_data(%eax)
		xor    %dh,%dh
		mov    %dh,_0cfa45_data

	_037730_jump:
		add    $0x000014,%eax
		cmp    $0x0001e0,%eax
		jne    _037709_jump
		cmpw   $0x00000e,_0cf83a_data
		jne    _037846_jump
		xor    %eax,%eax

	_03774a_jump:
		mov    _094d64_data(%eax),%bl
		test   $0x000001,%bl
		jne    _037768_jump
		mov    %bl,%bh
		xor    %cl,%cl
		or     $0x000004,%bh
		mov    %cl,_0cfa45_data
		mov    %bh,_094d64_data(%eax)

	_037768_jump:
		add    $0x000014,%eax
		cmp    $0x0001e0,%eax
		je     _037846_jump
		jmp    _03774a_jump

	_037778_jump:
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7b4_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037793_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037793_jump:
		test   %eax,%eax
		jne    _0377a4_jump
		movb   $0x000001,_0cfa61_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0377a4_jump:
		mov    $0x000006,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7bc_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0377bf_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0377bf_jump:
		test   %eax,%eax
		jne    _0377eb_jump
		mov    _095e6c_data,%al
		cmp    $0x000064,%al
		je     _037830_jump
		cmp    $0x000050,%al
		je     _0377dc_jump
		xor    %eax,%eax
		mov    _095e6c_data,%al
		mov    %eax,_0df7b8_data

	_0377dc_jump:
		mov    $0x000064,%dl
		mov    $0x000064,%eax
		mov    %dl,_095e6c_data
		jmp    _037841_jump

	_0377eb_jump:
		mov    $0x000006,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7a8_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037806_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037806_jump:
		test   %eax,%eax
		jne    _037846_jump
		mov    _095e6c_data,%bh
		cmp    $0x000050,%bh
		je     _037830_jump
		cmp    $0x000064,%bh
		je     _037821_jump
		mov    %bh,%al
		mov    %eax,_0df7b8_data

	_037821_jump:
		mov    $0x000050,%ch
		mov    $0x000050,%eax
		mov    %ch,_095e6c_data
		jmp    _037841_jump

	_037830_jump:
		mov    _0df7b8_data,%al
		mov    %al,_095e6c_data
		xor    %eax,%eax
		mov    _095e6c_data,%al

	_037841_jump:
		call   _049638_func

	_037846_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03784c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa15_data
		je     _037b83_jump
		xor    %dl,%dl
		mov    %dl,_0cfa15_data
		cmpb   $0x000000,_0cfa98_data
		je     _037b83_jump
		cmpw   $0x000006,_0cf88c_data
		je     _037b83_jump
		cmpb   $0x000000,_0cfa2c_data
		jne    _037b83_jump
		cmpw   $0x000005,_0cf868_data
		je     _037b83_jump
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df79c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0378b7_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0378b7_jump:
		test   %eax,%eax
		je     _0378da_jump
		mov    $0x000009,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df784_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0378d6_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0378d6_jump:
		test   %eax,%eax
		jne    _0378e8_jump

	_0378da_jump:
		movw   $0x000063,_0cef52_data
		jmp    _037b83_jump

	_0378e8_jump:
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7a4_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037903_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037903_jump:
		test   %eax,%eax
		je     _037926_jump
		mov    $0x000007,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df788_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037922_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037922_jump:
		test   %eax,%eax
		jne    _03793a_jump

	_037926_jump:
		mov    $0x000004,%cl
		mov    %cl,_0ce6c6_data
		mov    %cl,_0cef5b_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03793a_jump:
		mov    $0x000005,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df798_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037955_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037955_jump:
		test   %eax,%eax
		je     _037978_jump
		mov    $0x000007,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df76c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037974_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037974_jump:
		test   %eax,%eax
		jne    _03799f_jump

	_037978_jump:
		mov    _0cf81b_data,%dh
		test   $0x000080,%dh
		jne    _037b83_jump
		orb    $0x000087,_0cf81a_data
		mov    %dh,%bh
		or     $0x000001,%bh
		mov    %bh,_0cf81b_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03799f_jump:
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df78c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0379ba_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0379ba_jump:
		test   %eax,%eax
		je     _0379dd_jump
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df774_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _0379d9_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_0379d9_jump:
		test   %eax,%eax
		jne    _037a17_jump

	_0379dd_jump:
		testb  $0x000080,_0cf81b_data
		jne    _037b83_jump
		testb  $0x000001,_0cf81a_data
		je     _037b83_jump
		mov    _0ce6dc_data,%edx
		movb   $0x00000c,0x00006e(%edx)
		mov    0x00006e(%edx),%al
		mov    %al,_0ce77c_data
		mov    %al,_0ceadf_data
		mov    %al,0x00006c(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037a17_jump:
		mov    $0x000006,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df778_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037a32_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037a32_jump:
		test   %eax,%eax
		je     _037a55_jump
		mov    $0x000005,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df768_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037a51_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037a51_jump:
		test   %eax,%eax
		jne    _037a76_jump

	_037a55_jump:
		xor    %ebx,%ebx
		mov    _0cef58_data,%bl
		mov    $0x000063,%eax
		add    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _037a6b_jump
		mov    %ebx,%eax

	_037a6b_jump:
		mov    %al,_0cef58_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037a76_jump:
		mov    $0x000006,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df77c_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037a91_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037a91_jump:
		test   %eax,%eax
		je     _037ab4_jump
		mov    $0x000006,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df764_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037ab0_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037ab0_jump:
		test   %eax,%eax
		jne    _037afb_jump

	_037ab4_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _037b83_jump
		cmpw   $0x000000,_0ce690_data
		jne    _037b83_jump
		cmpw   $0x000000,_0ce692_data
		jne    _037b83_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _037b83_jump
		movb   $0x000001,_0cfa76_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037afb_jump:
		mov    $0x000009,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df7a0_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037b16_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037b16_jump:
		test   %eax,%eax
		jne    _037b55_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    _0cf868_data,%cx
		mov    $_0ce650_data,%eax
		neg    %ecx
		mov    %si,_0ce69a_data
		mov    %cx,_0cf868_data
		mov    $0x000040,%cl
		mov    %ebx,%edx
		mov    %cl,_0cfa7e_data
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037b55_jump:
		mov    $0x000008,%ecx
		mov    $_095eb7_data,%esi
		mov    _0df760_data,%edi
		xor    %eax,%eax
		repz cmpsb %es:(%edi),%ds:(%esi)
		je     _037b70_jump
		sbb    %eax,%eax
		sbb    $0xffffffff,%eax

	_037b70_jump:
		test   %eax,%eax
		jne    _037b83_jump
		mov    $0x000001,%al
		mov    _0cfa10_data,%bh
		sub    %bh,%al
		mov    %al,_0cfa10_data

	_037b83_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037b90_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042134_func
		mov    _0cd138_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _038ed4_func
		test   %ax,%ax
		je     _037bea_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037bea_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037bea_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037bea_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037bea_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037bf1_jump

	_037bea_jump:
		mov    $0x000001,%edx
		jmp    _037bf3_jump

	_037bf1_jump:
		xor    %edx,%edx

	_037bf3_jump:
		call   _0391c0_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037c00_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _037c18_jump
		call   _03ca8c_func

	_037c18_jump:
		mov    $_037b90_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_037c40_func:
		push   %edx
		call   _042134_func
		call   _07ef5c_func
		test   %ax,%ax
		je     _037c86_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037c86_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037c86_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037c86_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037c86_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037c8d_jump

	_037c86_jump:
		mov    $0x000001,%edx
		jmp    _037c8f_jump

	_037c8d_jump:
		xor    %edx,%edx

	_037c8f_jump:
		call   _07f0e0_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037c98_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _037cb5_jump
		call   _03cb04_func
		call   _03ca8c_func

	_037cb5_jump:
		mov    $_037c40_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_037cdc_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042134_func
		mov    _0cd138_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _026404_func
		test   %ax,%ax
		je     _037d36_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037d36_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037d36_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037d36_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037d36_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037d3d_jump

	_037d36_jump:
		mov    $0x000001,%edx
		jmp    _037d3f_jump

	_037d3d_jump:
		xor    %edx,%edx

	_037d3f_jump:
		call   _0268c8_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037d4c_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _037d69_jump
		call   _03cb04_func
		call   _03ca8c_func

	_037d69_jump:
		mov    $_037cdc_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_037d90_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042134_func
		mov    _0cd138_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0448a4_func
		test   %ax,%ax
		je     _037dea_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037dea_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037dea_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037dea_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037dea_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037df1_jump

	_037dea_jump:
		mov    $0x000001,%edx
		jmp    _037df3_jump

	_037df1_jump:
		xor    %edx,%edx

	_037df3_jump:
		call   _044760_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037e00_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _037e1d_jump
		call   _03cb04_func
		call   _03ca8c_func

	_037e1d_jump:
		mov    $_037d90_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_037e44_func:
		push   %edx
		call   _042134_func
		call   _073614_func
		test   %ax,%ax
		je     _037e8a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037e8a_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037e8a_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037e8a_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037e8a_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037e91_jump

	_037e8a_jump:
		mov    $0x000001,%edx
		jmp    _037e93_jump

	_037e91_jump:
		xor    %edx,%edx

	_037e93_jump:
		call   _073838_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037e9c_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _037eb9_jump
		call   _03cb04_func
		call   _03ca8c_func

	_037eb9_jump:
		mov    $_037e44_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_037ee0_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _042134_func
		mov    _0cd138_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0607f0_func
		test   %ax,%ax
		je     _037f3a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037f3a_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037f3a_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037f3a_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037f3a_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037f41_jump

	_037f3a_jump:
		mov    $0x000001,%edx
		jmp    _037f43_jump

	_037f41_jump:
		xor    %edx,%edx

	_037f43_jump:
		call   _060aa8_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037f50_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _037f6d_jump
		call   _03cb04_func
		call   _03ca8c_func

	_037f6d_jump:
		mov    $_037ee0_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_037f94_func:
		push   %edx
		call   _042134_func
		call   _07c8d4_func
		test   %ax,%ax
		je     _037fda_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _037fda_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _037fda_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _037fda_jump
		call   _042048_func
		test   %ax,%ax
		jne    _037fda_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _037fe1_jump

	_037fda_jump:
		mov    $0x000001,%edx
		jmp    _037fe3_jump

	_037fe1_jump:
		xor    %edx,%edx

	_037fe3_jump:
		call   _07c9bc_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037fec_case:
		mov    $_0c7c88_data,%eax
		call   _03cce4_func
		cmpb   $0x000001,_0964ca_data
		jne    _038009_jump
		call   _03cb04_func
		call   _03ca8c_func

	_038009_jump:
		mov    $_037f94_func,%eax
		call   _03cb54_func
		mov    _0964c7_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03cd58_func
		call   _03cadc_func
		jmp    _03cd58_func



_038030_func:
		cmpb   $0x000001,_0964ca_data
		jne    _038046_jump
		mov    $0x000006,%eax
		call   _06bf60_func
		add    $0x000002,%al
		ret    

	_038046_jump:
		mov    $0x000007,%eax
		call   _06bf60_func
		inc    %al
		ret    



_038054_func:
		mov    $0x00000b,%eax
		call   _06bf60_func
		inc    %al
		ret    



_038064_func:
		mov    $0x00000e,%eax
		call   _06bf60_func
		inc    %al
		ret    



_038074_func:
		mov    $0x000006,%eax
		call   _06bf60_func
		inc    %al
		ret    

_038084_switch:
		.long   _03811a_case
		.long   _038172_case
		.long   _038134_case
		.long   _0381ff_case
		.long   _038151_case
		.long   _0381af_case
		.long   _0381da_case
		.long   _03819c_case


	_0380a4_jump:
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		cmp    $0x000009,%al
		jne    _0380db_jump
		call   _038030_func
		mov    %al,0x000004(%esp)
		cmp    $0x000002,%al
		je     _0380c8_jump
		cmp    $0x000004,%al
		jne    _0380cf_jump

	_0380c8_jump:
		call   _038054_func
		jmp    _0380d8_jump

	_0380cf_jump:
		cmp    $0x000006,%al
		jne    _0380db_jump
		call   _038064_func

	_0380d8_jump:
		mov    %al,(%esp)

	_0380db_jump:
		cmpb   $0x000004,0x000004(%esp)
		jne    _0380e7_jump
		movb   $0x000002,0x000004(%esp)

	_0380e7_jump:
		movsbw _0964ca_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0964c8_data
		mov    0x000004(%esp),%al
		mov    %al,_0964c9_data
		dec    %al
		cmp    $0x000007,%al
		ja     _0381ff_case
		and    $0x0000ff,%eax
		jmp    *%cs:_038084_switch(,%eax,4)

	_03811a_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _038dcc_func
		add    $0x000008,%esp
		ret    

	_038134_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _07ee54_func
		add    $0x000008,%esp
		ret    

	_038151_case:
		push   %ecx
		mov    $0x000014,%eax
		add    %edx,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x000032
		mov    $0x00003d,%ebx
		mov    $0x000008,%edx
		call   _02623c_func
		add    $0x000008,%esp
		ret    

	_038172_case:
		mov    (%esp),%al
		cmp    $0x00000d,%al
		je     _03817d_jump
		cmp    $0x000064,%al
		jne    _038187_jump

	_03817d_jump:
		call   _038054_func
		mov    %al,_0964c8_data

	_038187_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0964c8_data,%al
		movswl %dx,%edx
		call   _0446b4_func
		add    $0x000008,%esp
		ret    

	_03819c_case:
		add    %edx,%edx
		mov    $0x000016,%eax
		movswl %dx,%edx
		call   _0734f0_func
		add    $0x000008,%esp
		ret    

	_0381af_case:
		mov    (%esp),%al
		cmp    $0x000010,%al
		je     _0381ba_jump
		cmp    $0x000064,%al
		jne    _0381c4_jump

	_0381ba_jump:
		call   _038064_func
		mov    %al,_0964c8_data

	_0381c4_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0964c8_data,%al
		movswl %dx,%edx
		call   _060738_func
		add    $0x000008,%esp
		ret    

	_0381da_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _07c7cc_func
		add    $0x000008,%esp
		ret    

	_0381ff_case:
		xor    %al,%al
		add    $0x000008,%esp

	_038204_case:
		ret    



_038208_func:
		movb   $0x000001,_0964ca_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _0380a4_jump



_038220_func:
		movb   $0x0000ff,_0964ca_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _0380a4_jump

_038238_switch:
		.long   _037c00_case
		.long   _037e00_case
		.long   _037c98_case
		.long   _038204_case
		.long   _037d4c_case
		.long   _037f50_case
		.long   _037fec_case
		.long   _037e9c_case




_038258_func:
		mov    _0964c9_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _038204_case
		and    $0x0000ff,%eax
		jmp    *%cs:_038238_switch(,%eax,4)

_038270_switch:
		.long   _038da0_case
		.long   _044688_case
		.long   _07ee28_case
		.long   _038204_case
		.long   _026200_case
		.long   _0606fc_case
		.long   _07c7a0_case
		.long   _0734c4_case




_038290_func:
		mov    _0964c9_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _038204_case
		and    $0x0000ff,%eax
		jmp    *%cs:_038270_switch(,%eax,4)



_0382ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		cmpb   $0x000001,_095e2d_data
		jne    _0382fd_jump
		xor    %bl,%bl

	_0382c4_jump:
		movzbl %bl,%edi
		imul   $0x003e80,%edi,%edi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		mov    %ebp,%esi
		add    %edx,%edi
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bl
		jae    _038316_jump
		jmp    _0382c4_jump

	_0382fd_jump:
		mov    $0x00fa00,%ecx
		mov    %ebp,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_038316_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_038320_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		mov    _095e2d_data,%ah
		cmp    $0x000001,%ah
		jne    _038377_jump
		mov    %ah,%bl
		mov    %ebp,%edi
		xor    %bh,%bh

	_03833e_jump:
		movzbl %bh,%esi
		imul   $0x003e80,%esi,%esi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		add    %bl,%bl
		add    %edx,%esi
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bh
		jae    _038391_jump
		jmp    _03833e_jump

	_038377_jump:
		mov    $0x00fa00,%ecx
		mov    (%esp),%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_038391_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03839c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _0161bd_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _0161fa_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2dc8_data,%eax
		call   _01a3f0_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _0161fa_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038400_jump:
		mov    $0x000001,%eax
		ret    



_038408_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0964cc_data,%bx
		cmpb   $0x000002,_0cfa1a_data
		jne    _038457_jump
		call   _03839c_func
		mov    $_038400_jump,%eax
		call   _03cb54_func
		xor    %dl,%dl

	_03842e_jump:
		call   _016e9a_func
		inc    %dl
		call   _016e8a_func
		cmp    $0x00000c,%dl
		jb     _03842e_jump

	_03843f_jump:
		call   _016e9a_func
		call   _016e8a_func
		cmpb   $0x000000,_0cfa52_data
		jne    _03843f_jump
		jmp    _038565_jump

	_038457_jump:
		mov    _0cd130_data,%edx
		mov    _0cd7d0_data,%eax
		call   _0382ac_func
		mov    _0cd7b8_data,%edx
		mov    _0cd130_data,%eax
		call   _038320_func
		call   _03839c_func
		mov    $_038400_jump,%eax
		call   _03cb54_func
		mov    $0x00002a,%esi
		mov    $0x000036,%edi
		xor    %ecx,%ecx

	_038492_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl
		mov    %bx,_0964cc_data

	_0384a0_jump:
		cmp    $0x000007,%dl
		ja     _0384d9_jump
		call   _016e9a_func
		call   _016e8a_func
		mov    %edi,%eax
		call   _041cb0_func
		test   %al,%al
		je     _0384c7_jump
		mov    %esi,%eax
		call   _041cb0_func
		test   %al,%al
		je     _0384c7_jump
		inc    %dl

	_0384c7_jump:
		mov    _0964cc_data,%bx
		dec    %bx
		mov    %bx,_0964cc_data
		jne    _0384a0_jump

	_0384d9_jump:
		mov    _0964cc_data,%bx
		cmp    $0x00000c,%dl
		jb     _0384e7_jump
		mov    %cl,%dl

	_0384e7_jump:
		mov    %bx,_0964cc_data
		test   %dl,%dl
		je     _038531_jump
		mov    _0964ce_data,%dh
		xor    $0x000001,%dh
		mov    _095e2d_data,%al
		mov    %dh,_0964ce_data
		cmp    %al,%cl
		jne    _038527_jump
		mov    _0cd7b8_data,%edx
		mov    _0cd130_data,%eax
		call   _038320_func
		cmp    _0964ce_data,%cl
		jne    _038527_jump
		call   _03839c_func

	_038527_jump:
		mov    $_038400_jump,%eax
		call   _03cb54_func

	_038531_jump:
		call   _03784c_func
		cmp    _0cfa52_data,%cl
		jne    _038492_jump
		cmpb   $0x000000,_095e2d_data
		jne    _038565_jump
		mov    _0cd7b8_data,%edx
		mov    _0cd130_data,%eax
		call   _038320_func
		mov    $_038400_jump,%eax
		call   _03cb54_func

	_038565_jump:
		mov    _0964cc_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038574_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		call   _03784c_func
		mov    _0cfa4c_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    _0964ce_data,%edx
		mov    _0964d0_data,%di
		sar    $0x000010,%edx
		inc    %edi
		cmp    %eax,%edx
		jge    _03864a_jump
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		mov    %di,_0964d0_data
		call   _07e3cc_func
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07e3cc_func
		mov    $0x000036,%eax
		call   _041cb0_func
		test   %al,%al
		je     _03862b_jump
		mov    $0x00002a,%eax
		call   _041cb0_func
		test   %al,%al
		je     _03862b_jump
		mov    _0964d4_data,%ebx
		inc    %ebx
		mov    %ebx,_0964d4_data
		cmp    $0x000005,%ebx
		jl     _038633_jump
		mov    _0964ce_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0964d4_data
		mov    %bl,_0964ce_data
		jmp    _038633_jump

	_03862b_jump:
		xor    %edx,%edx
		mov    %edx,_0964d4_data

	_038633_jump:
		cmpb   $0x000000,_0964ce_data
		jne    _0388a5_jump
		call   _03839c_func
		jmp    _0388a5_jump

	_03864a_jump:
		jne    _03866c_jump
		mov    %di,_0964d0_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0964d2_data
		xor    %edx,%edx
		mov    %ah,_0964ce_data
		mov    %edx,_0964d4_data

	_03866c_jump:
		cmpb   $0x000000,_0964ce_data
		jne    _03877a_jump
		cmpl   $0x000014,_0964d4_data
		jl     _0386a5_jump
		mov    $0x000036,%eax
		call   _041cb0_func
		test   %al,%al
		je     _0386a5_jump
		mov    $0x00002a,%eax
		call   _041cb0_func
		test   %al,%al
		je     _0386a5_jump
		movb   $0x000001,_0964ce_data

	_0386a5_jump:
		mov    _0964d2_data,%si
		test   %si,%si
		jne    _03876b_jump
		mov    _0cd138_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0607f0_func
		and    $0x00ffff,%eax
		mov    %eax,_0964d4_data
		call   _060aa8_func
		call   _03839c_func
		cmpl   $0x000000,_0964d4_data
		jne    _0388a5_jump
		negw   _0964cc_data
		call   _038074_func
		mov    _0964ca_data,%edx
		mov    %al,_0964c8_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _06038c_func
		cmpw   $0x000000,_0964cc_data
		jge    _0388a5_jump
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		call   _07e3cc_func
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07e3cc_func
		call   _03839c_func
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		mov    %ax,_0964d2_data
		jmp    _0388a5_jump

	_03876b_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0964d2_data
		jmp    _0388a5_jump

	_03877a_jump:
		cmpl   $0x000000,_0964d4_data
		jne    _03878d_jump
		cmpw   $0x000000,_0964cc_data
		jl     _0387cc_jump

	_03878d_jump:
		mov    _0cd138_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0607f0_func
		and    $0x00ffff,%eax
		mov    %eax,_0964d4_data
		call   _060aa8_func
		cmpl   $0x000000,_0964d4_data
		jne    _0388a5_jump
		negw   _0964cc_data
		jmp    _038888_jump

	_0387cc_jump:
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		call   _07e3cc_func
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07e3cc_func
		call   _016e9a_func
		call   _016e8a_func
		mov    _095e28_data,%edi
		mov    _0cd138_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _038826_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_038826_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_03882f_jump:
		mov    $0x000036,%eax
		call   _041cb0_func
		test   %al,%al
		je     _03884b_jump
		mov    $0x00002a,%eax
		call   _041cb0_func
		test   %al,%al
		jne    _03885a_jump

	_03884b_jump:
		cmp    _0cfa52_data,%dl
		je     _03885a_jump
		call   _03784c_func
		jmp    _03882f_jump

	_03885a_jump:
		mov    _0cfa52_data,%al
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0964ce_data
		mov    %bx,_0964d2_data
		test   %al,%al
		je     _0388a5_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%ecx
		mov    %edi,_0964d4_data
		mov    %cx,_0964cc_data

	_038888_jump:
		call   _038074_func
		mov    _0964ca_data,%edx
		mov    %al,_0964c8_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _06038c_func

	_0388a5_jump:
		cmpb   $0x000000,_0cfa52_data
		jne    _03890f_jump
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		call   _07e3cc_func
		mov    $0x0000a0,%ebx
		mov    _0cd138_data,%edx
		mov    _0cd130_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07e3cc_func
		call   _016e9a_func
		call   _016e8a_func
		mov    _095e28_data,%edi
		mov    _0cd138_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _038908_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_038908_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_03890f_jump:
		cmpb   $0x000000,_0cfa52_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038924_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ah,%ah
		mov    _0cfa17_data,%dl
		mov    %ah,_0964ce_data
		test   %dl,%dl
		je     _03893f_jump
		call   _073164_func

	_03893f_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _038961_jump
		mov    $_0df7d4_data,%esi
		call   _012748_func
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a5a4_func

	_038961_jump:
		cmpb   $0x000000,_095e2d_data
		jne    _0389bc_jump
		call   _038074_func
		mov    $0xfffffffc,%edx
		mov    _0cd138_data,%ebx
		mov    %al,_0964c8_data
		mov    %dx,_0964cc_data
		mov    $0xfffffffc,%edx
		and    $0x0000ff,%eax
		mov    %ebx,%ecx
		call   _060738_func
		test   %al,%al
		je     _0389bc_jump
		xor    %ebx,%ebx
		mov    $_038574_func,%eax
		mov    %bx,_0964d0_data
		mov    %bx,_0964d2_data
		call   _03cb54_func
		call   _0606fc_case
		jmp    _0389c1_jump

	_0389bc_jump:
		call   _038408_func

	_0389c1_jump:
		cmpb   $0x000000,_0cfa50_data
		je     _0389ff_jump
		mov    $_0df7d8_data,%esi
		call   _012748_func
		mov    _0df7d8_data,%ebx
		mov    _0df7d4_data,%edx
		mov    _0cd858_data,%ecx
		sub    %edx,%ebx
		add    %ebx,%ecx
		mov    %ecx,_0cd858_data
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a5cc_func

	_0389ff_jump:
		cmpb   $0x000000,_0cfa17_data
		je     _038a0d_jump
		call   _073178_func

	_038a0d_jump:
		xor    %ch,%ch
		xor    %esi,%esi
		mov    %ch,_0cfa52_data
		mov    %esi,_0ccfd8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038a30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0df7dc_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _07fbb4_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _038b4b_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _038a86_jump

	_038a65_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edx,%edi
		mov    0x000034(%ebx,%ebp,1),%dx
		mov    %dx,(%edi)
		inc    %eax
		mov    0x000002(%ecx),%bx
		cmp    %bx,%ax
		jb     _038a65_jump

	_038a86_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _038b44_jump

	_038a99_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jae    _038aca_jump

	_038aab_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _038ac3_jump
		mov    %edi,%ebx
		mov    %eax,%esi

	_038ac3_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax
		jb     _038aab_jump

	_038aca_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%si
		je     _038b2e_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000068(%ebx,%ebp,1),%ax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		mov    %eax,0x000004(%esp)
		imul   $0x00006c,%eax,%eax
		mov    0x000068(%eax,%ebp,1),%di
		mov    %di,0x000068(%ebx,%ebp,1)
		mov    0x00000c(%esp),%ebx
		mov    %bx,0x000068(%eax,%ebp,1)
		lea    0x000000(,%edx,2),%eax
		add    (%esp),%eax
		mov    (%eax),%dx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		add    %edx,%edx
		mov    (%edx,%ebx,1),%bx
		mov    %bx,(%eax)
		add    (%esp),%edx
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edx)

	_038b2e_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jb     _038a99_jump

	_038b44_jump:
		mov    %esp,%eax
		call   _07fbcc_func

	_038b4b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038b58_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0df7dc_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000008(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x00000c(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _038bb0_jump
		mov    %ebx,%eax

	_038bb0_jump:
		mov    %ax,0x000006(%edi)
		test   %si,%si
		jl     _038bc9_jump
		mov    $0x000001,%eax
		movswl %si,%ebx
		cmp    %ebx,%eax
		jge    _038bc7_jump
		mov    %ebx,%eax

	_038bc7_jump:
		jmp    _038bdb_jump

	_038bc9_jump:
		movswl %si,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _038bd9_jump
		mov    %ebx,%eax

	_038bd9_jump:
		neg    %eax

	_038bdb_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _038d91_jump

	_038bee_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		mov    %dx,0x000004(%esp)
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		mov    %edx,0x00000c(%ecx)
		add    %edx,%eax
		mov    %edx,(%ecx)
		dec    %eax
		mov    %ebx,%edx
		mov    %eax,0x000024(%ecx)
		sar    $0x00001f,%edx
		mov    %eax,0x000018(%ecx)
		mov    %ebx,%eax
		movzbl (%edi),%ebp
		idiv   %ebp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,%bx
		movl   $0x000200,0x00002c(%ecx)
		add    %ebx,%eax
		mov    %ebx,0x000028(%ecx)
		dec    %eax
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000010(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000004(%ecx)
		cmp    $0x0000a0,%ax
		jae    _038c78_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _038c8d_jump

	_038c78_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000018(%edi),%eax
		sub    $0x0000a0,%ebx
		mov    %eax,0x00003c(%ecx)
		mov    %bx,0x000004(%esp)

	_038c8d_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x000008(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _038ce0_jump
		call   _081396_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		jmp    _038cf4_jump

	_038ce0_jump:
		call   _081396_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx

	_038cf4_jump:
		mov    %dx,0x000030(%ecx)
		call   _081396_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _081396_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _081396_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _081396_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _081396_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jb     _038bee_jump

	_038d91_jump:
		call   _038a30_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_038d9e_jump:
		ret    

	_038da0_case:
		mov    _0df7dc_data,%eax
		test   %eax,%eax
		je     _038d9e_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _038db7_jump
		add    $0x00001c,%eax
		call   _07fbcc_func

	_038db7_jump:
		cmpl   $0x000000,_0df7dc_data
		je     _038d9e_jump
		mov    $_0df7dc_data,%eax
		jmp    _07fbcc_func



_038dcc_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		mov    %bx,0x000008(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _038e86_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _038e86_jump
		mov    $0x000020,%eax
		call   _07fbb4_func
		mov    %eax,%edx
		mov    %eax,_0df7dc_data
		test   %eax,%eax
		je     _038e86_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000004(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _038e21_jump
		mov    %ebx,%eax

	_038e21_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _038e33_jump
		mov    %ebx,%eax

	_038e33_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    (%edx),%bl
		xor    %ah,%ah
		imul   %eax,%ebx
		mov    0x000018(%esp),%eax
		mov    %bx,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _07fbb4_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _038e86_jump
		mov    _0cd130_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_038e86_jump:
		test   %cl,%cl
		je     _038ec3_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07e380_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07e380_func
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _038b58_func
		jmp    _038ec8_jump

	_038ec3_jump:
		call   _038da0_case

	_038ec8_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_038ed4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0df7dc_data,%eax
		mov    %eax,0x000010(%esp)
		mov    0x00001c(%eax),%ecx
		mov    0x000006(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038ef5_jump
		neg    %eax

	_038ef5_jump:
		mov    %al,0x00002c(%esp)
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _039130_jump

	_038f10_jump:
		mov    (%ecx),%eax
		add    0x000018(%ecx),%eax
		sar    %eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000004(%ecx),%eax
		add    %ebx,%eax
		sar    %eax
		mov    0x000020(%ecx),%esi
		mov    %eax,0x00001c(%esp)
		mov    0x000008(%ecx),%eax
		xor    %bl,%bl
		add    %esi,%eax
		mov    %bl,0x000030(%esp)
		sar    %eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000018(%esp)

	_038f41_jump:
		xor    %dl,%dl
		cmpb   $0x000000,0x00002c(%esp)
		jbe    _038f9e_jump

	_038f4a_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%esi
		sar    $0x000010,%ebx
		add    %ebx,%esi
		mov    0x000008(%ecx,%eax,1),%edi
		mov    %esi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%edi
		jge    _038f7b_jump
		movw   $0x000000,0x000034(%ecx)

	_038f7b_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		inc    %dl
		add    %ebx,%edi
		mov    0x00002c(%esp),%bl
		mov    %edi,0x000008(%ecx,%eax,1)
		cmp    %bl,%dl
		jb     _038f4a_jump

	_038f9e_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%eax
		mov    0x000018(%esp),%edx
		sub    %edi,%eax
		mov    0x000004(%esi),%ebp
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		lea    0x000028(%esp),%ebx
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x000008(%esi),%esi
		mov    0x000038(%ecx),%al
		sub    %edx,%esi
		add    %eax,%eax
		lea    0x000024(%esp),%edx
		cwtl   
		call   _05e03c_func
		mov    0x000026(%esp),%eax
		mov    (%esp),%edi
		sar    $0x000010,%eax
		imul   %eax,%edi
		mov    0x000022(%esp),%ebx
		mov    %ebp,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		imul   %eax,%ebp
		sub    %edx,%edi
		imul   (%esp),%ebx
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		sar    $0x000009,%edi
		cwtl   
		lea    0x000024(%esp),%edx
		add    %ebx,%ebp
		lea    0x000028(%esp),%ebx
		mov    %edi,(%esp)
		call   _05e03c_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edi
		sar    $0x000010,%ebx
		imul   %ebx,%edi
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		imul   %esi,%eax
		imul   (%esp),%ebx
		add    %edx,%edi
		mov    %eax,%esi
		xor    %eax,%eax
		lea    0x000024(%esp),%edx
		mov    0x000036(%ecx),%al
		sub    %ebx,%esi
		add    %eax,%eax
		lea    0x000028(%esp),%ebx
		cwtl   
		sar    $0x000009,%esi
		call   _05e03c_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		sar    $0x000009,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    0x000018(%esp),%ebp
		sub    %ebx,%esi
		mov    %edx,0x00000c(%esp)
		mov    0x000008(%esp),%edx
		sar    $0x000009,%esi
		add    0x00000c(%esp),%edx
		mov    %edi,%eax
		mov    %edx,0x000014(%esp)
		mov    %edi,%edx
		add    %ebp,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x000004(%esp),%edx
		mov    0x000034(%esp),%bl
		add    %edx,%eax
		mov    %eax,0x000040(%ecx,%ebx,4)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x00001c(%esp),%esi
		add    %esi,%eax
		mov    %eax,0x000044(%ecx,%ebx,4)
		mov    0x000030(%esp),%al
		inc    %al
		mov    %al,0x000030(%esp)
		mov    %bl,%ah
		add    $0x000002,%ah
		mov    %ah,0x000034(%esp)
		cmp    $0x000004,%al
		jb     _038f41_jump
		mov    0x00002c(%esp),%al
		mulb   0x000039(%ecx)
		mov    0x000036(%ecx),%dh
		mov    0x00003a(%ecx),%bl
		add    %al,%dh
		mov    0x00002c(%esp),%al
		mul    %bl
		mov    %dh,0x000036(%ecx)
		mov    0x000037(%ecx),%bh
		mov    0x00003b(%ecx),%dl
		add    %al,%bh
		mov    0x00002c(%esp),%al
		mul    %dl
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000020(%esp),%esi
		mov    %dh,-0x000034(%ecx)
		mov    0x000010(%esp),%edx
		mov    %bh,-0x000035(%ecx)
		inc    %esi
		mov    0x000002(%edx),%di
		mov    %esi,0x000020(%esp)
		cmp    %di,%si
		jb     _038f10_jump

	_039130_jump:
		mov    0x000010(%esp),%eax
		cmpw   $0x000014,0x000004(%eax)
		jbe    _039188_jump
		xor    %edx,%edx
		mov    0x000004(%eax),%dx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _039188_jump
		mov    0x000010(%esp),%ebx
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%ebx),%cx
		mov    0x00001c(%eax),%eax
		test   %cx,%cx
		jbe    _039188_jump

	_039167_jump:
		xor    %ebx,%ebx
		mov    0x000032(%eax),%si
		mov    0x00002c(%esp),%bl
		add    %ebx,%esi
		mov    0x000010(%esp),%ebx
		mov    %si,0x000032(%eax)
		inc    %edx
		mov    0x000002(%ebx),%di
		add    $0x00006c,%eax
		cmp    %di,%dx
		jb     _039167_jump

	_039188_jump:
		xor    %ah,%ah
		mov    0x000010(%esp),%edx
		mov    0x00002c(%esp),%al
		mov    0x000004(%edx),%bx
		add    %eax,%ebx
		mov    0x000006(%edx),%cx
		mov    %bx,0x000004(%edx)
		cmp    %cx,%bx
		jbe    _0391ab_jump
		movw   $0x000000,0x000004(%edx)

	_0391ab_jump:
		mov    0x000010(%esp),%eax
		mov    0x000004(%eax),%ax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0391c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0df7dc_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _0391e2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0391e2_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _010045_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _0391e2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039210_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi

	_039217_jump:
		movswl %si,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $_0cc578_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _039288_jump
		mov    $0x000002,%cl
		mov    $0x0000bc,%edi
		mov    %cl,_0cc64c_data(%edx)
		xor    %al,%al
		mov    %di,_0cc64a_data(%edx)
		mov    %al,_0cc64d_data(%edx)
		mov    %al,_0cc64e_data(%edx)
		movw   $0x000096,_0cc648_data(%edx)
		mov    $0x000005,%ch
		mov    %ebx,%eax
		mov    %ch,_0cc64f_data(%edx)
		call   _01f21c_func
		mov    _0cc640_data(%edx),%bx
		mov    %bx,_0cc648_data(%edx)
		movb   $0x000020,_0cc578_data(%edx)
		jmp    _039290_jump

	_039288_jump:
		xor    %ah,%ah
		mov    %ah,_0cc64d_data(%edx)

	_039290_jump:
		inc    %esi
		cmp    $0x000009,%si
		jle    _039217_jump
		mov    $0x0000ff,%bh
		mov    %bh,_0cfa5d_data
		mov    %bh,_0cfa59_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0392ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _039327_jump

	_0392c3_jump:
		cmpw   $0x0000ee,0x000060(%edx)
		jne    _03931b_jump
		mov    0x000081(%edx),%cl
		test   $0x000004,%cl
		jne    _03931b_jump
		mov    %cl,%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)
		call   _01f8e8_func
		movw   $0x000008,0x000040(%edx)
		mov    0x000081(%edx),%al
		movw   $0x000000,0x000042(%edx)
		or     $0x000008,%al
		mov    %al,0x000081(%edx)
		mov    0x000034(%edx),%ax
		movb   $0x000000,0x00006b(%edx)
		mov    %ax,_0cf822_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03931b_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _0392c3_jump

	_039327_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03932c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000ff,%ah
		mov    _0cfa36_data,%dl
		mov    %ah,_0cfa5d_data
		test   %dl,%dl
		jne    _039349_jump
		mov    %dl,_0caf65_data

	_039349_jump:
		xor    %bl,%bl
		mov    %bl,_0cfa57_data
		call   _01ef80_func
		mov    _0cf88c_data,%si
		cmp    $0x000002,%si
		jb     _039378_jump
		jbe    _039845_jump
		cmp    $0x000003,%si
		je     _0399fa_jump
		jmp    _039bb5_jump

	_039378_jump:
		cmp    $0x000001,%si
		jne    _039bb5_jump
		mov    _0cf87c_data,%si
		cmp    $0x000008,%si
		jb     _0393a4_jump
		jbe    _03953d_jump
		cmp    $0x000011,%si
		je     _0396bb_jump
		jmp    _039bb5_jump

	_0393a4_jump:
		cmp    $0x000003,%si
		jne    _039bb5_jump
		mov    $0x000001,%ah
		mov    $_0cc578_data,%edi
		mov    _0c2bf8_data,%esi
		mov    %ah,_0cfa57_data
		push   %edi

	_0393c2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0393da_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0393c2_jump

	_0393da_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2bfc_data,%esi
		push   %edi

	_0393e7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0393ff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0393e7_jump

	_0393ff_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2c00_data,%esi
		push   %edi

	_03940c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039424_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03940c_jump

	_039424_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2c04_data,%esi
		push   %edi

	_039431_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039449_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039431_jump

	_039449_jump:
		pop    %edi
		mov    $_0cc8d8_data,%edi
		mov    _0c2c08_data,%esi
		push   %edi

	_039456_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03946e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039456_jump

	_03946e_jump:
		pop    %edi
		mov    $_0cc9b0_data,%edi
		mov    _0c2c0c_data,%esi
		push   %edi

	_03947b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039493_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03947b_jump

	_039493_jump:
		pop    %edi
		mov    $_0cca88_data,%edi
		mov    _0c2c10_data,%esi
		push   %edi

	_0394a0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0394b8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394a0_jump

	_0394b8_jump:
		pop    %edi
		mov    $_0ccb60_data,%edi
		mov    _0c2c14_data,%esi
		push   %edi

	_0394c5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0394dd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394c5_jump

	_0394dd_jump:
		pop    %edi
		mov    $_0ccc38_data,%edi
		mov    _0c2c18_data,%esi
		push   %edi

	_0394ea_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039502_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0394ea_jump

	_039502_jump:
		pop    %edi
		mov    $_0ccd10_data,%edi
		mov    _0c2c1c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_039514_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03952c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039514_jump

	_03952c_jump:
		pop    %edi
		mov    _0c2f88_data,%edx
		mov    $_0ccb60_data,%eax
		jmp    _039bad_jump

	_03953d_jump:
		mov    $0x000001,%al
		mov    $_0cc578_data,%edi
		mov    _0c2c20_data,%esi
		mov    %al,_0cfa57_data
		push   %edi

	_039550_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039568_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039550_jump

	_039568_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2c24_data,%esi
		push   %edi

	_039575_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03958d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039575_jump

	_03958d_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2c28_data,%esi
		push   %edi

	_03959a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0395b2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03959a_jump

	_0395b2_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2c2c_data,%esi
		push   %edi

	_0395bf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0395d7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0395bf_jump

	_0395d7_jump:
		pop    %edi
		mov    $_0cc8d8_data,%edi
		mov    _0c2c30_data,%esi
		push   %edi

	_0395e4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0395fc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0395e4_jump

	_0395fc_jump:
		pop    %edi
		mov    $_0cc9b0_data,%edi
		mov    _0c2c34_data,%esi
		push   %edi

	_039609_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039621_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039609_jump

	_039621_jump:
		pop    %edi
		mov    $_0cca88_data,%edi
		mov    _0c2c38_data,%esi
		push   %edi

	_03962e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039646_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03962e_jump

	_039646_jump:
		pop    %edi
		mov    $_0ccb60_data,%edi
		mov    _0c2c3c_data,%esi
		push   %edi

	_039653_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03966b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039653_jump

	_03966b_jump:
		pop    %edi
		mov    $_0ccc38_data,%edi
		mov    _0c2c40_data,%esi
		push   %edi

	_039678_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039690_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039678_jump

	_039690_jump:
		pop    %edi
		mov    $_0ccd10_data,%edi
		mov    _0c2c44_data,%esi
		push   %edi

	_03969d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0396b5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03969d_jump

	_0396b5_jump:
		pop    %edi
		jmp    _039bb5_jump

	_0396bb_jump:
		mov    $0x000001,%ch
		mov    $_0cc578_data,%edi
		mov    _0c2c48_data,%esi
		mov    %ch,_0cfa57_data
		push   %edi

	_0396cf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0396e7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0396cf_jump

	_0396e7_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2c4c_data,%esi
		push   %edi

	_0396f4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03970c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0396f4_jump

	_03970c_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2c50_data,%esi
		push   %edi

	_039719_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039731_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039719_jump

	_039731_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2c54_data,%esi
		push   %edi

	_03973e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039756_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03973e_jump

	_039756_jump:
		pop    %edi
		mov    $_0cc8d8_data,%edi
		mov    _0c2c58_data,%esi
		push   %edi

	_039763_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03977b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039763_jump

	_03977b_jump:
		pop    %edi
		mov    $_0cc9b0_data,%edi
		mov    _0c2c5c_data,%esi
		push   %edi

	_039788_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0397a0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039788_jump

	_0397a0_jump:
		pop    %edi
		mov    $_0cca88_data,%edi
		mov    _0c2c60_data,%esi
		push   %edi

	_0397ad_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0397c5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397ad_jump

	_0397c5_jump:
		pop    %edi
		mov    $_0ccb60_data,%edi
		mov    _0c2c64_data,%esi
		push   %edi

	_0397d2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0397ea_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397d2_jump

	_0397ea_jump:
		pop    %edi
		mov    $_0ccc38_data,%edi
		mov    _0c2c68_data,%esi
		push   %edi

	_0397f7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03980f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0397f7_jump

	_03980f_jump:
		pop    %edi
		mov    $_0ccd10_data,%edi
		mov    _0c2c6c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_039821_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039839_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039821_jump

	_039839_jump:
		pop    %edi
		mov    _0c2f88_data,%edx
		jmp    _039ba8_jump

	_039845_jump:
		mov    _0cf87c_data,%dx
		cmp    $0x00000b,%dx
		jne    _039bb5_jump
		mov    $0x000001,%cl
		mov    $_0cc578_data,%edi
		mov    _0c2c70_data,%esi
		mov    %cl,_0cfa57_data
		push   %edi

	_03986a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039882_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03986a_jump

	_039882_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2c74_data,%esi
		push   %edi

	_03988f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0398a7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03988f_jump

	_0398a7_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2c78_data,%esi
		push   %edi

	_0398b4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0398cc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0398b4_jump

	_0398cc_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2c7c_data,%esi
		push   %edi

	_0398d9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0398f1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0398d9_jump

	_0398f1_jump:
		pop    %edi
		mov    $_0cc8d8_data,%edi
		mov    _0c2c80_data,%esi
		push   %edi

	_0398fe_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039916_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0398fe_jump

	_039916_jump:
		pop    %edi
		mov    $_0cc9b0_data,%edi
		mov    _0c2c84_data,%esi
		push   %edi

	_039923_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03993b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039923_jump

	_03993b_jump:
		pop    %edi
		mov    $_0cca88_data,%edi
		mov    _0c2c88_data,%esi
		push   %edi

	_039948_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039960_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039948_jump

	_039960_jump:
		pop    %edi
		mov    $_0ccb60_data,%edi
		mov    _0c2c8c_data,%esi
		push   %edi

	_03996d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039985_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03996d_jump

	_039985_jump:
		pop    %edi
		mov    $_0ccc38_data,%edi
		mov    _0c2c90_data,%esi
		push   %edi

	_039992_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0399aa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039992_jump

	_0399aa_jump:
		pop    %edi
		mov    $_0ccd10_data,%edi
		mov    _0c2c94_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0399bc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0399d4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0399bc_jump

	_0399d4_jump:
		pop    %edi
		mov    _0c2f86_data,%edx
		mov    $_0ccc38_data,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		mov    $0x0000ff,%ebx
		mov    _0c2f86_data,%edx
		mov    %edi,%eax
		jmp    _039bad_jump

	_0399fa_jump:
		mov    _0cf87c_data,%dx
		cmp    $0x00000b,%dx
		jne    _039bb5_jump
		mov    $0x000001,%bh
		mov    $_0cc578_data,%edi
		mov    _0c2c98_data,%esi
		mov    %bh,_0cfa57_data
		push   %edi

	_039a1f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a37_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a1f_jump

	_039a37_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2c9c_data,%esi
		push   %edi

	_039a44_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a5c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a44_jump

	_039a5c_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2ca0_data,%esi
		push   %edi

	_039a69_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039a81_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a69_jump

	_039a81_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2ca4_data,%esi
		push   %edi

	_039a8e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039aa6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039a8e_jump

	_039aa6_jump:
		pop    %edi
		mov    $_0cc8d8_data,%edi
		mov    _0c2ca8_data,%esi
		push   %edi

	_039ab3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039acb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039ab3_jump

	_039acb_jump:
		pop    %edi
		mov    $_0cc9b0_data,%edi
		mov    _0c2cac_data,%esi
		push   %edi

	_039ad8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039af0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039ad8_jump

	_039af0_jump:
		pop    %edi
		mov    $_0cca88_data,%edi
		mov    _0c2cb0_data,%esi
		push   %edi

	_039afd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039b15_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039afd_jump

	_039b15_jump:
		pop    %edi
		mov    $_0ccb60_data,%edi
		mov    _0c2cb4_data,%esi
		push   %edi

	_039b22_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039b3a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039b22_jump

	_039b3a_jump:
		pop    %edi
		mov    $_0ccc38_data,%edi
		mov    _0c2cb8_data,%esi
		push   %edi

	_039b47_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039b5f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039b47_jump

	_039b5f_jump:
		pop    %edi
		mov    $_0ccd10_data,%edi
		mov    _0c2cbc_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_039b71_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039b89_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039b71_jump

	_039b89_jump:
		pop    %edi
		mov    _0c2f8c_data,%edx
		mov    $_0ccb60_data,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		mov    $0x0000ff,%ebx
		mov    _0c2f8c_data,%edx

	_039ba8_jump:
		mov    $_0ccc38_data,%eax

	_039bad_jump:
		sar    $0x000010,%edx
		call   _01f4a0_func

	_039bb5_jump:
		cmpb   $0x000000,_0cfa57_data
		je     _039bc8_jump
		call   _039210_func
		call   _0392ac_func

	_039bc8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039bd0_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x00007f(%eax),%bl
		cmp    %dx,%bx
		jge    _039be4_jump
		mov    %bl,%dl
		inc    %dl
		mov    %dl,0x00007f(%eax)
		pop    %ebx
		ret    

	_039be4_jump:
		movb   $0x000000,0x00007f(%eax)
		incb   _0cfa5d_data
		pop    %ebx
		ret    

_039bf0_switch:
		.long   _039d12_case
		.long   _039c21_case
		.long   _039c79_case
		.long   _039ca6_case
		.long   _039cc7_case




_039c04_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007d(%eax),%al
		cmp    $0x000004,%al
		ja     _039d12_case
		and    $0x0000ff,%eax
		jmp    *%cs:_039bf0_switch(,%eax,4)

	_039c21_case:
		mov    $0x000064,%edx
		mov    %ecx,%eax
		call   _039bd0_func
		mov    _0cfa5d_data,%bl
		cmp    $0x000005,%bl
		je     _039c58_jump
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cc578_data(,%eax,8)
		jne    _039d19_jump

	_039c58_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _061220_func
		movb   $0x000000,0x00007d(%ecx)
		mov    $0x0000ff,%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,_0cfa5d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039c79_case:
		mov    $0x00006e,%edx
		mov    %ecx,%eax
		call   _039bd0_func
		cmpb   $0x000007,_0cfa5d_data
		jne    _039d19_jump
		movb   $0x000003,0x00007d(%ecx)
		mov    $0x0000ff,%dh
		movb   $0x000000,0x00007f(%ecx)
		mov    %dh,_0cfa5d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039ca6_case:
		mov    0x00007f(%ecx),%bh
		inc    %bh
		mov    %bh,0x00007f(%ecx)
		cmp    $0x000032,%bh
		jbe    _039d19_jump
		movb   $0x000004,0x00007d(%ecx)
		mov    $0x000007,%ah
		movb   $0x000000,0x00007f(%ecx)
		mov    %ah,_0cfa5d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039cc7_case:
		cmpb   $0x000000,_0cf9f7_data
		sete   %al
		xor    %ah,%ah
		dec    %eax
		mov    _0cfa5d_data,%dh
		mov    %ax,0x000042(%ecx)
		cmp    $0x000009,%dh
		jae    _039d19_jump
		xor    %eax,%eax
		mov    %dh,%al
		lea    0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cc578_data(,%eax,8)
		je     _039d19_jump
		mov    $0x000078,%edx
		mov    %ecx,%eax
		call   _039bd0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039d12_case:
		movb   $0x0000ff,_0cfa5d_data

	_039d19_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039d20_func:
		push   %edx
		mov    _0cf87c_data,%dx
		mov    _0cf88c_data,%ax
		cmp    $0x000002,%ax
		jb     _039d3e_jump
		jbe    _039d6d_jump
		cmp    $0x000003,%ax
		je     _039d7c_jump
		jmp    _039d89_jump

	_039d3e_jump:
		cmp    $0x000001,%ax
		jne    _039d89_jump
		cmp    $0x000003,%dx
		jne    _039d51_jump
		orb    $0x000001,_0cf81a_data

	_039d51_jump:
		cmp    $0x000008,%dx
		jne    _039d5e_jump
		orb    $0x000002,_0cf81a_data

	_039d5e_jump:
		cmp    $0x000011,%dx
		jne    _039d89_jump
		orb    $0x000080,_0cf81a_data
		jmp    _039d89_jump

	_039d6d_jump:
		cmp    $0x00000b,%dx
		jne    _039d89_jump
		orb    $0x000004,_0cf81a_data
		jmp    _039d89_jump

	_039d7c_jump:
		cmp    $0x00000b,%dx
		jne    _039d89_jump
		orb    $0x000001,_0cf81b_data

	_039d89_jump:
		mov    %dx,_0cf87c_data
		pop    %edx
		ret    

_039d94_switch:
		.long   _039df4_case
		.long   _039ea8_case
		.long   _039ec6_case
		.long   _039ec6_case
		.long   _039f1d_case
		.long   _039fa1_case
		.long   _039f43_case




_039db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0cf820_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cfa5d_data,%al
		mov    %al,(%esp)
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%al
		ja     _039fa1_case
		and    $0x0000ff,%eax
		jmp    *%cs:_039d94_switch(,%eax,4)

	_039df4_case:
		mov    0x00007b(%esi),%bl
		test   %bl,%bl
		je     _039e99_jump
		xor    %eax,%eax
		mov    _0ce678_data,%edx
		mov    _0ce6b8_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		test   %eax,%eax
		jge    _039e1c_jump
		neg    %eax

	_039e1c_jump:
		cmp    $0x000003,%eax
		jge    _039e9f_jump
		mov    _0ce6bd_data,%al
		cmp    $0x000001,%al
		je     _039e51_jump
		test   %al,%al
		je     _039e51_jump
		cmp    $0x000003,%al
		jne    _039e3f_jump
		cmpb   $0x000014,_0ce6bc_data
		je     _039e51_jump

	_039e3f_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _039e9f_jump
		cmpb   $0x000015,_0ce6bc_data
		jne    _039e9f_jump

	_039e51_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		mov    $0x000022,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    _0ce6d1_data,%al
		mov    $0xffff8300,%ebx
		or     $0x000008,%al
		mov    %bx,_0cf86a_data
		mov    %al,_0ce6d1_data
		jmp    _039e9f_jump

	_039e99_jump:
		mov    %bl,_0cfa77_data

	_039e9f_jump:
		movb   $0x000000,0x00007d(%esi)
		jmp    _039fa1_case

	_039ea8_case:
		cmpb   $0x0000ff,(%esp)
		jne    _039fa1_case
		xor    %dh,%dh
		movb   $0x000001,0x00007d(%esi)
		mov    %dh,_0cfa5d_data
		mov    %dh,0x00007f(%esi)
		jmp    _039fa1_case

	_039ec6_case:
		mov    _0ce6bd_data,%ah
		cmp    $0x000001,%ah
		je     _039ee3_jump
		test   %ah,%ah
		je     _039ee3_jump
		cmp    $0x000003,%ah
		jne    _039ef7_jump
		cmpb   $0x000022,_0ce6bc_data
		jne    _039ef7_jump

	_039ee3_jump:
		mov    $0x000023,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func

	_039ef7_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _039fa1_case
		cmpb   $0x000024,_0ce6bc_data
		jne    _039fa1_case
		movb   $0x0000ff,_0ce6bb_data
		jmp    _039fa1_case

	_039f1d_case:
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _039f3e_jump
		call   _039d20_func
		movb   $0x000002,0x00007d(%esi)
		mov    $0x000005,%al
		movb   $0x000000,0x00007f(%esi)
		mov    %al,_0cfa5d_data
		jmp    _039fa1_case

	_039f3e_jump:
		mov    %al,0x00007d(%esi)
		jmp    _039fa1_case

	_039f43_case:
		cmpb   $0x000003,_0ce6bd_data
		jne    _039f64_jump
		cmpb   $0x000024,_0ce6bc_data
		jne    _039f64_jump
		mov    $0x000025,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_039f64_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _039fa1_case
		cmpb   $0x000014,_0ce6bc_data
		jne    _039fa1_case
		mov    _0ce678_data,%ax
		mov    0x00007d(%esi),%bh
		mov    %ax,_0cf86a_data
		cmp    $0x000004,%bh
		jne    _039fa1_case
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x008300,_0cf86a_data

	_039fa1_case:
		mov    %esi,%eax
		call   _039c04_func
		mov    _0cfa5d_data,%al
		mov    (%esp),%ah
		cmp    %ah,%al
		je     _03a066_jump
		mov    $0x000001,%dl
		mov    %ah,_0cfa59_data
		mov    %dl,_0cfa58_data
		cmp    $0x0000ff,%al
		je     _03a066_jump
		mov    0x000081(%ecx),%bl
		or     $0x000004,%bl
		mov    0x000024(%ecx),%esi
		mov    %bl,0x000081(%ecx)
		test   %esi,%esi
		jne    _039feb_jump
		mov    %ecx,%eax
		call   _01f8e8_func

	_039feb_jump:
		mov    _0cf89c_data,%esi
		xor    %eax,%eax
		sar    $0x000010,%esi
		mov    0x000068(%ecx),%al
		movw   $0x000000,0x00005e(%ecx)
		sub    %eax,%esi
		mov    _0cf8a4_data,%eax
		mov    %esi,0x000028(%ecx)
		sar    $0x000010,%eax
		movzbl 0x000069(%ecx),%esi
		add    $0x0000be,%eax
		movb   $0x000000,0x00006b(%ecx)
		sub    %esi,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bh
		mov    0x000068(%ecx),%al
		or     $0x000008,%bh
		mov    %eax,%esi
		mov    %ax,0x000036(%ecx)
		xor    %eax,%eax
		neg    %esi
		mov    0x000069(%ecx),%al
		mov    %si,0x000036(%ecx)
		mov    $0x0000be,%esi
		mov    %bh,0x000081(%ecx)
		sub    %eax,%esi
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    %si,0x000038(%ecx)
		mov    %al,_0cfa59_data

	_03a066_jump:
		cmpb   $0x000000,_0cfa58_data
		je     _03a0a9_jump
		xor    %eax,%eax
		mov    _0cfa59_data,%al
		lea    0x000000(,%eax,8),%esi
		sub    %eax,%esi
		shl    $0x000002,%esi
		sub    %eax,%esi
		shl    $0x000003,%esi
		mov    _0cc64a_data(%esi),%di
		cmp    $0x0000dc,%di
		jge    _03a0a1_jump
		mov    %edi,%eax
		inc    %eax
		mov    %ax,_0cc64a_data(%esi)
		jmp    _03a0a9_jump

	_03a0a1_jump:
		xor    %ah,%ah
		mov    %ah,_0cfa58_data

	_03a0a9_jump:
		testb  $0x000004,0x000081(%ecx)
		je     _03a10c_jump
		cmpl   $0x000002,0x000030(%ecx)
		jne    _03a0d7_jump
		mov    0x000024(%ecx),%ebp
		test   %ebp,%ebp
		jne    _03a0d7_jump
		movw   $0x000000,0x00005e(%ecx)
		mov    0x000081(%ecx),%dh
		mov    %ebp,0x000030(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_03a0d7_jump:
		mov    0x000028(%ecx),%eax
		mov    0x000036(%ecx),%dx
		add    $0x000004,%eax
		add    $0x000004,%edx
		mov    %eax,0x000028(%ecx)
		mov    %dx,0x000036(%ecx)
		cmp    $0x000136,%dx
		jle    _03a10c_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)

	_03a10c_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a118_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _03a1ab_jump
		mov    _0ce6bd_data,%bl
		cmp    $0x000002,%bl
		jne    _03a156_jump
		mov    $0x000001,%ch
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dx,_0ce690_data
		mov    %bx,_0ce6a2_data
		mov    %ch,_0cfa77_data
		mov    %bx,_0cf866_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a156_jump:
		cmp    $0x000001,%bl
		je     _03a16d_jump
		test   %bl,%bl
		je     _03a16d_jump
		cmp    $0x000003,%bl
		jne    _03a1b3_jump
		cmpb   $0x000014,_0ce6bc_data
		jne    _03a1b3_jump

	_03a16d_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%ax
		mov    _0ce6b8_data,%dl
		sub    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce678_data,%dh
		mov    %ax,_0cf86a_data
		test   $0x000001,%dh
		je     _03a198_jump
		orb    $0x000001,_0cf86a_data
		jmp    _03a19f_jump

	_03a198_jump:
		andb   $0x0000fe,_0cf86a_data

	_03a19f_jump:
		xor    %cl,%cl
		mov    %cl,_0cfa77_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a1ab_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa77_data

	_03a1b3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a1c0_func:
		push   %ecx
		push   %edi
		mov    _0cd138_data,%edi
		mov    %edi,_09653c_data
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %eax,%eax
		pop    %edi
		pop    %ecx
		ret    



_03a1e0_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_09653c_data
		pop    %edx
		ret    



_03a238_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    $0x000011,%ebx
		xor    %edx,%edx
		call   _080420_func
		mov    $0x00003c,%ah
		mov    $0x000300,%ebx
		movl   $0x000140,0x000004(%ecx)
		mov    _09653c_data,%edi
		movl   $0x0000c8,0x000008(%ecx)
		mov    %ah,_096530_data
		mov    %edi,(%ecx)
		mov    _0cfa4c_data,%cl
		mov    %ah,_0cfa4c_data
		mov    $0x00003c,%eax
		mov    %cl,_0964d8_data
		call   _03c194_jump
		mov    _095e28_data,%edi
		xor    %edx,%edx
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $_0df7e0_data,%eax
		call   _080420_func
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a2ac_func:
		mov    _0964d8_data,%al
		mov    %al,_0cfa4c_data
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		jmp    _03c194_jump



_03a2c4_func:
		mov    0x000004(%eax),%eax
		ret    



_03a2c8_func:
		mov    0x000008(%eax),%eax
		ret    



_03a2cc_func:
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		ret    



_03a2d8_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ecx,%esi
		mov    0x00000c(%esp),%ecx
		mov    %edx,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03a2fc_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03a2fc_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _03a305_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_03a305_jump:
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a30c_func:
		push   %edi
		mov    %eax,%edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    %edx,%ebx
		mov    %cl,%al
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _03a333_jump
		rep stos %al,%es:(%edi)

	_03a333_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _03a348_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_03a348_jump:
		pop    %edi
		ret    $0x000004



_03a34c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %cx,(%esp)
		mov    %edx,%eax
		mov    0x000014(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%esi),%esi
		add    %edx,%edx
		add    %eax,%esi
		xor    %eax,%eax
		mov    %edx,%ebp
		mov    0x000001(%esp),%al
		sar    %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		shl    $0x000008,%ebx
		mov    (%esp),%al
		mov    %esi,%edi
		add    %ebx,%eax
		mov    %edx,%ebx
		and    $0x000001,%ebp
		cld    
		mov    %eax,%ecx
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %ebx,%ecx
		and    $0x000001,%ecx
		je     _03a39e_jump
		rep stos %ax,%es:(%edi)

	_03a39e_jump:
		mov    %ebx,%ecx
		shr    %ecx
		je     _03a3a6_jump
		rep stos %eax,%es:(%edi)

	_03a3a6_jump:
		test   %ebp,%ebp
		je     _03a3af_jump
		mov    (%esp),%al
		mov    %al,(%esi)

	_03a3af_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a3b8_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _03a408_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_03a3d5_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0df7e0_data(%eax)
		xor    %edx,%edx
		mov    0x000001(%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0df7e1_data(%eax)
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000003,%eax
		sar    $0x000002,%edx
		add    $0x000003,%ebx
		mov    %dl,_0df7df_data(%eax)
		cmp    %ecx,%eax
		jl     _03a3d5_jump

	_03a408_jump:
		cmp    _096534_data,%esi
		jge    _03a416_jump
		mov    %esi,_096534_data

	_03a416_jump:
		cmp    _096538_data,%edi
		jle    _03a424_jump
		mov    %edi,_096538_data

	_03a424_jump:
		pop    %edi
		pop    %esi
		ret    



_03a428_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _03a469_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_03a445_jump:
		mov    (%ebx),%dl
		mov    %dl,_0df7e0_data(%eax)
		mov    0x000001(%ebx),%dl
		mov    %dl,_0df7e1_data(%eax)
		add    $0x000003,%eax
		mov    0x000002(%ebx),%dl
		add    $0x000003,%ebx
		mov    %dl,_0df7df_data(%eax)
		cmp    %ecx,%eax
		jl     _03a445_jump

	_03a469_jump:
		cmp    _096534_data,%esi
		jge    _03a477_jump
		mov    %esi,_096534_data

	_03a477_jump:
		cmp    _096538_data,%edi
		jle    _03a485_jump
		mov    %edi,_096538_data

	_03a485_jump:
		pop    %edi
		pop    %esi
		ret    



_03a488_func:
		push   %edx
		mov    $0x000043,%edx
		movl   $0x001200,(%eax)
		mov    $0x000034,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		xor    %eax,%eax
		pop    %edx
		ret    



_03a4a4_func:
		push   %edx
		mov    $0x000036,%al
		mov    $0x000043,%edx
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		pop    %edx
		ret    



_03a4b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    $0x00001a,%eax
		call   _0813ca_func
		mov    $0x000043,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %ecx,%ecx
		sub    %eax,%eax
		in     (%dx),%al
		sub    %eax,%eax
		in     (%dx),%al
		mov    0x00000c(%esp),%cl
		xor    %edx,%edx
		mov    %al,%bl
		mov    0x00000d(%esp),%dl
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000008(%esp),%al
		add    %ecx,%edx
		shl    $0x000018,%eax
		shl    $0x000008,%edx
		neg    %bl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,%dl
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a518_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		imul   (%edx),%eax
		mov    $0x0003e8,%ecx
		xor    %edx,%edx
		div    %ecx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _03a4b8_func
		add    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_03a538_func:
		push   %ebx
		mov    %eax,%ebx
		push   $0x000200
		push   %edx
		call   _0813e7_func
		add    $0x000008,%esp
		mov    %eax,(%ebx)
		test   %eax,%eax
		jge    _03a556_jump
		mov    $0xfffffffb,%eax
		pop    %ebx
		ret    

	_03a556_jump:
		xor    %eax,%eax
		pop    %ebx
		ret    



_03a55c_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %esp,%ecx
		mov    %ebx,(%esp)
		call   _08165a_func
		test   %eax,%eax
		je     _03a573_jump
		mov    $0xfffffffa,%eax

	_03a573_jump:
		add    $0x000004,%esp
		pop    %ecx
		ret    



_03a578_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    %ebx,%esi
		mov    (%edx),%edi
		test   %ebx,%ebx
		je     _03a5ac_jump

	_03a586_jump:
		cmp    $0x00fff0,%esi
		jbe    _03a595_jump
		mov    $0x00fff0,%ecx
		jmp    _03a597_jump

	_03a595_jump:
		mov    %esi,%ecx

	_03a597_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _03a55c_func
		test   %eax,%eax
		jl     _03a5ae_jump
		add    %ecx,%edi
		sub    %ecx,%esi
		jne    _03a586_jump

	_03a5ac_jump:
		xor    %eax,%eax

	_03a5ae_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a5b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cfa26_data,%ah
		cmp    $0x000004,%ah
		jne    _03a5ce_jump
		xor    %bl,%bl
		mov    %bl,_0964d9_data
		jmp    _03a5ec_jump

	_03a5ce_jump:
		cmp    $0x000005,%ah
		jae    _03a5dc_jump
		mov    $0xfffffff3,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a5dc_jump:
		mov    _0cfa12_data,%dh
		test   %dh,%dh
		sete   %al
		mov    %al,_0964d9_data

	_03a5ec_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _080420_func
		lea    0x000011(%ecx),%eax
		call   _03a488_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a62e_jump
		call   _03a1c0_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a626_jump
		mov    %ecx,%eax
		call   _03a238_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a626_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a626_jump:
		lea    0x000011(%ecx),%eax
		call   _03a4a4_func

	_03a62e_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a634_func:
		push   %edx
		mov    %eax,%edx
		call   _03a2ac_func
		lea    0x000011(%edx),%eax
		call   _03a4a4_func
		call   _03a1e0_func
		cmpb   $0x000000,_0cfa50_data
		je     _03a661_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a5b8_func

	_03a661_jump:
		pop    %edx
		ret    



_03a664_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000100,%ebx
		xor    %ebp,%ebp
		mov    (%eax),%si
		mov    %ebp,_096538_data
		mov    %ebx,_096534_data
		mov    %esi,0x000008(%esp)
		lea    0x000002(%eax),%esi

	_03a68e_jump:
		mov    0x000008(%esp),%edx
		dec    %edx
		mov    %edx,0x000008(%esp)
		test   %dx,%dx
		jl     _03a6c7_jump
		inc    %esi
		xor    %eax,%eax
		movzbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %eax,%ebp
		test   %edi,%edi
		jne    _03a6b1_jump
		mov    $0x000100,%edi

	_03a6b1_jump:
		mov    (%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		call   *0x000004(%esp)
		lea    (%edi,%edi,2),%eax
		add    %eax,%esi
		add    %edi,%ebp
		jmp    _03a68e_jump

	_03a6c7_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a6d0_func:
		push   %ecx
		mov    $_03a3b8_func,%ecx
		call   _03a664_func
		pop    %ecx
		ret    



_03a6e0_func:
		push   %ecx
		mov    $_03a428_func,%ecx
		call   _03a664_func
		pop    %ecx
		ret    



_03a6f0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %edx,%edi
		xor    %edx,%edi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%di
		mov    0x000008(%edx),%cx
		mov    %edi,0x000004(%esp)
		mov    0x00008c(%edx),%edi
		add    %ecx,%edi
		mov    0x000090(%edx),%ebp
		mov    %edi,0x000008(%esp)

	_03a724_jump:
		mov    0x000004(%esp),%edx
		dec    %edx
		mov    %edx,0x000004(%esp)
		test   %edx,%edx
		jl     _03a7ab_jump
		mov    (%esp),%edi
		xor    %ah,%ah
		inc    %esi
		mov    %ah,0x000010(%esp)
		mov    0x00008c(%edi),%edi

	_03a745_jump:
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%edi
		cmp    0x000008(%esp),%edi
		jge    _03a7a5_jump
		mov    (%esi),%cl
		inc    %esi
		mov    %cl,0x000010(%esp)
		test   %cl,%cl
		jl     _03a77b_jump
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		xor    %ecx,%ecx
		mov    %edi,%edx
		mov    (%esi),%cl
		inc    %esi
		call   _03a30c_func
		jmp    _03a745_jump

	_03a77b_jump:
		mov    %cl,%dh
		neg    %dh
		mov    %dh,0x000010(%esp)
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		mov    %edi,%edx
		mov    %esi,%ecx
		call   _03a2d8_func
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%esi
		jmp    _03a745_jump

	_03a7a5_jump:
		inc    %ebp
		jmp    _03a724_jump

	_03a7ab_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a7b4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x000004(%esp)
		lea    0x000004(%eax),%esi
		mov    0x00008c(%edx),%ecx
		movswl (%eax),%ebp
		add    $0x000002,%eax
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%edx
		mov    (%eax),%ax
		add    %edx,%ebp
		mov    %eax,0x00000c(%esp)

	_03a7e0_jump:
		mov    0x00000c(%esp),%edx
		dec    %edx
		mov    %edx,0x00000c(%esp)
		test   %dx,%dx
		jl     _03a897_jump
		mov    (%esp),%edi
		mov    (%esi),%al
		inc    %esi
		mov    %al,0x000010(%esp)
		test   %al,%al
		jbe    _03a891_jump

	_03a804_jump:
		mov    0x000001(%esi),%al
		inc    %esi
		xor    %ecx,%ecx
		mov    %al,0x000014(%esp)
		mov    -0x000001(%esi),%cl
		inc    %esi
		add    %ecx,%edi
		test   %al,%al
		jge    _03a852_jump
		mov    %al,%bh
		neg    %bh
		mov    %bh,0x000014(%esp)
		mov    0x000011(%esp),%eax
		mov    %edi,%edx
		sar    $0x000018,%eax
		mov    %ebp,%ebx
		mov    %eax,0x000008(%esp)
		mov    %eax,%ecx
		push   %eax
		xor    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    (%esi),%cl
		inc    %esi
		call   _03a30c_func
		mov    0x000010(%esp),%cl
		mov    0x000008(%esp),%eax
		dec    %cl
		add    %eax,%edi
		mov    %cl,0x000010(%esp)
		jmp    _03a886_jump

	_03a852_jump:
		mov    0x000011(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		sar    $0x000018,%eax
		mov    %edi,%edx
		push   %eax
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		call   _03a2d8_func
		mov    0x000008(%esp),%ebx
		mov    0x000011(%esp),%ecx
		add    %ebx,%edi
		mov    0x000010(%esp),%bl
		sar    $0x000018,%ecx
		dec    %bl
		add    %ecx,%esi
		mov    %bl,0x000010(%esp)

	_03a886_jump:
		cmpb   $0x000000,0x000010(%esp)
		ja     _03a804_jump

	_03a891_jump:
		inc    %ebp
		jmp    _03a7e0_jump

	_03a897_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a8a0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x00000c(%esp)
		mov    0x00008c(%edx),%ecx
		mov    %ecx,0x000008(%esp)
		mov    0x000090(%edx),%ecx
		mov    0x000008(%edx),%dx
		mov    0x000008(%esp),%ebx
		and    $0x00ffff,%edx
		add    %ebx,%edx
		dec    %edx
		mov    %ecx,0x000004(%esp)
		mov    %edx,(%esp)
		mov    (%eax),%dx
		lea    0x000002(%eax),%esi
		mov    %edx,0x000014(%esp)
		jmp    _03a8f0_jump

	_03a8df_jump:
		mov    0x00000e(%esp),%edx
		mov    0x000004(%esp),%edi
		sar    $0x000010,%edx
		sub    %edx,%edi
		mov    %edi,0x000004(%esp)

	_03a8f0_jump:
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jge    _03a944_jump
		testb  $0x000040,0x000011(%esp)
		jne    _03a8df_jump
		mov    (%esp),%ebx
		mov    0x00000c(%esp),%eax
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    0x000004(%esp),%cl
		mov    0x000010(%esp),%dl
		call   _03a2cc_func
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jne    _03a944_jump
		incl   0x000004(%esp)
		mov    0x000014(%esp),%ecx
		dec    %ecx
		mov    %ecx,0x000014(%esp)
		test   %cx,%cx
		jmp    _03a9e4_jump

	_03a944_jump:
		mov    0x000008(%esp),%ebp

	_03a948_jump:
		inc    %esi
		xor    %edx,%edx
		movsbl (%esi),%edi
		mov    -0x000001(%esi),%dl
		inc    %esi
		add    %edi,%edi
		add    %edx,%ebp
		test   %edi,%edi
		jl     _03a9a0_jump
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%eax
		push   %edi
		mov    %esi,%ecx
		mov    %ebp,%edx
		add    %edi,%ebp
		add    %edi,%esi
		mov    0x000014(%esp),%edi
		call   _03a2d8_func
		dec    %di
		mov    %di,0x000010(%esp)
		jne    _03a948_jump
		mov    0x000004(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %eax
		dec    %edx
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000014(%esp)
		test   %dx,%dx
		jg     _03a8f0_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03a9a0_jump:
		neg    %edi
		mov    0x000004(%esp),%ebx
		mov    %edi,%edx
		mov    0x00000c(%esp),%eax
		sar    %edx
		mov    (%esi),%cx
		push   %edx
		mov    %ebp,%edx
		add    $0x000002,%esi
		call   _03a34c_func
		mov    0x000010(%esp),%eax
		add    %edi,%ebp
		dec    %ax
		mov    %ax,0x000010(%esp)
		jne    _03a948_jump
		mov    0x000004(%esp),%ebp
		mov    0x000014(%esp),%ebx
		inc    %ebp
		dec    %ebx
		mov    %ebp,0x000004(%esp)
		mov    %ebx,0x000014(%esp)
		test   %bx,%bx

	_03a9e4_jump:
		jg     _03a8f0_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a9f4_func:
		push   %ecx
		push   %edi
		mov    (%ebx),%edi
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %edi
		pop    %ecx
		ret    



_03aa08_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    (%ebx),%ebx
		mov    0x000094(%edx),%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%si
		mov    0x000008(%edx),%cx
		add    %ebx,%edi
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %eax,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_03aa38_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%edi
		dec    %ebx
		jne    _03aa38_jump
		popa   
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03aa4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000080(%eax),%eax
		mov    $0x000099,%ebx
		call   _08168b_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _080420_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03aa70_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x000099,%ebx
		xor    %edx,%edx
		call   _080420_func
		lea    0x000080(%ecx),%eax
		mov    %esi,%edx
		call   _03a538_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03aba8_jump
		mov    $0x000080,%ebx
		mov    %ecx,%edx
		mov    0x000080(%ecx),%eax
		call   _03a55c_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03aba1_jump
		movl   $0x000000,0x000084(%ecx)
		mov    _0964d9_data,%ah
		mov    %esi,0x000088(%ecx)
		test   %ah,%ah
		setne  %al
		mov    0x000008(%ecx),%dx
		mov    %al,_0964da_data
		cmp    $0x000140,%dx
		ja     _03ab9c_jump
		cmpw   $0x0000c8,0x00000a(%ecx)
		ja     _03ab9c_jump
		mov    0x000004(%ecx),%si
		cmp    $0x00af12,%si
		jne    _03ab2b_jump
		mov    (%ecx),%ebx
		cmp    $0x00000c,%ebx
		jne    _03ab15_jump
		movl   $0x00001e,0x000010(%ecx)
		mov    $0x000001,%dh
		mov    %ebx,0x000050(%ecx)
		mov    %dh,_096531_data

	_03ab15_jump:
		mov    0x000050(%ecx),%edx
		mov    0x000080(%ecx),%eax
		xor    %ebx,%ebx
		call   _0816ab_func
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03ab2b_jump:
		cmp    $0x00af11,%si
		jne    _03ab8a_jump
		mov    (%ecx),%edx
		cmp    $0x00000c,%edx
		jne    _03ab5c_jump
		mov    0x000080(%ecx),%eax
		mov    %edx,0x000050(%ecx)
		xor    %ebx,%ebx
		mov    0x000050(%ecx),%edx
		movl   $0x000005,0x000010(%ecx)
		call   _0816ab_func
		movb   $0x000001,_096531_data
		jmp    _03ab63_jump

	_03ab5c_jump:
		movl   $0x000080,0x000050(%ecx)

	_03ab63_jump:
		mov    0x000010(%ecx),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000046,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03ab8a_jump:
		mov    $0xfffffff5,%edx
		mov    %ecx,%eax
		call   _03aa4c_func
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03ab9c_jump:
		mov    $0xfffffffd,%edx

	_03aba1_jump:
		mov    %ecx,%eax
		call   _03aa4c_func

	_03aba8_jump:
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_03abb0_switch:
		.long   _03ac23_case
		.long   _03aca1_case
		.long   _03aca1_case
		.long   _03ac52_case
		.long   _03aca1_case
		.long   _03aca1_case
		.long   _03aca1_case
		.long   _03ac23_case
		.long   _03ac52_case
		.long   _03ac79_case
		.long   _03aca1_case
		.long   _03ac87_case
		.long   _03ac95_case




_03abe4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%ebp
		xor    %edx,%edx
		mov    %edx,0x000004(%esp)
		jmp    _03aca5_jump

	_03abfe_jump:
		mov    %esi,%eax
		mov    0x000004(%eax),%cx
		mov    (%esi),%edx
		sub    $0x000004,%ecx
		add    %edx,%esi
		cmp    $0x00000c,%cx
		ja     _03aca1_case
		and    $0x00ffff,%ecx
		jmp    *%cs:_03abb0_switch(,%ecx,4)

	_03ac23_case:
		mov    $0x000001,%dl
		lea    0x000006(%eax),%ecx
		mov    0x000004(%eax),%bx
		mov    %dl,_096532_data
		cmp    $0x000004,%bx
		jne    _03ac45_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a6d0_func
		jmp    _03aca1_case

	_03ac45_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a6e0_func
		jmp    _03aca1_case

	_03ac52_case:
		mov    0x000004(%eax),%dx
		lea    0x000006(%eax),%ecx
		cmp    $0x000007,%dx
		jne    _03ac6c_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a8a0_func
		jmp    _03aca1_case

	_03ac6c_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _03a7b4_func
		jmp    _03aca1_case

	_03ac79_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _03a9f4_func
		jmp    _03aca1_case

	_03ac87_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _03a6f0_func
		jmp    _03aca1_case

	_03ac95_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _03aa08_func

	_03aca1_case:
		incl   0x000004(%esp)

	_03aca5_jump:
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _03abfe_jump
		cmpb   $0x000000,0x000098(%edi)
		jbe    _03ae1c_jump
		cmpb   $0x000000,_0cfa50_data
		je     _03ae1c_jump
		cmpb   $0x000002,_0964db_data
		je     _03ae1c_jump
		mov    _0964d9_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _03ae1c_jump
		call   _0293b0_func
		mov    _0964dd_data,%bh
		test   %bh,%bh
		je     _03ae01_jump
		cmpb   $0x000000,_0964db_data
		jne    _03add3_jump
		mov    _0964d9_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%ebx
		cmp    _0964e8_data(%edx),%ebx
		jl     _03ada1_jump
		cmp    _0964ec_data(%edx),%ebx
		jge    _03ada1_jump
		lea    0x000008(%esp),%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		movzbl %al,%esi
		push   %edx
		mov    %esi,%eax
		lea    0x000018(%esp),%edx
		call   _02a02c_func
		cmp    $0x000100,%ax
		jne    _03adc1_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		shl    $0x000010,%edx
		shl    $0x000008,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		add    %eax,%edx
		mov    _0964d9_data,%eax
		sar    $0x000018,%eax
		shl    $0x000004,%eax
		cmp    _0964e0_data(%eax),%edx
		jl     _03adc1_jump
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _02a5a4_func
		mov    %bl,_0964db_data
		add    %bl,_0964dc_data
		jmp    _03adc1_jump

	_03ada1_jump:
		mov    _0964d9_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%eax
		cmp    _0964ec_data(%edx),%eax
		jne    _03adc1_jump
		incb   _0964dc_data

	_03adc1_jump:
		cmpb   $0x000005,_0964dc_data
		jne    _03ae23_jump
		movb   $0x0000ff,_0964dc_data
		jmp    _03ae23_jump

	_03add3_jump:
		mov    _0964d9_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%ebx
		cmp    _0964e4_data(%edx),%ebx
		jl     _03ae23_jump
		and    $0x0000ff,%eax
		xor    %dl,%dl
		call   _02a5cc_func
		mov    %dl,_0964db_data
		jmp    _03ae23_jump

	_03ae01_jump:
		cmpb   $0x000000,_0964db_data
		je     _03ae23_jump
		and    $0x0000ff,%eax
		call   _02a5cc_func
		mov    %bh,_0964db_data
		jmp    _03ae23_jump

	_03ae1c_jump:
		movb   $0x000001,_0964db_data

	_03ae23_jump:
		cmpb   $0x000000,_0964da_data
		je     _03ae77_jump
		cmpl   $0x000001,0x000084(%edi)
		je     _03ae46_jump

	_03ae35_jump:
		mov    0x000028(%esp),%eax
		call   _03a4b8_func
		cmp    _096544_data,%eax
		jbe    _03ae35_jump

	_03ae46_jump:
		call   _016e9a_func
		call   _016e8a_func
		cmpb   $0x000000,_0964d9_data
		je     _03ae64_jump
		mov    0x000028(%esp),%edx
		mov    $0x00003c,%eax
		jmp    _03ae6d_jump

	_03ae64_jump:
		mov    0x000028(%esp),%edx
		mov    $0x00007d,%eax

	_03ae6d_jump:
		call   _03a518_func
		mov    %eax,_096544_data

	_03ae77_jump:
		cmpb   $0x000000,_0964da_data
		je     _03aef9_jump
		cmpb   $0x000001,_096532_data
		jne    _03aeb2_jump
		mov    $_0df7e0_data,%esi
		xor    %cl,%cl
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   
		mov    %cl,_096532_data

	_03aeb2_jump:
		mov    _095e28_data,%eax
		mov    0x000094(%edi),%esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00000a(%edi),%bx
		mov    0x000008(%edi),%dx
		add    %esi,%eax
		mov    0x000000(%ebp),%esi
		mov    0x000094(%edi),%ebp
		mov    %eax,%edi
		add    %ebp,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_03aee9_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%esi
		add    %ebp,%edi
		dec    %ebx
		jne    _03aee9_jump
		popa   

	_03aef9_jump:
		cmpb   $0x000000,_0964d9_data
		je     _03af0b_jump
		movb   $0x000001,_0964da_data
		jmp    _03af12_jump

	_03af0b_jump:
		xorb   $0x000001,_0964da_data

	_03af12_jump:
		xor    %eax,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03af20_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    0x000084(%eax),%edx
		inc    %edx
		mov    $0x000010,%ebx
		mov    %edx,0x000084(%eax)
		mov    %esp,%edx
		mov    0x000080(%eax),%eax
		call   _03a55c_func
		test   %eax,%eax
		jl     _03afa9_jump
		cmpw   $0x00f1fa,0x000004(%esp)
		jne    _03afa4_jump
		mov    (%esp),%eax
		sub    $0x000010,%eax
		test   %eax,%eax
		jle    _03af96_jump
		mov    _0cd130_data,%edx
		mov    %edx,0x000010(%esp)
		mov    %eax,%ebx
		mov    0x000080(%esi),%ebp
		lea    0x000010(%esp),%edx
		mov    %ebp,%eax
		call   _03a578_func
		test   %eax,%eax
		jl     _03afa9_jump
		mov    0x000010(%esp),%ebx
		push   %edi
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _03abe4_func
		jmp    _03afa9_jump

	_03af96_jump:
		mov    %esp,%edx
		push   %edi
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03abe4_func
		jmp    _03afa9_jump

	_03afa4_jump:
		mov    $0xfffffffc,%eax

	_03afa9_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03afb4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000008(%eax),%dx
		mov    %ebx,%eax
		call   _03a2c4_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    %eax,0x00008c(%ecx)
		mov    %ebx,%eax
		mov    0x00000a(%ecx),%dx
		call   _03a2c8_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,0x000090(%ecx)
		mov    %eax,%ebx
		mov    0x00008c(%ecx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    %eax,0x000094(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_03b014_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0964db_data
		test   %dl,%dl
		jbe    _03b07c_jump
		cmpb   $0x000000,_0cfa50_data
		je     _03b07c_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _02a5b8_func
		mov    0x000098(%esi),%dl
		call   _0293b0_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _02a4ac_func
		call   _0293b0_func
		and    $0x0000ff,%eax
		mov    $0x000001,%bl
		call   _02a5a4_func
		mov    %bl,_0964db_data

	_03b07c_jump:
		lea    0x000011(%edi),%ebp
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0964dc_data
		jmp    _03b0dd_jump

	_03b08b_jump:
		call   _042134_func
		call   _041ea4_func
		test   %ax,%ax
		jne    _03b0c6_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _03b0c6_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _03b0c6_jump
		call   _042048_func
		test   %ax,%ax
		jne    _03b0c6_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _03b0ca_jump

	_03b0c6_jump:
		xor    %eax,%eax
		jmp    _03b0ea_jump

	_03b0ca_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03af20_func
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _03b0e7_jump
		inc    %ecx

	_03b0dd_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03b08b_jump

	_03b0e7_jump:
		mov    (%esp),%eax

	_03b0ea_jump:
		add    $0x000004,%esp

	_03b0ed_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b0f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    0x000050(%eax),%edx
		xor    %ebx,%ebx
		mov    0x000080(%eax),%eax
		call   _0816ab_func
		mov    $0x000010,%ebx
		mov    %esp,%edx
		mov    0x000080(%ecx),%eax
		call   _03a55c_func
		test   %eax,%eax
		jl     _03b12f_jump
		mov    (%esp),%edx
		mov    0x000050(%ecx),%eax
		add    %edx,%eax
		mov    %eax,0x000054(%ecx)
		xor    %eax,%eax

	_03b12f_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx

	_03b135_jump:
		ret    



_03b138_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		call   _03b0f4_func
		mov    0x000050(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		lea    0x000011(%edi),%ebp
		call   _0816ab_func
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03af20_func
		test   %eax,%eax
		jl     _03b0ed_jump

	_03b168_jump:
		mov    0x000054(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		movl   $0x000001,0x000084(%esi)
		call   _0816ab_func
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0964db_data
		test   %dl,%dl
		jbe    _03b1de_jump
		cmpb   $0x000000,_0cfa50_data
		je     _03b1de_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _02a5b8_func
		mov    0x000098(%esi),%dl
		call   _0293b0_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _02a4ac_func
		call   _0293b0_func
		and    $0x0000ff,%eax
		mov    $0x000001,%bl
		call   _02a5a4_func
		mov    %bl,_0964db_data

	_03b1de_jump:
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0964dc_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03b1f7_jump
		jmp    _03b168_jump

	_03b1f7_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03af20_func
		test   %eax,%eax
		jl     _03b0ed_jump
		call   _042134_func
		call   _041ea4_func
		test   %ax,%ax
		jne    _03b245_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _03b245_jump
		call   _041fbc_func
		test   %ax,%ax
		jne    _03b245_jump
		call   _042048_func
		test   %ax,%ax
		jne    _03b245_jump
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _03b24d_jump

	_03b245_jump:
		xor    %eax,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03b24d_jump:
		inc    %ecx
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _03b1f7_jump
		jmp    _03b168_jump



_03b260_func:
		cmpb   $0x000000,_0cfa17_data
		je     _03b135_jump
		jmp    _03e66c_jump



_03b274_func:
		cmpb   $0x000000,_0cfa17_data
		je     _03b135_jump
		jmp    _03e6b0_jump



_03b288_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_03b290_jump:
		mov    $0x0000fe,%ah
		mov    %ecx,%edx

	_03b294_jump:
		mov    _0df7e0_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03b2a2_jump
		mov    %cl,%al

	_03b2a2_jump:
		mov    %al,_0df7e0_data(%edx)
		mov    _0df7e1_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03b2b6_jump
		mov    %cl,%al

	_03b2b6_jump:
		mov    %al,_0df7e1_data(%edx)
		mov    _0df7e2_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03b2ca_jump
		mov    %cl,%al

	_03b2ca_jump:
		add    $0x000003,%edx
		mov    %al,_0df7df_data(%edx)
		cmp    $0x000300,%edx
		jne    _03b294_jump
		call   _016e9a_func
		call   _016e8a_func
		mov    $_0df7e0_data,%esi
		add    $0x000002,%ebx
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   
		cmp    $0x000040,%ebx
		jl     _03b290_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b314_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000134,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %cl,%bh
		xor    %ah,%ah
		mov    %ah,_096532_data
		mov    $_0c0c70_data,%eax
		call   _0816ee_func
		test   %eax,%eax
		sete   %al
		mov    _0cfa2a_data,%dl
		mov    %al,_0964dd_data
		test   %dl,%dl
		je     _03b3b1_jump
		mov    $_0c0c7c_data,%edx
		mov    %esi,%eax
		call   _07fc40_func
		test   %eax,%eax
		jne    _03b363_jump
		mov    $0xfffffffb,%eax
		jmp    _03b49c_jump

	_03b363_jump:
		lea    0x00009c(%esp),%edi
		push   %edi

	_03b36b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03b383_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03b36b_jump

	_03b383_jump:
		pop    %edi
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03b396_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03b3ae_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03b396_jump

	_03b3ae_jump:
		pop    %edi
		jmp    _03b3d4_jump

	_03b3b1_jump:
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi

	_03b3bb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03b3d3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03b3bb_jump

	_03b3d3_jump:
		pop    %edi

	_03b3d4_jump:
		mov    $_0c0c80_data,%edx
		lea    0x00009c(%esp),%eax
		call   _081903_func
		test   %eax,%eax
		jne    _03b3f8_jump
		mov    $0xfffffffb,%eax
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03b3f8_jump:
		call   _0819b7_func
		cmpb   $0x000000,_0cfa50_data
		je     _03b417_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a5b8_func
		jmp    _03b419_jump

	_03b417_jump:
		xor    %bl,%bl

	_03b419_jump:
		call   _03b260_func
		lea    0x00011c(%esp),%eax
		call   _03a5b4_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03b489_jump
		lea    0x00009c(%esp),%edx
		mov    %esp,%eax
		call   _03aa70_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03b489_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		mov    %bl,0x000098(%esp)
		call   _03afb4_func
		test   %bh,%bh
		je     _03b46d_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _03b138_func
		jmp    _03b47b_jump

	_03b46d_jump:
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _03b014_func

	_03b47b_jump:
		mov    %eax,%edx
		call   _03b288_func
		mov    %esp,%eax
		call   _03aa4c_func

	_03b489_jump:
		lea    0x00011c(%esp),%eax
		call   _03a634_func
		call   _03b274_func
		mov    %edx,%eax

	_03b49c_jump:
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03b4a8_func:
		push   %ecx
		and    $0x0000ff,%ebx
		xor    %ecx,%ecx
		call   _03b314_func
		pop    %ecx
		ret    



_03b4d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000001,_095e2c_data
		jne    _03b521_jump
		mov    _0cd7d0_data,%edx
		cmp    $0x0a0500,%edx
		jne    _03b4ff_jump
		mov    $0x0a6500,%esi
		mov    %edx,_0cd7b8_data
		mov    %esi,_0cd7d0_data
		jmp    _03b515_jump

	_03b4ff_jump:
		mov    $0x0a0500,%ebx
		mov    $0x0a6500,%ecx
		mov    %ebx,_0cd7d0_data
		mov    %ecx,_0cd7b8_data

	_03b515_jump:
		mov    _0cd7d0_data,%eax
		call   _0145f1_func
		jmp    _03b578_jump

	_03b521_jump:
		mov    _0cd138_data,%eax
		mov    %eax,_0cd7b8_data
		mov    _095e28_data,%eax
		mov    _0cfa23_data,%dl
		mov    %eax,_0cd7d0_data
		cmp    $0x000001,%dl
		jne    _03b567_jump
		cmpb   $0x000000,_095eb2_data
		je     _03b567_jump
		mov    $0x000140,%ecx
		mov    _0cd138_data,%esi
		mov    %eax,%edi
		mov    $0x0000c8,%eax
		call   *_0cd120_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b567_jump:
		mov    _0cd7d0_data,%edi
		mov    _0cd138_data,%esi
		call   _014ab7_func

	_03b578_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b580_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa4e_data
		je     _03b592_jump
		call   _016e9a_func

	_03b592_jump:
		mov    _0cd7d0_data,%edx
		cmp    $0x0a0500,%edx
		jne    _03b5b3_jump
		mov    $0x0a6500,%esi
		mov    %edx,_0cd7b8_data
		mov    %esi,_0cd7d0_data
		jmp    _03b5c9_jump

	_03b5b3_jump:
		mov    $0x0a0500,%ebx
		mov    $0x0a6500,%ecx
		mov    %ebx,_0cd7d0_data
		mov    %ecx,_0cd7b8_data

	_03b5c9_jump:
		mov    _0cd7d0_data,%eax
		call   _0145f1_func
		cmpb   $0x000000,_0cfa4e_data
		je     _03b5e1_jump
		call   _016e8a_func

	_03b5e1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b844_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0cd838_data,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    %ebx,_0cd834_data
		mov    _0ce636_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		movswl %ax,%edx
		sar    $0x000004,%edx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0ce640_data,%ebx
		add    %edx,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,(%esp)
		mov    %edx,0x000008(%esp)
		mov    %edx,0x00000c(%esp)

	_03b896_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %ecx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000008(%esp),%ebp

	_03b8ad_jump:
		xor    %ecx,%ecx

	_03b8af_jump:
		mov    (%ebx),%di
		test   %di,%di
		jl     _03b8d9_jump
		cmp    $0x0004b0,%di
		jge    _03b8d9_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03b8d9_jump
		movswl %di,%esi
		mov    _0c2fa8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014765_func
		jmp    _03b8e0_jump

	_03b8d9_jump:
		mov    %edx,%edi
		call   _01471d_func

	_03b8e0_jump:
		add    $0x000006,%ebx
		add    $0x000010,%ecx
		add    $0x000004,%edx
		cmp    $0x000140,%cx
		jl     _03b8af_jump
		mov    _0ce636_data,%esi
		sar    $0x000010,%esi
		sub    $0x000014,%esi
		imul   $0x000006,%esi,%esi
		add    %esi,%ebx
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %esi,0x000010(%esp)
		cmp    $0x0000e0,%si
		jl     _03b8ad_jump
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		jne    _03b896_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b948_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %ecx,%esi
		movswl %bx,%eax
		mov    _0ce636_data,%ecx
		sar    $0x000004,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		movswl %dx,%edx
		sar    $0x000004,%edx
		lea    (%edx,%eax,1),%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0ce640_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    _0cd838_data,%edx
		mov    %eax,0x000008(%esp)
		mov    (%esp),%eax
		mov    $0x000050,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,0x000010(%esp)
		movswl %si,%edx
		mov    $0x00000d,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		imul   %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000008(%esp),%ebx
		sub    %eax,%edx
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    %ecx,0x00000c(%esp)
		add    %edx,%ebx
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_03b9cd_jump:
		mov    0x000008(%esp),%ecx
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		xor    %esi,%esi
		mov    0x00000c(%esp),%ebp
		mov    %esi,0x000014(%esp)
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx

	_03b9e8_jump:
		mov    (%ecx),%si
		test   %si,%si
		jl     _03ba10_jump
		cmp    $0x0004b0,%si
		jge    _03ba10_jump
		cmpb   $0x000000,0x000004(%ecx)
		jne    _03ba10_jump
		movswl %si,%esi
		mov    _0c2fa8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014765_func

	_03ba10_jump:
		add    $0x000006,%ecx
		add    $0x000004,%ebx
		add    $0x000004,%edx
		cmp    $0x000050,%ebx
		jl     _03ba23_jump
		sub    $0x000050,%edx
		xor    %ebx,%ebx

	_03ba23_jump:
		mov    0x000014(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000014(%esp)
		cmp    $0x000140,%di
		jl     _03b9e8_jump
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%ebp
		add    $0x000040,%edi
		add    $0x004600,%ebp
		mov    %edi,0x00000c(%esp)
		mov    %ebp,0x000004(%esp)
		cmp    $0x000100,%edi
		jne    _03b9cd_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03ba64_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    _0ce636_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		movswl %dx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce640_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		movswl %cx,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		lea    0x000000(,%eax,4),%edx
		mov    (%esp),%ebx
		sub    %eax,%edx
		mov    _0cd838_data,%ecx
		add    %edx,%edx
		mov    0x000008(%esp),%eax
		add    %edx,%ebx
		sub    %ecx,%eax
		mov    %ebx,(%esp)
		xor    %edx,%edx
		mov    $0x000050,%ebx
		div    %ebx
		xor    %esi,%esi
		mov    %esi,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		mov    %eax,%ecx

	_03bae1_jump:
		mov    0x000008(%esp),%edx
		mov    0x00000c(%esp),%esi
		mov    (%esp),%ebx
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x000004(%esp),%ebp
		mov    %esi,0x000010(%esp)

	_03baf8_jump:
		mov    (%ebx),%si
		test   %si,%si
		jl     _03bb20_jump
		cmp    $0x0004b0,%si
		jge    _03bb20_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03bb20_jump
		movswl %si,%esi
		mov    _0c2fa8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014765_func

	_03bb20_jump:
		mov    _0ce636_data,%esi
		sar    $0x000010,%esi
		imul   $0x000006,%esi,%esi
		add    $0x000500,%edx
		add    $0x000010,%ecx
		add    %esi,%ebx
		cmp    $0x0000e0,%ecx
		jl     _03bb47_jump
		sub    $0x004600,%edx
		xor    %ecx,%ecx

	_03bb47_jump:
		mov    0x000010(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		cmp    $0x0000e0,%di
		jl     _03baf8_jump
		mov    0x000004(%esp),%ebp
		mov    0x00000c(%esp),%eax
		add    $0x000040,%ebp
		add    $0x004600,%eax
		mov    %ebp,0x000004(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    $0x000100,%ebp
		jne    _03bae1_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03bb84_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %ax,0x00001c(%esp)
		mov    %dx,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x00001c(%esp),%ecx
		and    $0x0000f0,%dl
		and    $0x0000f0,%bl
		and    $0x0000f0,%al
		and    $0x0000f0,%cl
		mov    %edx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %eax,0x00000c(%esp)
		cmp    %bx,%cx
		jne    _03bbc1_jump
		mov    %edx,%eax
		cmp    0x00000c(%esp),%ax
		je     _03be17_jump

	_03bbc1_jump:
		mov    _0cd834_data,%ebx
		sub    _0cd838_data,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		mov    $0x000050,%ebp
		mov    %edx,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		sub    %edi,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x00000c(%esp),%ecx
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		sub    %ecx,%eax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		mov    0x000012(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    %eax,%esi
		cmp    %ebp,%esi
		jl     _03bc22_jump
		sub    %ebp,%esi

	_03bc22_jump:
		test   %esi,%esi
		jge    _03bc29_jump
		add    $0x000050,%esi

	_03bc29_jump:
		cmp    $0x0000e0,%ebx
		jl     _03bc37_jump
		sub    $0x0000e0,%ebx

	_03bc37_jump:
		test   %ebx,%ebx
		jge    _03bc41_jump
		add    $0x0000e0,%ebx

	_03bc41_jump:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0cd838_data,%ecx
		shl    $0x000004,%ebx
		mov    _0cd834_data,%eax
		add    %ecx,%ebx
		mov    %eax,%edi
		add    %esi,%ebx
		mov    0x000014(%esp),%edx
		mov    %ebx,_0cd834_data
		mov    %ebx,%ebp
		test   %dx,%dx
		jle    _03bcd7_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03bcd7_jump
		lea    0x004600(%ecx),%edx
		add    $0x000500,%eax
		cmp    %edx,%eax
		jbe    _03bc8b_jump
		mov    $0xffffba00,%eax
		jmp    _03bc8d_jump

	_03bc8b_jump:
		xor    %eax,%eax

	_03bc8d_jump:
		mov    0x000016(%esp),%ebp
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebp
		mov    %edx,(%esp)
		lea    0x000500(%edi),%edx
		mov    %ebp,%ebx
		add    %edx,%eax
		mov    (%esp),%edx
		call   _03ba64_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%edx
		mov    %ebp,%ebx
		test   %esi,%esi
		jne    _03bcc8_jump
		sub    $0x00004c,%edi
		jmp    _03bccb_jump

	_03bcc8_jump:
		add    $0x000004,%edi

	_03bccb_jump:
		mov    %edi,%eax
		call   _03b948_func
		jmp    _03be17_jump

	_03bcd7_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03bd3c_jump
		cmpw   $0x000000,0x000010(%esp)
		jge    _03bd3c_jump
		mov    _0cd838_data,%esi
		lea    -0x000500(%edi),%eax
		cmp    %esi,%eax
		jae    _03bcfe_jump
		mov    $0x004600,%eax
		jmp    _03bd00_jump

	_03bcfe_jump:
		xor    %eax,%eax

	_03bd00_jump:
		mov    0x000016(%esp),%edx
		mov    0x00001a(%esp),%esi
		mov    $0x000130,%ecx
		sub    $0x000500,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		add    %edi,%eax
		mov    %edx,(%esp)
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _03ba64_func
		mov    (%esp),%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   _03b948_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03bd3c_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03bd95_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03bd95_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    0x00001a(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    (%esp),%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03ba64_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		cmp    $0x00004c,%esi
		jne    _03bd84_jump
		add    %esi,%edi
		jmp    _03bd87_jump

	_03bd84_jump:
		sub    $0x000004,%edi

	_03bd87_jump:
		mov    %edi,%eax
		call   _03b948_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03bd95_jump:
		cmpw   $0x000000,0x000010(%esp)
		jle    _03bdb7_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x0000b0,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03b948_func

	_03bdb7_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03bdd9_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03ba64_func

	_03bdd9_jump:
		cmpw   $0x000000,0x000010(%esp)
		jge    _03bdf8_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03b948_func

	_03bdf8_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03be17_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03ba64_func

	_03be17_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03be20_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		xor    %edx,%edx
		mov    %edx,0x000010(%esp)
		mov    _0cd808_data,%edx
		shr    $0x000002,%edx
		mov    _0cd808_data,%ebx
		mov    %edx,(%esp)
		mov    _0cd824_data,%edx
		add    %ebx,%edx
		mov    _0c21d4_data,%ebp
		mov    %edx,0x000004(%esp)
		lea    -0x000001(%ebx),%edx
		mov    _0cfa24_data,%ah
		mov    %edx,0x000008(%esp)
		test   %ah,%ah
		je     _03be68_jump
		mov    $0x000001,%ebp

	_03be68_jump:
		mov    _0cfa20_data,%dl
		test   %dl,%dl
		je     _03be84_jump
		mov    $_0c8888_data,%esi
		mov    _0cd7b8_data,%ecx
		call   _0137e4_func
		jmp    _03bed6_jump

	_03be84_jump:
		xor    %dh,%dh
		mov    %dx,0x000014(%esp)

	_03be8b_jump:
		mov    _0cd808_data,%edx
		mov    0x000012(%esp),%ebx
		shr    $0x000002,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    %esp,%ecx
		mov    0x000010(%esp),%edi
		mov    $_0c8888_data,%esi
		mov    %ebp,%eax
		mov    _0cd7f4_data,%edx
		add    %ebp,%ebp
		call   _013257_func
		cmp    $0x000010,%ebp
		jne    _03bec6_jump
		mov    $0x000001,%ebp
		mov    %ebp,0x000010(%esp)

	_03bec6_jump:
		mov    0x000014(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000014(%esp)
		cmp    $0x000004,%bx
		jl     _03be8b_jump

	_03bed6_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03bee0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000058,%esp
		mov    _0c21c4_data,%ebx
		mov    %ebx,0x000040(%esp)
		mov    _0c21c8_data,%ebx
		mov    %ebx,0x000038(%esp)
		mov    _0c21cc_data,%ebx
		mov    %ebx,0x000020(%esp)
		mov    _0cd7f4_data,%ebx
		shl    $0x000004,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000030(%esp)
		mov    _0ce636_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		mov    _0c21d4_data,%ebp
		add    %eax,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %ebp,0x000024(%esp)
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		add    %eax,%eax
		mov    %ecx,0x000044(%esp)
		add    %edx,%eax
		mov    $0x004600,%edx
		mov    %eax,0x000028(%esp)
		mov    0x000040(%esp),%eax
		mov    %edx,(%esp)
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000034(%esp)
		xor    %edx,%edx
		mov    _0cd838_data,%eax
		mov    %dx,0x000050(%esp)
		mov    %eax,0x000004(%esp)

	_03bf76_jump:
		mov    0x00004e(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x004600,%ebx,%ebx
		mov    0x000004(%esp),%esi
		add    $0x004600,%esi
		mov    _0cfa20_data,%ah
		mov    %esi,0x000004(%esp)
		test   %ah,%ah
		je     _03bfb4_jump
		mov    %esp,%ecx
		mov    $0x000050,%edx
		mov    0x000044(%esp),%edi
		mov    $_0c9008_data,%esi
		mov    %ebp,%eax
		call   _013ea1_func
		jmp    _03bfcb_jump

	_03bfb4_jump:
		mov    %esp,%ecx
		mov    $0x000050,%edx
		mov    0x000044(%esp),%edi
		mov    $_0c8f88_data,%esi
		mov    %ebp,%eax
		call   _013912_func

	_03bfcb_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03bfe5_jump
		mov    $0x000001,%ebp
		mov    0x000040(%esp),%eax
		add    %ebp,%eax
		mov    %ebp,0x000044(%esp)
		mov    %eax,0x000040(%esp)

	_03bfe5_jump:
		mov    0x000050(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000050(%esp)
		cmp    $0x000004,%bx
		jl     _03bf76_jump
		mov    0x000034(%esp),%eax
		mov    %eax,0x000048(%esp)
		mov    0x000028(%esp),%eax
		mov    %eax,0x00003c(%esp)
		mov    0x000038(%esp),%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000038(%esp),%eax
		mov    %edx,%ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cd808_data,%ebx
		shr    $0x000002,%ebx
		imul   %ebx,%ecx
		mov    _0cd7f4_data,%edi
		mov    0x000020(%esp),%edx
		imul   %edi,%edx
		mov    _0cd824_data,%esi
		add    %ecx,%eax
		add    %esi,%eax
		add    %edx,%eax
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%eax
		mov    %ebx,0x00004c(%esp)
		neg    %eax
		mov    _0ce636_data,%edx
		mov    %eax,0x00004c(%esp)
		mov    0x000030(%esp),%eax
		sar    $0x000010,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		add    %eax,%eax
		mov    %edi,0x00000c(%esp)
		mov    %eax,0x000004(%esp)
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    %eax,0x000010(%esp)
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000024(%esp),%ebp
		mov    _0cd808_data,%ecx
		dec    %edx
		mov    %ecx,0x00001c(%esp)
		lea    0x000000(,%edx,4),%eax
		mov    $0x0004b0,%ebx
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		add    %eax,%eax
		mov    %ebx,0x000008(%esp)
		add    %eax,%edx
		lea    (%esi,%ecx,1),%eax
		mov    %edx,0x000014(%esp)
		xor    %esi,%esi
		mov    %eax,0x000018(%esp)
		mov    %esi,0x000054(%esp)

	_03c0d4_jump:
		mov    0x00004c(%esp),%edx
		mov    %ebp,%eax
		mov    0x00002c(%esp),%esi
		call   _01283c_func
		mov    _0cd808_data,%eax
		mov    _0cd824_data,%ebx
		shr    $0x000002,%eax
		mov    _0cd808_data,%ecx
		add    %eax,%edx
		add    %ecx,%ebx
		lea    (%esi,%edx,1),%eax
		mov    %edx,0x00004c(%esp)
		cmp    %ebx,%eax
		jbe    _03c117_jump
		mov    %edx,%esi
		sub    %ecx,%esi
		mov    %esi,0x00004c(%esp)
		mov    0x00002c(%esp),%esi
		inc    %esi
		mov    %esi,0x00002c(%esp)

	_03c117_jump:
		mov    0x00004c(%esp),%edi
		mov    _0cfa20_data,%dl
		add    %edi,%esi
		test   %dl,%dl
		je     _03c147_jump
		mov    %esp,%ebx
		mov    0x000048(%esp),%edi
		xor    %eax,%eax
		mov    0x00003c(%esp),%edx
		mov    0x000054(%esp),%ax
		mov    $_0c4268_data,%ecx
		shl    $0x000008,%eax
		call   _014493_func
		jmp    _03c165_jump

	_03c147_jump:
		mov    %esp,%ebx
		mov    0x000048(%esp),%edi
		xor    %eax,%eax
		mov    0x00003c(%esp),%edx
		mov    0x000054(%esp),%ax
		mov    $_0c4268_data,%ecx
		shl    $0x000008,%eax
		call   _014430_func

	_03c165_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03c175_jump
		mov    $0x000001,%ebp
		add    %ebp,0x000048(%esp)

	_03c175_jump:
		mov    0x000054(%esp),%edi
		inc    %edi
		mov    %edi,0x000054(%esp)
		cmp    $0x000004,%di
		jb     _03c0d4_jump
		add    $0x000058,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03c194_jump:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _03c34c_func
		cmp    $0x000064,%bl
		jne    _03c1b8_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _03c255_jump

	_03c1b8_jump:
		cmp    $0x000050,%bl
		jne    _03c1d3_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _03c255_jump

	_03c1d3_jump:
		cmp    $0x000046,%bl
		jne    _03c1e9_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003c2,%edx
		and    $0x0000f3,%al
		jmp    _03c255_jump

	_03c1e9_jump:
		cmp    $0x00003c,%bl
		jne    _03c256_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_03c255_jump:
		out    %al,(%dx)

	_03c256_jump:
		cmp    $0x000032,%bl
		jne    _03c2bb_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_03c2bb_jump:
		mov    $0x0001f4,%eax
		mov    %bl,_0cfa4c_data
		call   _08009e_func
		pop    %edx
		pop    %ebx
		ret    



_03c2d0_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dfaea_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dfae9_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dfae8_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dfaec_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dfaeb_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0dfaed_data
		pop    %edx
		ret    



_03c34c_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0dfaea_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dfae9_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dfae8_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dfaec_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dfaeb_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dfaed_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_03c3bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0cd834_data,%ecx
		mov    %ecx,0x000004(%esp)
		mov    _0ce636_data,%ecx
		movswl %dx,%edx
		sar    $0x000010,%ecx
		sar    $0x000004,%edx
		lea    -0x000014(%ecx),%esi
		imul   %ecx,%edx
		movswl %bx,%ebx
		mov    _0c21c4_data,%eax
		sar    $0x000004,%ebx
		mov    _0ce640_data,%ebp
		add    %ebx,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%ebx
		mov    _0c21d0_data,%eax
		sub    %edx,%ebx
		mov    %esi,0x000008(%esp)
		add    %ebx,%ebx
		mov    _095e6e_data,%dl
		add    %ebx,%ebp
		test   %dl,%dl
		je     _03c4c5_jump
		cmpb   $0x000000,_0cfa1a_data
		je     _03c4c5_jump
		mov    _0cd7f4_data,%ecx
		lea    0x000000(,%esi,4),%edi
		mov    _0cfa20_data,%bl
		sub    %esi,%edi
		shl    $0x000004,%ecx
		add    %edi,%edi
		test   %bl,%bl
		je     _03c4b3_jump
		mov    0x00000c(%esp),%edx
		mov    _0cd7b8_data,%ebx
		sub    %edx,%ebx
		add    $0x000004,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		mov    _0cd7b8_data,%esi
		shl    $0x000004,%ebx
		mov    %ebp,%eax
		add    %ebx,%esi
		add    $0x0ab000,%ebx
		add    %edx,%esi
		add    %edx,%ebx
		mov    $_0c8888_data,%edx
		call   _012a73_func
		jmp    _03c4c5_jump

	_03c4b3_jump:
		mov    0x00000c(%esp),%esi
		mov    $_0c8888_data,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _0129d3_func

	_03c4c5_jump:
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%esi
		lea    0x000000(,%ecx,4),%eax
		mov    $_0c8f88_data,%edx
		sub    %ecx,%eax
		mov    _0cd838_data,%edi
		add    %eax,%eax
		mov    %edi,%ecx
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _012850_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c4fc_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $_0c7388_data,%edx
		xor    %eax,%eax

	_03c507_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		inc    %ebx
		movw   $0x000000,(%edx)
		add    $0x000002,%edx
		cmp    $0x000300,%ax
		jl     _03c507_jump
		pop    %edx
		pop    %ebx
		ret    



_03c520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c7388_data,%ebx
		mov    %eax,%edx
		xor    %esi,%esi

	_03c52d_jump:
		mov    $0x000006,%cl
		inc    %edx
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%edx),%al
		inc    %esi
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		cmp    $0x000300,%si
		jl     _03c52d_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c54c_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0c7988_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0cf7ea_data
		shl    %cl,%edx
		mov    $_0c7988_data,%eax
		mov    %dx,_0cf8da_data
		mov    $0x000001,%dl
		mov    $0x0000ff,%ecx
		mov    %dl,_0cfa87_data
		call   _03c4fc_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_03c5a4_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0cf8da_data
		mov    $0x000002,%dl
		mov    %ax,_0cf7ea_data
		mov    %dl,_0cfa87_data
		pop    %ecx
		ret    



_03c5cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0cf8da_data,%cx
		test   %cx,%cx
		je     _03c6b2_jump
		mov    $_0c7388_data,%eax
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		dec    %edi
		mov    _0cfa87_data,%bl
		mov    %di,_0cf8da_data
		cmp    $0x000001,%bl
		jne    _03c631_jump
		xor    %ebx,%ebx

	_03c605_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0cf7ea_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)
		cmp    $0x000300,%bx
		jge    _03c661_jump
		jmp    _03c605_jump

	_03c631_jump:
		cmp    $0x000002,%bl
		jne    _03c661_jump
		xor    %ebx,%ebx

	_03c638_jump:
		cmpw   $0x000000,(%eax)
		jle    _03c655_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0cf7ea_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)

	_03c655_jump:
		add    $0x000002,%eax
		inc    %ebx
		inc    %edx
		cmp    $0x000300,%bx
		jl     _03c638_jump

	_03c661_jump:
		mov    $_0c7388_data,%eax
		xor    %edx,%edx

	_03c668_jump:
		inc    %esi
		movswl (%eax),%ebx
		add    $0x000002,%eax
		sar    $0x000006,%ebx
		inc    %edx
		mov    %bl,-0x000001(%esi)
		cmp    $0x000300,%dx
		jl     _03c668_jump
		mov    $_0c7988_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0cf8da_data
		jne    _03c6b2_jump
		orb    $0x000040,_0cfa87_data

	_03c6b2_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c6bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _03c5a4_func
		mov    _0cf8da_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _03c6f1_jump

	_03c6d5_jump:
		call   _016e9a_func
		call   _016e8a_func
		mov    $_0c7988_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _03c5cc_func
		cmp    %si,%bx
		jl     _03c6d5_jump

	_03c6f1_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c6f8_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0cfa82_data,%al
		je     _03c76b_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0cfa82_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7988_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03c520_func
		cmpb   $0x000041,_0cfa87_data
		jne    _03c76b_jump
		mov    $0x0000ff,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03c76b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03c770_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,0x000004(%esp)
		mov    %edx,%ecx
		mov    %bx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		movswl %cx,%edx
		mov    %edx,%ecx
		lea    0x000000(,%edx,4),%eax
		shl    $0x000008,%esi
		sub    %edx,%eax
		mov    _0c7f88_data(%esi,%eax,1),%bl
		mov    %bl,(%esp)
		mov    _0c7f89_data(%esi,%eax,1),%bl
		mov    _0c7f8a_data(%esi,%eax,1),%al
		mov    %al,0x000002(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bl,0x000001(%esp)
		mov    %eax,%edi
		lea    0x000003(%eax),%esi
		jmp    _03c811_jump

	_03c7d3_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000300,%edx,%edx
		mov    _0c7f88_data(%edx,%esi,1),%bl
		mov    %bl,_0c7f88_data(%edx,%edi,1)
		mov    _0c7f89_data(%edx,%esi,1),%bl
		add    $0x000003,%esi
		mov    %bl,_0c7f89_data(%edx,%edi,1)
		add    $0x000003,%edi
		mov    _0c7f87_data(%edx,%esi,1),%al
		inc    %ecx
		mov    %al,_0c7f87_data(%edx,%edi,1)

	_03c811_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jl     _03c7d3_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000002,%eax
		sub    %ecx,%esi
		sub    %edx,%eax
		shl    $0x000008,%esi
		mov    (%esp),%dl
		mov    %dl,_0c7f88_data(%esi,%eax,1)
		mov    0x000001(%esp),%dl
		mov    $_0c7988_data,%edi
		mov    %dl,_0c7f89_data(%esi,%eax,1)
		mov    0x000002(%esp),%dl
		mov    $0x000300,%ecx
		mov    %dl,_0c7f8a_data(%esi,%eax,1)
		add    $_0c7f88_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03c520_func
		cmpw   $0x000000,_0cf8da_data
		jne    _03c890_jump
		movw   $0x000001,_0cf8da_data

	_03c890_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03c898_switch:
		.long   _03c93a_case
		.long   _03c942_case
		.long   _03c94a_case
		.long   _03c952_case
		.long   _03c95a_case
		.long   _03c962_case
		.long   _03c96a_case
		.long   _03c970_case
		.long   _03c978_case
		.long   _03c980_case
		.long   _03c988_case
		.long   _03c990_case




_03c8c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000000,_0cfa83_data
		je     _03ca59_jump
		testb  $0x000040,_0cfa87_data
		je     _03ca59_jump
		mov    _0cef5a_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0ccdf0_data,%edi
		shl    $0x000002,%eax
		add    %edi,%eax
		mov    _0cf024_data,%di
		xor    %esi,%esi
		test   %di,%di
		jle    _03ca59_jump

	_03c917_jump:
		cmpw   $0x00009e,0x000060(%eax)
		jne    _03ca30_jump
		mov    0x00006c(%eax),%ch
		cmp    $0x00000b,%ch
		ja     _03c996_jump
		movzbl %ch,%edi
		jmp    *%cs:_03c898_switch(,%edi,4)

	_03c93a_case:
		xor    %dh,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03c996_jump

	_03c942_case:
		xor    %dh,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03c996_jump

	_03c94a_case:
		mov    $0x000001,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03c996_jump

	_03c952_case:
		mov    $0x000001,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03c996_jump

	_03c95a_case:
		mov    $0x000002,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03c996_jump

	_03c962_case:
		mov    $0x000002,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03c996_jump

	_03c96a_case:
		mov    $0x000001,%bl
		xor    %bh,%bh
		jmp    _03c994_jump

	_03c970_case:
		mov    $0x000002,%bl
		mov    $0x000001,%dl
		xor    %bh,%bh
		jmp    _03c996_jump

	_03c978_case:
		mov    $0x000002,%bl
		mov    $0x000001,%bh
		mov    %bh,%dl
		jmp    _03c996_jump

	_03c980_case:
		mov    $0x000001,%bh
		xor    %bl,%bl
		mov    %bh,%dl
		jmp    _03c996_jump

	_03c988_case:
		mov    $0x000002,%bh
		mov    $0x000001,%dl
		xor    %bl,%bl
		jmp    _03c996_jump

	_03c990_case:
		mov    $0x000002,%bh
		mov    $0x000001,%bl

	_03c994_jump:
		mov    %bl,%dl

	_03c996_jump:
		test   %dl,%dl
		jbe    _03c9a4_jump
		cmp    $0x000001,%dl
		je     _03c9e1_jump
		jmp    _03ca25_jump

	_03c9a4_jump:
		movzbw _0ce6b8_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0ce678_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%ax
		add    %edi,%eax
		mov    0x000004(%esp),%edi
		cmp    %di,%ax
		jge    _03c9d9_jump
		mov    %cl,0x00000c(%esp)
		jmp    _03ca25_jump

	_03c9d9_jump:
		jle    _03ca1c_jump
		mov    %dh,0x00000c(%esp)
		jmp    _03ca25_jump

	_03c9e1_jump:
		movzbw _0ce6b9_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0ce67c_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,(%esp)
		movzbw 0x000069(%eax),%di
		mov    0x00002c(%eax),%ax
		add    %edi,%eax
		mov    (%esp),%edi
		cmp    %di,%ax
		jge    _03ca14_jump
		mov    %bl,0x00000c(%esp)
		jmp    _03ca25_jump

	_03ca14_jump:
		jle    _03ca1c_jump
		mov    %bh,0x00000c(%esp)
		jmp    _03ca25_jump

	_03ca1c_jump:
		mov    _0cfa82_data,%al
		mov    %al,0x00000c(%esp)

	_03ca25_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _03c6f8_func

	_03ca30_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edi
		add    %edi,%eax
		cmp    _0cf024_data,%si
		jl     _03c917_jump

	_03ca59_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ca64_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0c7988_data,%edx
		add    $_0c7f88_data,%eax
		call   _03c5cc_func
		pop    %edx
		ret    



_03ca8c_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7f88_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03c54c_func
		pop    %edx
		ret    



_03cab4_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7f88_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03c5a4_func
		pop    %edx
		ret    



_03cadc_func:
		push   %edx
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7f88_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03c6bc_func
		pop    %edx
		ret    



_03cb04_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _016e9a_func
		cmpb   $0x000001,_095e2c_data
		jne    _03cb3e_jump
		call   _03b4d0_func
		mov    $0x003e80,%ecx
		mov    _0cd7b8_data,%edi
		call   _012783_func
		mov    $0x003e80,%ecx
		mov    _0cd7d0_data,%edi
		call   _012783_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03cb3e_jump:
		mov    _095e28_data,%esi
		mov    _0cd138_data,%edi
		call   _014c6b_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03cb54_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%bl
		xor    %edx,%edx
		xor    %ecx,%ecx

	_03cb63_jump:
		call   _016f78_func
		cmpb   $0x000001,_095e2c_data
		jne    _03cb9a_jump
		call   _016e9a_func
		call   _03b4d0_func
		call   _016e8a_func
		cmp    _0cfa4b_data,%cl
		je     _03cb8f_jump
		call   _016efd_func
		mov    %eax,%edx

	_03cb8f_jump:
		test   %bl,%bl
		jne    _03cbc1_jump
		call   _03ca64_func
		jmp    _03cbc1_jump

	_03cb9a_jump:
		call   _016e9a_func
		call   _016e8a_func
		cmp    _0cfa4b_data,%cl
		je     _03cbb3_jump
		call   _016efd_func
		mov    %eax,%edx

	_03cbb3_jump:
		test   %bl,%bl
		jne    _03cbbc_jump
		call   _03ca64_func

	_03cbbc_jump:
		call   _03b4d0_func

	_03cbc1_jump:
		mov    %edx,%eax
		call   *(%esp)
		mov    %cl,%bl
		test   %ax,%ax
		je     _03cb63_jump
		cmpl   $_038400_jump,(%esp)
		je     _03cbde_jump
		xor    %ah,%ah
		mov    %ah,_0cfa52_data

	_03cbde_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cce4_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0c7f88_data,%esi
		mov    _0cfa82_data,%al
		mov    $_0c6d88_data,%edi
		mov    %al,_0cfa4d_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7f88_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7988_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0cfa82_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03cd58_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0c6d88_data,%esi
		mov    _0cfa4d_data,%al
		mov    $_0c7f88_data,%edi
		mov    %al,_0cfa82_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03cd88_func:
		push   %edx
		mov    _0cd82c_data,%eax
		mov    %eax,_0cd7c0_data
		mov    _0cd820_data,%eax
		mov    %eax,_0cd7c8_data
		mov    _0cd7f0_data,%eax
		mov    %eax,_0cd7cc_data
		xor    %eax,%eax
		mov    _0cfa47_data,%al
		mov    _0c5528_data(,%eax,4),%edx
		mov    %edx,_0cd82c_data
		mov    _0c5548_data(,%eax,4),%edx
		mov    _0c6d68_data(,%eax,4),%eax
		mov    %edx,_0cd820_data
		mov    %eax,_0cd7f0_data
		pop    %edx
		ret    



_03cdd8_func:
		mov    _0cd7c0_data,%eax
		mov    %eax,_0cd82c_data
		mov    _0cd7c8_data,%eax
		mov    %eax,_0cd820_data
		mov    _0cd7cc_data,%eax
		mov    %eax,_0cd7f0_data
		ret    



_03cdf8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0cd82c_data,%esi
		mov    _0cd138_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ce20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000140,%edi
		mov    _0cd098_data,%dx
		mov    _0cd09c_data,%bx
		sub    %edx,%edi
		mov    _095e63_data,%ah
		add    %ebx,%edi
		test   %ah,%ah
		jne    _03ce6d_jump
		mov    $0x00fa00,%ecx
		mov    _0cd130_data,%esi
		mov    _0cd7b8_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _03cf69_jump

	_03ce6d_jump:
		mov    _09654c_data,%eax
		mov    _0cd09c_data,%edx
		cmp    %edx,%eax
		je     _03ceb0_jump
		jge    _03cea6_jump
		mov    _0cd096_data,%ecx
		mov    _0cd09a_data,%ebx
		mov    _0cd09e_data,%edx
		mov    _0cd0a2_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024dcc_func

	_03cea6_jump:
		mov    _0cd09c_data,%eax
		mov    %eax,_09654c_data

	_03ceb0_jump:
		mov    _0cd0a4_data,%ebx
		lea    0x000000(,%ebx,4),%eax
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cd7b8_data,%eax
		shl    $0x000006,%ebx
		call   _080420_func
		mov    _0cd7b8_data,%edx
		mov    _0cd09c_data,%ecx
		mov    _0cd0a4_data,%ebx
		add    %ecx,%edx
		lea    0x000000(,%ebx,4),%ecx
		add    %ebx,%ecx
		mov    _0cd09c_data,%esi
		shl    $0x000006,%ecx
		mov    _0cd130_data,%ebx
		lea    (%edx,%ecx,1),%eax
		add    %esi,%ebx
		mov    _0cd0a4_data,%si
		jmp    _03cf2c_jump

	_03cf08_jump:
		mov    _0cd09c_data,%dx
		jmp    _03cf19_jump

	_03cf11_jump:
		inc    %edx
		inc    %eax
		mov    (%ebx),%cl
		inc    %ebx
		mov    %cl,-0x000001(%eax)

	_03cf19_jump:
		mov    _0cd098_data,%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jl     _03cf11_jump
		movswl %di,%ecx
		inc    %esi
		add    %ecx,%eax

	_03cf2c_jump:
		add    %ecx,%ebx
		mov    _0cd0a0_data,%ebp
		movswl %si,%ecx
		cmp    %ebp,%ecx
		jl     _03cf08_jump
		mov    $0x0000c8,%ebx
		mov    _0cd7b8_data,%edx
		sub    %ebp,%ebx
		lea    0x000000(,%ebp,4),%eax
		lea    0x000000(,%ebx,4),%ecx
		add    %ebp,%eax
		add    %ecx,%ebx
		shl    $0x000006,%eax
		shl    $0x000006,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _080420_func

	_03cf69_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cf70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		mov    %edx,_0dfae0_data
		cmpw   $0x000001,_0cf88c_data
		jne    _03cf92_jump
		cmpw   $0x000009,_0cf87c_data
		je     _03cfc2_jump

	_03cf92_jump:
		cmpw   $0x000002,_0cf88c_data
		jne    _03cfa6_jump
		cmpw   $0x000004,_0cf87c_data
		je     _03cfc2_jump

	_03cfa6_jump:
		cmpw   $0x000004,_0cf88c_data
		jne    _03d30f_jump
		cmpw   $0x000009,_0cf87c_data
		jne    _03d30f_jump

	_03cfc2_jump:
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000003,%edi
		mov    $0x000004,%ebp

	_03cfd3_jump:
		mov    _0cd83c_data,%eax
		mov    _0c7f88_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7f89_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c7f8a_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0c7f88_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d021_jump
		mov    %ebx,%eax

	_03d021_jump:
		mov    _0cd83c_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d04c_jump
		mov    %ebx,%eax

	_03d04c_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d077_jump
		mov    %ebx,%eax

	_03d077_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f88_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d09d_jump
		mov    %ebx,%eax

	_03d09d_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d0c6_jump
		mov    %ebx,%eax

	_03d0c6_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d0ef_jump
		mov    %ebx,%eax

	_03d0ef_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f88_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d11d_jump
		mov    %ebx,%eax

	_03d11d_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d14b_jump
		mov    %ebx,%eax

	_03d14b_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d174_jump
		mov    %ebx,%eax

	_03d174_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f88_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d19d_jump
		mov    %ebx,%eax

	_03d19d_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d1c6_jump
		mov    %ebx,%eax

	_03d1c6_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d1ef_jump
		mov    %ebx,%eax

	_03d1ef_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f88_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d21e_jump
		mov    %ebx,%eax

	_03d21e_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d24d_jump
		mov    %ebx,%eax

	_03d24d_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03d27e_jump
		mov    %ebx,%eax

	_03d27e_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7f85_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7f86_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7f87_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _03cfd3_jump
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _03d54c_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _03d54c_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _03d54c_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		xor    %ecx,%ecx
		call   _03d54c_func
		mov    $0x0000c8,%eax
		mov    %cx,_0cf740_data
		call   _06bf60_func
		inc    %eax
		mov    %ax,_0cf742_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d30f_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _03d542_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _03d542_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03d337_jump:
		mov    _0cd83c_data,%eax
		mov    _0c7f88_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7f89_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c7f8a_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0c7f88_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03d373_jump
		mov    %ebx,%eax

	_03d373_jump:
		mov    _0cd83c_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d398_jump
		mov    %ebx,%eax

	_03d398_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d3be_jump
		mov    %ebx,%eax

	_03d3be_jump:
		mov    _0cd83c_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0c7f88_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03d3d8_jump
		mov    %ebx,%eax

	_03d3d8_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d401_jump
		mov    %ebx,%eax

	_03d401_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03d42d_jump
		mov    %ebx,%eax

	_03d42d_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7f85_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7f86_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7f87_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03d337_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		mov    $0x000180,%ecx
		call   _03d54c_func
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03d47f_jump:
		xor    %edx,%edx
		mov    _0c7f88_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d49b_jump
		mov    %ebx,%eax

	_03d49b_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f89_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03d4c4_jump
		mov    %ebx,%eax

	_03d4c4_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7f8a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03d4f0_jump
		mov    %ebx,%eax

	_03d4f0_jump:
		mov    _0cd83c_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7f85_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7f86_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7f87_data(%ecx)
		cmp    $0x00020d,%ecx
		jne    _03d47f_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _03d54c_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _03d54c_func

	_03d542_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d54c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000028(%esp)
		inc    %eax
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jge    _03d6f8_jump

	_03d56d_jump:
		xor    %esi,%esi

	_03d56f_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		imul   $0x000300,%eax,%ebp
		movswl %si,%ecx
		mov    _0cd83c_data,%ebx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%ebx,%ebp,1),%eax
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    0x000026(%esp),%edx
		mov    %eax,0x000008(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edx,%edi
		mov    %eax,0x000004(%esp)
		sub    %eax,%edi
		mov    0x000008(%esp),%eax
		imul   %edi,%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		add    %eax,%ebx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    (%ecx,%ebx,1),%al
		mov    (%esp),%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000018(%esp)
		mov    %eax,%ebx
		imul   0x000008(%esp),%ebx
		add    0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esp)
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    0x000010(%esp),%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x000004(%esp),%edx
		cmp    %ebx,%eax
		jle    _03d611_jump
		mov    %ebx,%eax

	_03d611_jump:
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0cd83c_data,%edx
		mov    %eax,0x00001c(%esp)
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %edi,%ebx
		imul   %eax,%ebx
		add    0x000014(%esp),%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000018(%esp),%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _03d66f_jump
		mov    %ebx,%eax

	_03d66f_jump:
		mov    _0cd83c_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x00001c(%esp),%eax
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		imul   %eax,%edi
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000018(%esp),%ebp
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %ebp,%edx
		add    %edi,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03d6c9_jump
		mov    %ebx,%eax

	_03d6c9_jump:
		mov    _0cd83c_data,%edx
		add    %edi,%edx
		inc    %esi
		mov    %al,0x000002(%ecx,%edx,1)
		cmp    $0x000100,%si
		jl     _03d56f_jump
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    0x000028(%esp),%ecx
		mov    %bx,0x000024(%esp)
		cmp    %cx,%bx
		jl     _03d56d_jump

	_03d6f8_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03d704_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf740_data,%bx
		testb  $0x000040,_0cfa87_data
		je     _03d89e_jump
		cmpw   $0x000005,_0cf88c_data
		jne    _03d78f_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _03d78f_jump
		cmpb   $0x000000,_0cf9fa_data
		jne    _03d774_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd83c_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0cf740_data,%bx
		inc    %ebx
		jmp    _03d77e_jump

	_03d774_jump:
		test   %bx,%bx
		jne    _03d77e_jump
		mov    $0x000001,%ebx

	_03d77e_jump:
		cmp    $0x00000f,%bx
		jne    _03d89e_jump
		xor    %ebx,%ebx
		jmp    _03d89e_jump

	_03d78f_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _03d7a3_jump
		cmpw   $0x000009,_0cf87c_data
		je     _03d7d3_jump

	_03d7a3_jump:
		cmpw   $0x000002,_0cf88c_data
		jne    _03d7b7_jump
		cmpw   $0x000004,_0cf87c_data
		je     _03d7d3_jump

	_03d7b7_jump:
		cmpw   $0x000004,_0cf88c_data
		jne    _03d89e_jump
		cmpw   $0x000009,_0cf87c_data
		jne    _03d89e_jump

	_03d7d3_jump:
		mov    _0dfae0_data,%edx
		mov    _0cf740_data,%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %edx,_0dfae0_data
		cmp    %edx,%eax
		jle    _03d7f5_jump
		test   %bx,%bx
		je     _03d89e_jump

	_03d7f5_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd83c_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0cf740_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0cf740_data,%bx
		test   %bx,%bx
		jne    _03d84d_jump
		mov    $0x0000c3,%eax
		call   _072960_func
		mov    _0cf740_data,%bx
		inc    %ebx
		jmp    _03d86f_jump

	_03d84d_jump:
		mov    _0dfae0_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03d865_jump
		inc    %ebx
		jmp    _03d86f_jump

	_03d865_jump:
		test   %bx,%bx
		jne    _03d86f_jump
		mov    $0x000001,%ebx

	_03d86f_jump:
		cmp    $0x00000f,%bx
		jne    _03d89e_jump
		mov    $0x000190,%eax
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %esi,_0dfae0_data
		mov    %bx,_0cf740_data
		call   _06bf60_func
		inc    %eax
		mov    _0cf740_data,%bx
		mov    %ax,_0cf742_data

	_03d89e_jump:
		mov    %bx,_0cf740_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d8ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $0x0000ff,_095e2c_data
		jne    _03d8c7_jump
		call   _0145fc_func
		call   _03c2d0_func

	_03d8c7_jump:
		cmpb   $0x000001,_095e2c_data
		je     _03d9ca_jump
		call   _0146b8_func
		mov    $0x010000,%ebx
		mov    $_016565_func,%esi
		mov    $_016559_func,%edi
		mov    _095e28_data,%eax
		xor    %edx,%edx
		mov    $_0166df_func,%ebp
		call   _080420_func
		xor    %eax,%eax
		mov    $0x000001,%dh
		mov    %cl,%al
		mov    $_0163f2_func,%ebx
		call   _03c194_jump
		mov    $_0163e6_func,%ecx
		mov    $_016876_func,%eax
		mov    %dh,_095e2c_data
		mov    %ebx,_0cd10c_data
		mov    %esi,_0cd118_data
		mov    %edi,_0cd114_data
		mov    %ebp,_0cd0f8_data
		mov    $0x0a0500,%edx
		mov    $_012b3d_func,%ebx
		mov    $_012c00_func,%esi
		mov    $_012c59_func,%edi
		mov    $_012d08_func,%ebp
		mov    %ecx,_0cd0f4_data
		mov    %eax,_0cd11c_data
		mov    $_012bb7_func,%ecx
		mov    $_012dfb_func,%eax
		mov    %edx,_0cd7b8_data
		mov    %ebx,_0cd104_data
		mov    %esi,_0cd108_data
		mov    %edi,_0cd12c_data
		mov    %ebp,_0cd0e8_data
		mov    $_012b86_func,%edx
		mov    $_01300f_func,%ebx
		mov    $_012da9_func,%esi
		mov    $_012cbf_func,%edi
		mov    %ecx,_0cd110_data
		mov    %eax,_0cd0bc_data
		mov    $_012e9c_func,%ecx
		mov    %edx,_0cd100_data
		mov    %ebx,_0cd0d4_data
		mov    %esi,_0cd0e0_data
		mov    %edi,_0cd0d8_data
		mov    $_012f0c_func,%edx
		mov    %ecx,_0cd0f0_data
		mov    %edx,_0cd0b8_data

	_03d9ca_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d9d4_func:
		call   _0147e7_func
		movb   $0x0000ff,_095e2c_data
		ret    



_03d9e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $0x0000ff,_095e2c_data
		jne    _03d9ff_jump
		call   _0145fc_func
		call   _03c2d0_func

	_03d9ff_jump:
		cmpb   $0x000000,_095e2c_data
		je     _03db1c_jump
		call   _01465f_func
		mov    $0x00fa00,%ebx
		mov    _0cd138_data,%eax
		xor    %edx,%edx
		mov    $_016afc_func,%esi
		call   _080420_func
		mov    $0x00fa00,%ebx
		mov    _095e28_data,%eax
		xor    %edx,%edx
		mov    $_016bea_func,%edi
		call   _080420_func
		mov    _095e28_data,%eax
		mov    $_016c89_func,%ebp
		call   _0145f1_func
		xor    %eax,%eax
		mov    $_016a18_func,%ebx
		mov    %cl,%al
		xor    %dh,%dh
		call   _03c194_jump
		mov    $_016b08_jump,%ecx
		mov    _0cd138_data,%eax
		mov    %dh,_095e2c_data
		mov    %ebx,_0cd0f4_data
		mov    %esi,_0cd114_data
		mov    %edi,_0cd0f8_data
		mov    %ebp,_0cd11c_data
		mov    $_016a24_jump,%edx
		mov    $_015670_func,%ebx
		mov    $_0156dc_func,%esi
		mov    $_015755_func,%edi
		mov    $_0157df_func,%ebp
		mov    %eax,_0cd7b8_data
		mov    %ecx,_0cd118_data
		mov    $_015609_func,%eax
		mov    $_0156a0_func,%ecx
		mov    %edx,_0cd10c_data
		mov    %ebx,_0cd110_data
		mov    %esi,_0cd12c_data
		mov    %edi,_0cd0e8_data
		mov    %ebp,_0cd0bc_data
		mov    $_015640_func,%edx
		mov    $_015830_func,%ebx
		mov    $_015725_func,%esi
		mov    %eax,_0cd100_data
		mov    %ecx,_0cd108_data
		mov    $_01587d_func,%eax
		mov    $_0157a6_func,%ecx
		mov    %edx,_0cd104_data
		mov    %ebx,_0cd0f0_data
		mov    %esi,_0cd0d8_data
		mov    $_0158f4_func,%edx
		mov    %eax,_0cd0b8_data
		mov    %ecx,_0cd0e0_data
		mov    %edx,_0cd0d4_data

	_03db1c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03db24_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		test   %eax,%eax
		jle    _03db3d_jump

	_03db2e_jump:
		call   _016e9a_func
		inc    %edx
		call   _016e8a_func
		cmp    %ebx,%edx
		jl     _03db2e_jump

	_03db3d_jump:
		pop    %edx
		pop    %ebx
		ret    



_03db40_func:
		test   %dl,%dl
		je     _03db4b_jump
		mov    $0x00004d,%edx
		jmp    _03db50_jump

	_03db4b_jump:
		mov    $0x0000ef,%edx

	_03db50_jump:
		mov    %dx,0x000060(%eax)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0933ee_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    



_03db68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03dba5_jump
		push   $0xffffffc1
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffffcc,%ecx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01d204_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dba5_jump:
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dbb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03dbc8_jump
		decb   0x00007f(%ebx)

	_03dbc8_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		mov    0x000060(%ebx),%cx
		shr    $0x000007,%dl
		cmp    $0x0000ef,%cx
		jne    _03dbe8_jump
		mov    %ebx,%eax
		call   _01dfb8_func
		jmp    _03dbef_jump

	_03dbe8_jump:
		mov    %ebx,%eax
		call   _03db68_func

	_03dbef_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    %eax,%ecx
		xor    %eax,%eax
		shl    $0x000008,%ecx
		mov    0x00006c(%ebx),%al
		and    $0x000001,%dl
		add    %ecx,%eax
		shl    $0x000003,%dl
		cmp    $0x000009,%eax
		jb     _03dc6b_jump
		jbe    _03dd99_jump
		cmp    $0x000010,%eax
		jb     _03dc4e_jump
		jbe    _03dd21_jump
		cmp    $0x000013,%eax
		jb     _03dc40_jump
		jbe    _03dd3f_jump
		cmp    $0x000014,%eax
		jbe    _03dd03_jump
		cmp    $0x000200,%eax
		je     _03ddcc_jump
		jmp    _03de0f_jump

	_03dc40_jump:
		cmp    $0x000011,%eax
		je     _03dce5_jump
		jmp    _03de0f_jump

	_03dc4e_jump:
		cmp    $0x00000b,%eax
		jb     _03ddee_jump
		jbe    _03dd03_jump
		cmp    $0x00000d,%eax
		je     _03dcd5_jump
		jmp    _03de0f_jump

	_03dc6b_jump:
		cmp    $0x000003,%eax
		jb     _03dc95_jump
		jbe    _03dcab_jump
		cmp    $0x000006,%eax
		jb     _03dc8b_jump
		jbe    _03dd5d_jump
		cmp    $0x000008,%eax
		je     _03dd03_jump
		jmp    _03de0f_jump

	_03dc8b_jump:
		cmp    $0x000005,%eax
		je     _03dcd5_jump
		jmp    _03de0f_jump

	_03dc95_jump:
		cmp    $0x000001,%eax
		jb     _03dca2_jump
		jbe    _03de09_jump
		jmp    _03dcbc_jump

	_03dca2_jump:
		test   %eax,%eax
		je     _03dce5_jump
		jmp    _03de0f_jump

	_03dcab_jump:
		movw   $0x00fff8,0x000042(%ebx)
		movw   $0x000000,0x000040(%ebx)
		jmp    _03de0f_jump

	_03dcbc_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,0x000081(%ebx)

	_03dcd5_jump:
		mov    %ebx,%eax
		movb   $0x000032,0x00007f(%ebx)
		call   _03e1ac_func
		jmp    _03de0f_jump

	_03dce5_jump:
		cmpb   $0x000000,_0ce77e_data
		je     _03de0f_jump
		mov    $0x00000f,%edx
		mov    %ebx,%eax
		call   _01d808_func
		jmp    _03de0f_jump

	_03dd03_jump:
		cmpb   $0x000000,_0ce77e_data
		je     _03de0f_jump
		mov    $0x000012,%edx
		mov    %ebx,%eax
		call   _01d808_func
		jmp    _03de0f_jump

	_03dd21_jump:
		cmpb   $0x000000,_0ce77e_data
		jne    _03de0f_jump
		mov    $0x000011,%edx
		mov    %ebx,%eax
		call   _01d808_func
		jmp    _03de0f_jump

	_03dd3f_jump:
		cmpb   $0x000000,_0ce77e_data
		jne    _03de0f_jump
		mov    $0x000014,%edx
		mov    %ebx,%eax
		call   _01d808_func
		jmp    _03de0f_jump

	_03dd5d_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01d074_func
		test   %al,%al
		je     _03de0f_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _03db40_func
		movw   $0x000000,0x000040(%ebx)
		jmp    _03de0f_jump

	_03dd99_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ebx,%eax
		mov    %ch,0x000081(%ebx)
		call   _01d074_func
		test   %al,%al
		je     _03de0f_jump
		mov    %ebx,%eax
		call   _055ee4_func
		movw   $0x00fffd,0x000042(%ebx)
		jmp    _03de0f_jump

	_03ddcc_jump:
		mov    0x000081(%ebx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%cl
		mov    %dh,0x000081(%ebx)
		or     %dl,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _055ee4_func
		jmp    _03de0f_jump

	_03ddee_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %dh,0x000081(%ebx)
		jmp    _03de0f_jump

	_03de09_jump:
		movw   $0x000064,0x000056(%ebx)

	_03de0f_jump:
		mov    0x000056(%ebx),%si
		test   %si,%si
		je     _03de1f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000056(%ebx)

	_03de1f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03de28_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    0x00006c(%eax),%dl
		testb  $0x000004,0x000007(%ecx,%edx,8)
		je     _03de9a_jump
		cmpw   $0x00004d,0x000060(%eax)
		jne    _03de51_jump
		xor    %ebx,%ebx
		jmp    _03de56_jump

	_03de51_jump:
		mov    $0x000005,%ebx

	_03de56_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		mov    0x000008(%edx),%cx
		and    $0x00003f,%ch
		and    $0x00ffff,%ecx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		imul   %eax,%ecx
		shl    $0x000002,%ecx
		mov    (%edx),%eax
		add    %eax,%ecx
		movswl %bx,%eax
		cmpb   $0x000000,0x000003(%ecx,%eax,4)
		jne    _03de9a_jump
		mov    $0xffffffff,%ebx

	_03de9a_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dea0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bl,0x00001c(%esp)
		mov    %cl,0x000018(%esp)
		call   _03de28_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _03e1a2_jump
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _03e1a2_jump

	_03dedd_jump:
		cmpw   $0x00004e,0x000060(%esi)
		jne    _03e192_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03e192_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _03df1c_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _03df41_jump

	_03df1c_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000f7,%cl
		shl    $0x000003,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,(%eax)

	_03df41_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		movswl %bx,%edx
		push   %eax
		lea    0x00000c(%esp),%ebx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00006c(%edi),%al
		cmp    $0x000005,%al
		jb     _03dfb9_jump
		jbe    _03e011_jump
		cmp    $0x00000d,%al
		jb     _03e0d9_jump
		jbe    _03e065_jump
		cmp    $0x000012,%al
		je     _03dfc1_jump
		jmp    _03e0d9_jump

	_03dfb9_jump:
		cmp    $0x000002,%al
		jne    _03e0d9_jump

	_03dfc1_jump:
		mov    0x00002c(%esi),%edx
		xor    %eax,%eax
		dec    %edx
		mov    0x00006d(%esi),%al
		mov    %edx,0x00002c(%esi)
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		mov    $0x000030,%ecx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %cx,0x00000c(%esp)
		mov    0x000005(%edx,%eax,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		mov    %cl,%ch
		or     $0x0000a0,%ch
		mov    %ch,0x000005(%edx,%eax,8)
		mov    $0x000003,%bh
		movb   $0x000000,0x000071(%esi)
		mov    %bh,0x000020(%esp)
		movb   $0x00000a,0x000072(%esi)
		jmp    _03e0d9_jump

	_03e011_jump:
		lea    0x000018(%edx),%eax
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    $0x000020,%ebx
		mov    0x00000c(%esi),%eax
		mov    %bx,0x00000c(%esp)
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%edx
		mov    $0x000003,%cl
		mov    (%ebx),%eax
		mov    %cl,0x000020(%esp)
		mov    0x000005(%edx,%eax,1),%ch
		and    $0x00000f,%ch
		mov    %ch,%bl
		mov    %ch,0x000005(%edx,%eax,1)
		or     $0x000020,%bl
		mov    %bl,0x000005(%edx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000000,0x000072(%esi)
		jmp    _03e0d9_jump

	_03e065_jump:
		mov    $0x000020,%eax
		mov    $0x000008,%edx
		call   _06bf60_func
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _03e090_jump
		mov    $0x000001,%eax
		jg     _03e090_jump
		neg    %eax

	_03e090_jump:
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		xor    %dh,%dh
		mov    0x00006d(%esi),%al
		mov    %dh,0x000020(%esp)
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movb   $0x000000,0x000072(%esi)
		sub    $0x000014,%ebp
		mov    %ebp,0x00002c(%esi)

	_03e0d9_jump:
		cmpb   $0x000000,0x00001c(%esp)
		jne    _03e0e7_jump
		movw   $0x000010,0x00000c(%esp)

	_03e0e7_jump:
		testb  $0x000008,0x000081(%edi)
		je     _03e0fa_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000040(%esi)
		jmp    _03e10a_jump

	_03e0fa_jump:
		mov    0x00000c(%esp),%eax
		mov    %eax,%edx
		mov    %ax,0x000040(%esi)
		neg    %edx
		mov    %dx,0x000040(%esi)

	_03e10a_jump:
		mov    $0x000004,%cl
		mov    0x000040(%esi),%ax
		xor    %edx,%edx
		test   %ax,%ax
		js     _03e11c_jump
		sar    %cl,%ax
		jmp    _03e125_jump

	_03e11c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03e125_jump:
		mov    0x000020(%esp),%dl
		cwtl   
		imul   %edx,%eax
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000081(%esi),%al
		xor    %edx,%edx
		shl    $0x000004,%al
		mov    %ebx,0x000028(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f8e8_func
		mov    0x000081(%esi),%dh
		mov    0x000018(%esp),%al
		and    $0x0000bf,%dh
		mov    %al,0x00007f(%esi)
		mov    %dh,0x000081(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03e192_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _03dedd_jump

	_03e1a2_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03e1ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03e38d_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03e1c8_jump
		cmpb   $0x000015,0x00006b(%esi)
		jae    _03e1e6_jump

	_03e1c8_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03e1d4_jump
		cmpb   $0x000012,0x00006b(%esi)
		jae    _03e1e6_jump

	_03e1d4_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03e1e0_jump
		cmpb   $0x000002,0x00006b(%esi)
		jae    _03e1e6_jump

	_03e1e0_jump:
		movw   $0x000000,0x000052(%esi)

	_03e1e6_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _03e393_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03e1fd_jump
		cmpb   $0x000015,0x00006b(%esi)
		je     _03e21d_jump

	_03e1fd_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03e209_jump
		cmpb   $0x000012,0x00006b(%esi)
		je     _03e21d_jump

	_03e209_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03e393_jump
		cmpb   $0x000002,0x00006b(%esi)
		jne    _03e393_jump

	_03e21d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _03e393_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x000005,%ch
		jne    _03e270_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _03dea0_func
		jmp    _03e382_jump

	_03e270_jump:
		cmp    $0x000002,%ch
		jne    _03e296_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _03dea0_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e296_jump:
		mov    $0x000064,%ecx
		mov    $0x000001,%ebx
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03dea0_func
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		mov    $0x000064,%ecx
		or     %dl,%bh
		mov    $0xfffffffd,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		call   _03dea0_func
		mov    0x000081(%esi),%cl
		lea    0x000081(%esi),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    $0x000001,%ebx
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    $0x000064,%ecx
		mov    %dh,(%eax)
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03dea0_func
		mov    0x000081(%esi),%bl
		lea    0x000081(%esi),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		or     %dl,%cl
		mov    $0xfffffffd,%edx
		mov    %cl,(%eax)
		mov    $0x000064,%ecx
		mov    %esi,%eax
		call   _03dea0_func
		mov    0x000081(%esi),%ch
		lea    0x000081(%esi),%eax
		test   $0x000008,%ch
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_03e382_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e38d_jump:
		movw   $0x000000,0x000052(%esi)

	_03e393_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e398_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03e4b0_jump
		cmpw   $0x000000,0x000056(%esi)
		jne    _03e4b0_jump
		cmpw   $0x00004d,0x000060(%esi)
		je     _03e3d8_jump
		cmp    $0x000003,%dx
		jne    _03e4b0_jump

	_03e3d8_jump:
		cmpw   $0x0000ef,0x000060(%esi)
		jne    _03e40e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _03e40e_jump
		mov    $0x000014,%ecx
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03dea0_func

	_03e40e_jump:
		movb   $0x000001,_0ce77f_data
		mov    %esi,%eax
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%esi)
		jne    _03e42c_jump
		mov    $0x000003,%ebx
		jmp    _03e4a7_jump

	_03e42c_jump:
		cmpw   $0x00004d,0x000060(%esi)
		jne    _03e4a2_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000077(%esi),%dl
		mov    0x000076(%esi),%al
		sub    %eax,%edx
		cmp    $0x000003,%edx
		jl     _03e492_jump
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d808_func
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03e4b0_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _061180_func
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0ccdf0_data,%eax
		movw   $0x000000,0x000048(%eax,%esi,4)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03e492_jump:
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d808_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03e4a2_jump:
		mov    $0x000001,%ebx

	_03e4a7_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_03e4b0_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03e4b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    0x00007f(%eax),%ah
		test   %ah,%ah
		jne    _03e54a_jump
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _03e54a_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00000b,%dh
		jne    _03e4de_jump
		mov    $0x000002,%edx
		jmp    _03e543_jump

	_03e4de_jump:
		test   %dh,%dh
		jne    _03e539_jump
		mov    _0ce6b8_data,%al
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    _0ce678_data,%si
		add    %ecx,%edx
		add    %esi,%eax
		sub    %eax,%edx
		mov    %dx,0x00003a(%ebx)
		xor    %edx,%edx
		mov    0x000038(%ebx),%eax
		mov    0x00007a(%ebx),%dl
		sar    $0x000010,%eax
		add    $0x000010,%edx
		test   %eax,%eax
		jge    _03e513_jump
		neg    %eax

	_03e513_jump:
		cmp    %edx,%eax
		jle    _03e528_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e528_jump:
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e539_jump:
		cmp    $0x000004,%dh
		jne    _03e54a_jump
		mov    $0x000005,%edx

	_03e543_jump:
		mov    %ebx,%eax
		call   _01d808_func

	_03e54a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e550_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03e567_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _03e578_jump
		decb   0x00007f(%edx)
		pop    %edx
		ret    

	_03e567_jump:
		mov    $0x000093,%eax
		call   _072960_func
		mov    %edx,%eax
		call   _07b370_func

	_03e578_jump:
		pop    %edx
		ret    

_03e580_switch:
		.long   0
		.long   0
		.long   0
		.long   0


_03e5f8_switch:
		.long   0
		.long   0
		.long   0
		.long   0


	_03e66c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03e675_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03ec0c_func
		cmp    $0x000020,%si
		jle    _03e675_jump

	_03e68b_jump:
		mov    _0e0b78_data,%eax
		call   _081b0f_func
		test   %eax,%eax
		jne    _03e68b_jump
		mov    _0e0b7c_data,%eax
		call   _082033_func
		xor    %eax,%eax
		call   _081c74_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e6b0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _081b98_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0e0b7c_data
		mov    _096684_data,%cx
		mov    _096680_data,%ebx
		call   _081cae_func
		test   %eax,%eax
		je     _03e6e7_jump
		xor    %eax,%eax
		call   _081c74_func

	_03e6e7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e6ec_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000003,%eax
		int    $0x000010
		push   %edx
		push   $_0c0c84_data
		call   _07fce1_func
		add    $0x000008,%esp
		mov    $0xffffffff,%eax
		call   _080512_func
		pop    %edx
		ret    



_03e780_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _0835c4_func
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _081b98_func
		push   %ds
		push   $_0e0b78_data
		mov    %ds,%ecx
		push   %ds
		mov    $_0e0af0_data,%ebx
		mov    $0x002710,%edx
		push   $_096664_data
		mov    _0e0b6e_data,%eax
		mov    %edx,_096674_data
		call   _08367d_func
		test   %eax,%eax
		je     _03e7db_jump
		xor    %eax,%eax
		call   _081c74_func
		call   _08363d_func
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e7db_jump:
		push   %ds
		mov    $0x000028,%eax
		push   $_0e0b7c_data
		mov    _096684_data,%cx
		mov    _096680_data,%ebx
		call   _081cae_func
		test   %eax,%eax
		je     _03e819_jump
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _081c74_func
		mov    _0e0b78_data,%eax
		mov    %ebx,%edx
		call   _083f3d_func
		mov    $0x000002,%eax

	_03e819_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e820_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000008(%esp)
		call   _01d028_func
		mov    $_0c0ca8_data,%edx
		mov    $_0c0cac_data,%eax
		call   _081903_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _03e855_jump
		mov    $_0c0cb8_data,%eax
		call   _03e6ec_func

	_03e855_jump:
		mov    %edi,%edx
		shl    $0x000002,%edi
		sub    %edx,%edi
		mov    %esi,%eax
		shl    $0x000002,%edi
		xor    %ebx,%ebx
		mov    _096550_data(%edi),%edx
		mov    %esi,%ecx
		call   _080d12_func
		mov    $0x000080,%ebx
		mov    $0x000010,%edx
		mov    %ebp,%eax
		call   _080af5_func
		mov    %esi,%eax
		call   _0819b7_func
		mov    %edi,%ecx
		mov    %ebp,%eax
		mov    _096559_data(%edi),%dl
		lea    0x000800(%ebp),%esi

	_03e898_jump:
		sub    (%eax),%dl
		mov    (%eax),%bl
		mov    _096558_data(%ecx),%dh
		inc    %eax
		xor    %dh,%bl
		mov    %bl,-0x000001(%eax)
		cmp    %esi,%eax
		jne    _03e898_jump
		test   %dl,%dl
		je     _03e8ba_jump
		mov    $_0c0ce4_data,%eax
		call   _03e6ec_func

	_03e8ba_jump:
		call   _01d028_func
		mov    $_0c0ca8_data,%edx
		mov    $_0c0d00_data,%eax
		call   _081903_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _03e8e0_jump
		mov    $_0c0d0c_data,%eax
		call   _03e6ec_func

	_03e8e0_jump:
		mov    (%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0965a8_data(,%eax,4),%esi
		mov    0x000008(%esp),%eax
		cmpl   $0x000000,(%eax)
		je     _03e901_jump
		call   _07fbcc_func

	_03e901_jump:
		mov    %esi,%eax
		call   _07fbb4_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03e918_jump
		mov    $_0c0d28_data,%eax
		call   _03e6ec_func

	_03e918_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		mov    %edi,(%eax)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    _0965a4_data(%eax),%edx
		mov    0x00000c(%esp),%eax
		mov    0x00000c(%esp),%ecx
		call   _080d12_func
		mov    $0x000001,%edx
		mov    %esi,%ebx
		mov    %edi,%eax
		call   _080af5_func
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebx
		call   _0819b7_func
		xor    %edx,%edx
		mov    _0965ad_data(%ebx),%bl
		test   %esi,%esi
		jbe    _03e984_jump
		mov    0x000004(%esp),%ecx
		mov    %edi,%eax

	_03e973_jump:
		sub    (%eax),%bl
		inc    %eax
		mov    _0965ac_data(%ecx),%bh
		inc    %edx
		xor    %bh,-0x000001(%eax)
		cmp    %esi,%edx
		jb     _03e973_jump

	_03e984_jump:
		test   %bl,%bl
		je     _03e992_jump
		mov    $_0c0d58_data,%eax
		call   _03e6ec_func

	_03e992_jump:
		mov    %ebp,%eax
		lea    0x000800(%ebp),%edx

	_03e99a_jump:
		mov    (%eax),%ebx
		add    $0x000010,%eax
		add    %edi,%ebx
		mov    %ebx,-0x000010(%eax)
		cmp    %edx,%eax
		jne    _03e99a_jump
		xor    %edx,%eax
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03e9b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cfa17_data
		je     _03e9ce_jump
		cmpb   $0x000000,_0cfa13_data
		jne    _03e9ce_jump
		call   _03ecc4_func

	_03e9ce_jump:
		mov    $_0966b0_data,%ecx
		mov    $0x000002,%edx
		mov    $_0dfaf0_data,%ebx
		mov    %edx,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03e9e8_switch:
		.long   _03ea1b_case
		.long   _03ea35_case
		.long   _03ea4f_case
		.long   _03ea69_case
		.long   _03ea83_case
		.long   _03ea9d_case




_03ea00_func:
		push   %ebx
		push   %ecx
		push   %edx
		dec    %eax
		cmp    $0x000005,%ax
		ja     _03eab4_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03e9e8_switch(,%eax,4)

	_03ea1b_case:
		mov    $_0966b4_data,%ecx
		mov    $0x000004,%edx
		mov    $_0e02f0_data,%ebx
		mov    %edx,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ea35_case:
		mov    $_0966b4_data,%ecx
		mov    $0x000006,%edx
		mov    $_0e02f0_data,%ebx
		mov    %edx,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ea4f_case:
		mov    $_0966b4_data,%ecx
		mov    $0x000005,%edx
		mov    $_0e02f0_data,%ebx
		mov    %edx,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ea69_case:
		mov    $_0966b4_data,%ecx
		mov    $0x000003,%edx
		mov    $_0e02f0_data,%ebx
		mov    %edx,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ea83_case:
		mov    $_0966b4_data,%ecx
		mov    $0x000001,%edx
		mov    $_0e02f0_data,%ebx
		mov    %edx,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ea9d_case:
		mov    $_0966b4_data,%ecx
		mov    $_0e02f0_data,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _03e820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03eab4_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03eabc_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_03e580_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0966b6_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _03eb99_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0dfaf0_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0dfaf4_data(%edx),%eax
		mov    _0dfafc_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _03ebdb_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0dfaf8_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _03ebdb_jump

	_03eb99_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0e02f0_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0e02f4_data(%edx),%eax
		mov    _0e02fc_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _03ebdb_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0e02f8_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_03ebdb_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _03ebfe_jump
		mov    %esp,%ebx
		mov    _0e0b78_data,%eax
		mov    %ds,%ecx
		call   _0843f7_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _03ebfe_jump
		cmp    $0x000020,%ax
		jl     _03ec03_jump

	_03ebfe_jump:
		mov    $0xffffffff,%eax

	_03ec03_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03ec0c_func:
		movswl %ax,%edx
		mov    _0e0b78_data,%eax
		call   _084a10_func
		ret    $0x000004



_03ec1c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0e0b78_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _084e8b_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0e0b78_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _08512e_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03ec78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03ec81_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03ec0c_func
		cmp    $0x000020,%si
		jle    _03ec81_jump
		mov    _0e0b7c_data,%eax
		call   _082033_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _081c74_func
		mov    %ebx,%edx
		mov    _0e0b78_data,%eax
		call   _083f3d_func
		call   _08363d_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ecc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0967b8_data,%ebp
		call   _01d028_func
		mov    $_0c0ca8_data,%edx
		mov    $_0c0d74_data,%eax
		mov    $0x000006,%ecx
		call   _081903_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03ecfc_jump
		mov    $_0c0d80_data,%eax
		call   _03e6ec_func

	_03ecfc_jump:
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    _0965fc_data(%eax),%esi
		mov    %eax,0x000004(%esp)
		mov    %esi,%eax
		mov    %esi,(%esp)
		call   _07fbb4_func
		mov    %eax,%ebp
		mov    %eax,_0967b8_data
		test   %eax,%eax
		jne    _03ed33_jump
		mov    %edi,%eax
		call   _0819b7_func
		jmp    _03edbe_jump

	_03ed33_jump:
		mov    0x000004(%esp),%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		mov    _0965f8_data(%edx),%edx
		mov    %edi,%ecx
		call   _080d12_func
		mov    $0x000001,%edx
		mov    _0967b8_data,%eax
		mov    %esi,%ebx
		call   _080af5_func
		mov    %edi,%eax
		mov    0x000004(%esp),%ebx
		call   _0819b7_func
		mov    _0967b8_data,%ebp
		mov    _096601_data(%ebx),%bl
		xor    %eax,%eax
		test   %esi,%esi
		jbe    _03ed8e_jump
		mov    0x000004(%esp),%ecx
		mov    %ebp,%edx

	_03ed7c_jump:
		sub    (%edx,%eax,1),%bl
		inc    %eax
		mov    _096600_data(%ecx),%bh
		xor    %bh,-0x000001(%edx,%eax,1)
		cmp    %esi,%eax
		jb     _03ed7c_jump

	_03ed8e_jump:
		mov    %ebp,_0967b8_data
		test   %bl,%bl
		je     _03eda2_jump
		mov    $_0c0da0_data,%eax
		call   _03e6ec_func

	_03eda2_jump:
		mov    _0967b8_data,%ebp
		mov    (%esp),%eax
		mov    %ebp,_0e0b00_data
		xor    %ebp,%ebp
		mov    %eax,_0e0b04_data
		mov    %ebp,_0967b8_data

	_03edbe_jump:
		mov    _0967b8_data,%ebp
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03edd0_switch:
		.long   _03ee3c_case
		.long   _03ee4a_case
		.long   _03ee5c_case
		.long   _03ee58_case
		.long   _03ee6f_case
		.long   _03ee43_case
		.long   _03ee51_case
		.long   _03ee63_case
		.long   _03ee6a_case




_03edf4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000078,%esp
		mov    %eax,%ebp
		mov    %edx,%eax
		mov    $0x00001d,%ecx
		mov    %esp,%edi
		mov    $_03e5f8_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x000029(%esp),%ah
		or     $0x000001,%ah
		dec    %ebp
		mov    %ah,0x000029(%esp)
		cmp    $0x000008,%ebp
		ja     _03ee6f_case
		jmp    *%cs:_03edd0_switch(,%ebp,4)

	_03ee3c_case:
		mov    $0x000008,%ebx
		jmp    _03ee6f_case

	_03ee43_case:
		mov    $0x000007,%ebx
		jmp    _03ee6f_case

	_03ee4a_case:
		mov    $0x000005,%ebx
		jmp    _03ee6f_case

	_03ee51_case:
		mov    $0x000001,%ebx
		jmp    _03ee6f_case

	_03ee58_case:
		xor    %ebx,%ebx
		jmp    _03ee6f_case

	_03ee5c_case:
		mov    $0x000002,%ebx
		jmp    _03ee6f_case

	_03ee63_case:
		mov    $0x000006,%ebx
		jmp    _03ee6f_case

	_03ee6a_case:
		mov    $0x000003,%ebx

	_03ee6f_case:
		cmp    $0x000006,%ebx
		je     _03ef66_jump
		call   _01d028_func
		mov    $_0c0ca8_data,%edx
		mov    $_0c0d74_data,%eax
		call   _081903_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03ee9c_jump
		mov    $_0c0d80_data,%eax
		call   _03e6ec_func

	_03ee9c_jump:
		lea    0x000000(,%ebx,4),%esi
		sub    %ebx,%esi
		mov    _0965fc_data(,%esi,4),%esi
		mov    _0967b8_data,%edx
		mov    %esi,0x000074(%esp)
		test   %edx,%edx
		je     _03eec4_jump
		mov    $_0967b8_data,%eax
		call   _07fbcc_func

	_03eec4_jump:
		mov    %esi,%eax
		call   _07fbb4_func
		mov    %eax,_0967b8_data
		test   %eax,%eax
		jne    _03eee0_jump
		mov    %edi,%eax
		call   _0819b7_func
		jmp    _03ef9a_jump

	_03eee0_jump:
		lea    0x000000(,%ebx,4),%ebp
		sub    %ebx,%ebp
		mov    %edi,%eax
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0965f8_data(%ebp),%edx
		mov    %edi,%ecx
		call   _080d12_func
		mov    $0x000001,%edx
		mov    _0967b8_data,%eax
		mov    %esi,%ebx
		call   _080af5_func
		mov    %edi,%eax
		call   _0819b7_func
		mov    _096601_data(%ebp),%bl
		xor    %eax,%eax
		test   %esi,%esi
		jbe    _03ef3b_jump
		mov    %ebp,%ecx

	_03ef23_jump:
		mov    _0967b8_data,%edx
		sub    (%edx,%eax,1),%bl
		inc    %eax
		mov    _096600_data(%ecx),%bh
		xor    %bh,-0x000001(%edx,%eax,1)
		cmp    %esi,%eax
		jb     _03ef23_jump

	_03ef3b_jump:
		test   %bl,%bl
		je     _03ef49_jump
		mov    $_0c0da0_data,%eax
		call   _03e6ec_func

	_03ef49_jump:
		mov    0x000028(%esp),%cl
		mov    _0967b8_data,%eax
		mov    %ds,0x000004(%esp)
		or     $0x000080,%cl
		mov    %eax,(%esp)
		mov    0x000074(%esp),%eax
		mov    %cl,0x000028(%esp)
		jmp    _03ef82_jump

	_03ef66_jump:
		mov    0x000028(%esp),%dl
		mov    _0e0b00_data,%eax
		mov    %ds,0x000004(%esp)
		or     $0x000080,%dl
		mov    %eax,(%esp)
		mov    _0e0b04_data,%eax
		mov    %dl,0x000028(%esp)

	_03ef82_jump:
		mov    %eax,0x000008(%esp)
		mov    %esp,%ebx
		mov    _0e0b78_data,%eax
		mov    %ds,%ecx
		call   _0843f7_func
		mov    %ax,_0e0b80_data

	_03ef9a_jump:
		add    $0x000078,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03efa4_func:
		push   %edx

	_03efa5_jump:
		mov    _0e0b7e_data,%edx
		mov    _0e0b78_data,%eax
		sar    $0x000010,%edx
		call   _0854e3_func
		cmp    $0x000001,%eax
		jne    _03efa5_jump
		mov    $_0967b8_data,%eax
		xor    %edx,%edx
		call   _07fbcc_func
		mov    %edx,_0967b8_data
		pop    %edx
		ret    



_03efd4_func:
		and    $0x00ffff,%eax
		mov    %eax,_0e0af0_data
		ret    



_03efe0_func:
		mov    %eax,_0e0af4_data
		ret    



_03efe8_func:
		mov    %eax,_0e0af8_data
		ret    



_03eff0_func:
		mov    %eax,_0e0afc_data
		ret    



_03eff8_func:
		mov    %eax,_0e0b6e_data
		ret    



_03f008_func:
		mov    $_0e0af0_data,%eax
		ret    



_03f010_func:
		mov    $_0e0af4_data,%eax
		ret    



_03f018_func:
		mov    $_0e0af8_data,%eax
		ret    



_03f020_func:
		mov    $_0e0afc_data,%eax
		ret    



_03f028_func:
		mov    $_0e0b6e_data,%eax
		ret    



_03f040_func:
		push   %ebx
		push   %edx
		mov    _0cf8ce_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		orb    $0x000004,0x000081(%edx)
		mov    _0cf8a4_data,%eax
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%eax
		movl   $0x0000a0,0x000028(%edx)
		sub    $0x000032,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _018ad0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cf88e_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		mov    _0cf89e_data,%bx
		mov    %eax,0x000028(%edx)
		xor    %eax,%eax
		add    $0x000140,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003c(%edx)
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    _0ce6dc_data,%eax
		mov    %bl,0x000081(%edx)
		mov    _0cf81a_data,%bh
		movb   $0x000032,0x00007f(%edx)
		or     $0x000001,%bh
		movb   $0x000008,0x00006e(%eax)
		mov    %bh,_0cf81a_data
		pop    %edx
		pop    %ebx
		ret    



_03f0f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0ce678_data,%eax
		mov    _0ce6b8_data,%dl
		add    $0x000008,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce6b9_data,%dl
		mov    _0ce6c4_data,%al
		sub    %eax,%edx
		mov    _0e0c1e_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		sar    %ebx
		add    $0x00005a,%eax
		sub    %ebx,%eax
		mov    %ax,_0e0c1c_data
		mov    _0cf8d6_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movl   $0x0000a0,0x000028(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000110,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _018ad0_func
		mov    0x000068(%edx),%bl
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%ecx
		mov    _0cf8a4_data,%ebx
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%ebx
		mov    %ecx,0x000028(%edx)
		sub    $0x0000c8,%ebx
		mov    %cx,0x00003c(%edx)
		mov    %ebx,%ecx
		movl   $0x000001,0x000024(%edx)
		xor    %bl,%cl
		mov    %ebx,0x00002c(%edx)
		mov    %cl,_0e0c28_data
		mov    0x000081(%edx),%ch
		mov    %bx,0x00003e(%edx)
		or     $0x000004,%ch
		mov    %ch,0x000081(%edx)
		xor    %edx,%edx
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%dl
		add    $0x000008,%ecx
		lea    (%edx,%ecx,1),%esi
		mov    _0cf89c_data,%ecx
		mov    %ax,_0e0c20_data
		sar    $0x000010,%ecx
		xor    %edx,%edx
		sub    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0ce6c4_data,%dl
		mov    _0ce6b9_data,%cl
		cwtl   
		sub    %edx,%ecx
		sub    %ecx,%eax
		sar    %esi
		sub    $0x000046,%eax
		add    %esi,%eax
		mov    %ax,_0e0c1e_data
		mov    _0cf8c6_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%al
		mov    %ebx,0x00002c(%edx)
		or     $0x00000c,%al
		mov    %al,0x000081(%edx)
		xor    %eax,%eax
		mov    $0x000020,%ecx
		mov    0x000068(%edx),%al
		mov    %bx,0x00003e(%edx)
		sub    %eax,%ecx
		mov    %ecx,0x000028(%edx)
		mov    %ebx,%eax
		mov    %cx,0x00003c(%edx)
		xor    %bh,%ah
		mov    _0cf81a_data,%dl
		mov    %ah,_0e0c29_data
		or     $0x000001,%dl
		mov    _0ce6dc_data,%eax
		mov    %dl,_0cf81a_data
		movb   $0x000008,0x00006e(%eax)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f2a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf8d4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		testb  $0x000002,_0cf81b_data
		jne    _03f2d4_jump
		mov    $_0ce650_data,%eax
		call   _07b628_func
		call   _05b154_func

	_03f2d4_jump:
		orb    $0x000001,_0cf81b_data
		mov    0x000081(%edx),%bh
		mov    _0cf89c_data,%eax
		or     $0x000004,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%edx)
		xor    %ebx,%ebx
		add    $0x0000a0,%eax
		mov    0x000068(%edx),%bl
		sub    %ebx,%eax
		mov    _0cf81a_data,%cl
		mov    %eax,0x000028(%edx)
		mov    _0cf8a4_data,%ebx
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		movl   $0x000001,0x000024(%edx)
		sub    %eax,%ebx
		or     $0x000001,%cl
		mov    %ebx,0x00002c(%edx)
		mov    _0ce6dc_data,%eax
		mov    %bx,0x00003e(%edx)
		mov    %cl,_0cf81a_data
		movb   $0x000008,0x00006e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0cfa68_data
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jb     _03f36d_jump
		jbe    _03f386_jump
		cmp    $0x000014,%al
		jb     _03f49e_jump
		jbe    _03f3bf_jump
		cmp    $0x00001e,%al
		je     _03f47f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f36d_jump:
		movw   $0x000000,0x000040(%esi)
		xor    %ch,%ch
		movw   $0x00fff8,0x000042(%esi)
		mov    %ch,_0cfa68_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f386_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03f392_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03f399_jump

	_03f392_jump:
		mov    %esi,%eax
		call   _01dfb8_func

	_03f399_jump:
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0cf850_data
		mov    0x000042(%esi),%ax
		mov    %dx,_0cf84a_data
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f3bf_jump:
		mov    %esi,%eax
		call   _01dfb8_func
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0cf850_data
		xor    %edx,%edx
		mov    $_0ce650_data,%eax
		mov    0x000069(%esi),%dl
		call   _018ad0_func
		sub    %edx,%eax
		add    $0x000010,%eax
		mov    %ax,_0cf84a_data
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbl (%edx,%eax,8),%ecx
		mov    _0cf84e_data,%edx
		mov    0x000028(%esi),%ebx
		sar    $0x000010,%edx
		sub    %ebx,%edx
		shl    $0x000012,%edx
		mov    $0x000037,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%bl
		mov    $0x0000ff,%dl
		mov    %eax,_0ce5b0_data
		test   %eax,%eax
		jge    _03f45b_jump
		neg    %eax

	_03f45b_jump:
		mov    %eax,_0ce5b0_data
		mov    %dl,_0cfa64_data
		xor    %dh,%dh
		mov    %bl,_0cfa6a_data
		mov    %dh,0x000071(%esi)
		mov    %dh,_0cfa65_data
		mov    %dh,0x000072(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f47f_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cfa65_data,%cl
		mov    _0cfa64_data,%bl
		mov    _0cfa6a_data,%dl
		call   _018890_func

	_03f49e_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f4a4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03f512_jump
		cmp    $0x000003,%dx
		je     _03f4d3_jump
		cmp    $0x000006,%dx
		jne    _03f512_jump

	_03f4d3_jump:
		movb   $0x000001,_0ce77f_data
		mov    %ecx,%eax
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _03f4fb_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_03f4fb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		movw   $0x000001,0x000050(%ecx)

	_03f512_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03f518_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ccdf0_data,%edx
		movw   $0x00ffff,0x000052(%eax)
		mov    _0ccdf4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03f592_jump

	_03f536_jump:
		cmpw   $0x0000e0,0x000060(%edx)
		jne    _03f586_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03f586_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000040(%edx)
		call   _01e030_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		mov    %bx,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f586_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _03f536_jump

	_03f592_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f598_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movb   $0x000001,_0cfa68_data
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		add    %edx,%eax
		cmp    $0x000006,%eax
		jb     _03f5fc_jump
		jbe    _03f7c5_jump
		cmp    $0x00000b,%eax
		jb     _03f5e8_jump
		jbe    _03f7aa_jump
		cmp    $0x00000d,%eax
		jb     _03f7a0_jump
		jbe    _03f7a0_jump
		cmp    $0x000100,%eax
		je     _03f628_jump
		jmp    _03f7e3_jump

	_03f5e8_jump:
		cmp    $0x000008,%eax
		jb     _03f7a0_jump
		jbe    _03f68d_jump
		jmp    _03f7e3_jump

	_03f5fc_jump:
		cmp    $0x000002,%eax
		jb     _03f61b_jump
		jbe    _03f75a_jump
		cmp    $0x000004,%eax
		jb     _03f7a0_jump
		jbe    _03f756_jump
		jmp    _03f7e3_jump

	_03f61b_jump:
		test   %eax,%eax
		jbe    _03f69f_jump
		jmp    _03f6e1_jump

	_03f628_jump:
		mov    0x00003a(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _03f659_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x008300,_0cf86a_data
		jmp    _03f680_jump

	_03f659_jump:
		mov    _0cf86e_data,%ax
		mov    _0ce6bd_data,%dl
		mov    %ax,_0cf86a_data
		cmp    $0x000003,%dl
		jne    _03f680_jump
		cmpb   $0x000014,_0ce6bc_data
		jne    _03f680_jump
		orb    $0x000008,_0ce6d1_data

	_03f680_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f68d_jump:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f69f_jump:
		cmpb   $0x000000,_0ce77e_data
		jne    _03f6b1_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _03f6bb_jump

	_03f6b1_jump:
		mov    $0x000005,%edx
		jmp    _03f7dc_jump

	_03f6bb_jump:
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _03f6cf_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f6cf_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d808_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f6e1_jump:
		cmpb   $0x000000,_0ce77e_data
		je     _03f73a_jump
		xor    %eax,%eax
		mov    _0ce67c_data,%si
		mov    _0ce6b9_data,%al
		mov    0x00002c(%ecx),%di
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    0x000069(%ecx),%al
		sub    %edi,%edx
		sub    %eax,%edx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03f712_jump
		neg    %eax

	_03f712_jump:
		cmp    $0x000030,%eax
		jl     _03f71d_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jbe    _03f6b1_jump

	_03f71d_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d808_func
		mov    0x00000c(%ecx),%eax
		mov    (%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f73a_jump:
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _03f7e3_jump
		mov    %ecx,%eax
		call   _03f518_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f756_jump:
		movb   $0x000032,0x00007f(%ecx)

	_03f75a_jump:
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _03f7e3_jump
		mov    0x000028(%eax),%edx
		cmp    0x000028(%ecx),%edx
		jl     _03f7e3_jump
		movw   $0x00ffff,0x000052(%ecx)
		andb   $0x0000fb,0x000081(%eax)
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _01d808_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f7a0_jump:
		movb   $0x000032,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f7aa_jump:
		cmpb   $0x000000,_0ce77e_data
		jne    _03f7e3_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d808_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f7c5_jump:
		cmpb   $0x000002,_0ce6bd_data
		je     _03f7e3_jump
		cmpb   $0x000000,_0ce77e_data
		jne    _03f7e3_jump
		mov    $0x000007,%edx

	_03f7dc_jump:
		mov    %ecx,%eax
		call   _01d808_func

	_03f7e3_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f7ec_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _03f8a9_jump
		cmpb   $0x000000,_0ce77d_data
		jne    _03f8a9_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _03f8a9_jump
		mov    $0x000001,%ch
		mov    %ebx,%eax
		mov    %ch,_0ce77f_data
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ebx)
		je     _03f85f_jump
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03f850_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %ecx
		pop    %ebx
		ret    

	_03f850_jump:
		mov    $0x00000d,%edx
		mov    %ebx,%eax
		call   _01d808_func
		pop    %ecx
		pop    %ebx
		ret    

	_03f85f_jump:
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03f897_jump
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)
		mov    0x000050(%ebx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _07b628_func

	_03f897_jump:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d808_func
		movw   $0x000001,0x000050(%ebx)

	_03f8a9_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03f8ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03f8c7_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03fc62_jump

	_03f8c7_jump:
		mov    _0ce678_data,%eax
		mov    0x000060(%esi),%bx
		add    $0x000008,%eax
		cmp    $0x0000e7,%bx
		jne    _03fa5f_jump
		mov    _0e0c28_data,%dl
		test   %dl,%dl
		jne    _03f92a_jump
		xor    %ebx,%ebx
		mov    _0ce6b8_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce6b9_data,%bl
		mov    _0ce6c4_data,%al
		sub    %eax,%ebx
		mov    _0e0c1e_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0e0c1c_data
		jmp    _03fa50_jump

	_03f92a_jump:
		cmp    $0x000064,%dl
		jne    _03fa4a_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edi
		sar    %eax
		add    %edi,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		mov    $0x000008,%edx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    _0e0bec_data,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03f99e_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ebp
		mov    0x000074(%esi),%bl
		add    %ebp,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03f99e_jump
		addw   $0x000032,_0e0c1c_data
		jmp    _03fa4a_jump

	_03f99e_jump:
		cmp    0x000004(%esp),%di
		jge    _03f9ca_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		add    $0x00000a,%eax
		cmp    %eax,%ebx
		jge    _03f9ca_jump
		subw   $0x000032,_0e0c1c_data
		jmp    _03fa4a_jump

	_03f9ca_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03fa06_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03fa06_jump
		subw   $0x000050,_0e0c1c_data
		jmp    _03fa4a_jump

	_03fa06_jump:
		xor    %eax,%eax
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce6b9_data,%bl
		mov    _0ce6c4_data,%al
		sub    %eax,%ebx
		mov    _0e0c1e_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0e0c1c_data

	_03fa4a_jump:
		decb   _0e0c28_data

	_03fa50_jump:
		mov    0x00002c(%esi),%dx
		mov    _0e0c1c_data,%ax
		jmp    _03fbe6_jump

	_03fa5f_jump:
		cmp    $0x0000e8,%bx
		jne    _03fbf0_jump
		mov    _0e0c29_data,%bh
		test   %bh,%bh
		jne    _03fab6_jump
		xor    %ebx,%ebx
		mov    _0ce6b8_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce6b9_data,%bl
		mov    _0ce6c4_data,%al
		sub    %eax,%ebx
		mov    _0e0c1e_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0e0c1e_data
		jmp    _03fbdc_jump

	_03fab6_jump:
		cmp    $0x000064,%bh
		jne    _03fbd6_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000008,%edx
		mov    _0e0bf0_data,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%ebx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03fb2a_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000074(%esi),%bl
		add    %ecx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03fb2a_jump
		addw   $0x000032,_0e0c1e_data
		jmp    _03fbd6_jump

	_03fb2a_jump:
		cmp    0x000004(%esp),%di
		jge    _03fb56_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		add    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03fb56_jump
		subw   $0x000032,_0e0c1e_data
		jmp    _03fbd6_jump

	_03fb56_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03fb92_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03fb92_jump
		subw   $0x000050,_0e0c1e_data
		jmp    _03fbd6_jump

	_03fb92_jump:
		xor    %eax,%eax
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce6b9_data,%bl
		mov    _0ce6c4_data,%al
		sub    %eax,%ebx
		mov    _0e0c1e_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0e0c1e_data

	_03fbd6_jump:
		decb   _0e0c29_data

	_03fbdc_jump:
		mov    0x00002c(%esi),%dx
		mov    _0e0c1e_data,%ax

	_03fbe6_jump:
		add    $0x000096,%edx
		sub    %edx,%eax
		mov    %eax,%edx

	_03fbf0_jump:
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		add    $0x000032,%eax
		cmp    %ebx,%eax
		jge    _03fc07_jump
		test   %dx,%dx
		jg     _03fc20_jump

	_03fc07_jump:
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ecx
		sub    $0x000096,%eax
		cmp    %ecx,%eax
		jle    _03fc26_jump
		test   %dx,%dx
		jge    _03fc26_jump

	_03fc20_jump:
		xor    %edx,%edx
		mov    %dx,0x000042(%esi)

	_03fc26_jump:
		test   %dx,%dx
		je     _03fc62_jump
		mov    0x000040(%esi),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _03fc44_jump
		mov    $0x000001,%eax
		jg     _03fc44_jump
		neg    %eax

	_03fc44_jump:
		add    %eax,%ebx
		mov    $0x000030,%eax
		cmp    %ebx,%eax
		jle    _03fc51_jump
		mov    %ebx,%eax

	_03fc51_jump:
		mov    %eax,%ebx
		mov    $0xffffffd0,%eax
		cmp    %ebx,%eax
		jge    _03fc5e_jump
		mov    %ebx,%eax

	_03fc5e_jump:
		mov    %ax,0x000042(%esi)

	_03fc62_jump:
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0ce650_data,%eax
		call   _01dbb4_func
		addw   $0x00000f,0x00000c(%esp)
		mov    0x00002c(%esi),%dx
		mov    0x00006c(%esi),%bh
		add    $0x000096,%edx
		test   %bh,%bh
		jne    _03fcc3_jump
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x00000f(%eax),%ecx
		cmp    %ecx,%ebx
		jle    _03fcc3_jump
		add    $0x00000f,%eax
		cmp    %eax,%ebx
		jge    _03fcc3_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _03fd6b_jump

	_03fcc3_jump:
		mov    0x00006c(%esi),%cl
		cmp    $0x000006,%cl
		je     _03fcd0_jump
		cmp    $0x000004,%cl
		jne    _03fcfe_jump

	_03fcd0_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000014(%eax),%ecx
		cmp    %ecx,%ebx
		jl     _03fce8_jump
		add    $0x000014,%eax
		cmp    %eax,%ebx
		jle    _03fcfe_jump

	_03fce8_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d808_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fcfe_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%al
		je     _03fd09_jump
		cmp    $0x000006,%al
		jne    _03fd37_jump

	_03fd09_jump:
		mov    0x00000a(%esp),%eax
		movswl %dx,%ebx
		sar    $0x000010,%eax
		lea    -0x000007(%ebx),%ecx
		cmp    %ecx,%eax
		jle    _03fd37_jump
		add    $0x000007,%ebx
		cmp    %ebx,%eax
		jge    _03fd37_jump
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d808_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fd37_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _03fd6b_jump
		cmp    0x00006b(%esi),%dl
		jne    _03fd6b_jump
		mov    %esi,%eax
		call   _03fe8c_func
		cmpw   $0x0000e7,0x000060(%esi)
		jne    _03fd64_jump
		movb   $0x000064,_0e0c29_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fd64_jump:
		movb   $0x000064,_0e0c28_data

	_03fd6b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fd78_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		je     _03fe87_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _03fe87_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		cmpb   $0x000001,0x00006c(%edx,%eax,4)
		je     _03fe87_jump
		decb   0x000076(%ecx)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000076(%ecx),%al
		mov    %al,0x000076(%edx)
		test   %al,%al
		je     _03fdde_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_03fdde_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000001,0x000050(%ecx)
		mov    0x000081(%ecx),%ah
		mov    0x000050(%ecx),%edx
		and    $0x0000ef,%ah
		sar    $0x000010,%edx
		mov    %ah,0x000081(%ecx)
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		movw   $0x00ff80,0x000042(%ecx)
		add    %edx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d818_func
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		movw   $0x00ff80,0x000042(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		andb   $0x0000ef,0x000081(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000001,0x000050(%edx,%eax,4)

	_03fe87_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03fe8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _03ff56_jump

	_03fea9_jump:
		cmpw   $0x0000e9,0x000060(%edx)
		jne    _03ff46_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03ff46_jump
		movb   $0x000004,0x00007e(%edx)
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		cmpw   $0x0000e7,0x000060(%ecx)
		jne    _03fefc_jump
		mov    0x000081(%edx),%bl
		movw   $0x00fffb,0x000040(%edx)
		and    $0x0000f7,%bl
		mov    %edx,_0e0bf0_data
		mov    %bl,0x000081(%edx)
		jmp    _03ff17_jump

	_03fefc_jump:
		mov    0x000081(%edx),%ah
		movw   $0x000005,0x000040(%edx)
		or     $0x000008,%ah
		mov    %edx,_0e0bec_data
		mov    %ah,0x000081(%edx)

	_03ff17_jump:
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f8e8_func
		mov    0x000052(%ecx),%ax
		mov    %ax,0x000052(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ff46_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _03fea9_jump

	_03ff56_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ff5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000e7,%dx
		je     _03ff95_jump
		cmp    $0x0000e8,%dx
		jne    _0400b5_jump

	_03ff95_jump:
		mov    0x000050(%edi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _040184_func
		test   %ax,%ax
		je     _0400b5_jump
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _040096_jump

	_03ffd6_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _040086_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _040086_jump
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %edi,%eax
		call   _01d738_func
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000002(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%edi)
		jle    _040042_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    %ebx,0x000028(%esi)

	_040042_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		lea    (%eax,%edx,1),%ebx
		mov    0x00000e(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    %ebx
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01e030_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f8e8_func
		jmp    _040096_jump

	_040086_jump:
		inc    %ebx
		add    $0x000084,%esi
		cmp    %ax,%bx
		jl     _03ffd6_jump

	_040096_jump:
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _03fd78_func
		mov    0x000081(%edi),%dl
		movl   $0x000000,0x000024(%edi)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%edi)

	_0400b5_jump:
		cmpw   $0x000000,0x000042(%edi)
		jne    _04015b_jump
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%ebx
		add    %edx,%eax
		mov    _0cf024_data,%cx
		shl    $0x000002,%eax
		xor    %esi,%esi
		add    %eax,%ebx
		test   %cx,%cx
		jle    _04015b_jump

	_0400ed_jump:
		cmpw   $0x0000e9,0x000060(%ebx)
		jne    _040137_jump
		mov    0x000034(%ebx),%ax
		cmp    0x000034(%edi),%ax
		je     _040137_jump
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _040184_func
		test   %ax,%ax
		je     _040137_jump
		movw   $0x000000,0x000040(%ebx)
		movw   $0x000000,0x000040(%edi)
		movw   $0x000003,0x000042(%ebx)
		movw   $0x000003,0x000042(%edi)
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000052(%edi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000052(%ebx)
		jmp    _04015b_jump

	_040137_jump:
		inc    %esi
		movswl %si,%ebx
		mov    _0cef5a_data(,%ebx,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0ccdf0_data,%eax
		add    %eax,%ebx
		cmp    _0cf024_data,%si
		jl     _0400ed_jump

	_04015b_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040168_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_040184_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		xor    %edx,%edx
		call   _02b2e8_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    %edi,%eax
		lea    0x000014(%esp),%ecx
		call   _02b2e8_func
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000007(%ebp),%dl
		mov    0x00000c(%esp),%eax
		call   _01dbb4_func
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000024(%esp),%ecx
		push   %eax
		mov    %esi,%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		mov    0x000007(%eax),%dl
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000004(%esp),%eax
		testb  $0x000008,0x000081(%eax)
		jne    _040207_jump
		mov    0x000018(%esp),%ecx
		mov    0x000000(%ebp),%ax
		add    %eax,%ecx
		mov    %cx,0x000018(%esp)
		jmp    _040223_jump

	_040207_jump:
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    0x000004(%ebp),%al
		mov    0x00001c(%esp),%ebx
		add    %edx,%eax
		mov    0x000018(%esp),%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,0x000018(%esp)

	_040223_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _04023c_jump
		mov    0x000010(%esp),%ecx
		mov    (%esi),%ax
		add    %eax,%ecx
		mov    %cx,0x000010(%esp)
		jmp    _040257_jump

	_04023c_jump:
		mov    0x000010(%esp),%edx
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		mov    (%esi),%di
		mov    0x000004(%esi),%al
		add    %ebx,%edx
		add    %edi,%eax
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)

	_040257_jump:
		mov    (%esp),%eax
		mov    0x000014(%esp),%edi
		mov    0x000002(%eax),%ax
		add    %eax,%edi
		mov    %di,0x000014(%esp)
		mov    0x000020(%esp),%edx
		mov    0x000002(%esi),%ax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    0x000010(%esp),%eax
		xor    %ebx,%ebx
		mov    0x000022(%esp),%edx
		mov    0x000005(%eax),%cl
		mov    0x000004(%eax),%bl
		mov    0x000026(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0402c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0ccdf0_data,%eax
		mov    _0ccdf4_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _04035c_jump

	_0402de_jump:
		cmpw   $0x000020,0x000060(%eax)
		jne    _040351_jump
		mov    0x000024(%eax),%esi
		test   %esi,%esi
		jne    _040351_jump
		mov    0x000028(%ecx),%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%eax)
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)
		mov    $0x000026,%ebx
		mov    0x000081(%eax),%dl
		movw   $0x000000,0x000042(%eax)
		or     $0x000004,%dl
		xor    %edi,%edi
		mov    %dl,0x000081(%eax)
		xor    %edx,%edx
		movl   $0x000001,0x000024(%eax)
		call   _01d818_func
		mov    %ecx,_0e0b84_data
		mov    0x000081(%ecx),%dh
		mov    %esi,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %di,_0e0c0c_data
		mov    %dh,0x000081(%ecx)
		jmp    _04035c_jump

	_040351_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _0402de_jump

	_04035c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040364_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa89_data
		je     _040478_jump
		movb   $0x000001,_0951d0_data
		testb  $0x000080,_0cf81e_data
		je     _04043e_jump
		cmpb   $0x000000,_0cfa3d_data
		jne    _040478_jump
		cmpw   $0x000000,_0cf8c6_data
		jne    _0403ee_jump
		mov    _0cf8ca_data,%di
		cmp    $0x000042,%di
		jle    _0403c6_jump
		mov    $0x000001,%ecx
		mov    %di,_0cf8c2_data
		mov    %cx,_0cf8c6_data
		jmp    _040478_jump

	_0403c6_jump:
		cmp    $0x000028,%di
		jle    _0403dd_jump
		mov    %edi,%ebx
		add    $0x000004,%ebx
		mov    %bx,_0cf8ca_data
		jmp    _040478_jump

	_0403dd_jump:
		mov    %edi,%edx
		add    $0x000002,%edx
		mov    %dx,_0cf8ca_data
		jmp    _040478_jump

	_0403ee_jump:
		mov    _0cf8be_data,%eax
		sar    $0x000010,%eax
		mov    $0x000007,%cl
		mov    _094c14_data(,%eax,2),%ax
		test   %ax,%ax
		js     _04040a_jump
		sar    %cl,%ax
		jmp    _040413_jump

	_04040a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040413_jump:
		cmp    $0x0000ff,%ax
		je     _040478_jump
		mov    _0cf8ca_data,%cx
		mov    _0cf8c0_data,%si
		add    %eax,%ecx
		inc    %esi
		mov    %cx,_0cf8ca_data
		mov    %si,_0cf8c0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04043e_jump:
		push   $0x000000
		mov    $_0e0b88_data,%eax
		mov    _0e0c12_data,%ecx
		mov    _0e0c02_data,%ebx
		mov    _0e0bfc_data,%edx
		push   $0x000002
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a8dc_func
		cmpb   $0x000000,_0cfa62_data
		jne    _040478_jump
		addw   $0x000003,_0e0c14_data

	_040478_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_040480_switch:
		.long   _040547_case
		.long   _040581_case
		.long   _040659_case
		.long   _0406b9_case
		.long   _0406f3_case
		.long   _040755_case
		.long   _0407db_case
		.long   _0408b1_case
		.long   _04090a_case
		.long   _040950_case
		.long   _0409db_case
		.long   _040a36_case




_0404b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _04052a_jump
		cmpb   $0x000026,0x00006c(%esi)
		jne    _04052a_jump
		mov    %ah,_0e0c23_data
		mov    %ah,_0e0c27_data
		mov    %ah,_0cfa89_data
		xor    %dh,%dh
		xor    %bl,%bl
		xor    %cl,%cl
		mov    _0cf81a_data,%bh
		mov    _0e0b84_data,%eax
		xor    %dl,%dl
		xor    %ch,%ch
		mov    %dx,_0e0c0c_data
		and    $0x0000fe,%bh
		mov    %cx,_0cf86e_data
		mov    %dh,_0e0c22_data
		movl   $0x000000,0x000024(%eax)
		mov    %bh,_0cf81a_data
		mov    0x000081(%eax),%ch
		xor    %bh,%bh
		and    $0x0000fb,%ch
		mov    %bx,_0cf872_data
		mov    %ch,0x000081(%eax)

	_04052a_jump:
		mov    _0e0c0c_data,%ax
		cmp    $0x00000b,%ax
		ja     _040b75_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040480_switch(,%eax,4)

	_040547_case:
		mov    _0e0c23_data,%ch
		test   %ch,%ch
		jne    _04056a_jump
		mov    $0x000001,%ah
		mov    $0x00001e,%edx
		mov    %ah,_0e0c23_data
		mov    %esi,%eax
		call   _01d808_func
		jmp    _040b75_jump

	_04056a_jump:
		cmp    $0x000002,%ch
		jne    _040b75_jump
		movw   $0x000001,_0e0c0c_data
		jmp    _040b75_jump

	_040581_case:
		mov    _0e0c27_data,%ch
		test   %ch,%ch
		jne    _0405a4_jump
		mov    $0x000001,%cl
		mov    $0x00001f,%edx
		mov    %esi,%eax
		mov    %cl,_0e0c27_data
		call   _01d808_func
		jmp    _040b75_jump

	_0405a4_jump:
		cmp    $0x000002,%ch
		jne    _040b75_jump
		mov    _0e0c08_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		mov    0x000070(%edx,%eax,4),%bl
		cmp    $0x00001e,%bl
		jne    _040b75_jump
		mov    _0e0bfa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		cmp    0x000070(%edx,%eax,4),%bl
		jne    _040b75_jump
		mov    _0e0bfa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ecx
		add    %edx,%eax
		mov    %ecx,%edx
		call   _061220_func
		mov    _0e0c08_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ecx
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		mov    $0x000002,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		mov    $0x000002,%ecx
		call   _061220_func
		mov    %cx,_0e0c0c_data
		jmp    _040b75_jump

	_040659_case:
		mov    _0e0c08_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		mov    0x000070(%edx,%eax,1),%bl
		cmp    $0x00001e,%bl
		jne    _040b75_jump
		mov    _0e0bfa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		cmp    0x000070(%edx,%eax,1),%bl
		jne    _040b75_jump
		mov    $0x000003,%ebx
		xor    %cl,%cl
		mov    %bx,_0e0c0c_data
		mov    %cl,_0e0c23_data
		jmp    _040b75_jump

	_0406b9_case:
		mov    _0e0c23_data,%bh
		test   %bh,%bh
		jne    _0406dc_jump
		mov    $0x000001,%ch
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %ch,_0e0c23_data
		call   _01d808_func
		jmp    _040b75_jump

	_0406dc_jump:
		cmp    $0x000002,%bh
		jne    _040b75_jump
		movw   $0x000004,_0e0c0c_data
		jmp    _040b75_jump

	_0406f3_case:
		mov    _0e0bfa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _061220_func
		mov    _0e0c08_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _061220_func
		movw   $0x000005,_0e0c0c_data
		jmp    _040b75_jump

	_040755_case:
		mov    _0e0c08_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%ebx
		add    %edi,%eax
		mov    0x000070(%ebx,%eax,4),%cl
		cmp    $0x00001e,%cl
		jne    _0407cf_jump
		mov    _0e0bfa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		cmp    0x000070(%ebx,%eax,4),%cl
		jne    _0407cf_jump
		mov    _0e0c23_data,%ah
		test   %ah,%ah
		jne    _0407ad_jump
		mov    $0x000001,%bl
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bl,_0e0c23_data
		call   _01d808_func
		jmp    _040b75_jump

	_0407ad_jump:
		cmp    $0x000002,%ah
		jne    _040b75_jump
		mov    $0x000006,%edi
		xor    %dh,%dh
		mov    %di,_0e0c0c_data
		mov    %dh,_0e0c23_data
		jmp    _040b75_jump

	_0407cf_jump:
		xor    %al,%al
		mov    %al,_0e0c23_data
		jmp    _040b75_jump

	_0407db_case:
		mov    _0e0c23_data,%ch
		test   %ch,%ch
		jne    _040852_jump
		mov    _0e0bfa_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _061220_func
		mov    _0e0c08_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _061220_func
		mov    $0x000001,%bh
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bh,_0e0c23_data
		call   _01d808_func
		jmp    _040b75_jump

	_040852_jump:
		cmp    $0x000002,%ch
		jne    _040b75_jump
		mov    _0e0c08_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%ecx
		add    %edx,%eax
		mov    0x000070(%ecx,%eax,4),%dl
		cmp    $0x00001e,%dl
		jne    _040b75_jump
		mov    _0e0bfa_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		cmp    0x000070(%ecx,%eax,4),%dl
		jne    _040b75_jump
		mov    $0x000007,%ecx
		xor    %bl,%bl
		mov    %cx,_0e0c0c_data
		mov    %bl,_0e0c23_data
		jmp    _040b75_jump

	_0408b1_case:
		cmpb   $0x000021,0x00006c(%esi)
		je     _0408d8_jump
		mov    $0x000021,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d808_func
		xor    %dh,%dh
		mov    %bl,_0cfa89_data
		mov    %dh,_0e0c24_data
		jmp    _040b75_jump

	_0408d8_jump:
		cmpb   $0x000002,_0e0c24_data
		jne    _040b75_jump
		mov    $0x000020,%edx
		mov    %esi,%eax
		mov    $0x000008,%ebx
		call   _01d808_func
		xor    %cl,%cl
		mov    %bx,_0e0c0c_data
		mov    %cl,_0cfa89_data
		jmp    _040b75_jump

	_04090a_case:
		mov    _0e0c08_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000004,%edx
		call   _061220_func
		mov    $0x000009,%eax
		mov    $0xffffffff,%edx
		mov    %ax,_0e0c0c_data
		mov    %dx,_0e0bfa_data
		jmp    _040b75_jump

	_040950_case:
		testb  $0x000001,_0cf81a_data
		je     _040967_jump
		movw   $0x00000a,_0e0c0c_data
		jmp    _040b75_jump

	_040967_jump:
		mov    _0e0bf8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _040b75_jump
		mov    _0e0c08_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%edx
		add    %ebx,%eax
		cmpw   $0x000004,0x000040(%edx,%eax,4)
		jne    _040b75_jump
		call   _041510_func
		mov    _0ce6dc_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0e0bfa_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0e0bf8_data
		add    $0x000030,%eax
		mov    %dx,_0e0bf4_data
		mov    %ax,_0e0bf6_data
		jmp    _040b75_jump

	_0409db_case:
		mov    _0e0c08_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    _0e0bfa_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x00000b,_0e0c0c_data
		jmp    _040b75_jump

	_040a36_case:
		cmpb   $0x000001,_0e0c22_data
		jne    _040ab8_jump
		mov    _0ce6a2_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _040ab8_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _040a7f_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _040a86_jump

	_040a7f_jump:
		mov    $0x000001,%eax
		jmp    _040a88_jump

	_040a86_jump:
		xor    %eax,%eax

	_040a88_jump:
		test   %eax,%eax
		je     _040ab8_jump
		mov    $0x000002,%bh
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		mov    %bh,_0e0c22_data
		mov    $0x000017,%ebx
		xor    %edi,%edi
		call   _01d818_func
		mov    %di,_0ce690_data
		mov    %di,_0ce692_data

	_040ab8_jump:
		mov    _0e0c08_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		jne    _040b47_jump
		jne    _040b47_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _040aef_jump
		cmpb   $0x000022,0x00006c(%esi)
		je     _040b02_jump

	_040aef_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _040afb_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _040b02_jump

	_040afb_jump:
		mov    $0x000001,%eax
		jmp    _040b04_jump

	_040b02_jump:
		xor    %eax,%eax

	_040b04_jump:
		test   %eax,%eax
		je     _040b47_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _040b1a_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _040b21_jump

	_040b1a_jump:
		mov    $0x000001,%eax
		jmp    _040b23_jump

	_040b21_jump:
		xor    %eax,%eax

	_040b23_jump:
		test   %eax,%eax
		je     _040b47_jump
		cmpb   $0x000002,_0e0c22_data
		jne    _040b47_jump
		mov    $0x000022,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0e0c22_data
		mov    %esi,%eax
		call   _01d818_func
		jmp    _040b75_jump

	_040b47_jump:
		cmpb   $0x000004,0x00006b(%esi)
		jne    _040b75_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _040b75_jump
		cmpb   $0x000022,0x00006c(%esi)
		jne    _040b75_jump
		mov    $0x00000c,%edx
		mov    _0e0b84_data,%eax
		movw   $0x00fffc,0x000042(%esi)
		mov    %dx,_0e0c0c_data
		call   _033e5c_func

	_040b75_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _040e4d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00001f,%al
		jb     _040b96_jump
		jbe    _040ba3_jump
		cmp    $0x000021,%al
		je     _040d37_jump
		jmp    _040e4d_jump

	_040b96_jump:
		cmp    $0x00001e,%al
		je     _040c4c_jump
		jmp    _040e4d_jump

	_040ba3_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _040e4d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		xor    %edi,%edi
		call   _01dbb4_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffff1,%ecx
		add    %edx,%eax
		mov    %di,_0e0c02_data
		sub    $0x000060,%eax
		mov    %di,_0e0c00_data
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    %cx,_0e0c08_data
		sar    %eax
		mov    %cx,_0e0c06_data
		add    %ebx,%eax
		mov    $0x000001,%ecx
		sub    $0x000080,%eax
		movswl %dx,%esi
		movswl %ax,%edi
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _041208_func
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _041208_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040c4c_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _040e4d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		mov    $0xfffffff0,%edi
		call   _01dbb4_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    $0xffffffb4,%ebx
		mov    $0x000001,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %di,_0e0c02_data
		add    %edx,%eax
		mov    %bx,_0e0c08_data
		sub    $0x000060,%eax
		mov    $0x000001,%bl
		mov    %ax,_0e0c0e_data
		mov    %ax,_0e0c10_data
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %bl,_0e0c26_data
		add    %edx,%eax
		mov    $0x000023,%ebx
		sub    $0x000080,%eax
		mov    $0x00004c,%edx
		mov    %ax,_0e0c16_data
		mov    %ax,_0e0c18_data
		mov    %dx,_0e0c06_data
		xor    %dh,%dh
		mov    _0e0c0e_data,%eax
		mov    %dh,_0e0c25_data
		mov    _0e0c16_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %di,_0e0c00_data
		call   _041208_func
		mov    $0x000023,%ebx
		mov    _0e0c14_data,%edx
		mov    _0e0c0c_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _041208_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040d37_jump:
		mov    _0e0c24_data,%dh
		test   %dh,%dh
		jne    _040da3_jump
		mov    $_0e0b88_data,%edi
		mov    $0x0000a0,%edx
		mov    $0xfffffff6,%ebx
		mov    _0c2cc4_data,%esi
		mov    $0x000028,%ecx
		push   %edi

	_040d5c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040d74_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040d5c_jump

	_040d74_jump:
		pop    %edi
		mov    $0x000001,%al
		mov    %dx,_0e0bfe_data
		mov    %bx,_0e0c04_data
		xor    %esi,%esi
		mov    %cx,_0e0c12_data
		mov    %si,_0e0c14_data
		mov    %al,_0e0c24_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040da3_jump:
		mov    _0e0c02_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _040df5_jump
		mov    $0x0000a0,%esi
		mov    $0xfffffff6,%edi
		mov    $0x000028,%eax
		xor    %ecx,%ecx
		mov    %dl,_0cfa89_data
		mov    %cx,_0e0c14_data
		mov    %si,_0e0bfe_data
		mov    %dh,%ch
		mov    %di,_0e0c04_data
		inc    %ch
		mov    %ax,_0e0c12_data
		mov    %ch,_0e0c24_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040df5_jump:
		mov    $0x000004,%cl
		mov    _0e0c12_data,%ax
		test   %ax,%ax
		js     _040e07_jump
		sar    %cl,%ax
		jmp    _040e10_jump

	_040e07_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040e10_jump:
		mov    _0e0c04_data,%dx
		mov    _0e0c12_data,%bx
		add    %eax,%edx
		mov    _0e0c12_data,%ax
		mov    %dx,_0e0c04_data
		dec    %eax
		test   %bx,%bx
		je     _040e3e_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _040e4d_jump
		jmp    _040e47_jump

	_040e3e_jump:
		cmpb   $0x000000,_0cf9fb_data
		jne    _040e4d_jump

	_040e47_jump:
		mov    %ax,_0e0c12_data

	_040e4d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040e58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _0411fc_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000023,%dl
		je     _040e7e_jump
		cmp    $0x000024,%dl
		jne    _04104b_jump

	_040e7e_jump:
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		neg    %eax
		cmp    %edx,%eax
		jle    _040e9d_jump
		mov    $0x000002,%ch
		movb   $0x000000,0x000076(%esi)
		mov    %ch,_0e0c23_data
		jmp    _0411fc_jump

	_040e9d_jump:
		cmpw   $0x000000,0x000056(%esi)
		je     _040f7f_jump
		cmpb   $0x000000,_0e0c25_data
		je     _040ed2_jump
		mov    _0e0c06_data,%cx
		add    $0x000003,%ecx
		mov    %cx,_0e0c06_data
		cmp    $0x00004c,%cx
		jle    _040eee_jump
		xor    %bh,%bh
		mov    %bh,_0e0c25_data
		jmp    _040eee_jump

	_040ed2_jump:
		subw   $0x000003,_0e0c06_data
		mov    _0e0c04_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _040eee_jump
		movb   $0x000001,_0e0c25_data

	_040eee_jump:
		mov    $0x000004,%cl
		mov    _0e0c00_data,%ax
		test   %ax,%ax
		js     _040f00_jump
		sar    %cl,%ax
		jmp    _040f09_jump

	_040f00_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040f09_jump:
		mov    _0e0c10_data,%dx
		mov    $0x000004,%cl
		add    %eax,%edx
		mov    _0e0c06_data,%ax
		mov    %dx,_0e0c10_data
		test   %ax,%ax
		js     _040f2b_jump
		sar    %cl,%ax
		jmp    _040f34_jump

	_040f2b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040f34_jump:
		mov    _0e0c18_data,%bx
		add    %eax,%ebx
		mov    0x00006b(%esi),%cl
		mov    %bx,_0e0c18_data
		cmp    $0x000001,%cl
		jne    _0411fc_jump
		mov    _0e0c16_data,%edx
		mov    _0e0c0e_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _041208_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040f7f_jump:
		cmpb   $0x000000,_0e0c26_data
		je     _040fa9_jump
		mov    _0e0c08_data,%bx
		add    $0x000003,%ebx
		mov    %bx,_0e0c08_data
		cmp    $0x00004c,%bx
		jle    _040fc5_jump
		xor    %ah,%ah
		mov    %ah,_0e0c26_data
		jmp    _040fc5_jump

	_040fa9_jump:
		subw   $0x000003,_0e0c08_data
		mov    _0e0c06_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _040fc5_jump
		movb   $0x000001,_0e0c26_data

	_040fc5_jump:
		mov    $0x000004,%cl
		mov    _0e0c02_data,%ax
		test   %ax,%ax
		js     _040fd7_jump
		sar    %cl,%ax
		jmp    _040fe0_jump

	_040fd7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_040fe0_jump:
		mov    _0e0c0e_data,%di
		mov    $0x000004,%cl
		add    %eax,%edi
		mov    _0e0c08_data,%ax
		mov    %di,_0e0c0e_data
		test   %ax,%ax
		js     _041002_jump
		sar    %cl,%ax
		jmp    _04100b_jump

	_041002_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04100b_jump:
		add    %ax,_0e0c16_data
		cmpb   $0x000001,0x00006b(%esi)
		jne    _0411fc_jump
		mov    _0e0c14_data,%edx
		mov    _0e0c0c_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _041208_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04104b_jump:
		cmp    $0x000025,%dl
		jne    _0411fc_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _04106d_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    $0x0000f0,%ebx
		add    %ecx,%eax
		jmp    _04107d_jump

	_04106d_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000005,%ebx

	_04107d_jump:
		sub    %eax,%ebx
		movzbw 0x000069(%esi),%di
		add    0x00002c(%esi),%di
		mov    %esi,%eax
		call   _018ad0_func
		sub    %edi,%eax
		mov    %eax,%edi
		movswl %bx,%eax
		test   %eax,%eax
		jge    _04109c_jump
		neg    %eax

	_04109c_jump:
		mov    %eax,%edx
		movswl %di,%eax
		test   %eax,%eax
		jge    _0410a7_jump
		neg    %eax

	_0410a7_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		cmp    $0x00000a,%dx
		jge    _0410cc_jump
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%esi)
		call   _0413b4_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0410cc_jump:
		test   %dx,%dx
		jle    _0410f8_jump
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edi

	_0410f8_jump:
		cmpb   $0x000001,0x00006b(%esi)
		jne    _0411fc_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _041174_jump
		mov    _0e0bfe_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041125_jump
		mov    $0x000001,%eax
		jg     _041125_jump
		neg    %eax

	_041125_jump:
		add    %ax,_0e0c00_data
		mov    _0e0c04_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041148_jump
		mov    $0x000001,%eax
		jg     _041148_jump
		neg    %eax

	_041148_jump:
		mov    _0e0c06_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0e0c06_data
		mov    0x00002c(%esi),%dx
		mov    _0e0c06_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0e0c00_data,%di
		jmp    _0411de_jump

	_041174_jump:
		mov    _0e0c00_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _041191_jump
		mov    $0x000001,%eax
		jg     _041191_jump
		neg    %eax

	_041191_jump:
		add    %ax,_0e0c02_data
		mov    _0e0c06_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0411b4_jump
		mov    $0x000001,%eax
		jg     _0411b4_jump
		neg    %eax

	_0411b4_jump:
		mov    _0e0c08_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0e0c08_data
		mov    0x00002c(%esi),%dx
		mov    _0e0c08_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0e0c02_data,%di

	_0411de_jump:
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		call   _041208_func
		movb   $0x000000,0x000076(%esi)

	_0411fc_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041208_func:
		push   %esi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax

	_04122d_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _04123f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _04123f_jump
		mov    $0x000001,%edx

	_04123f_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _041250_jump
		cmp    %bx,%ax
		jl     _04122d_jump

	_041250_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _0412c8_jump
		mov    %ecx,%ebp
		xor    %edx,%edx

	_041263_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _041275_jump
		cmpl   $0x000001,0x000024(%ecx)
		jne    _041275_jump
		mov    $0x000001,%edx

	_041275_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _041286_jump
		cmp    %bx,%ax
		jl     _041263_jump

	_041286_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _0412c1_jump
		xor    %edx,%edx

	_041293_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _0412a5_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0412a5_jump
		mov    $0x000001,%edx

	_0412a5_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _0412b6_jump
		cmp    %bx,%ax
		jl     _041293_jump

	_0412b6_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		jne    _0412c8_jump

	_0412c1_jump:
		mov    $0x000001,%edx
		mov    %ebp,%ecx

	_0412c8_jump:
		test   %dx,%dx
		je     _041322_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%ebp
		mov    %ah,0x000081(%ecx)
		test   %ebp,%ebp
		jne    _0412ea_jump
		mov    %ecx,%eax
		call   _01f8e8_func

	_0412ea_jump:
		movl   $0x000001,0x000024(%ecx)
		movswl %si,%eax
		movb   $0x000001,0x000076(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%bl
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d818_func

	_041322_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %esi
		ret    



_041328_func:
		push   %ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _04134d_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _04134d_jump
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)
		pop    %ebx
		ret    

	_04134d_jump:
		call   _02f658_func
		pop    %ebx
		ret    



_041354_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0ce6a6_data,%bx
		cmp    $0x00000a,%bx
		jge    _041394_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _041383_jump
		mov    $0x000001,%eax
		call   _02dbdc_func
		cmpw   $0x000003,_0cf868_data
		je     _0413b1_jump
		jmp    _0413a8_jump

	_041383_jump:
		xor    %eax,%eax
		call   _02dbdc_func
		mov    %bx,_0ce6a6_data
		pop    %edx
		pop    %ebx
		ret    

	_041394_jump:
		mov    $0x000001,%eax
		call   _02dbdc_func
		cmpw   $0x000003,_0cf868_data
		je     _0413b1_jump

	_0413a8_jump:
		movw   $0x00000a,_0ce6a6_data

	_0413b1_jump:
		pop    %edx
		pop    %ebx
		ret    



_0413b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _04150c_jump

	_0413d1_jump:
		test   %bx,%bx
		jne    _041466_jump
		cmpw   $0x0000d1,0x000060(%edx)
		jne    _041466_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _041466_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x000005,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _018ad0_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		cwtl   
		movl   $0x000001,0x000024(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%bl
		mov    %ax,0x00003e(%edx)
		or     $0x000004,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f8e8_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%bh
		mov    %ax,_0e0c0a_data
		mov    %bh,_0e0c27_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_041466_jump:
		cmp    $0x000001,%bx
		jne    _0414fc_jump
		cmpw   $0x0000d2,0x000060(%edx)
		jne    _0414fc_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0414fc_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x0000f0,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _018ad0_func
		cwtl   
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%dl
		mov    %ax,_0e0bfc_data
		mov    %dl,_0e0c27_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0414fc_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jl     _0413d1_jump

	_04150c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041510_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ecx
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%si
		xor    %eax,%eax
		xor    %ebx,%ebx
		test   %si,%si
		jle    _04164a_jump

	_041533_jump:
		test   %ax,%ax
		jne    _0415a8_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _0415a8_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0415a8_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0x000140,0x000028(%edx)
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000028(%edx),%eax
		mov    0x000081(%edx),%cl
		mov    %ax,0x00003c(%edx)
		mov    _0cf8a4_data,%eax
		or     $0x000004,%cl
		sar    $0x000010,%eax
		mov    %cl,0x000081(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %ebx,%ecx
		call   _01f8e8_func
		movb   $0x000000,0x000076(%edx)
		mov    $0x000001,%eax
		movw   $0x000000,0x000050(%edx)
		jmp    _04163a_jump

	_0415a8_jump:
		cmp    $0x000001,%ax
		jne    _04163a_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _04163a_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _04163a_jump
		movl   $0xffffffec,0x000028(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cf8a4_data,%eax
		movb   $0x000004,0x00007e(%edx)
		sar    $0x000010,%eax
		movw   $0x000000,0x000040(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		movb   $0x000001,0x000076(%edx)
		movw   $0x000000,0x000050(%edx)
		mov    %cx,0x000052(%edx)
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		mov    %bx,0x000052(%edx,%eax,1)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04163a_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _041533_jump

	_04164a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041650_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    0x000076(%eax),%ah
		test   %ah,%ah
		jne    _041688_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%cx
		mov    _0e0bfa_data,%di
		add    %ecx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0e0bf8_data,%bx
		add    %edx,%eax
		jmp    _0416ae_jump

	_041688_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		mov    _0e0bf6_data,%di
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0e0bf4_data,%bx

	_0416ae_jump:
		sub    %eax,%ebx
		cmpw   $0x000000,0x000050(%esi)
		je     _041847_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %edx,0x000004(%esp)
		cmpw   $0x000000,0x000050(%eax)
		je     _041847_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _041751_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _041751_jump
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		mov    0x000028(%eax),%ebp
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		add    %ebp,%edx
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0ce6dc_data,%edx
		sar    %eax
		mov    0x000068(%edx),%cl
		sub    %ecx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000050(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    0x000004(%esp),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%cl
		add    %ebp,%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x000069(%eax),%al
		add    %ebp,%ecx
		and    $0x0000ff,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		sar    %ecx
		jmp    _0417e8_jump

	_041751_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _041788_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %eax,%ecx
		mov    _0ce6dc_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,%edx
		mov    %ecx,0x000028(%eax)
		xor    %ecx,%edx
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%ecx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,0x00002c(%eax)
		jmp    _0417f0_jump

	_041788_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _0417f0_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%eax
		add    %edx,%eax
		mov    _0ce6dc_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    (%esp),%ebp
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax

	_0417e8_jump:
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_0417f0_jump:
		xor    %edx,%edx
		mov    _0ce678_data,%eax
		mov    _0ce6b8_data,%dl
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0e0bfa_data
		xor    %ecx,%ecx
		mov    _0ce6b9_data,%cl
		mov    _0ce67c_data,%ebp
		sar    %ecx
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		sub    %eax,%edx
		mov    (%esp),%ecx
		mov    %dx,_0e0bf6_data
		mov    %cx,_0e0bf8_data
		mov    %cx,_0e0bf4_data
		jmp    _041887_jump

	_041847_jump:
		testb  $0x000001,_0cf81a_data
		jne    _041887_jump
		mov    _0ce6dc_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0e0bfa_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0e0bf8_data
		add    $0x000030,%eax
		mov    %dx,_0e0bf4_data
		mov    %ax,_0e0bf6_data

	_041887_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _041890_jump
		neg    %eax

	_041890_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _04189b_jump
		neg    %eax

	_04189b_jump:
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		cmp    $0x000002,%dx
		jge    _0418d8_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _0418d8_jump
		movw   $0x000001,0x000050(%esi)
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _0418d8_jump
		movw   $0x000001,0x000050(%eax)

	_0418d8_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _041907_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    0x000006(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_041907_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041920_jump
		mov    $0x000001,%eax
		jg     _041920_jump
		neg    %eax

	_041920_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _04192e_jump
		mov    %ebx,%eax

	_04192e_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _04193b_jump
		mov    %ebx,%eax

	_04193b_jump:
		mov    0x00003e(%esi),%ebx
		mov    %ax,0x000042(%esi)
		sar    $0x000010,%ebx
		movswl %di,%eax
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _041958_jump
		mov    $0x000001,%eax
		jg     _041958_jump
		neg    %eax

	_041958_jump:
		add    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _041965_jump
		mov    %ebx,%eax

	_041965_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _041972_jump
		mov    %ebx,%eax

	_041972_jump:
		mov    %ax,0x000040(%esi)
		test   %ax,%ax
		jle    _041993_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _041993_jump
		mov    %dh,%cl
		or     $0x000008,%cl
		mov    %cl,0x000081(%esi)
		jmp    _0419b0_jump

	_041993_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _0419b0_jump
		mov    0x000081(%esi),%bl
		test   $0x000008,%bl
		je     _0419b0_jump
		mov    %bl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)

	_0419b0_jump:
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		sub    $0x0000c8,%eax
		cmp    %ebx,%eax
		jle    _0419da_jump
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)

	_0419da_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0419e4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000000,0x000050(%eax)
		je     _041a9e_jump
		mov    0x000050(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		cmpw   $0x000000,0x000050(%ebx,%eax,4)
		je     _041a9e_jump
		movw   $0x000000,0x000050(%edx)
		mov    _0cf81a_data,%ah
		mov    0x000050(%edx),%edx
		or     $0x000001,%ah
		sar    $0x000010,%edx
		mov    %ah,_0cf81a_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    $0x00000a,%esi
		movw   $0x000000,0x000050(%ebx,%eax,4)
		mov    _0cf8a6_data,%ax
		mov    $0x00012c,%edi
		sub    $0x0000c8,%eax
		mov    %si,_0e0bfa_data
		mov    %ax,_0e0bf8_data
		mov    %ax,_0e0bf4_data
		mov    _0ce6dc_data,%eax
		mov    %di,_0e0bf6_data
		call   _07b628_func
		mov    _0ce6dc_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		mov    $0x000001,%dh
		movb   $0x000008,0x00006e(%eax)
		mov    %dh,_0e0c22_data

	_041a9e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_041ab0_switch:
		.long   _041b0f_case
		.long   _041b26_case
		.long   _041b3e_case
		.long   _041b56_case

_041ac0_switch:
		.long   _041b85_case
		.long   _041b9d_case
		.long   _041bb4_case
		.long   _041bcc_case

_041ad0_switch:
		.long   _041bfb_case
		.long   _041c07_case
		.long   _041c13_case
		.long   _041c1f_case

_041ae0_switch:
		.long   _041c42_case
		.long   _041c59_case
		.long   _041c71_case
		.long   _041c89_case




_041af0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c2f88_data,%ax
		cmp    $0x000003,%ax
		ja     _041b6c_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041ab0_switch(,%eax,4)

	_041b0f_case:
		mov    $_041ea4_func,%eax
		mov    $_041cbc_jump,%edx
		mov    %eax,_0c2f78_data
		mov    %edx,_0967bc_data
		jmp    _041b6c_jump

	_041b26_case:
		mov    $_041f30_func,%edi
		mov    $_041cbc_jump,%ebp
		mov    %edi,_0c2f78_data
		mov    %ebp,_0967c0_data
		jmp    _041b6c_jump

	_041b3e_case:
		mov    $_041fbc_func,%ecx
		mov    $_041cbc_jump,%esi
		mov    %ecx,_0c2f78_data
		mov    %esi,_0967c4_data
		jmp    _041b6c_jump

	_041b56_case:
		mov    $_042048_func,%edx
		mov    $_041cbc_jump,%ebx
		mov    %edx,_0c2f78_data
		mov    %ebx,_0967c8_data

	_041b6c_jump:
		mov    _0c2f8a_data,%ax
		cmp    $0x000003,%ax
		ja     _041be2_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041ac0_switch(,%eax,4)

	_041b85_case:
		mov    $_041ea4_func,%edx
		mov    $_041ca8_jump,%ebx
		mov    %edx,_0c2f7c_data
		mov    %ebx,_0967bc_data
		jmp    _041be2_jump

	_041b9d_case:
		mov    $_041f30_func,%ebp
		mov    $_041ca8_jump,%eax
		mov    %ebp,_0c2f7c_data
		mov    %eax,_0967c0_data
		jmp    _041be2_jump

	_041bb4_case:
		mov    $_041fbc_func,%esi
		mov    $_041ca8_jump,%edi
		mov    %esi,_0c2f7c_data
		mov    %edi,_0967c4_data
		jmp    _041be2_jump

	_041bcc_case:
		mov    $_042048_func,%ebx
		mov    $_041ca8_jump,%ecx
		mov    %ebx,_0c2f7c_data
		mov    %ecx,_0967c8_data

	_041be2_jump:
		mov    _0c2f8c_data,%ax
		cmp    $0x000003,%ax
		ja     _041c29_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041ad0_switch(,%eax,4)

	_041bfb_case:
		movl   $_041ea4_func,_0c2f80_data
		jmp    _041c29_jump

	_041c07_case:
		movl   $_041f30_func,_0c2f80_data
		jmp    _041c29_jump

	_041c13_case:
		movl   $_041fbc_func,_0c2f80_data
		jmp    _041c29_jump

	_041c1f_case:
		movl   $_042048_func,_0c2f80_data

	_041c29_jump:
		mov    _0c2f8e_data,%ax
		cmp    $0x000003,%ax
		ja     _041c9e_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_041ae0_switch(,%eax,4)

	_041c42_case:
		mov    $_041ea4_func,%ebp
		mov    $_041cd0_jump,%eax
		mov    %ebp,_0c2f84_data
		mov    %eax,_0967bc_data
		jmp    _041c9e_jump

	_041c59_case:
		mov    $_041f30_func,%esi
		mov    $_041cd0_jump,%edi
		mov    %esi,_0c2f84_data
		mov    %edi,_0967c0_data
		jmp    _041c9e_jump

	_041c71_case:
		mov    $_041fbc_func,%ebx
		mov    $_041cd0_jump,%ecx
		mov    %ebx,_0c2f84_data
		mov    %ecx,_0967c4_data
		jmp    _041c9e_jump

	_041c89_case:
		mov    $_042048_func,%eax
		mov    $_041cd0_jump,%edx
		mov    %eax,_0c2f84_data
		mov    %edx,_0967c8_data

	_041c9e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_041ca8_jump:
		xor    %eax,%eax
		mov    _095e3c_data,%al
		nop



_041cb0_func:
		and    $0x0000ff,%eax
		mov    _0e0c30_data(%eax),%al
		ret    

	_041cbc_jump:
		xor    %eax,%eax
		mov    _095e3d_data,%al
		and    $0x0000ff,%eax
		mov    _0e0c30_data(%eax),%al
		ret    

	_041cd0_jump:
		xor    %eax,%eax
		mov    _095e3e_data,%al
		and    $0x0000ff,%eax
		mov    _0e0c30_data(%eax),%al
		ret    



_041ce4_func:
		push   %edx
		mov    _095eb2_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041d06_jump
		mov    _0cf746_data,%ax
		cmp    _0e0cca_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041d06_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041d3d_jump
		xor    %eax,%eax
		mov    _095e3a_data,%al
		call   _041cb0_func
		test   %al,%al
		je     _041d36_jump
		xor    %eax,%eax
		mov    _095e38_data,%al
		call   _041cb0_func
		test   %al,%al
		jne    _041d36_jump
		mov    $0x000001,%eax
		jmp    _041d38_jump

	_041d36_jump:
		xor    %eax,%eax

	_041d38_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041d3d_jump:
		cmpb   $0x000000,_0caf65_data
		je     _041d4d_jump
		mov    _0e0cce_data,%dx

	_041d4d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041d54_func:
		push   %edx
		mov    _095eb2_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041d76_jump
		mov    _0cf746_data,%ax
		cmp    _0e0cd6_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041d76_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041dad_jump
		xor    %eax,%eax
		mov    _095e38_data,%al
		call   _041cb0_func
		test   %al,%al
		je     _041da6_jump
		xor    %eax,%eax
		mov    _095e3a_data,%al
		call   _041cb0_func
		test   %al,%al
		jne    _041da6_jump
		mov    $0x000001,%eax
		jmp    _041da8_jump

	_041da6_jump:
		xor    %eax,%eax

	_041da8_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041dad_jump:
		cmpb   $0x000000,_0caf65_data
		je     _041dbd_jump
		mov    _0e0cc0_data,%dx

	_041dbd_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041dc4_func:
		push   %edx
		mov    _095eb2_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041de6_jump
		mov    _0cf744_data,%ax
		cmp    _0e0cd2_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041de6_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041e1d_jump
		xor    %eax,%eax
		mov    _095e3b_data,%al
		call   _041cb0_func
		test   %al,%al
		je     _041e16_jump
		xor    %eax,%eax
		mov    _095e39_data,%al
		call   _041cb0_func
		test   %al,%al
		jne    _041e16_jump
		mov    $0x000001,%eax
		jmp    _041e18_jump

	_041e16_jump:
		xor    %eax,%eax

	_041e18_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041e1d_jump:
		cmpb   $0x000000,_0caf65_data
		je     _041e2d_jump
		mov    _0e0cc8_data,%dx

	_041e2d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041e34_func:
		push   %edx
		mov    _095eb2_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _041e56_jump
		mov    _0cf744_data,%ax
		cmp    _0e0ccc_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_041e56_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041e8d_jump
		xor    %eax,%eax
		mov    _095e39_data,%al
		call   _041cb0_func
		test   %al,%al
		je     _041e86_jump
		xor    %eax,%eax
		mov    _095e3b_data,%al
		call   _041cb0_func
		test   %al,%al
		jne    _041e86_jump
		mov    $0x000001,%eax
		jmp    _041e88_jump

	_041e86_jump:
		xor    %eax,%eax

	_041e88_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_041e8d_jump:
		cmpb   $0x000000,_0caf65_data
		je     _041e9d_jump
		mov    _0e0cbc_data,%dx

	_041e9d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_041ea4_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _041f2b_jump
		cmpb   $0x000000,_095eb2_data
		je     _041eca_jump
		cmpw   $0x000001,_0c97f0_data
		jne    _041f05_jump

	_041eca_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041ee4_jump
		call   *_0967bc_data
		test   %al,%al
		je     _041ee4_jump
		mov    $0x000001,%eax
		jmp    _041ee6_jump

	_041ee4_jump:
		xor    %eax,%eax

	_041ee6_jump:
		cmpb   $0x000000,_0cfa36_data
		je     _041f2b_jump
		cmpw   $0x000001,_0cf7f6_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_041f05_jump:
		cmpw   $0x000001,_0cf7f6_data
		je     _041f22_jump
		cmpb   $0x000001,_0cfa51_data
		jne    _041f29_jump
		call   *_0967bc_data
		test   %al,%al
		je     _041f29_jump

	_041f22_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_041f29_jump:
		xor    %eax,%eax

	_041f2b_jump:
		pop    %edx
		ret    



_041f30_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _041fb7_jump
		cmpb   $0x000000,_095eb2_data
		je     _041f56_jump
		cmpw   $0x000001,_0c97f2_data
		jne    _041f91_jump

	_041f56_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041f70_jump
		call   *_0967c0_data
		test   %al,%al
		je     _041f70_jump
		mov    $0x000001,%eax
		jmp    _041f72_jump

	_041f70_jump:
		xor    %eax,%eax

	_041f72_jump:
		cmpb   $0x000000,_0cfa36_data
		je     _041fb7_jump
		cmpw   $0x000001,_0cf7f8_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_041f91_jump:
		cmpw   $0x000001,_0cf7f8_data
		je     _041fae_jump
		cmpb   $0x000001,_0cfa51_data
		jne    _041fb5_jump
		call   *_0967c0_data
		test   %al,%al
		je     _041fb5_jump

	_041fae_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_041fb5_jump:
		xor    %eax,%eax

	_041fb7_jump:
		pop    %edx
		ret    



_041fbc_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _042043_jump
		cmpb   $0x000000,_095eb2_data
		je     _041fe2_jump
		cmpw   $0x000001,_0c97f4_data
		jne    _04201d_jump

	_041fe2_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _041ffc_jump
		call   *_0967c4_data
		test   %al,%al
		je     _041ffc_jump
		mov    $0x000001,%eax
		jmp    _041ffe_jump

	_041ffc_jump:
		xor    %eax,%eax

	_041ffe_jump:
		cmpb   $0x000000,_0cfa36_data
		je     _042043_jump
		cmpw   $0x000001,_0cf7f2_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_04201d_jump:
		cmpw   $0x000001,_0cf7f2_data
		je     _04203a_jump
		cmpb   $0x000001,_0cfa51_data
		jne    _042041_jump
		call   *_0967c4_data
		test   %al,%al
		je     _042041_jump

	_04203a_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_042041_jump:
		xor    %eax,%eax

	_042043_jump:
		pop    %edx
		ret    



_042048_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _0420cf_jump
		cmpb   $0x000000,_095eb2_data
		je     _04206e_jump
		cmpw   $0x000001,_0c97f6_data
		jne    _0420a9_jump

	_04206e_jump:
		cmpb   $0x000001,_0cfa51_data
		jne    _042088_jump
		call   *_0967c8_data
		test   %al,%al
		je     _042088_jump
		mov    $0x000001,%eax
		jmp    _04208a_jump

	_042088_jump:
		xor    %eax,%eax

	_04208a_jump:
		cmpb   $0x000000,_0cfa36_data
		je     _0420cf_jump
		cmpw   $0x000001,_0cf7f6_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_0420a9_jump:
		cmpw   $0x000001,_0cf7f4_data
		je     _0420c6_jump
		cmpb   $0x000001,_0cfa51_data
		jne    _0420cd_jump
		call   *_0967c8_data
		test   %al,%al
		je     _0420cd_jump

	_0420c6_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_0420cd_jump:
		xor    %eax,%eax

	_0420cf_jump:
		pop    %edx
		ret    



_0420d4_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _042109_jump
		cmpw   $0x000001,_0e0cc4_data
		je     _042100_jump
		cmpb   $0x000001,_0cfa51_data
		jne    _042107_jump
		call   *_0967c4_data
		test   %al,%al
		je     _042107_jump

	_042100_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_042107_jump:
		xor    %eax,%eax

	_042109_jump:
		pop    %edx
		ret    



_04210c_func:
		push   %edx
		mov    _0cf8da_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _042128_jump
		cmpw   $0x000001,_0e0cbe_data
		sete   %al
		xor    %ah,%ah

	_042128_jump:
		pop    %edx
		ret    



_04212c_func:
		mov    %ax,_0e0cd0_data
		ret    



_042134_func:
		call   *_0e0cb0_data
		ret    



_04213c_func:
		push   %esi
		mov    %eax,%esi
		call   *_0e0cb0_data
		mov    _0cf746_data,%ax
		cmp    (%edx),%ax
		jge    _042153_jump
		mov    %ax,(%edx)

	_042153_jump:
		mov    _0cf744_data,%dx
		cmp    (%ecx),%dx
		jge    _042162_jump
		mov    %dx,(%ecx)

	_042162_jump:
		mov    _0cf746_data,%dx
		cmp    (%esi),%dx
		jle    _042171_jump
		mov    %dx,(%esi)

	_042171_jump:
		mov    _0cf744_data,%dx
		cmp    (%ebx),%dx
		jle    _042180_jump
		mov    %dx,(%ebx)

	_042180_jump:
		pop    %esi
		ret    



_042184_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,_095eb2_data
		je     _0421be_jump
		call   *_0e0cb0_data
		mov    _0cf746_data,%ax
		mov    %ax,(%ebx)
		mov    _0cf744_data,%bx
		mov    %ax,_0e0cd4_data
		mov    %bx,(%edx)
		mov    $0x000002,%dl
		mov    %bx,_0e0cd8_data
		mov    %dl,_095eb2_data

	_0421be_jump:
		pop    %ebx
		ret    



_0421c0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    0x000014(%esp),%ecx
		movswl (%ecx),%ecx
		movswl (%edx),%ebx
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    $0x000005,%eax
		add    %edx,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    %ebx,%eax
		movswl (%esi),%ebx
		mov    %ebx,%edx
		sub    %ecx,%edx
		mov    %ax,_0e0cca_data
		add    %edx,%edx
		mov    $0x000005,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %eax,%ebx
		mov    %bx,_0e0cd6_data
		mov    0x000018(%esp),%ebx
		movswl (%ebx),%ebx
		movswl 0x000000(%ebp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%edx
		add    %edx,%edx
		mov    $0x000005,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		add    %ecx,%eax
		movswl (%edi),%ecx
		mov    %ecx,%edx
		sub    %ebx,%edx
		add    %edx,%edx
		mov    %ax,_0e0ccc_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		sub    %eax,%ecx
		mov    %cx,_0e0cd2_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0422c8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   $0x000180
		push   $0x000200
		push   %eax
		call   _0813e7_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _0422fd_jump
		push   %ebx
		push   $_0c0dbc_data
		call   _07fce1_func
		add    $0x000008,%esp
		call   _0804f4_func
		pop    %ecx
		pop    %ebx
		ret    

	_0422fd_jump:
		mov    %ecx,%eax
		call   _0855ce_func
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _07f8d8_func
		mov    %eax,0x000010(%edx)
		mov    %ebx,0x00000c(%edx)
		mov    %ecx,%eax
		mov    0x000010(%edx),%edx
		call   _08560b_func
		mov    %ecx,%eax
		call   _08168b_func
		pop    %ecx
		pop    %ebx
		ret    



_042328_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,%ebp
		call   _03d9d4_func
		push   $_0c0dd8_data
		call   _07fce1_func
		add    $0x000004,%esp
		mov    $_0c0dd0_data,%esi
		push   %esi
		push   $_0c0e08_data
		xor    %edx,%edx
		call   _07fce1_func
		add    $0x000008,%esp

	_04235a_jump:
		call   _085706_func
		movswl %dx,%ebx
		inc    %edx
		mov    %al,(%esp,%ebx,1)
		cmp    $0x00000d,%al
		je     _04236e_jump
		cmp    $0x00001b,%al
		jne    _04235a_jump

	_04236e_jump:
		dec    %edx
		movswl %dx,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		cmpb   $0x000000,(%esp)
		jne    _042399_jump
		mov    %esp,%edi
		push   %edi

	_042380_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _042398_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _042380_jump

	_042398_jump:
		pop    %edi

	_042399_jump:
		mov    $_0c0e28_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0423a9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0423c1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0423a9_jump

	_0423c1_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %esp,%eax
		call   _0422c8_func
		xor    %eax,%eax
		mov    $_0c7988_data,%esi
		mov    _0cfa4c_data,%al
		mov    $0x0000ff,%ecx
		call   _03d8ac_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042408_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cf7f4_data
		mov    %dx,_0cf7f2_data
		mov    %dx,_0cf7f6_data
		test   $0x000001,%al
		je     _042430_jump
		movw   $0x000001,_0cf7f6_data

	_042430_jump:
		test   $0x000002,%al
		je     _04243d_jump
		movw   $0x000001,_0cf7f2_data

	_04243d_jump:
		test   $0x000004,%al
		je     _042446_jump
		mov    $0x000001,%ebx

	_042446_jump:
		test   $0x000008,%al
		je     _04244f_jump
		mov    $0x000001,%ebx

	_04244f_jump:
		test   $0x000010,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0e0cce_data
		test   $0x000020,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0e0cc0_data
		test   $0x000040,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0e0cbc_data
		test   $0x000080,%al
		setne  %dl
		mov    %dx,_0e0cc8_data
		mov    %bx,_0cf7f8_data
		pop    %edx
		pop    %ebx
		ret    



_042490_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cf7f6_data,%ax
		mov    %ax,_0e0cc6_data
		mov    _0cf7f8_data,%ax
		mov    %ax,_0e0cc4_data
		mov    _0cf7f2_data,%ax
		mov    %ax,_0e0cc2_data
		mov    _0cf7f4_data,%ax
		mov    %ax,_0e0cbe_data
		mov    0x000015(%edx),%ah
		mov    (%edx),%ebx
		test   %ah,%ah
		je     _042597_jump
		test   %ebx,%ebx
		jne    _042527_jump
		mov    _0cf886_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0424f4_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _0424f4_jump
		mov    %edx,%eax
		call   _042328_func

	_0424f4_jump:
		mov    %ebx,%ecx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		inc    %ebx
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _042408_func
		mov    0x000010(%edx),%eax
		mov    (%ebx,%eax,1),%al
		movb   $0x000000,0x000016(%edx)
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042527_jump:
		mov    0x000008(%edx),%ecx
		inc    %ecx
		mov    0x000004(%edx),%esi
		mov    %ecx,0x000008(%edx)
		cmp    %esi,%ecx
		jne    _042586_jump
		cmpb   $0x000001,0x000016(%edx)
		je     _042543_jump
		lea    0x000001(%ebx),%eax
		cmp    0x00000c(%edx),%eax
		jb     _04256c_jump

	_042543_jump:
		mov    _0cfa36_data,%ch
		movb   $0x000000,0x000015(%edx)
		cmp    $0x000001,%ch
		jne    _042586_jump
		mov    $0x000002,%al
		mov    $0x000001,%ecx
		mov    %al,_0cfa36_data
		mov    %cx,_0cf892_data
		call   _03cadc_func
		jmp    _042586_jump

	_04256c_jump:
		add    $0x000002,%ebx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)

	_042586_jump:
		mov    0x000010(%edx),%eax
		mov    -0x000001(%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _042408_func

	_042597_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04259c_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _080408_func
		cli    
		mov    $0x000060,%edx
		in     $0x000021,%al
		or     $0x000002,%al
		out    %al,$0x000021
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,%dh
		mov    _0cfa36_data,%dl
		xor    %bl,%bl
		cmp    $0x000001,%dl
		jne    _0425e6_jump
		testb  $0x000040,_0cfa87_data
		je     _0425e6_jump
		cmp    %dl,%al
		jne    _0425df_jump
		movb   $0x000004,_0cfa36_data
		jmp    _0425e6_jump

	_0425df_jump:
		movb   $0x000003,_0cfa36_data

	_0425e6_jump:
		test   $0x000080,%dh
		jne    _042626_jump
		mov    %dh,%al
		xor    $0x000096,%al
		xor    %ecx,%ecx
		and    $0x0000ff,%eax
		mov    _095eb7_data,%cl
		cmp    %ecx,%eax
		je     _042626_jump
		movb   $0x000001,_0cfa15_data
		mov    $0x000008,%eax

	_04260c_jump:
		dec    %eax
		mov    _095eb7_data(%eax),%dl
		mov    %dl,_095eb8_data(%eax)
		test   %eax,%eax
		jg     _04260c_jump
		mov    %dh,%al
		xor    $0x000096,%al
		mov    %al,_095eb7_data

	_042626_jump:
		cmpb   $0x000000,_0cfa53_data
		je     _042658_jump
		mov    _0cfa2f_data,%dl
		mov    _0cfa2d_data,%cl
		xor    %bh,%bh
		and    $0x0000fb,%dl
		mov    %bh,_0cfa2e_data
		mov    %dl,_0cfa2f_data
		cmp    $0x000001,%cl
		jne    _042658_jump
		movb   $0x000002,_0cfa2d_data

	_042658_jump:
		mov    _0967cc_data,%al
		cmp    $0x000001,%al
		jb     _042669_jump
		jbe    _04267f_jump
		cmp    $0x000002,%al
		je     _042697_jump
		jmp    _0426bf_jump

	_042669_jump:
		test   %al,%al
		jne    _0426bf_jump
		cmp    $0x0000e1,%dh
		jne    _04267b_jump
		movb   $0x000001,_0967cc_data
		jmp    _0426c7_jump

	_04267b_jump:
		mov    $0x000001,%bl
		jmp    _0426c7_jump

	_04267f_jump:
		cmp    $0x00001d,%dh
		jne    _04268d_jump
		movb   $0x000002,_0967cc_data
		jmp    _0426c7_jump

	_04268d_jump:
		xor    %bh,%bh
		mov    %bh,_0967cc_data
		jmp    _0426c7_jump

	_042697_jump:
		cmp    $0x000045,%dh
		jne    _0426b5_jump
		cmpb   $0x000000,_0cfa98_data
		je     _0426b5_jump
		mov    _0cfa52_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_0cfa52_data

	_0426b5_jump:
		xor    %dl,%dl
		mov    %dl,_0967cc_data
		jmp    _0426c7_jump

	_0426bf_jump:
		xor    %ch,%ch
		mov    %ch,_0967cc_data

	_0426c7_jump:
		test   %bl,%bl
		je     _0426e2_jump
		mov    %dh,%dl
		and    $0x000080,%dl
		xor    $0x000080,%dl
		mov    %dh,%al
		and    $0x00007f,%al
		and    $0x0000ff,%eax
		mov    %dl,_0e0c30_data(%eax)

	_0426e2_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		in     $0x000021,%al
		and    $0x0000fd,%al
		out    %al,$0x000021
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_04270c_func:
		push   %edx
		and    $0x0000ff,%eax
		xor    %dl,%dl
		mov    %dl,_0e0c30_data(%eax)
		pop    %edx
		ret    



_04271c_func:
		push   %edx
		xor    %al,%al

	_04271f_jump:
		xor    %edx,%edx
		mov    %al,%dl
		xor    %ah,%ah
		mov    %ah,_0e0c30_data(%edx)
		inc    %al
		cmp    $0x000080,%al
		jb     _04271f_jump
		pop    %edx
		ret    



_042734_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _04271c_func
		mov    $0x000009,%eax
		call   _081331_func
		mov    %eax,_0e0cb4_data
		mov    _0cfa51_data,%ah
		mov    %dx,_0e0cb8_data
		cmp    $0x000001,%ah
		jne    _04276e_jump
		mov    $_04259c_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _081363_func

	_04276e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042774_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0e0cb8_data,%cx
		mov    _0e0cb4_data,%ebx
		call   _081363_func
		pop    %ecx
		pop    %ebx
		ret    



_042790_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa4b_data
		je     _0427a8_jump
		mov    _0cfa12_data,%dl
		test   %dl,%dl
		je     _0427c5_jump

	_0427a8_jump:
		xor    %bh,%bh
		mov    $_015b55_func,%edx
		mov    %bh,_0cfa23_data
		xor    %bl,%bl
		mov    %edx,_0e0cb0_data
		mov    %bh,_0cfa1d_data
		jmp    _0427eb_jump

	_0427c5_jump:
		mov    $0x000001,%bh
		mov    $_015d4a_func,%ecx
		mov    %dl,_0cfa1d_data
		mov    $_01595d_func,%edx
		mov    %bh,_0cfa23_data
		mov    %ecx,_0cd120_data
		mov    %edx,_0e0cb0_data
		xor    %bl,%bl

	_0427eb_jump:
		call   _015cdf_func
		test   %eax,%eax
		jne    _04288d_jump
		call   _015d14_func
		test   %eax,%eax
		jne    _04288d_jump
		mov    _0cfa23_data,%bh
		mov    _0e0cb0_data,%edx
		xor    %cl,%cl
		xor    %esi,%esi
		xor    %edi,%edi
		xor    %eax,%eax
		mov    _0cfa1d_data,%bl
		mov    %cl,_095eb2_data
		mov    %si,_0cf746_data
		mov    %di,_0cf7f4_data
		mov    %ax,_0cf7f2_data
		mov    %si,_0cf7f6_data
		mov    %di,_0e0cbe_data
		mov    %ax,_0e0cc2_data
		mov    %si,_0e0cc6_data
		mov    %di,_0e0cd6_data
		mov    %ax,_0e0cca_data
		mov    %si,_0e0ccc_data
		xor    %ch,%ch
		xor    %al,%al
		mov    %cx,_0cf744_data
		mov    %cx,_0cf7f8_data
		mov    %cx,_0e0cc4_data
		mov    %cx,_0e0cd2_data
		jmp    _04290c_jump

	_04288d_jump:
		cmpb   $0x000000,_095eb2_data
		jne    _04289d_jump
		movb   $0x000001,_095eb2_data

	_04289d_jump:
		call   _015cdf_func
		test   %eax,%eax
		je     _0428d9_jump
		cmpb   $0x000000,_0cfa4b_data
		je     _0428b8_jump
		cmpb   $0x000000,_0cfa12_data
		je     _0428c3_jump

	_0428b8_jump:
		xor    %bh,%bh
		mov    $_015b55_func,%edx
		xor    %bl,%bl
		jmp    _04290a_jump

	_0428c3_jump:
		mov    $0x000001,%bh
		mov    $_015d4a_func,%edi
		mov    $_01595d_func,%edx
		mov    %edi,_0cd120_data
		xor    %bl,%bl
		jmp    _04290a_jump

	_0428d9_jump:
		cmpb   $0x000000,_0cfa4b_data
		je     _0428eb_jump
		cmpb   $0x000000,_0cfa12_data
		je     _0428f6_jump

	_0428eb_jump:
		xor    %bh,%bh
		mov    $_015c13_func,%edx
		mov    $0x000001,%bl
		jmp    _04290a_jump

	_0428f6_jump:
		mov    $0x000001,%bh
		mov    $_015a57_func,%edx
		mov    $_015f34_func,%esi
		mov    %bh,%bl
		mov    %esi,_0cd120_data

	_04290a_jump:
		mov    $0x000001,%al

	_04290c_jump:
		mov    %bh,_0cfa23_data
		mov    %bl,_0cfa1d_data
		mov    %edx,_0e0cb0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042930_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,%esi
		mov    %edx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    0x000040(%esp),%ecx
		mov    %ebx,%eax
		mov    _0cd0dc_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0cd0e4_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x00001c(%esp)
		mov    0x000008(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _042b05_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000024(%esp)
		test   %ebp,%ebp
		jge    _04299c_jump
		lea    (%eax,%ebp,1),%ecx
		mov    %ecx,0x000024(%esp)
		xor    %ebp,%ebp

	_04299c_jump:
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _0429b5_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_0429b5_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _042e13_jump
		mov    0x000008(%esp),%ecx
		sub    0x000004(%esp),%ecx
		test   %ecx,%ecx
		jl     _042a65_jump
		cmp    $0x0000c8,%ecx
		jge    _042a65_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000048(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cfa30_data,%bh
		add    %edx,%esi
		test   %bh,%bh
		je     _042a50_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cd0c8_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_042a3f_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042a3f_jump
		jmp    _042a65_jump

	_042a50_jump:
		mov    0x000024(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042a5e_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042a5e_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042a65_jump:
		mov    0x000008(%esp),%esi
		add    0x000004(%esp),%esi
		test   %esi,%esi
		jl     _042e13_jump
		cmp    $0x0000c8,%esi
		jge    _042e13_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx

	_042a94_jump:
		mov    %edi,%eax
	_042a98_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    0x000048(%esp),%ebx
		sub    %edx,%eax

	_042a9c_jump:
		mov    0x000044(%esp),%edx

	_042aa0_jump:
		mov    _0cfa30_data,%cl
		add    %eax,%edx

	_042aa8_jump:
		add    %ebx,%edi
		mov    %edx,(%esp)
		test   %cl,%cl
		je     _042afa_jump
		mov    0x000010(%esp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		mov    _0cd0c8_data,%ebx
		add    %ebp,%eax
		mov    0x000024(%esp),%ecx
		shl    $0x000002,%eax
		mov    (%esp),%esi
		add    %eax,%ebx

	_042ae6_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042ae6_jump
		jmp    _042e13_jump

	_042afa_jump:
		mov    0x000024(%esp),%ecx
		mov    %edx,%esi
		jmp    _042e02_jump

	_042b05_jump:
		lea    (%ebx,%ebx,1),%edx
		mov    %edx,0x00002c(%esp)
		test   %ebp,%ebp
		jge    _042b18_jump
		add    %ebp,%edx
		mov    %edx,0x00002c(%esp)
		xor    %ebp,%ebp

	_042b18_jump:
		mov    0x00002c(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _042b32_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x00002c(%esp)

	_042b32_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000028(%esp)
		mov    %esi,0x000020(%esp)
		test   %esi,%esi
		jge    _042b52_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000028(%esp)
		mov    %esi,0x000020(%esp)

	_042b52_jump:
		mov    0x000020(%esp),%eax
		add    0x000028(%esp),%eax
		cmp    $0x000140,%eax
		jl     _042b6f_jump
		mov    $0x000140,%eax
		sub    0x000020(%esp),%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_042b6f_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _042cbc_jump
		cmp    $0x0000c8,%eax
		jge    _042cbc_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _042c22_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cfa30_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _042c0d_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cd0c8_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_042bfc_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042bfc_jump
		jmp    _042c22_jump

	_042c0d_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042c1b_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042c1b_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042c22_jump:
		mov    0x000028(%esp),%ecx
		test   %ecx,%ecx
		jle    _042cbc_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x000020(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		mov    0x000048(%esp),%ebx
		add    %edx,%esi
		mov    _0cfa30_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _042cab_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cd0c8_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_042c9a_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042c9a_jump
		jmp    _042cbc_jump

	_042cab_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042cb5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042cb5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042cbc_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _042e13_jump
		cmp    $0x0000c8,%eax
		jge    _042e13_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _042d71_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000048(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0cfa30_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _042d5c_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		add    %ebp,%eax
		mov    _0cd0c8_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_042d4b_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042d4b_jump
		jmp    _042d71_jump

	_042d5c_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042d6a_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042d6a_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042d71_jump:
		cmpl   $0x000000,0x000028(%esp)
		jle    _042e13_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x000020(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebp
		add    %eax,%edi
		mov    _0cfa30_data,%bl
		mov    %edi,%esi
		mov    0x000048(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _042dfe_jump
		mov    %edx,%eax
		sub    0x000010(%esp),%eax
		lea    0x000000(,%eax,8),%edx
		sub    %eax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cd0c8_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_042de6_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _042de6_jump
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_042dfe_jump:
		mov    0x000028(%esp),%ecx

	_042e02_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _042e0c_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_042e0c_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_042e13_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_042e1c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _042eac_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_042e48_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _042930_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _042930_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _042ea8_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_042ea8_jump:
		cmp    %esi,%edi
		jle    _042e48_jump

	_042eac_jump:
		cmpb   $0x000000,_0cfa31_data
		je     _042eba_jump
		call   _0437fc_func

	_042eba_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_042ec4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa32_data
		je     _04302a_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _07fbbc_func
		mov    $0x000004,%edx
		mov    %eax,_0e0d08_data
		mov    $0x000041,%eax
		call   _07fbbc_func
		mov    $0x000004,%edx
		mov    %eax,_0e0d04_data
		mov    $0x001400,%eax
		call   _07fbbc_func
		mov    $0x000004,%edx
		mov    %eax,_0e0d10_data
		mov    $0x007161,%eax
		call   _07fbbc_func
		mov    _0e0d08_data,%edx
		mov    %eax,_0cd0c8_data
		test   %edx,%edx
		je     _042f46_jump
		cmpl   $0x000000,_0e0d04_data
		je     _042f46_jump
		cmpl   $0x000000,_0e0d10_data
		je     _042f46_jump
		test   %eax,%eax
		jne    _042fa9_jump

	_042f46_jump:
		cmpl   $0x000000,_0e0d08_data
		je     _042f59_jump
		mov    $_0e0d08_data,%eax
		call   _07fbcc_func

	_042f59_jump:
		cmpl   $0x000000,_0e0d04_data
		je     _042f6c_jump
		mov    $_0e0d04_data,%eax
		call   _07fbcc_func

	_042f6c_jump:
		cmpl   $0x000000,_0e0d10_data
		je     _042f7f_jump
		mov    $_0e0d10_data,%eax
		call   _07fbcc_func

	_042f7f_jump:
		cmpl   $0x000000,_0cd0c8_data
		je     _042f92_jump
		mov    $_0cd0c8_data,%eax
		call   _07fbcc_func

	_042f92_jump:
		xor    %dl,%dl
		mov    $_0c0e30_data,%eax
		mov    %dl,_0cfa32_data
		call   _01f988_func
		jmp    _04302a_jump

	_042fa9_jump:
		xor    %esi,%esi
		xor    %edi,%edi

	_042fad_jump:
		mov    %esi,%eax
		imul   %esi,%eax
		mov    _0e0d04_data,%edx
		mov    %eax,(%edx,%edi,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_042fbf_jump:
		mov    %eax,%ebx
		imul   %eax,%ebx
		mov    _0e0d08_data,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ebx,-0x000004(%ecx,%edx,1)
		cmp    $0x0000a0,%eax
		jle    _042fbf_jump
		inc    %esi
		add    $0x000004,%edi
		cmp    $0x000040,%esi
		jle    _042fad_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_042fe6_jump:
		mov    $0x3f500000,%ecx
		mov    %esi,%eax
		add    $0x000004,%edi
		call   _07fd04_func
		xor    %ebx,%ebx
		call   _080ae6_func
		call   _07ff01_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		call   _085735_func
		call   _07ff01_func
		call   _0805b4_func
		mov    _0e0d10_data,%edx
		inc    %esi
		mov    %eax,-0x000004(%edx,%edi,1)
		cmp    $0x001400,%esi
		jl     _042fe6_jump

	_04302a_jump:
		call   _043038_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043038_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cfa32_data,%ah
		test   %ah,%ah
		je     _043058_jump
		movb   $0x000001,_0cfa30_data
		movb   $0x000003,_0cfa2f_data
		jmp    _043066_jump

	_043058_jump:
		mov    $0x000003,%dh
		mov    %ah,_0cfa30_data
		mov    %dh,_0cfa2f_data

	_043066_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0cd0ec_data
		mov    %ebx,_0cd0b0_data
		mov    %ecx,_0cd0ac_data
		mov    %esi,_0cd0c4_data
		mov    %edi,_0cd0c0_data
		mov    %ebp,_0e0ce8_data
		xor    %cl,%cl
		mov    %eax,_0e0ce4_data
		mov    %cl,_0cfa2e_data
		mov    %cl,_0cfa2d_data
		call   _04368c_func
		cmpb   $0x000000,_0cfa32_data
		je     _0430f5_jump
		mov    _0cd0ec_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0cd0b4_data
		call   _0437fc_func

	_0430f5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0430fc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cd0ec_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _043113_jump
		mov    %ebx,%eax

	_043113_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _043120_jump
		mov    %ebx,%eax

	_043120_jump:
		mov    %eax,_0cd0ec_data
		call   _04368c_func
		cmpb   $0x000000,_0cfa30_data
		je     _043148_jump
		test   %edx,%edx
		jle    _04313e_jump
		mov    $0xffffffbf,%eax
		jmp    _043143_jump

	_04313e_jump:
		mov    $0x000041,%eax

	_043143_jump:
		call   _043730_func

	_043148_jump:
		pop    %edx
		pop    %ebx
		ret    



_04314c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e0ce0_data,%bx
		mov    _0cd0c4_data,%dx
		mov    _0e0cdc_data,%si
		sub    %edx,%ebx
		mov    _0cd0c0_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _04317a_jump
		neg    %eax

	_04317a_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _043187_jump
		neg    %eax

	_043187_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _0431b1_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_0431b1_jump:
		mov    _0967d0_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0431ca_jump
		mov    $0x000001,%eax
		jg     _0431ca_jump
		neg    %eax

	_0431ca_jump:
		add    _0967d0_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _0431db_jump
		mov    %ebx,%eax

	_0431db_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _0431e6_jump
		mov    %ebx,%eax

	_0431e6_jump:
		mov    _0967d4_data,%ecx
		mov    %eax,_0967d0_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _043204_jump
		mov    $0x000001,%eax
		jg     _043204_jump
		neg    %eax

	_043204_jump:
		mov    _0967d4_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _043217_jump
		mov    %ebx,%eax

	_043217_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _043222_jump
		mov    %ebx,%eax

	_043222_jump:
		mov    %eax,_0967d4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043230_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043242_jump
		mov    %ebx,%eax

	_043242_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _04324f_jump
		mov    %ebx,%eax

	_04324f_jump:
		mov    _0cfa2e_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _0432aa_jump
		mov    _0e0cec_data,%ecx
		mov    _0e0ce8_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0e0cec_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cf870_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _04328a_jump
		mov    %ebx,%eax

	_04328a_jump:
		mov    _0cf86c_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0432a0_jump
		mov    %ebx,%eax

	_0432a0_jump:
		mov    %eax,_0e0cec_data
		sar    $0x000004,%eax
		jmp    _0432d9_jump

	_0432aa_jump:
		mov    _0cf89c_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf870_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0432c6_jump
		mov    %ebx,%eax

	_0432c6_jump:
		mov    _0cf86c_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0432d9_jump
		mov    %ebx,%eax

	_0432d9_jump:
		mov    %ax,_0cf89e_data
		mov    _0e0ce8_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0e0ce8_data
		mov    %eax,_0cd0c4_data
		call   _04368c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043300_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043312_jump
		mov    %ebx,%eax

	_043312_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _04331f_jump
		mov    %ebx,%eax

	_04331f_jump:
		mov    _0cfa2e_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _04337a_jump
		mov    _0e0cf0_data,%ecx
		mov    _0e0ce4_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0e0cf0_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cf85c_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _04335a_jump
		mov    %ebx,%eax

	_04335a_jump:
		mov    _0cf852_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _043370_jump
		mov    %ebx,%eax

	_043370_jump:
		mov    %eax,_0e0cf0_data
		sar    $0x000004,%eax
		jmp    _0433a9_jump

	_04337a_jump:
		mov    _0cf8a4_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf85c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043396_jump
		mov    %ebx,%eax

	_043396_jump:
		mov    _0cf852_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _0433a9_jump
		mov    %ebx,%eax

	_0433a9_jump:
		mov    %ax,_0cf8a6_data
		mov    _0e0ce4_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0e0ce4_data
		mov    %eax,_0cd0c0_data
		call   _04368c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0433d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0433e3_jump
		mov    %ebx,%eax

	_0433e3_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _0433f0_jump
		mov    %ebx,%eax

	_0433f0_jump:
		mov    _0cf86e_data,%dx
		mov    %eax,%ecx
		mov    _0cf89e_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _04340f_jump
		cmp    _0cf872_data,%ax
		jne    _04343d_jump

	_04340f_jump:
		mov    _0cf89e_data,%ax
		cmp    _0cf86e_data,%ax
		jne    _043422_jump
		test   %ecx,%ecx
		jg     _04343d_jump

	_043422_jump:
		mov    _0cf89e_data,%ax
		cmp    _0cf872_data,%ax
		jne    _043513_jump
		test   %ecx,%ecx
		jge    _043513_jump

	_04343d_jump:
		mov    _0cd0ec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cd0c4_data,%edx
		cmp    %edx,%eax
		jge    _043513_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _043513_jump
		testb  $0x000001,_0cfa2e_data
		je     _0434bf_jump
		mov    _0e0cec_data,%eax
		mov    _0e0ce8_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0e0cec_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cf870_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _04349f_jump
		mov    %ebx,%eax

	_04349f_jump:
		mov    _0cf86c_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0434b5_jump
		mov    %ebx,%eax

	_0434b5_jump:
		mov    %eax,_0e0cec_data
		sar    $0x000004,%eax
		jmp    _0434f0_jump

	_0434bf_jump:
		mov    %ecx,%eax
		mov    _0cf89c_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf870_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0434dd_jump
		mov    %ebx,%eax

	_0434dd_jump:
		mov    _0cf86c_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0434f0_jump
		mov    %ebx,%eax

	_0434f0_jump:
		mov    %ax,_0cf89e_data
		mov    _0e0ce8_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0e0ce8_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cd0c4_data

	_043513_jump:
		call   _04368c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043533_jump
		mov    %ebx,%eax

	_043533_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _043540_jump
		mov    %ebx,%eax

	_043540_jump:
		mov    _0cf854_data,%dx
		mov    %eax,%ecx
		mov    _0cf8a6_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _04355f_jump
		cmp    _0cf85e_data,%ax
		jne    _04358d_jump

	_04355f_jump:
		mov    _0cf8a6_data,%ax
		cmp    _0cf854_data,%ax
		jne    _043572_jump
		test   %ecx,%ecx
		jg     _04358d_jump

	_043572_jump:
		mov    _0cf8a6_data,%ax
		cmp    _0cf85e_data,%ax
		jne    _043663_jump
		test   %ecx,%ecx
		jge    _043663_jump

	_04358d_jump:
		mov    _0cd0ec_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cd0c0_data,%edx
		cmp    %edx,%eax
		jge    _043663_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _043663_jump
		testb  $0x000001,_0cfa2e_data
		je     _04360f_jump
		mov    _0e0cf0_data,%eax
		mov    _0e0ce4_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0e0cf0_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cf85c_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _0435ef_jump
		mov    %ebx,%eax

	_0435ef_jump:
		mov    _0cf852_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _043605_jump
		mov    %ebx,%eax

	_043605_jump:
		mov    %eax,_0e0cf0_data
		sar    $0x000004,%eax
		jmp    _043640_jump

	_04360f_jump:
		mov    %ecx,%eax
		mov    _0cf8a4_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cf85c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04362d_jump
		mov    %ebx,%eax

	_04362d_jump:
		mov    _0cf852_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _043640_jump
		mov    %ebx,%eax

	_043640_jump:
		mov    %ax,_0cf8a6_data
		mov    _0e0ce4_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0e0ce4_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cd0c0_data

	_043663_jump:
		call   _04368c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04368c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cd0ec_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    %eax,%ecx
		sar    $0x00001f,%edx
		mov    %eax,_0cd0b0_data
		sub    %edx,%eax
		sar    %eax
		mov    _0cd0ec_data,%esi
		add    %esi,%esi
		mov    %eax,%ebx
		mov    _0cd0c4_data,%eax
		mov    %esi,%edx
		sub    %ebx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0cd0e4_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0cd0c0_data,%edx
		sub    %eax,%edx
		mov    %edx,_0cd0dc_data
		lea    0x000002(%ebx),%edx
		mov    %dx,_0cf86e_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0cf854_data
		xor    %edx,%edx
		mov    _0cf760_data,%dx
		sub    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0cf872_data
		xor    %edx,%edx
		mov    _0cf75e_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %esi,_0cd0ac_data
		mov    %dx,_0cf85e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043730_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cd0ec_data,%edx
		mov    _095e30_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _095e34_data,%ecx
		mov    _0cd0b4_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _043768_jump
		testb  $0x000002,_0cfa2e_data
		je     _0437c3_jump
		cmp    _0e0cfc_data,%esi
		je     _0437c3_jump

	_043768_jump:
		cmpb   $0x000000,_0cfa32_data
		je     _0437c3_jump
		mov    _0cd0ec_data,%edx
		mov    _0cd0b4_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _04379c_jump
		mov    %ebx,%eax

	_04379c_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _0437a6_jump
		mov    %ebx,%eax

	_0437a6_jump:
		mov    %eax,_0cd0b4_data
		mov    $0x000001,%ah
		mov    %ah,_0cfa30_data
		mov    %ah,_0cfa31_data
		call   _04368c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0437c3_jump:
		cmpl   $0x000000,_0cd0b4_data
		je     _0437e9_jump
		cmpb   $0x000000,_0cfa32_data
		je     _0437e9_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0cfa30_data
		mov    %al,_0cfa31_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0437e9_jump:
		xor    %bh,%bh
		mov    %bh,_0cfa30_data
		mov    %bh,_0cfa31_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0437fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0cd0ec_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0cd0ec_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cd0c8_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0cfa32_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _043a46_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0cfa31_data
		mov    $0x000000,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_04388b_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%ebp
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%ecx
		mov    0x00001c(%esp),%edi
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    %esi,%ecx
		add    %ebp,%edi
		mov    0x000018(%esp),%eax
		mov    %ecx,%esi
		mov    %edi,0x000028(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%edi
		mov    %eax,0x000030(%esp)
		add    %edi,%edx
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		jmp    _043a04_jump

	_0438dc_jump:
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0e0d08_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0e0d04_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%edx
		mov    0x00000c(%esp),%edi
		add    %edx,%eax
		imul   %edi,%eax
		cmp    $0x500000,%eax
		jae    _0439d3_jump
		shr    $0x00000a,%eax
		mov    _0e0d10_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cd0b4_data,%eax
		mov    (%edx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _04397b_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_04397b_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _043998_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		lea    (%eax,%edx,1),%edi
		mov    %ebp,(%esi)
		mov    0x000030(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_043998_jump:
		cmp    _0cd0ec_data,%ebx
		ja     _0439d3_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0439be_jump
		lea    (%eax,%edx,1),%edi
		mov    0x00002c(%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_0439be_jump:
		test   %ebx,%ebx
		je     _0439d3_jump
		mov    %eax,%edi
		mov    (%ecx),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		sub    %eax,%edx
		mov    (%esp),%eax
		mov    %ebp,(%ecx)
		add    %edx,(%eax)

	_0439d3_jump:
		mov    0x000030(%esp),%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    (%esp),%edi
		add    $0x000004,%esi
		sub    $0x000004,%ecx
		inc    %ebx
		sub    $0x000004,%ebp
		add    $0x000004,%eax
		sub    $0x000004,%edx
		add    $0x000004,%edi
		mov    %ebp,0x000030(%esp)
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,(%esp)

	_043a04_jump:
		mov    _0cd0b0_data,%eax
		sub    _0cd0ec_data,%eax
		cmp    %eax,%ebx
		jb     _0438dc_jump
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0cd0ec_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		jbe    _04388b_jump

	_043a46_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043a50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _092520_data,%si
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _043ba5_jump
		mov    _0cd0ac_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0ce6b9_data,%al
		mov    _0cf8b4_data,%bx
		sub    %eax,%edx
		cmp    $0x0000ff,%bx
		jne    _043aa8_jump
		mov    _0cf866_data,%cx
		test   %cx,%cx
		je     _043b77_jump

	_043aa8_jump:
		mov    _0ce688_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _043abe_jump
		sar    %cl,%ax
		jmp    _043ac7_jump

	_043abe_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043ac7_jump:
		mov    %ax,_0cf8b4_data
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043adb_jump
		neg    %eax

	_043adb_jump:
		mov    %eax,%ebx
		mov    _0cf8b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043aeb_jump
		neg    %eax

	_043aeb_jump:
		cmp    %eax,%ebx
		jg     _043ba5_jump
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043b01_jump
		neg    %eax

	_043b01_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _043b0e_jump
		mov    %ebx,%eax

	_043b0e_jump:
		mov    _0cf8b4_data,%bx
		test   %bx,%bx
		jle    _043b36_jump
		movswl %ax,%ebx
		mov    _0cf8b2_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _043b2b_jump
		mov    %ebx,%eax

	_043b2b_jump:
		mov    %ax,_0cf8b4_data
		jmp    _043ba5_jump

	_043b36_jump:
		jge    _043b53_jump
		movswl %ax,%ebx
		mov    _0cf8b2_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _043b4b_jump
		mov    %ebx,%eax

	_043b4b_jump:
		mov    %ax,_0cf8b4_data
		jmp    _043ba5_jump

	_043b53_jump:
		mov    _092520_data,%si
		test   %dx,%dx
		jle    _043b6a_jump
		movw   $0x000001,_0cf8b4_data
		jmp    _043ba5_jump

	_043b6a_jump:
		jge    _043ba5_jump
		movw   $0x00ffff,_0cf8b4_data
		jmp    _043ba5_jump

	_043b77_jump:
		cmpb   $0x000001,_0ce6bd_data
		je     _043ba5_jump
		mov    _0ce686_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _043b9e_jump
		movw   $0x00fffc,_0cf8b4_data
		jmp    _043ba5_jump

	_043b9e_jump:
		mov    %cx,_0cf8b4_data

	_043ba5_jump:
		mov    _0cf8d0_data,%eax
		sar    $0x000010,%eax
		mov    _092520_data,%si
		cmp    $0xffffffff,%eax
		jne    _043dac_jump
		mov    _0cd0b0_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0ce6b8_data,%cl
		sub    %ecx,%eax
		mov    _0cd0b0_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0cf866_data,%cx
		mov    %eax,%edx
		test   %cx,%cx
		jg     _043c1d_jump
		mov    _0ce690_data,%di
		test   %di,%di
		jle    _043c5d_jump

	_043c1d_jump:
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_092520_data
		test   %ax,%ax
		js     _043c38_jump
		sar    %cl,%ax
		jmp    _043c41_jump

	_043c38_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043c41_jump:
		mov    _092520_data,%si
		cmp    %ax,%si
		jg     _043d14_jump
		jge    _043d15_jump
		inc    %esi
		jmp    _043d15_jump

	_043c5d_jump:
		test   %cx,%cx
		jl     _043c67_jump
		test   %di,%di
		jge    _043ca8_jump

	_043c67_jump:
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_092520_data
		test   %ax,%ax
		js     _043c82_jump
		sar    %cl,%ax
		jmp    _043c8b_jump

	_043c82_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043c8b_jump:
		mov    _092520_data,%si
		cmp    %ax,%si
		jge    _043c9d_jump
		inc    %esi
		jmp    _043d15_jump

	_043c9d_jump:
		jle    _043d15_jump
		jmp    _043d14_jump

	_043ca8_jump:
		mov    _0ce6d1_data,%cl
		test   $0x000008,%cl
		je     _043ce1_jump
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _043cc7_jump
		sar    %cl,%ax
		jmp    _043cd0_jump

	_043cc7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043cd0_jump:
		mov    _092520_data,%si
		cmp    %ax,%si
		jg     _043d14_jump
		jge    _043d15_jump
		inc    %esi
		jmp    _043d15_jump

	_043ce1_jump:
		test   $0x000008,%cl
		jne    _043d15_jump
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _043cfa_jump
		sar    %cl,%ax
		jmp    _043d03_jump

	_043cfa_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043d03_jump:
		mov    _092520_data,%si
		cmp    %ax,%si
		jge    _043d12_jump
		inc    %esi
		jmp    _043d15_jump

	_043d12_jump:
		jle    _043d15_jump

	_043d14_jump:
		dec    %esi

	_043d15_jump:
		movswl %si,%eax
		mov    %si,_092520_data
		test   %eax,%eax
		jge    _043d25_jump
		neg    %eax

	_043d25_jump:
		mov    _092520_data,%si
		cmp    $0x000004,%eax
		jle    _043d42_jump
		test   %si,%si
		jle    _043d3d_jump
		mov    $0x000004,%esi
		jmp    _043d42_jump

	_043d3d_jump:
		mov    $0xfffffffc,%esi

	_043d42_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_092520_data
		test   %ax,%ax
		js     _043d57_jump
		sar    %cl,%ax
		jmp    _043d60_jump

	_043d57_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_043d60_jump:
		mov    _0cf8b2_data,%di
		mov    _092520_data,%si
		add    %eax,%edi
		mov    _0ce686_data,%ax
		mov    %di,_0cf8b2_data
		cmp    %ax,%dx
		jle    _043d8c_jump
		cmpw   $0x000000,_0ce690_data
		jl     _043d9f_jump

	_043d8c_jump:
		cmp    _0ce686_data,%bx
		jge    _043dac_jump
		cmpw   $0x000000,_0ce690_data
		jle    _043dac_jump

	_043d9f_jump:
		mov    _0ce690_data,%ax
		add    %ax,_0cf8b2_data

	_043dac_jump:
		mov    %si,_092520_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043dbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cd0b0_data,%edi
		mov    _0cd0ac_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _0161fa_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0cf760_data,%ax
		push   %eax
		mov    _0cd0ac_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cf8a4_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0cd0b0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cf89c_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0cd130_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0cd828_data,%esi
		call   _014c19_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043e3c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cd0ec_data,%esi
		mov    %ax,0x000004(%esp)
		mov    %edx,%edi
		mov    $0x000001,%bl
		xor    %ecx,%ecx
		mov    %bl,0x000008(%esp)
		mov    _0cfa2f_data,%bh
		xor    %edx,%edx
		cmp    $0x000004,%bh
		je     _044073_jump
		cmpw   $0x000000,_0ce690_data
		jne    _043eb2_jump
		cmpw   $0x000000,_0ce692_data
		jne    _043eb2_jump
		mov    $0x0000a0,%edx
		mov    $0x000064,%ecx
		mov    _0cd0c4_data,%ebp
		mov    %ecx,_0e0cdc_data
		mov    %edx,%ecx
		sub    %ebp,%ecx
		shl    $0x000004,%ecx
		mov    %edx,_0e0ce0_data
		mov    %ecx,%eax
		mov    $0x000064,%edx
		call   _043230_func
		jmp    _043f85_jump

	_043eb2_jump:
		mov    _0ce678_data,%edx
		xor    %eax,%eax
		mov    _0cf86c_data,%ecx
		mov    _0ce6b8_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		cmp    %ecx,%edx
		jle    _043f08_jump
		mov    _0cf870_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%edx
		jge    _043f08_jump
		mov    _0ce684_data,%ecx
		sar    $0x000010,%ecx
		add    %eax,%ecx
		mov    _0cd0b0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %eax,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _0433d0_func
		test   %eax,%eax
		je     _043f1d_jump
		xor    %bl,%bl
		jmp    _043f1d_jump

	_043f08_jump:
		mov    $0x0000a0,%ecx
		sub    _0cd0c4_data,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _043230_func

	_043f1d_jump:
		mov    _0ce67c_data,%eax
		xor    %edx,%edx
		mov    _0cf852_data,%ebp
		mov    _0ce6b9_data,%dl
		sar    $0x000010,%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _043f80_jump
		mov    _0cf85c_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jge    _043f80_jump
		mov    _0ce686_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0cd0ac_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _043520_func
		test   %eax,%eax
		je     _043f95_jump
		xor    %al,%al
		mov    %al,0x000008(%esp)
		jmp    _043f95_jump

	_043f80_jump:
		mov    $0x000064,%edx

	_043f85_jump:
		sub    _0cd0c0_data,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _043300_func

	_043f95_jump:
		test   %bl,%bl
		je     _043fbf_jump
		mov    0x000002(%esp),%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _043fab_jump
		mov    %ebx,%eax

	_043fab_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _043fb8_jump
		mov    %ebx,%eax

	_043fb8_jump:
		add    %ax,_0cf89e_data

	_043fbf_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _043fe8_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _043fd4_jump
		mov    %ebx,%eax

	_043fd4_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _043fe1_jump
		mov    %ebx,%eax

	_043fe1_jump:
		add    %ax,_0cf8a6_data

	_043fe8_jump:
		mov    _0cf89e_data,%ax
		mov    _0cf86e_data,%bx
		mov    _0cd0ec_data,%esi
		cmp    %bx,%ax
		jl     _04400c_jump
		mov    _0cf872_data,%bx
		cmp    %bx,%ax
		jle    _044024_jump

	_04400c_jump:
		mov    %ebx,%eax
		mov    %bx,_0cf89e_data
		xor    %ebx,%eax
		xor    %ebx,%ebx
		mov    %ax,_092520_data
		mov    %bx,0x000004(%esp)

	_044024_jump:
		mov    _0cf8a6_data,%ax
		mov    _0cf854_data,%bx
		cmp    %bx,%ax
		jge    _044051_jump
		mov    %ebx,%eax
		mov    %bx,_0cf8a6_data
		mov    %esi,_0cd0ec_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_092522_data
		jmp    _044073_jump

	_044051_jump:
		mov    _0cf85e_data,%bx
		mov    %esi,_0cd0ec_data
		cmp    %bx,%ax
		jle    _044073_jump
		xor    %edi,%edi
		mov    %bx,_0cf8a6_data
		mov    %di,_092522_data

	_044073_jump:
		mov    $_0ce650_data,%eax
		call   _0444d4_func
		test   %di,%di
		jne    _044089_jump
		andb   $0x0000fe,_0cfa2f_data

	_044089_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cd0ec_data,%esi
		test   %bx,%bx
		jne    _04409f_jump
		andb   $0x0000fd,_0cfa2f_data

	_04409f_jump:
		test   %ecx,%ecx
		jne    _0441b0_jump
		test   %edx,%edx
		jne    _0441b0_jump
		cmpw   $0x000000,_0ce692_data
		jne    _0441b0_jump
		cmpw   $0x000000,_0ce690_data
		jne    _0441b0_jump
		testb  $0x0000fb,_0cfa2f_data
		jne    _0441b0_jump
		mov    %esi,_0cd0ec_data
		cmp    $0x000040,%esi
		jge    _0440f6_jump
		cmpb   $0x000000,_0cfa2e_data
		jne    _0440f6_jump
		mov    $0x000001,%eax
		call   _0430fc_func

	_0440f6_jump:
		mov    _0cd0ec_data,%esi
		mov    %esi,%eax
		mov    _095e30_data,%edx
		neg    %eax
		imul   %edx,%eax
		mov    _095e34_data,%ebx
		mov    _0cd0b4_data,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jae    _04412b_jump
		cmpb   $0x000000,_0cfa2e_data
		jne    _04412b_jump
		mov    $0xfffffed4,%eax
		jmp    _04415e_jump

	_04412b_jump:
		mov    _0cd0ec_data,%esi
		mov    %esi,%eax
		mov    _095e30_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _095e34_data,%ebp
		mov    _0cd0b4_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _044163_jump
		cmpb   $0x000000,_0cfa2e_data
		jne    _044163_jump
		mov    $0x00012c,%eax

	_04415e_jump:
		call   _043730_func

	_044163_jump:
		mov    _0cd0ec_data,%esi
		mov    %esi,%eax
		mov    _095e30_data,%ebx
		neg    %eax
		imul   %ebx,%eax
		mov    _095e34_data,%ecx
		mov    _0cd0b4_data,%edi
		add    %ecx,%eax
		cmp    %edi,%eax
		jne    _0441cb_jump
		cmp    $0x000040,%esi
		jne    _0441cb_jump
		cmpb   $0x000000,_0cfa2f_data
		jne    _0441cb_jump
		xor    %bl,%bl
		xor    %ebp,%ebp
		mov    %bl,_0cfa2e_data
		mov    $0x000004,%bh
		mov    %ebp,_0e0d0c_data
		mov    %bh,_0cfa2f_data
		jmp    _0441cb_jump

	_0441b0_jump:
		cmpw   $0x000000,_0ce690_data
		jne    _0441c4_jump
		cmpw   $0x000000,_0ce692_data
		je     _0441cb_jump

	_0441c4_jump:
		andb   $0x0000fb,_0cfa2f_data

	_0441cb_jump:
		mov    _0cfa2f_data,%cl
		cmp    $0x000004,%cl
		jne    _0444c4_jump
		mov    _0e0d0c_data,%eax
		inc    %eax
		mov    %eax,_0e0d0c_data
		cmp    $0x000726,%eax
		jne    _04420a_jump
		mov    _0cfa2e_data,%dh
		mov    $0x000019,%edi
		or     %cl,%dh
		mov    %edi,_0e0d00_data
		mov    %dh,_0cfa2e_data
		jmp    _044347_jump

	_04420a_jump:
		cmp    $0x000708,%eax
		jne    _04423b_jump
		orb    $0x000002,_0cfa2e_data
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0e0cfc_data
		jmp    _044347_jump

	_04423b_jump:
		mov    _0cfa2e_data,%ch
		test   %ch,%ch
		je     _044347_jump
		test   $0x000001,%ch
		jne    _044347_jump
		cmp    $0x000019,%esi
		jne    _044347_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0cd0b4_data,%ecx
		add    $0x007d96,%eax
		cmp    %ecx,%eax
		jne    _044347_jump
		mov    $0x000003,%ebx
		mov    _0cfa2e_data,%ah
		mov    %esi,%edx
		or     $0x000001,%ah
		sar    $0x00001f,%edx
		mov    %ah,_0cfa2e_data
		mov    %esi,%eax
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    %esi,_0cd0ec_data
		call   _06bf60_func
		mov    _0cd0ec_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0e0cf4_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06bf60_func
		mov    _0cd0ec_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0e0cf8_data
		mov    _0e0cf4_data,%eax
		mov    %eax,_0e0ce0_data
		mov    _0e0cf8_data,%eax
		mov    %eax,_0e0cdc_data
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e0cec_data
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e0cf0_data
		mov    _0cd0c4_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e0ce8_data
		mov    _0cd0c0_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0e0ce4_data

	_044347_jump:
		mov    _0cfa2e_data,%bl
		mov    %esi,_0cd0ec_data
		test   $0x000001,%bl
		je     _044418_jump
		call   _04314c_func
		mov    _0967d0_data,%eax
		call   _043230_func
		mov    _0967d4_data,%eax
		call   _043300_func
		mov    _0cd0c4_data,%eax
		cmp    _0e0cf4_data,%eax
		jne    _044418_jump
		mov    _0cd0c0_data,%eax
		cmp    _0e0cf8_data,%eax
		jne    _044418_jump
		mov    _0cd0ec_data,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _06bf60_func
		mov    _0cd0ec_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0e0cf4_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000003,%ecx
		call   _06bf60_func
		mov    _0cd0ec_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		mov    %eax,_0e0cf8_data
		mov    _0e0cf4_data,%eax
		mov    %eax,_0e0ce0_data
		mov    _0e0cf8_data,%eax
		mov    %eax,_0e0cdc_data

	_044418_jump:
		testb  $0x000002,_0cfa2e_data
		je     _044472_jump
		mov    _0cd0b4_data,%eax
		mov    _0e0cfc_data,%ebx
		cmp    %ebx,%eax
		jae    _044451_jump
		mov    $0x00012c,%eax
		call   _043730_func
		mov    _0cd0b4_data,%eax
		mov    _0e0cfc_data,%ebp
		cmp    %ebp,%eax
		jbe    _044472_jump
		mov    %ebp,_0cd0b4_data
		jmp    _044472_jump

	_044451_jump:
		jbe    _044472_jump
		mov    $0xfffffed4,%eax
		call   _043730_func
		mov    _0cd0b4_data,%eax
		mov    _0e0cfc_data,%edi
		cmp    %edi,%eax
		jae    _044472_jump
		mov    %edi,_0cd0b4_data

	_044472_jump:
		mov    _0cfa2e_data,%cl
		mov    _0cd0ec_data,%esi
		test   $0x000004,%cl
		je     _0444c4_jump
		mov    _0e0d00_data,%edx
		cmp    %edx,%esi
		jae    _044494_jump
		mov    $0x000001,%eax
		jmp    _04449b_jump

	_044494_jump:
		jbe    _0444c4_jump
		mov    $0xffffffff,%eax

	_04449b_jump:
		call   _0430fc_func
		mov    _0cd0ec_data,%esi
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0e0cfc_data

	_0444c4_jump:
		mov    %esi,_0cd0ec_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0444d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf89e_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0cd0c4_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0cd0e4_data,%dx
		mov    _0cf8a6_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0cd0c0_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0cd0dc_data,%dx
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044524_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0ce68e_data,%eax
		mov    %dx,_0cf8b2_data
		mov    %dx,_0cf8b4_data
		sar    $0x000010,%eax
		mov    _0ce678_data,%edx
		add    %eax,%edx
		mov    _0ce690_data,%ax
		mov    %ax,_0cf866_data
		mov    _0ce690_data,%eax
		mov    _0ce67c_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0ce678_data
		mov    %ebx,_0ce67c_data
		pop    %edx
		pop    %ebx
		ret    

_044580_switch:
		.long   _04467a_case
		.long   _04467a_case
		.long   _044658_case
		.long   _04467a_case
		.long   _04467a_case
		.long   _04467a_case
		.long   _044658_case
		.long   _04467a_case
		.long   _044672_case
		.long   _04467a_case
		.long   _044658_case
		.long   _044660_case




_0445b0_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%eax
		mov    _0e0d14_data,%ecx
		mov    0x00000c(%ecx),%edx
		movw   $0x000000,0x000002(%ecx)
		test   %ax,%ax
		jl     _0445de_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0445dc_jump
		mov    %ebx,%eax

	_0445dc_jump:
		jmp    _0445f0_jump

	_0445de_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0445ee_jump
		mov    %ebx,%eax

	_0445ee_jump:
		neg    %eax

	_0445f0_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _044604_jump
		mov    %ebx,%eax

	_044604_jump:
		mov    $0x00000c,%ebx
		cmp    %ebx,%eax
		jle    _04460f_jump
		mov    %ebx,%eax

	_04460f_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jbe    _044642_jump

	_04461a_jump:
		xor    %eax,%eax
		movw   $0x000000,0x000008(%edx)
		mov    %bl,%al
		mov    %ax,0x000006(%edx)
		mov    0x000008(%edx),%ax
		mov    %ax,0x000002(%edx)
		mov    %ax,(%edx)
		inc    %bl
		mov    %ax,0x000004(%edx)
		mov    (%ecx),%bh
		add    $0x00000a,%edx
		cmp    %bh,%bl
		jb     _04461a_jump

	_044642_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _04467a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_044580_switch(,%eax,4)

	_044658_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _044680_jump

	_044660_case:
		mov    0x000006(%ecx),%dx
		movw   $0x000140,0x000004(%ecx)
		neg    %edx
		mov    %dx,0x000006(%ecx)
		jmp    _044680_jump

	_044672_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _044680_jump

	_04467a_case:
		movw   $0x0000c8,0x000004(%ecx)

	_044680_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx

	_044685_jump:
		ret    

	_044688_case:
		mov    _0e0d14_data,%eax
		test   %eax,%eax
		je     _044685_jump
		cmpl   $0x000000,0x00000c(%eax)
		je     _04469f_jump
		add    $0x00000c,%eax
		call   _07fbcc_func

	_04469f_jump:
		cmpl   $0x000000,_0e0d14_data
		je     _044685_jump
		mov    $_0e0d14_data,%eax
		jmp    _07fbcc_func



_0446b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %al,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%ebp
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		test   %ebx,%ebx
		je     _044733_jump
		test   %ecx,%ecx
		je     _044733_jump
		mov    $0x000018,%eax
		call   _07fbb4_func
		mov    %eax,%edx
		mov    %eax,_0e0d14_data
		test   %eax,%eax
		je     _044733_jump
		mov    $0x00fa00,%ecx
		mov    _0cd130_data,%edi
		mov    %ebx,%esi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _044701_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_044701_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    _0cd130_data,%eax
		mov    (%edx),%bl
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _07fbb4_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _044733_jump
		movb   $0x000001,0x000004(%esp)

	_044733_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _04474e_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000008(%esp),%al
		sar    $0x000010,%edx
		call   _0445b0_func
		jmp    _044753_jump

	_04474e_jump:
		call   _044688_case

	_044753_jump:
		mov    0x000004(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_044760_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e0d14_data,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x00000c(%eax),%ebp
		jmp    _044855_jump

	_044780_jump:
		mov    0x000006(%ebp),%ecx
		mov    0x000004(%ebp),%esi
		mov    0x000000(%ebp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		test   %ecx,%ecx
		jle    _044849_jump
		test   %ebx,%ebx
		jl     _044849_jump
		cmp    $0x0000c8,%ebx
		jge    _044849_jump
		test   %esi,%esi
		jl     _044849_jump
		cmp    $0x0000c8,%esi
		jge    _044849_jump
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jge    _0447ce_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_0447ce_jump:
		lea    (%eax,%ecx,1),%edx
		cmp    $0x000140,%edx
		jle    _0447e0_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_0447e0_jump:
		test   %ecx,%ecx
		jle    _044849_jump
		mov    0x000002(%ebp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _0447f2_jump
		add    %edx,%ecx
		xor    %edx,%edx

	_0447f2_jump:
		lea    (%edx,%ecx,1),%edi
		cmp    $0x000140,%edi
		jle    _044804_jump
		mov    $0x000140,%ecx
		sub    %edx,%ecx

	_044804_jump:
		test   %ecx,%ecx
		jle    _044849_jump
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000010(%ebx),%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		mov    %edx,%eax
		mov    %esi,%ebx
		mov    0x000008(%esp),%edi
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000014(%edi),%edi
		mov    (%esp),%esi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _044842_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_044842_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_044849_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%ebp
		mov    %eax,0x000004(%esp)

	_044855_jump:
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    (%edx),%al
		cmp    %ebx,%eax
		jg     _044780_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_044874_switch:
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _0448e7_case
		.long   _044aa9_case
		.long   _044997_case
		.long   _044a28_case
		.long   _044cbf_case




_0448a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    _0e0d14_data,%ebp
		mov    0x000006(%ebp),%dx
		mov    0x00000c(%ebp),%esi
		test   %dx,%dx
		jl     _0448c9_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _0448cd_jump

	_0448c9_jump:
		mov    0x000002(%ebp),%bx

	_0448cd_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _044d25_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_044874_switch(,%eax,4)

	_0448e7_case:
		mov    0x000008(%ebp),%ah
		cmp    $0x000001,%ah
		je     _0448f9_jump
		cmp    $0x000002,%ah
		je     _0448f9_jump
		cmp    $0x000008,%ah
		jne    _0448fd_jump

	_0448f9_jump:
		mov    %ebx,%eax
		jmp    _0448ff_jump

	_0448fd_jump:
		xor    %eax,%eax

	_0448ff_jump:
		mov    0x000008(%ebp),%cl
		cmp    $0x000005,%cl
		je     _044911_jump
		cmp    $0x000004,%cl
		je     _044911_jump
		cmp    $0x000006,%cl
		jne    _044915_jump

	_044911_jump:
		mov    %ebx,%eax
		neg    %eax

	_044915_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000014(%esp)
		cmp    $0x000003,%dh
		je     _04492b_jump
		cmp    $0x000002,%dh
		je     _04492b_jump
		cmp    $0x000004,%dh
		jne    _04492f_jump

	_04492b_jump:
		mov    %ebx,%esi
		jmp    _044931_jump

	_04492f_jump:
		xor    %esi,%esi

	_044931_jump:
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%al
		je     _044940_jump
		cmp    $0x000008,%al
		je     _044940_jump
		cmp    $0x000006,%al
		jne    _044944_jump

	_044940_jump:
		mov    %ebx,%eax
		jmp    _044946_jump

	_044944_jump:
		xor    %eax,%eax

	_044946_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000010(%esp)
		cmp    $0x000001,%dh
		je     _044957_jump
		cmp    $0x000005,%dh
		jne    _04495b_jump

	_044957_jump:
		xor    %ebx,%ebx
		jmp    _04495d_jump

	_04495b_jump:
		neg    %ebx

	_04495d_jump:
		add    $0x000140,%ebx
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_044968_jump:
		add    $0x00000a,%eax
		mov    %si,-0x000006(%eax)
		mov    0x000010(%esp),%edx
		mov    %cx,-0x000004(%eax)
		mov    %dx,-0x00000a(%eax)
		mov    0x000014(%esp),%edx
		mov    %bx,-0x000002(%eax)
		add    %ecx,%edx
		inc    %ecx
		mov    %dx,-0x000008(%eax)
		cmp    $0x0000c8,%cx
		jge    _044d55_jump
		jmp    _044968_jump

	_044997_case:
		mov    %ebx,%eax
		mov    %ebx,0x00001c(%esp)
		xor    %ecx,%ecx
		neg    %eax
		mov    $0x000001,%ebx
		mov    %eax,0x000004(%esp)

	_0449aa_jump:
		movswl %bx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%dx
		mov    %edx,(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x00001c(%esp),%edi
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    0x000004(%esp),%edi
		movw   $0x000140,0x000008(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		add    $0x000002,%ecx
		mov    0x000008(%esi,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%edx,%esi,1)
		mov    %edi,%edx
		mov    0x00001c(%esp),%edi
		add    $0x000002,%edx
		add    $0x000002,%edi
		mov    %edx,0x000004(%esp)
		mov    %edi,0x00001c(%esp)
		cmp    $0x0000c8,%cx
		jge    _044d55_jump
		jmp    _0449aa_jump

	_044a28_case:
		mov    $0x000140,%eax
		mov    $0x000001,%edi
		xor    %ecx,%ecx
		sub    %ebx,%eax
		mov    %di,0x000034(%esp)
		mov    %eax,0x000008(%esp)

	_044a3f_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%di
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %bx,0x000004(%esi,%eax,1)
		mov    0x000008(%esp),%edi
		mov    %bx,(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000034(%esp),%edx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %dx,0x000006(%esi,%eax,1)
		mov    %edx,%eax
		add    $0x000002,%eax
		add    $0x000002,%ecx
		mov    %ax,0x000034(%esp)
		cmp    $0x0000c8,%cx
		jge    _044d55_jump
		jmp    _044a3f_jump

	_044aa9_case:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_044aae_jump:
		add    $0x00000a,%eax
		inc    %ecx
		movw   $0x000000,-0x000002(%eax)
		cmp    $0x0000c8,%cx
		jl     _044aae_jump
		movw   $0x0000c7,0x000040(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		neg    %eax
		add    $0x000140,%eax
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%eax
		neg    %eax
		mov    0x00000c(%ebp),%esi
		add    $0x0000c7,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000020(%esp)
		jmp    _044b5b_jump

	_044ae9_jump:
		imul   $0x00000a,%edx,%edx
		mov    %ecx,%eax
		add    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000044(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x00002c(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    %edi,%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    0x000020(%esp),%edx
		sub    $0x000002,%eax
		dec    %edi
		mov    %eax,0x00002c(%esp)
		dec    %edx
		mov    %di,0x000040(%esp)
		mov    %edx,0x000020(%esp)

	_044b5b_jump:
		mov    $0x000064,%edx
		movswl %bx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _044ae9_jump
		call   _044760_func
		mov    $0x0000c7,%edx
		mov    %ebx,%eax
		xor    %ecx,%ecx
		neg    %eax
		mov    %dx,0x00003c(%esp)
		mov    %eax,0x000028(%esp)

	_044b8b_jump:
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%esi,%eax,1)
		mov    0x000004(%esi,%eax,1),%dx
		mov    %edx,0x000044(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    0x000044(%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %bx,(%esi,%eax,1)
		mov    %bx,(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    0x000028(%esp),%edi
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x00003c(%esp),%edx
		inc    %ecx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %edx,%edi
		mov    %dx,0x000006(%esi,%eax,1)
		mov    0x000028(%esp),%eax
		dec    %edi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    %eax,0x000028(%esp)
		cmp    $0x000064,%cx
		jl     _044b8b_jump
		call   _044760_func
		mov    $0x0000c7,%edx
		mov    $0x0000c8,%edi
		mov    $0x000140,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ebx,%eax
		mov    %dx,0x000038(%esp)
		add    $0x000140,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000024(%esp)

	_044c28_jump:
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x000036(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000024(%esp),%edx
		mov    %edx,(%esp)
		mov    %dx,0x000004(%esi,%eax,1)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000038(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,(%edx,%esi,1)
		mov    0x000018(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x000044(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    0x000030(%esp),%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000038(%esp),%edx
		mov    0x000018(%esp),%edi
		dec    %eax
		dec    %edx
		dec    %edi
		mov    %dx,0x000038(%esp)
		mov    0x000024(%esp),%edx
		mov    %eax,0x000030(%esp)
		dec    %edx
		mov    %edi,0x000018(%esp)
		mov    %edx,0x000024(%esp)
		cmp    $0x000064,%cx
		jge    _044d55_jump
		jmp    _044c28_jump

	_044cbf_case:
		mov    $0x0000c8,%esi
		movswl %bx,%edx
		sub    %edx,%esi
		sar    %esi
		mov    %esi,%ecx
		mov    $0x000140,%esi
		sub    %edx,%esi
		mov    %esi,%edx
		sar    %edx
		mov    0x00000c(%ebp),%eax
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx

	_044ce1_jump:
		mov    %dx,0x000002(%eax)
		mov    0x00000c(%esp),%esi
		mov    %dx,0x000006(%eax)
		mov    %si,(%eax)
		mov    %si,0x000004(%eax)
		cmp    %cx,%dx
		jl     _044d12_jump
		mov    $0x0000c8,%edi
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		movswl %dx,%edi
		cmp    %edi,%esi
		jl     _044d12_jump
		mov    %bx,0x000008(%eax)
		jmp    _044d18_jump

	_044d12_jump:
		movw   $0x000000,0x000008(%eax)

	_044d18_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x0000c8,%dx
		jge    _044d55_jump
		jmp    _044ce1_jump

	_044d25_jump:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx
		jmp    _044d4b_jump

	_044d2c_jump:
		movw   $0x000000,(%eax)
		add    $0x00000a,%eax
		movw   $0x000140,-0x000002(%eax)
		mov    %cx,-0x000008(%eax)
		mov    %cx,-0x000004(%eax)
		mov    -0x00000a(%eax),%dx
		inc    %ecx
		mov    %dx,-0x000006(%eax)

	_044d4b_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dl
		cmp    %dx,%cx
		jl     _044d2c_jump

	_044d55_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _044d61_jump
		neg    %eax

	_044d61_jump:
		mov    0x000002(%ebp),%bx
		add    %eax,%ebx
		mov    0x000004(%ebp),%cx
		mov    %bx,0x000002(%ebp)
		cmp    %cx,%bx
		jbe    _044d7a_jump
		movw   $0x000000,0x000002(%ebp)

	_044d7a_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044d90_func:
		push   $0x000075
		outsb  %ds:(%esi),(%dx)
		insb   (%dx),%es:(%di)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x000075(%ebp)
		arpl   %ax,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x00006f(%ebp)
		jne    _044e1c_jump
		je     _044e11_jump
		imul   $0x000000,0x000000(%esi),%ebp
		imul   $0x006567,0x000061(%ebp),%ebp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		arpl   %sp,0x000076(%ecx)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ah,0x000061(%ebx)
		imul   $0x000000,0x000000(%ebp),%esp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)


_044de0_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %cl,0x575651c0(%ebx)
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,0x00002c(%esp)
		mov    %edx,(%esp)
		mov    $0x000064,%eax
		call   _07f8d8_func
		mov    %eax,0x000018(%esp)
		call   _01d028_func
		call   _06bb78_func
		call   _06bb94_func
		mov    $0x00046c,%eax
	_044e11_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    %eax,%db0
		mov    %db7,%eax
		or     $0x030003,%eax
	_044e1c_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    %eax,%db7
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_044e26_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _044e26_jump
		sti    
		mov    $0x00046c,%esi
		mov    (%esi),%ah

	_044e34_jump:
		mov    (%esi),%al
		cmp    %al,%ah
		je     _044e34_jump
		mov    $0x000000,%eax
		mov    %eax,%db0
		mov    %db7,%eax
		and    $0x00de00,%eax
		mov    %eax,%db7
		cmpb   $0x000001,_095e2d_data
		jne    _044e6b_jump
		mov    $0x011800,%edx
		mov    0x00002c(%esp),%eax
		call   _07f5b0_func
		mov    %eax,_0cd838_data
		jmp    _044e73_jump

	_044e6b_jump:
		xor    %edx,%edx
		mov    %edx,_0cd838_data

	_044e73_jump:
		mov    $0x0000ff,%dl
		xor    %eax,%eax

	_044e77_jump:
		inc    %eax
		mov    %dl,_0cef47_data(%eax)
		cmp    $0x00000a,%eax
		jl     _044e77_jump
		cmpw   $0x000000,_0cf8f2_data
		je     _044e9a_jump
		mov    0x000018(%esp),%edx
		mov    _0c0e40_data,%eax
		mov    %eax,(%edx)
		jmp    _044ea1_jump

	_044e9a_jump:
		mov    0x000018(%esp),%eax
		movb   $0x000000,(%eax)

	_044ea1_jump:
		mov    $_0c0e44_data,%esi
		mov    0x000018(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044eb3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044ecb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044eb3_jump

	_044ecb_jump:
		pop    %edi
		mov    $_0c0e4c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044eda_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044ef2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044eda_jump

	_044ef2_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044f03_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044f1b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044f03_jump

	_044f1b_jump:
		pop    %edi
		mov    %edi,%eax
		call   _081903_func
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _044f5d_jump
		mov    $0x0000c8,%eax
		mov    0x000018(%esp),%ebx
		call   _07f8d8_func
		push   %ebx
		push   $_0c0e54_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func
		jmp    _04566d_jump

	_044f5d_jump:
		int3   
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000034(%esp),%eax
		mov    %edi,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000038(%esp),%eax
		mov    %edi,%ecx
		call   _080af5_func
		cmpb   $0x000000,_095e2d_data
		jne    _044fa9_jump
		mov    0x000034(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x000038(%esp),%bx
		mov    %ax,%dx
		mov    0x00002c(%esp),%eax
		jmp    _044fc4_jump

	_044fa9_jump:
		cmpb   $0x000000,_0cfa1a_data
		je     _044fce_jump
		mov    0x00002c(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000038(%esp),%bx
		mov    0x000034(%esp),%dx

	_044fc4_jump:
		call   _047bb0_func
		mov    %eax,_0cd800_data

	_044fce_jump:
		mov    $0x000001,%ebx
		lea    0x000058(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $_0cfa2b_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $_0cfa28_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _080af5_func
		int3   
		mov    $0x000001,%ebp
		jmp    _045031_jump

	_045010_jump:
		lea    0x000054(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %ebp,%edx
		call   _080af5_func
		mov    0x000054(%esp),%bh
		xor    $0x000015,%bh
		inc    %edi
		mov    %bh,0x000054(%esp)
		mov    %bh,_0cef47_data(%edi)

	_045031_jump:
		xor    %eax,%eax
		mov    0x000058(%esp),%al
		cmp    %eax,%edi
		jl     _045010_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_09251c_data,%eax
		mov    %esi,%ecx
		call   _080af5_func
		mov    _09251c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		lea    0x000028(%edx),%eax
		add    $_0e0d18_data,%eax
		mov    %eax,0x000010(%esp)
		lea    0x000080(%edx),%eax
		add    $_0e0d18_data,%eax
		mov    %eax,0x00000c(%esp)
		lea    0x000044(%edx),%eax
		add    $_0e0d18_data,%eax
		mov    %eax,0x000008(%esp)
		jmp    _045517_jump

	_045093_jump:
		imul   $0x000084,0x000014(%esp),%ebp
		mov    $0x000001,%ebx
		lea    0x000048(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		mov    $_0e0d18_data,%edi
		mov    0x000048(%esp),%cl
		add    %ebp,%edi
		test   %cl,%cl
		jne    _0450de_jump
		cmpb   $0x000000,_0cfa18_data
		je     _0453ab_jump

	_0450de_jump:
		imul   $0x000084,0x000014(%esp),%edi
		mov    (%esp),%eax
		mov    _0e0d40_data(%edi),%edx
		call   _07f5b0_func
		mov    %esi,%ecx
		mov    %eax,_0e0d20_data(%edi)
		mov    %esi,%eax
		mov    $0x000001,%edx
		call   _085967_func
		mov    %eax,%ebp
		mov    _0e0d40_data(%edi),%ebx
		mov    _0e0d20_data(%edi),%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    %edi,%ebx
		mov    _0e0d40_data(%edi),%eax
		xor    %edx,%edx
		test   %eax,%eax
		jle    _045155_jump

	_04513b_jump:
		mov    _0e0d20_data(%ebx),%edi
		mov    (%edx,%edi,1),%al
		sub    %al,0x000044(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edx
		cmp    _0e0d40_data(%ebx),%edx
		jl     _04513b_jump

	_045155_jump:
		cmpb   $0x000000,0x000044(%esp)
		je     _045212_jump
		mov    %ebp,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		imul   $0x000084,0x000014(%esp),%ebp
		mov    _0e0d40_data(%ebp),%edx
		xor    %edi,%edi
		test   %edx,%edx
		jbe    _04519e_jump

	_04517f_jump:
		mov    $0x000001,%ebx
		mov    %esi,%ecx
		mov    _0e0d20_data(%ebp),%eax
		mov    %ebx,%edx
		add    %edi,%eax
		call   _080af5_func
		inc    %edi
		cmp    _0e0d40_data(%ebp),%edi
		jb     _04517f_jump

	_04519e_jump:
		mov    $0x000001,%ebx
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		imul   $0x000084,0x000014(%esp),%ebx
		mov    _0e0d40_data(%ebx),%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _0451de_jump

	_0451c4_jump:
		mov    _0e0d20_data(%ebx),%edx
		mov    (%edx,%edi,1),%al
		sub    %al,0x000044(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edi
		cmp    _0e0d40_data(%ebx),%edi
		jl     _0451c4_jump

	_0451de_jump:
		cmpb   $0x000000,0x000044(%esp)
		je     _045212_jump
		mov    $0x0000c8,%eax
		mov    0x000018(%esp),%ebx
		call   _07f8d8_func
		push   %ebx
		push   $_0c0e78_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_045212_jump:
		imul   $0x000084,0x000014(%esp),%ebp
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		xor    %edx,%edx
		mov    _0e0d5c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x00002c(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		call   _07f5b0_func
		mov    $0x00000c,%edx
		mov    _0e0d5c_data(%ebp),%bx
		mov    %eax,_0e0d18_data(%ebp)
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    0x00000c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    _0e0d98_data(%ebp),%al
		test   %al,%al
		je     _0454cf_jump
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x00000c,%edx,%edx
		xor    %edi,%edi
		mov    0x00002c(%esp),%eax
		mov    %edi,0x000028(%esp)
		call   _07f5b0_func
		mov    %eax,_0e0d1c_data(%ebp)
		jmp    _045392_jump

	_0452a0_jump:
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000008,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x00000a,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%ebp),%eax
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000004,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x00002c(%esp),%eax
		mov    0x000030(%esp),%dx
		call   _07f5b0_func
		mov    _0e0d1c_data(%ebp),%edx
		mov    %esi,%ecx
		mov    %eax,(%edx,%edi,1)
		xor    %ebx,%ebx
		mov    _0e0d1c_data(%ebp),%eax
		mov    0x000030(%esp),%bx
		mov    $0x000001,%edx
		mov    (%edi,%eax,1),%eax
		call   _080af5_func
		mov    _0e0d1c_data(%ebp),%eax
		add    %edi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _045385_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%edx
		call   _07f5b0_func
		mov    _0e0d1c_data(%ebp),%edx
		mov    %eax,0x000004(%edx,%edi,1)
		mov    %esi,%ecx
		mov    _0e0d1c_data(%ebp),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%edi,%eax,1),%bx
		mov    0x000004(%edi,%eax,1),%eax
		call   _080af5_func

	_045385_jump:
		mov    0x000028(%esp),%ecx
		int3   
		inc    %ecx
		add    $0x00000c,%edi
		mov    %ecx,0x000028(%esp)

	_045392_jump:
		xor    %eax,%eax
		mov    0x000028(%esp),%edx
		mov    _0e0d98_data(%ebp),%al
		cmp    %edx,%eax
		jle    _0454e5_jump
		jmp    _0452a0_jump

	_0453ab_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    _0e0d40_data(%ebp),%edx
		mov    %eax,_0e0d20_data(%ebp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _080d12_func
		mov    $0x000001,%ebx
		lea    0x000044(%esp),%eax
		mov    %ebx,%edx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%edi),%eax
		mov    %esi,%ecx
		call   _080af5_func
		xor    %edx,%edx
		mov    %edx,_0e0d18_data(%ebp)
		mov    _0e0d5c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _080d12_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebx,%edx
		call   _080af5_func
		cmpb   $0x000000,_0e0d98_data(%ebp)
		je     _0454cf_jump
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %ebx,_0e0d1c_data(%ebp)
		jmp    _0454be_jump

	_045439_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00003c(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000004(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %esi,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000030(%esp),%dx
		call   _080d12_func
		cmpl   $0xffffffff,0x000004(%esp)
		je     _0454bd_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000040(%esp),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _080d12_func

	_0454bd_jump:
		inc    %edi

	_0454be_jump:
		xor    %eax,%eax
		mov    _0e0d98_data(%ebp),%al
		cmp    %eax,%edi
		jge    _0454e5_jump
		jmp    _045439_jump

	_0454cf_jump:
		mov    _0e0d1c_data,%eax
		mov    %eax,_0e0d1c_data(%ebp)
		mov    _0e0d98_data,%al
		mov    %al,_0e0d98_data(%ebp)

	_0454e5_jump:
		mov    0x000010(%esp),%edi
		mov    0x00000c(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%edx
		add    $0x000084,%edi
		add    $0x000084,%ebp
		add    $0x000084,%eax
		inc    %edx
		mov    %edi,0x000010(%esp)
		mov    %ebp,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000014(%esp)

	_045517_jump:
		mov    _09251a_data,%eax
		mov    _09251c_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    0x000014(%esp),%ecx
		add    %edx,%eax
		cmp    %ecx,%eax
		jg     _045093_jump
		mov    _09251e_data,%ax
		mov    _09251c_data,%bx
		add    %eax,%ebx
		mov    %esi,%ecx
		mov    %bx,_09251c_data
		mov    $0x000001,%ebx
		mov    $_0cfa9b_data,%eax
		mov    %ebx,%edx
		call   _080af5_func
		xor    %eax,%eax
		mov    _0cfa9a_data,%al
		mov    %eax,0x00001c(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000020(%esp)
		jmp    _045623_jump

	_045576_jump:
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x00004c(%esp),%dl
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%edx
		xor    %ebp,%ebp
		call   _07f5b0_func
		mov    0x000020(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x000024(%esp)
		mov    %eax,_0cce48_data(%edx)
		jmp    _045605_jump

	_0455ae_jump:
		mov    $0x000001,%ebx
		lea    0x000050(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x000050(%esp),%dl
		mov    0x00002c(%esp),%eax
		shl    $0x000003,%edx
		call   _07f5b0_func
		mov    0x000024(%esp),%edx
		add    $0x000004,%edi
		mov    _0cce48_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x000024(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		mov    _0cce48_data(%eax),%eax
		mov    0x000050(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %ebp
		call   _080af5_func
		int3   

	_045605_jump:
		xor    %eax,%eax
		mov    0x00004c(%esp),%al
		cmp    %eax,%ebp
		jl     _0455ae_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001c(%esp),%edi
		add    $0x000004,%ecx
		inc    %edi
		mov    %ecx,0x000020(%esp)
		mov    %edi,0x00001c(%esp)

	_045623_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cfa9b_data,%al
		mov    _0cfa9a_data,%dl
		mov    0x00001c(%esp),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jg     _045576_jump
		mov    _0cfa9b_data,%ah
		add    %dl,%ah
		mov    _0cfa1a_data,%dl
		mov    %ah,_0cfa9b_data
		cmp    $0x000002,%dl
		je     _045666_jump
		mov    _0cef45_data,%eax
		sar    $0x000018,%eax
		call   _0473d0_func

	_045666_jump:
		mov    %esi,%eax
		call   _0819b7_func

	_04566d_jump:
		call   _06bc40_func
		call   _06bae0_func
		mov    0x000018(%esp),%eax
		call   _07fa70_func
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_045688_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000064(%esp)
		mov    $0x000013,%ecx
		mov    %esp,%edi
		mov    $_044d90_func,%esi
		mov    $0x000064,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _07f8d8_func
		mov    %eax,%edx
		mov    %eax,0x000068(%esp)
		call   _01d028_func
		call   _06bb78_func
		cmpw   $0x000000,_0cf8f2_data
		je     _0456d3_jump
		mov    _0c0e40_data,%eax
		mov    %eax,(%edx)
		jmp    _0456d6_jump

	_0456d3_jump:
		movb   $0x000000,(%edx)

	_0456d6_jump:
		mov    $_0c0e44_data,%esi
		mov    0x000068(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0456e8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045700_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0456e8_jump

	_045700_jump:
		pop    %edi
		mov    $_0c0e4c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04570f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045727_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04570f_jump

	_045727_jump:
		pop    %edi
		mov    _0cf88a_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %esp,%esi
		add    %edx,%eax
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04574d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045765_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04574d_jump

	_045765_jump:
		pop    %edi
		mov    $_0c0e4c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045774_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04578c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045774_jump

	_04578c_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04579d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0457b5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04579d_jump

	_0457b5_jump:
		pop    %edi
		mov    %edi,%eax
		call   _081903_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0457f1_jump
		mov    $0x0000c8,%eax
		call   _07f8d8_func
		push   %edi
		push   $_0c0e94_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func
		jmp    _04605c_jump

	_0457f1_jump:
		int3   
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000060(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000050(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce638_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce63a_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000900,%ebx
		mov    $0x000001,%edx
		mov    $_0c7f88_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $_0cfa83_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cfa83_data,%dl
		mov    %ah,_0cfa82_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%esi
		sub    %edx,%eax
		mov    $_0c7988_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ce638_data,%edx
		mov    _0ce636_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %eax,_0ce63c_data
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		mov    %ebp,%ecx
		call   _07f5b0_func
		mov    $0x000006,%edx
		mov    _0ce63c_data,%ebx
		mov    %eax,_0ce640_data
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x00007c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce634_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    _0ce634_data,%ebx
		cmp    $0xffffffff,%ebx
		jne    _045941_jump
		xor    %ecx,%ecx
		mov    %ecx,_0ce634_data
		jmp    _045973_jump

	_045941_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    $_0e0d18_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,_0ce634_data
		cmpb   $0x000000,_095e2d_data
		jne    _045973_jump
		cmpb   $0x000000,_0cfa1f_data
		je     _045973_jump
		mov    0x000064(%esp),%eax
		call   _05d144_func

	_045973_jump:
		mov    _095e2d_data,%bl
		cmp    $0x000001,%bl
		je     _045988_jump
		mov    _0cfa1f_data,%bh
		test   %bh,%bh
		jne    _04598e_jump

	_045988_jump:
		mov    0x000074(%esp),%al
		jmp    _04599a_jump

	_04598e_jump:
		test   %bl,%bl
		jne    _04599f_jump
		test   %bh,%bh
		je     _04599f_jump
		mov    0x00007c(%esp),%al

	_04599a_jump:
		mov    %al,_0cfa22_data

	_04599f_jump:
		mov    _095e2d_data,%al
		cmp    $0x000001,%al
		jne    _045cb4_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000058(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000054(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    0x000058(%esp),%edi
		test   %edi,%edi
		je     _0459f3_jump
		mov    %edi,%edx
		mov    0x000064(%esp),%eax
		shl    $0x000008,%edx
		call   _07f5b0_func
		mov    %eax,_0cd7d4_data
		jmp    _0459f9_jump

	_0459f3_jump:
		mov    %edi,_0cd7d4_data

	_0459f9_jump:
		mov    0x000054(%esp),%edx
		test   %edx,%edx
		je     _045a11_jump
		mov    0x000064(%esp),%eax
		call   _07f5b0_func
		mov    %eax,_0cd7c4_data
		jmp    _045a17_jump

	_045a11_jump:
		mov    %edx,_0cd7c4_data

	_045a17_jump:
		mov    %ebp,%eax
		mov    $0x000001,%edx
		call   _085967_func
		mov    %ebp,%ecx
		mov    0x000058(%esp),%ebx
		mov    %eax,%edi
		mov    _0cd7d4_data,%eax
		shl    $0x000008,%ebx
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		jmp    _045a6c_jump

	_045a4e_jump:
		mov    _0cd7d4_data,%esi
		mov    0x000078(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000078(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00007d,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_045a6c_jump:
		mov    0x000058(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _045a4e_jump
		cmpb   $0x000000,0x000078(%esp)
		je     _045b26_jump
		mov    %edi,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		xor    %esi,%esi
		mov    $0x000001,%edi
		jmp    _045aa9_jump

	_045a96_jump:
		mov    _0cd7d4_data,%eax
		mov    %ebp,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		add    %esi,%eax
		call   _080af5_func
		inc    %esi

	_045aa9_jump:
		mov    0x000058(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%esi
		jb     _045a96_jump
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		jmp    _045ae7_jump

	_045aca_jump:
		mov    _0cd7d4_data,%esi
		mov    0x000078(%esp),%ch
		mov    (%edx,%esi,1),%al
		sub    %al,%ch
		mov    %ch,0x000078(%esp)
		mov    (%edx,%esi,1),%al
		inc    %edx
		xor    $0x00007d,%al
		mov    %al,-0x000001(%edx,%esi,1)

	_045ae7_jump:
		mov    0x000058(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _045aca_jump
		cmpb   $0x000000,0x000078(%esp)
		je     _045b26_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%esi
		call   _07f8d8_func
		push   %esi
		push   $_0c0e78_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_045b26_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c2fa8_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    _0cd7d4_data,%edx
		xor    %eax,%eax

	_045b44_jump:
		mov    _0c2fa8_data(%eax),%edi
		add    $0x000004,%eax
		add    %edx,%edi
		mov    %edi,_0c2fa4_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _045b44_jump
		mov    %ebp,%eax
		mov    $0x000001,%edx
		call   _085967_func
		mov    %ebp,%ecx
		mov    0x000054(%esp),%ebx
		mov    %eax,%edi
		mov    _0cd7c4_data,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x000054(%esp),%eax
		xor    %edx,%edx
		test   %eax,%eax
		jbe    _045bae_jump

	_045b96_jump:
		mov    _0cd7c4_data,%esi
		mov    (%edx,%esi,1),%al
		sub    %al,0x000078(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000054(%esp),%edx
		jb     _045b96_jump

	_045bae_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _045c5c_jump
		mov    %edi,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		mov    0x000054(%esp),%ecx
		xor    %esi,%esi
		test   %ecx,%ecx
		jbe    _045bee_jump
		mov    $0x000001,%edi

	_045bd3_jump:
		mov    _0cd7c4_data,%eax
		mov    %ebp,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		add    %esi,%eax
		call   _080af5_func
		mov    0x000054(%esp),%eax
		inc    %esi
		cmp    %eax,%esi
		jb     _045bd3_jump

	_045bee_jump:
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x000054(%esp),%ebx
		xor    %edx,%edx
		test   %ebx,%ebx
		jbe    _045c28_jump

	_045c0a_jump:
		mov    _0cd7c4_data,%esi
		mov    0x000078(%esp),%cl
		mov    (%edx,%esi,1),%al
		sub    %al,%cl
		mov    %cl,0x000078(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000054(%esp),%edx
		jb     _045c0a_jump

	_045c28_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _045c5c_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%esi
		call   _07f8d8_func
		push   %esi
		push   $_0c0e78_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_045c5c_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c4268_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		xor    %eax,%eax

	_045c74_jump:
		mov    _0c4268_data(%eax),%edi
		cmp    $0xffffffff,%edi
		je     _045c90_jump
		mov    _0cd7c4_data,%edx
		lea    (%edi,%edx,1),%ebx
		mov    %ebx,_0c4268_data(%eax)
		jmp    _045c98_jump

	_045c90_jump:
		xor    %edx,%edx
		mov    %edx,_0c4268_data(%eax)

	_045c98_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		jne    _045c74_jump
		mov    0x000060(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		jmp    _045e4c_jump

	_045cb4_jump:
		test   %al,%al
		jne    _045e4c_jump
		mov    0x000050(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		mov    %ebp,%ecx
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c4268_data,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cd058_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cd054_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00005c(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    0x00005c(%esp),%edx
		mov    0x000064(%esp),%eax
		mov    $0x000001,%ebx
		call   _07f5b0_func
		mov    %eax,_0cd830_data
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _085967_func
		mov    0x00005c(%esp),%edx
		mov    %eax,%edi
		mov    _0cd830_data,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x00005c(%esp),%esi
		xor    %edx,%edx
		test   %esi,%esi
		jle    _045d8a_jump

	_045d6c_jump:
		mov    _0cd830_data,%esi
		mov    0x000078(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000078(%esp)
		xorb   $0x0000ff,(%edx,%esi,1)
		inc    %edx
		cmp    0x00005c(%esp),%edx
		jl     _045d6c_jump

	_045d8a_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _045e38_jump
		mov    %edi,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		mov    0x00005c(%esp),%edi
		xor    %esi,%esi
		test   %edi,%edi
		jle    _045dca_jump
		mov    $0x000001,%edi

	_045daf_jump:
		mov    _0cd830_data,%eax
		mov    %ebp,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		add    %esi,%eax
		call   _080af5_func
		mov    0x00005c(%esp),%eax
		inc    %esi
		cmp    %eax,%esi
		jl     _045daf_jump

	_045dca_jump:
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x00005c(%esp),%edx
		xor    %esi,%esi
		test   %edx,%edx
		jle    _045e04_jump

	_045de6_jump:
		mov    _0cd830_data,%edx
		mov    0x000078(%esp),%ch
		mov    (%edx,%esi,1),%al
		sub    %al,%ch
		mov    %ch,0x000078(%esp)
		xorb   $0x0000ff,(%edx,%esi,1)
		inc    %esi
		cmp    0x00005c(%esp),%esi
		jl     _045de6_jump

	_045e04_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _045e38_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%ecx
		call   _07f8d8_func
		push   %ecx
		push   $_0c0eb8_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_045e38_jump:
		mov    $_0c21d8_data,%edx
		mov    0x000064(%esp),%eax
		mov    _0cd830_data,%ebx
		call   _05c82c_func

	_045e4c_jump:
		int3   
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ccdf4_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    _0ccdf2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    0x000064(%esp),%eax
		shl    $0x000002,%edx
		call   _07f5b0_func
		mov    %eax,_0ccdf0_data
		mov    _0ccdf2_data,%edx
		sar    $0x000010,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _07f5b0_func
		mov    _0ccdf2_data,%edx
		mov    %eax,_0ccdf8_data
		sar    $0x000010,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _07f5b0_func
		mov    %eax,_0ccde8_data
		mov    _0ccdf2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ebx
		call   _080420_func
		mov    _0ccdf2_data,%edx
		sar    $0x000010,%edx
		xor    %edi,%edi
		add    %edx,%edx
		mov    0x000064(%esp),%eax
		inc    %edx
		mov    %ebp,%ecx
		call   _07f5b0_func
		mov    _0ccdf2_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %eax,_0cee58_data
		call   _080af5_func
		mov    $0x000084,%edx
		mov    _0ccdf2_data,%ebx
		mov    _0ccdf0_data,%eax
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		xor    %esi,%esi
		call   _080af5_func
		jmp    _046044_jump

	_045f25_jump:
		int3   
		mov    _0ccdf0_data,%eax
		movswl (%esi,%eax,1),%edx
		imul   $0x000084,%edx,%edx
		mov    _0e0d18_data(%edx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    0x000002(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0e0d1c_data(%edx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    0x000006(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0e0d20_data(%edx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    0x00000a(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		mov    _0cce48_data(,%edx,4),%edx
		mov    %ebp,%ecx
		mov    %edx,0x00000c(%esi,%eax,1)
		mov    $0x000002,%edx
		lea    0x000070(%esp),%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00006c(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    0x000070(%esp),%eax
		test   %ax,%ax
		je     _045fe4_jump
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000064(%esp),%eax
		call   _07f5b0_func
		mov    _0ccdf0_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x000070(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%esi,%eax,1),%eax
		call   _080af5_func
		jmp    _045ff1_jump

	_045fe4_jump:
		mov    _0ccdf0_data,%eax
		movl   $0x000000,0x000010(%esi,%eax,1)

	_045ff1_jump:
		cmpw   $0x000000,0x00006c(%esp)
		je     _046030_jump
		xor    %edx,%edx
		mov    0x00006c(%esp),%dx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _07f5b0_func
		mov    _0ccdf0_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000014(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x00006c(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%esi,%eax,1),%eax
		call   _080af5_func
		jmp    _04603d_jump

	_046030_jump:
		mov    _0ccdf0_data,%eax
		movl   $0x000000,0x000014(%esi,%eax,1)

	_04603d_jump:
		add    $0x000084,%esi
		inc    %edi

	_046044_jump:
		mov    _0ccdf2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _045f25_jump
		int3   
		mov    %ebp,%eax
		call   _0819b7_func

	_04605c_jump:
		mov    0x000068(%esp),%eax
		call   _07fa70_func
		call   _06bae0_func
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_046078_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000018(%esp)
		mov    $0x000064,%eax
		mov    $_0c0e44_data,%esi
		call   _07f8d8_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		movb   $0x000000,(%eax)
		mov    %ebx,%edi
		call   _01d028_func
		call   _06bb78_func
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0c0e4c_data,%esi
		mov    %ebx,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0460bb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0460d3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0460bb_jump

	_0460d3_jump:
		pop    %edi
		mov    $_0c0ee4_data,%esi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0460e7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0460ff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0460e7_jump

	_0460ff_jump:
		pop    %edi
		mov    %ebx,%eax
		call   _081903_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _04613d_jump
		mov    $0x0000c8,%eax
		call   _07f8d8_func
		push   %ebx
		push   $_0c0ef0_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func
		jmp    _0464a2_jump

	_04613d_jump:
		mov    _09251a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		mov    $0x000001,%ebx
		shl    $0x000005,%edi
		mov    %eax,0x000008(%esp)
		add    %eax,%edi
		mov    $_0e0d18_data,%eax
		shl    $0x000002,%edi
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000028,%eax
		call   _080af5_func
		mov    0x000018(%esp),%eax
		mov    _0e0d40_data(%edi),%edx
		call   _07f5b0_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0e0d40_data(%edi),%ebx
		mov    %eax,_0e0d20_data(%edi)
		call   _080af5_func
		mov    %edi,%esi
		mov    _0e0d40_data(%edi),%edx
		xor    %eax,%eax
		test   %edx,%edx
		jle    _0461b6_jump

	_0461a3_jump:
		mov    _0e0d20_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0e0d40_data(%esi),%eax
		jl     _0461a3_jump

	_0461b6_jump:
		mov    $_0e0d18_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _080af5_func
		xor    %edx,%edx
		mov    _0e0d5c_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		call   _07f5b0_func
		mov    $0x00000c,%edx
		mov    _0e0d5c_data(%esi),%bx
		mov    %eax,_0e0d18_data(%esi)
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    _0e0d98_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000018(%esp),%eax
		call   _07f5b0_func
		mov    %eax,_0e0d1c_data(%esi)
		mov    0x000008(%esp),%eax
		mov    %eax,%edi
		xor    %ecx,%ecx
		shl    $0x000005,%edi
		mov    %ecx,0x00000c(%esp)
		add    %eax,%edi
		xor    %esi,%esi
		shl    $0x000002,%edi
		jmp    _046356_jump

	_046264_jump:
		int3   
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%dx
		call   _07f5b0_func
		mov    _0e0d1c_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0e0d1c_data(%edi),%eax
		mov    0x00001c(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _080af5_func
		mov    _0e0d1c_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _04634a_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		call   _07f5b0_func
		mov    _0e0d1c_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0e0d1c_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _080af5_func

	_04634a_jump:
		mov    0x00000c(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x00000c(%esp)

	_046356_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%edx
		mov    _0e0d98_data(%edi),%al
		cmp    %edx,%eax
		jg     _046264_jump
		mov    $0x000001,%ebx
		mov    $_0cfa9b_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %ebx,%ebx
		mov    %ebx,0x000010(%esp)
		mov    %ebx,0x000014(%esp)
		jmp    _046439_jump

	_04638c_jump:
		mov    $0x000001,%ebx
		lea    0x000024(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x000024(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _07f5b0_func
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000004(%esp)
		mov    %eax,_0cce48_data(%edx)
		jmp    _04641b_jump

	_0463c4_jump:
		int3   
		mov    $0x000001,%ebx
		lea    0x000020(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		call   _07f5b0_func
		mov    0x000004(%esp),%edx
		add    $0x000004,%esi
		mov    _0cce48_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000004(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cce48_data(%eax),%eax
		mov    0x000020(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _080af5_func

	_04641b_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		cmp    %eax,%edi
		jl     _0463c4_jump
		mov    0x000014(%esp),%esi
		mov    0x000010(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000010(%esp)

	_046439_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ecx
		mov    _0cfa9b_data,%al
		cmp    %ecx,%eax
		jg     _04638c_jump
		mov    _09251a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0e0d18_data,%esi
		shl    $0x000005,%eax
		mov    $0x000084,%ecx
		add    %edx,%eax
		mov    $_0ce784_data,%edi
		shl    $0x000002,%eax
		mov    _0cce48_data,%edx
		add    %eax,%esi
		mov    %edx,_0e0d24_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _09251c_data,%dx
		inc    %edx
		mov    %ebp,%eax
		mov    %dx,_09251c_data
		call   _0819b7_func

	_0464a2_jump:
		mov    (%esp),%eax
		call   _07fa70_func
		call   _06bae0_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0464bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		call   _01d028_func
		mov    $0x000064,%eax
		call   _07f8d8_func
		mov    _0cd848_data,%edx
		mov    %eax,%ebx
		mov    %eax,0x00000c(%esp)
		mov    $_0cd860_data,%eax
		call   _07f7d0_func
		mov    $_0cd84c_data,%eax
		mov    _0cd844_data,%edx
		call   _07f7d0_func
		mov    $_0cd880_data,%eax
		mov    _0cd89c_data,%edx
		call   _07f7d0_func
		mov    $_0cd874_data,%eax
		mov    _0cd898_data,%edx
		call   _07f7d0_func
		cmpw   $0x000000,_0cf8f2_data
		je     _04652d_jump
		mov    _0c0e40_data,%eax
		mov    %eax,(%ebx)
		jmp    _046530_jump

	_04652d_jump:
		movb   $0x000000,(%ebx)

	_046530_jump:
		mov    $_0c0e44_data,%esi
		mov    0x00000c(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046542_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04655a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046542_jump

	_04655a_jump:
		pop    %edi
		mov    $_0c0e4c_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046569_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046581_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046569_jump

	_046581_jump:
		pop    %edi
		mov    $_0c0f18_data,%esi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046595_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0465ad_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046595_jump

	_0465ad_jump:
		pop    %edi
		mov    %edi,%eax
		call   _081903_func
		mov    %eax,%ecx
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0465eb_jump
		mov    $0x0000c8,%eax
		call   _07f8d8_func
		push   %edi
		push   $_0c0f24_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func
		jmp    _046d31_jump

	_0465eb_jump:
		call   _06bb78_func
		mov    $0x000001,%ebx
		mov    $_0cfa9b_data,%eax
		mov    %ebx,%edx
		call   _080af5_func
		mov    _0cfa9b_data,%al
		xor    %edx,%edx
		mov    %al,_0cfa9a_data
		mov    %edx,(%esp)
		jmp    _0466ae_jump

	_046615_jump:
		mov    $0x000001,%ebx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    $_0cd874_data,%eax
		shl    $0x000002,%edx
		call   _07f5b0_func
		mov    (%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0cce48_data(,%edx,4)
		jmp    _0466a1_jump

	_04664a_jump:
		int3   
		mov    $0x000001,%ebx
		lea    0x000018(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %edx,%edx
		mov    0x000018(%esp),%dl
		mov    $_0cd874_data,%eax
		shl    $0x000003,%edx
		call   _07f5b0_func
		mov    (%esp),%edx
		mov    _0cce48_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    (%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cce48_data(,%eax,4),%eax
		mov    0x000018(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _080af5_func

	_0466a1_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		cmp    %eax,%edi
		jl     _04664a_jump
		incl   (%esp)

	_0466ae_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    _0cfa9b_data,%al
		cmp    %ecx,%eax
		jg     _046615_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_09251c_data,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%esi
		call   _080af5_func
		mov    _09251c_data,%ax
		mov    %esi,(%esp)
		mov    %ax,_09251e_data
		jmp    _046ae4_jump

	_0466ef_jump:
		imul   $0x000084,%edx,%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0d18_data,%eax
		mov    $0x000004,%edx
		add    $0x00000c,%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    _0e0d24_data(%eax),%esi
		cmp    $0xffffffff,%esi
		jne    _04672a_jump
		xor    %edi,%edi
		mov    %edi,_0e0d24_data(%eax)
		jmp    _046737_jump

	_04672a_jump:
		mov    _0cce48_data(,%esi,4),%edx
		mov    %edx,_0e0d24_data(%eax)

	_046737_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cd05c_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cd070_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0d18_data,%eax
		mov    $0x000004,%edx
		add    $0x000028,%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%edx
		mov    $_0cd860_data,%eax
		mov    _0e0d40_data(%edx),%edx
		call   _07f5b0_func
		imul   $0x000084,(%esp),%edx
		mov    %eax,_0e0d20_data(%edx)
		mov    %ebp,%eax
		call   _085967_func
		mov    (%esp),%esi
		mov    %eax,%edi
		imul   $0x000084,%esi,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%edx
		mov    _0e0d40_data(%eax),%ebx
		mov    _0e0d20_data(%eax),%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %ecx,%ecx
		jmp    _046805_jump

	_0467e7_jump:
		mov    _0e0d20_data(%eax),%esi
		mov    0x000014(%esp),%dl
		mov    (%ecx,%esi,1),%al
		sub    %al,%dl
		mov    %dl,0x000014(%esp)
		mov    (%ecx,%esi,1),%dh
		inc    %ecx
		xor    $0x00008f,%dh
		mov    %dh,-0x000001(%ecx,%esi,1)

	_046805_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0e0d40_data(%eax),%ecx
		jl     _0467e7_jump
		cmpb   $0x000000,0x000014(%esp)
		je     _0468cc_jump
		mov    %edi,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _080d12_func
		xor    %esi,%esi
		mov    $0x000001,%edi
		jmp    _046847_jump

	_046833_jump:
		mov    %ebp,%ecx
		mov    %edi,%ebx
		mov    _0e0d20_data(%eax),%eax
		mov    %edi,%edx
		add    %esi,%eax
		call   _080af5_func
		inc    %esi

	_046847_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0e0d40_data(%eax),%esi
		jb     _046833_jump
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		xor    %ecx,%ecx
		jmp    _046889_jump

	_04686c_jump:
		mov    _0e0d20_data(%eax),%esi
		mov    0x000014(%esp),%bh
		mov    (%ecx,%esi,1),%al
		sub    %al,%bh
		mov    %bh,0x000014(%esp)
		mov    (%ecx,%esi,1),%al
		inc    %ecx
		xor    $0x00008f,%al
		mov    %al,-0x000001(%ecx,%esi,1)

	_046889_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0e0d40_data(%eax),%ecx
		jl     _04686c_jump
		cmpb   $0x000000,0x000014(%esp)
		je     _0468cc_jump
		mov    $0x0000c8,%eax
		mov    0x00000c(%esp),%edi
		call   _07f8d8_func
		push   %edi
		push   $_0c0e78_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_0468cc_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cd068_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0d18_data,%eax
		mov    $0x000002,%edx
		add    $0x000044,%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0e0d5c_data(%eax),%dx
		imul   $0x00000c,%edx,%edx
		mov    $_0cd874_data,%eax
		call   _07f5b0_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0e0d5c_data(%eax),%bx
		mov    %edx,_0e0d18_data(%eax)
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0e0d18_data,%eax
		mov    %ebx,%edx
		add    $0x000080,%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		cmpb   $0x000000,_0e0d98_data(%eax)
		je     _046ad9_jump
		xor    %edx,%edx
		mov    _0e0d98_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0cd874_data,%eax
		call   _07f5b0_func
		imul   $0x000084,(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0e0d1c_data(%edx)
		jmp    _046ac1_jump

	_0469a5_jump:
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0e0d1c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000004,%edx
		mov    _0e0d1c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000010(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		xor    %edx,%edx
		mov    $_0cd874_data,%eax
		mov    0x000010(%esp),%dx
		call   _07f5b0_func
		imul   $0x000084,(%esp),%edx
		mov    _0e0d1c_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0e0d1c_data(%eax),%eax
		mov    0x000010(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _080af5_func
		imul   $0x000084,(%esp),%eax
		mov    _0e0d1c_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _046abd_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0cd874_data,%eax
		shl    $0x000002,%edx
		call   _07f5b0_func
		imul   $0x000084,(%esp),%edx
		mov    _0e0d1c_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    _0e0d1c_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _080af5_func

	_046abd_jump:
		add    $0x00000c,%esi
		inc    %edi

	_046ac1_jump:
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0e0d98_data(%eax),%dl
		cmp    %edx,%edi
		jge    _046ae1_jump
		jmp    _0469a5_jump

	_046ad9_jump:
		xor    %edx,%edx
		mov    %edx,_0e0d1c_data(%eax)

	_046ae1_jump:
		incl   (%esp)

	_046ae4_jump:
		mov    _09251a_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _0466ef_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cd06c_data,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0e0d18_data,%esi
		shl    $0x000005,%eax
		mov    $_0ce650_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0d18_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce6e0_data
		mov    _0e0d20_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce6e4_data
		mov    _0e0d5c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce6e8_data
		mov    %esp,%eax
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0d18_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cedc8_data
		mov    _0e0d20_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0cedcc_data
		mov    _0e0d5c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0cedd0_data
		mov    %esp,%eax
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0d18_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce808_data
		mov    _0e0d20_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce810_data
		mov    _0e0d5c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce84c_data
		mov    %esp,%eax
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0e0d18_data(,%eax,4),%edi
		mov    _0e0d1c_data(,%eax,4),%ecx
		mov    _0e0d20_data(,%eax,4),%edx
		mov    _0e0d5c_data(,%eax,4),%bx
		mov    %edx,0x000004(%esp)
		mov    _0e0d98_data(,%eax,4),%dl
		mov    _0e0d24_data(,%eax,4),%eax
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax

	_046c6f_jump:
		add    $0x000084,%eax
		mov    %edi,_0cd848_data(%eax)
		mov    %ecx,_0cd84c_data(%eax)
		mov    %bx,_0cd88c_data(%eax)
		mov    0x000004(%esp),%esi
		mov    %dl,_0cd8c8_data(%eax)
		mov    %esi,_0cd850_data(%eax)
		mov    0x000008(%esp),%esi
		mov    %esi,_0cd854_data(%eax)
		cmp    $0x000c60,%eax
		jne    _046c6f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0e0d18_data,%esi
		shl    $0x000005,%eax
		mov    $_0ced44_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $_0e0d18_data,%esi
		add    %edx,%eax
		mov    $_0ce6ec_data,%edi
		shl    $0x000002,%eax
		mov    $0x000084,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _0819b7_func

	_046d31_jump:
		mov    $0x0004b0,%edx
		mov    $_0cd874_data,%eax
		call   _07f5b0_func
		mov    %eax,_0cd7bc_data
		mov    $_0cd860_data,%eax
		call   _07fb48_func
		mov    0x00000c(%esp),%eax
		call   _07fa70_func
		call   _06bae0_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046d68_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000bc,%esp
		mov    %eax,0x000098(%esp)
		mov    %edx,0x00009c(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000080(%esp)
		call   _01d028_func
		mov    $0x000064,%eax
		call   _07f8d8_func
		mov    _0cf8f2_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _046db4_jump
		mov    _0c0e40_data,%edx
		mov    %edx,(%eax)
		jmp    _046db7_jump

	_046db4_jump:
		movb   $0x000000,(%eax)

	_046db7_jump:
		mov    $_0c0f4c_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_046dd1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046de9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _046dd1_jump

	_046de9_jump:
		pop    %edi
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _081903_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _046e1f_jump
		jmp    _046e24_jump

	_046dfb_jump:
		mov    $_0c0e50_data,%edx
		mov    0x000084(%esp),%eax
		call   _081903_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x000001,%eax
		inc    %ebx
		call   _0859a9_func
		test   %edx,%edx
		jne    _046e24_jump

	_046e1f_jump:
		cmp    $0x00000a,%ebx
		jb     _046dfb_jump

	_046e24_jump:
		test   %esi,%esi
		jne    _046e58_jump
		mov    $0x0000c8,%eax
		mov    0x000084(%esp),%ebx
		call   _07f8d8_func
		push   %ebx
		push   $_0c0f58_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_046e58_jump:
		mov    0x00009c(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000b8(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x0000a4(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _080d12_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _080af5_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_046eb0_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000b8(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000b8(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _046eb0_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000080(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000080(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000ac(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    (%ebx),%ax
		imul   %eax,%edx
		mov    %esi,%ecx
		mov    0x000098(%esp),%eax
		mov    0x0000a4(%esp),%ebx
		call   _07f5b0_func
		mov    %eax,%edi
		mov    0x0000a4(%esp),%eax
		mov    $0x000001,%edx
		call   _07f8d8_func
		mov    %eax,0x000090(%esp)
		mov    %eax,0x00008c(%esp)
		call   _080af5_func
		mov    0x00009c(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x0000a4(%esp),%edx
		sub    %eax,%ebx
		mov    0x000090(%esp),%eax
		lea    (%eax,%edx,1),%ecx
		shl    $0x000002,%ebx
		cmp    %eax,%ecx
		jbe    _046f98_jump

	_046f7d_jump:
		mov    (%eax),%dl
		sub    %dl,0x0000b8(%esp)
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %dh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _046f7d_jump

	_046f98_jump:
		cmpb   $0x000000,0x0000b8(%esp)
		je     _04716b_jump
		mov    _092165_data(%ebx),%al
		mov    _09215c_data(%ebx),%edx
		mov    %al,0x0000b4(%esp)
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esp,%edi
		call   _080d12_func
		lea    0x004000(%edi),%eax
		mov    %eax,0x0000a0(%esp)

	_046fd1_jump:
		mov    $0x000001,%ebx
		mov    %esi,%ecx
		mov    %edi,%eax
		mov    %ebx,%edx
		call   _080af5_func
		add    $0x000080,%edi
		cmp    0x0000a0(%esp),%edi
		jne    _046fd1_jump
		mov    0x00009c(%esp),%edx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		xor    %eax,%eax
		shl    $0x000002,%ebx

	_047005_jump:
		mov    0x0000b4(%esp),%ch
		sub    (%esp,%eax,1),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%esp,%eax,1),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000b4(%esp)
		mov    %dh,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _047005_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000080(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000080(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000ac(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    (%ebx),%ax
		imul   %eax,%edx
		xor    %ecx,%ecx
		mov    0x000098(%esp),%eax
		mov    %ecx,0x000088(%esp)
		call   _07f5b0_func
		mov    %eax,%edi
		mov    0x0000a4(%esp),%eax
		mov    0x0000a4(%esp),%edx
		call   _07f8d8_func
		mov    %eax,0x00008c(%esp)
		test   %edx,%edx
		jbe    _0470e7_jump
		mov    %eax,0x0000a8(%esp)

	_0470a9_jump:
		mov    $0x000001,%ebx
		mov    0x0000a8(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x0000a8(%esp),%ebx
		mov    0x000088(%esp),%ecx
		mov    0x0000a4(%esp),%edx
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x0000a8(%esp)
		mov    %ecx,0x000088(%esp)
		cmp    %edx,%ecx
		jb     _0470a9_jump

	_0470e7_jump:
		mov    0x0000a4(%esp),%ebx
		test   %ebx,%ebx
		jbe    _047129_jump
		mov    0x00009c(%esp),%eax
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    0x00008c(%esp),%eax
		shl    $0x000002,%ecx
		add    %eax,%ebx

	_04710e_jump:
		mov    (%eax),%dl
		sub    %dl,0x0000b4(%esp)
		mov    _092164_data(%ecx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %dh,-0x000001(%eax)
		cmp    %ebx,%eax
		jb     _04710e_jump

	_047129_jump:
		cmpb   $0x000000,0x0000b4(%esp)
		je     _04716b_jump
		mov    $0x0000c8,%eax
		mov    0x00009c(%esp),%ecx
		call   _07f8d8_func
		push   %ecx
		mov    %eax,%edx
		mov    0x000088(%esp),%eax
		push   %eax
		push   $_0c0f74_data
		push   %edx
		call   _08044b_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_04716b_jump:
		mov    %esi,%eax
		call   _0819b7_func
		test   %edi,%edi
		je     _04725c_jump
		cmpl   $0x000000,0x00008c(%esp)
		je     _04725c_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		mov    %ecx,0x000094(%esp)
		jmp    _04723a_jump

	_047198_jump:
		xor    %eax,%eax

	_04719a_jump:
		mov    0x000094(%esp),%edx
		mov    0x00008c(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000b0(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000094(%esp)
		cmp    $0x0000c0,%dl
		jne    _04720f_jump
		mov    0x0000b0(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x000094(%esp)
		add    0x00008c(%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x0000b0(%esp)

	_0471ef_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _047227_jump
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000b0(%esp),%cl
		inc    %eax
		mov    %cl,(%edi,%ebx,1)
		jmp    _0471ef_jump

	_04720f_jump:
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%edx
		add    %ebx,%edx
		mov    0x0000b0(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)

	_047227_jump:
		xor    %edx,%edx
		mov    0x0000ac(%esp),%dx
		cmp    %edx,%eax
		jb     _04719a_jump
		inc    %esi

	_04723a_jump:
		mov    0x000080(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _047198_jump
		mov    0x00008c(%esp),%eax
		call   _07fa70_func
		jmp    _047266_jump

	_04725c_jump:
		mov    $_0c0f98_data,%eax
		call   _01f988_func

	_047266_jump:
		mov    0x000084(%esp),%eax
		call   _07fa70_func
		mov    %edi,%eax
		add    $0x0000bc,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_047280_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,(%esp)
		mov    %edx,0x000004(%esp)
		call   _01d028_func
		mov    $0x000064,%eax
		call   _07f8d8_func
		mov    _0cf8f2_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _0472b6_jump
		mov    _0c0e40_data,%edx
		mov    %edx,(%eax)
		jmp    _0472b9_jump

	_0472b6_jump:
		movb   $0x000000,(%eax)

	_0472b9_jump:
		mov    $_0c0f4c_data,%esi
		mov    %ebp,%edi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0472ce_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0472e6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0472ce_jump

	_0472e6_jump:
		pop    %edi
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _081903_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _047317_jump
		jmp    _04731c_jump

	_0472f8_jump:
		mov    $_0c0e50_data,%edx
		mov    %ebp,%eax
		call   _081903_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x000001,%eax
		inc    %ebx
		call   _0859a9_func
		test   %edx,%edx
		jne    _04731c_jump

	_047317_jump:
		cmp    $0x00000a,%ebx
		jl     _0472f8_jump

	_04731c_jump:
		test   %esi,%esi
		jne    _047349_jump
		mov    $0x0000c8,%eax
		call   _07f8d8_func
		push   %ebp
		push   $_0c0fc4_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_047349_jump:
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		shl    $0x000002,%edi
		mov    _09215c_data(%edi),%eax
		add    _092160_data(%edi),%eax
		lea    -0x000300(%eax),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _080d12_func
		mov    $0x000001,%ebx
		mov    $0x000300,%edx
		mov    0x000004(%esp),%eax
		call   _080af5_func
		mov    %esi,%eax
		mov    0x000004(%esp),%ebx
		call   _0819b7_func
		mov    %edi,%ecx
		lea    0x000300(%ebx),%esi

	_04739b_jump:
		mov    _092164_data(%ecx),%dl
		mov    (%ebx),%ah
		xor    %dl,%ah
		xor    %edx,%edx
		mov    %ah,%dl
		mov    %ah,(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %esi,%ebx
		jne    _04739b_jump
		mov    %ebp,%eax
		call   _07fa70_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0473d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000c8,%esp
		mov    %eax,0x000090(%esp)
		cmpb   $0x000000,_0cfa1a_data
		je     _047ba1_jump
		call   _01d028_func
		mov    $0x000064,%eax
		xor    %dl,%dl
		call   _07f8d8_func
		mov    %dl,0x0000bc(%esp)
		mov    _0cf8f2_data,%dx
		mov    %eax,0x00009c(%esp)
		test   %dx,%dx
		je     _047425_jump
		mov    _0c0e40_data,%edx
		mov    %edx,(%eax)
		jmp    _047428_jump

	_047425_jump:
		movb   $0x000000,(%eax)

	_047428_jump:
		mov    $_0c0f4c_data,%esi
		mov    0x00009c(%esp),%edi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_047442_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04745a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047442_jump

	_04745a_jump:
		pop    %edi
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _081903_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _047490_jump
		jmp    _047495_jump

	_04746c_jump:
		mov    $_0c0e50_data,%edx
		mov    0x00009c(%esp),%eax
		call   _081903_func
		mov    %eax,%edx
		mov    %eax,%ebp
		mov    $0x000001,%eax
		inc    %ebx
		call   _0859a9_func
		test   %edx,%edx
		jne    _047495_jump

	_047490_jump:
		cmp    $0x00000a,%ebx
		jl     _04746c_jump

	_047495_jump:
		test   %ebp,%ebp
		jne    _0474c9_jump
		mov    $0x0000c8,%eax
		mov    0x00009c(%esp),%ebx
		call   _07f8d8_func
		push   %ebx
		push   $_0c0fe4_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_0474c9_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		shl    $0x000002,%esi
		mov    _092165_data(%esi),%al
		mov    %al,0x0000c4(%esp)
		mov    _092160_data(%esi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%esi),%edx
		mov    %eax,0x0000ac(%esp)
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _080d12_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _080af5_func
		mov    %esi,%ebx
		xor    %eax,%eax

	_047521_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000c4(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000c4(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _047521_jump
		mov    0x000008(%esp),%edi
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%ecx
		mov    0x000004(%esp),%ebx
		sub    %ecx,%eax
		sub    %ebx,%edi
		inc    %eax
		mov    _0cfa1a_data,%ch
		mov    %eax,0x0000b8(%esp)
		mov    0x000042(%esp),%eax
		inc    %edi
		mov    %eax,0x0000b4(%esp)
		cmp    $0x000002,%ch
		jne    _0475b4_jump
		mov    0x0000ac(%esp),%ecx
		mov    _0cd130_data,%eax
		mov    _0cd138_data,%esi
		mov    %eax,0x0000a4(%esp)
		cmp    $0x01f400,%ecx
		jle    _0475cd_jump
		movl   $0x01f400,0x0000ac(%esp)
		movb   $0x000001,0x0000bc(%esp)
		jmp    _0475cd_jump

	_0475b4_jump:
		mov    0x0000ac(%esp),%eax
		call   _07f8d8_func
		mov    _0cd800_data,%esi
		mov    %eax,0x0000a4(%esp)

	_0475cd_jump:
		mov    0x0000ac(%esp),%ebx
		mov    $0x000001,%edx
		mov    0x0000a4(%esp),%eax
		mov    %ebp,%ecx
		call   _080af5_func
		mov    0x000090(%esp),%eax
		mov    0x0000ac(%esp),%ebx
		lea    0x000000(,%eax,4),%ecx
		xor    %edx,%edx
		sub    %eax,%ecx
		mov    0x0000a4(%esp),%eax
		shl    $0x000002,%ecx
		test   %ebx,%ebx
		jle    _047630_jump

	_04760e_jump:
		mov    (%eax),%bl
		sub    %bl,0x0000c4(%esp)
		mov    _092164_data(%ecx),%bl
		mov    (%eax),%bh
		xor    %bl,%bh
		inc    %edx
		mov    %bh,(%eax)
		mov    0x0000ac(%esp),%ebx
		inc    %eax
		cmp    %ebx,%edx
		jl     _04760e_jump

	_047630_jump:
		cmpb   $0x000000,0x0000bc(%esp)
		jne    _047833_jump
		cmpb   $0x000000,0x0000c4(%esp)
		je     _047833_jump
		mov    %ebp,%eax
		mov    _09215c_data(%ecx),%edx
		xor    %ebx,%ebx
		mov    %esp,%esi
		call   _080d12_func
		lea    0x004000(%esi),%edi

	_047663_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		mov    %esi,%eax
		mov    %ebx,%edx
		add    $0x000080,%esi
		call   _080af5_func
		cmp    %edi,%esi
		jne    _047663_jump
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		xor    %eax,%eax
		shl    $0x000002,%ebx

	_047692_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000c4(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000c4(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _047692_jump
		mov    0x000008(%esp),%edi
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    0x000004(%esp),%esi
		sub    %edx,%eax
		mov    _0cfa1a_data,%ch
		inc    %eax
		sub    %esi,%edi
		mov    %eax,0x0000b8(%esp)
		mov    0x000042(%esp),%eax
		inc    %edi
		mov    %eax,0x0000b4(%esp)
		cmp    $0x000002,%ch
		jne    _047725_jump
		mov    0x0000ac(%esp),%ecx
		mov    _0cd130_data,%eax
		mov    _0cd138_data,%esi
		mov    %eax,0x0000a4(%esp)
		cmp    $0x01f400,%ecx
		jle    _04773e_jump
		movl   $0x01f400,0x0000ac(%esp)
		movb   $0x000001,0x0000bc(%esp)
		jmp    _04773e_jump

	_047725_jump:
		mov    0x0000ac(%esp),%eax
		call   _07f8d8_func
		mov    _0cd800_data,%esi
		mov    %eax,0x0000a4(%esp)

	_04773e_jump:
		xor    %edx,%edx
		mov    0x0000ac(%esp),%ebx
		mov    %edx,0x0000a0(%esp)
		test   %ebx,%ebx
		jle    _04779e_jump
		mov    0x0000a4(%esp),%eax
		mov    %eax,0x000084(%esp)

	_047760_jump:
		mov    $0x000001,%ebx
		mov    0x000084(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x000084(%esp),%ecx
		mov    0x0000a0(%esp),%eax
		mov    0x0000ac(%esp),%edx
		inc    %ecx
		inc    %eax
		mov    %ecx,0x000084(%esp)
		mov    %eax,0x0000a0(%esp)
		cmp    %edx,%eax
		jl     _047760_jump

	_04779e_jump:
		mov    0x0000ac(%esp),%ebx
		xor    %edx,%edx
		test   %ebx,%ebx
		jle    _0477e7_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    0x0000a4(%esp),%eax
		shl    $0x000002,%ecx

	_0477c5_jump:
		mov    (%eax),%bl
		sub    %bl,0x0000c4(%esp)
		mov    _092164_data(%ecx),%bl
		mov    (%eax),%bh
		xor    %bl,%bh
		inc    %edx
		mov    %bh,(%eax)
		mov    0x0000ac(%esp),%ebx
		inc    %eax
		cmp    %ebx,%edx
		jl     _0477c5_jump

	_0477e7_jump:
		cmpb   $0x000000,0x0000bc(%esp)
		jne    _047833_jump
		cmpb   $0x000000,0x0000c4(%esp)
		je     _047833_jump
		mov    $0x0000c8,%eax
		mov    0x000090(%esp),%ecx
		call   _07f8d8_func
		push   %ecx
		mov    %eax,%edx
		mov    0x0000a0(%esp),%eax
		push   %eax
		push   $_0c1008_data
		push   %edx
		call   _08044b_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_047833_jump:
		mov    %ebp,%eax
		call   _0819b7_func
		mov    0x00009c(%esp),%eax
		call   _07fa70_func
		test   %esi,%esi
		je     _047b53_jump
		cmpl   $0x000000,0x0000a4(%esp)
		je     _047b53_jump
		cmpb   $0x000002,_0cfa1a_data
		je     _047872_jump
		cmpb   $0x000001,_0cfa20_data
		jne    _0479e9_jump

	_047872_jump:
		xor    %ebp,%ebp
		mov    0x0000b8(%esp),%ebx
		mov    %ebp,0x000080(%esp)
		mov    %ebp,0x0000a8(%esp)
		cmp    $0x0000c8,%bx
		jbe    _0478bf_jump
		xor    %eax,%eax
		mov    $0x0000c8,%ecx
		mov    %bx,%ax
		mov    0x0000bc(%esp),%dl
		sub    $0x0000c8,%eax
		mov    %ecx,0x0000b8(%esp)
		mov    %eax,0x000080(%esp)
		test   %dl,%dl
		je     _0478bf_jump
		mov    %ebp,0x000080(%esp)

	_0478bf_jump:
		cmp    $0x000140,%di
		jbe    _0478cb_jump
		mov    $0x000140,%edi

	_0478cb_jump:
		xor    %ebx,%ebx
		mov    %ebx,0x0000b0(%esp)
		jmp    _0479a9_jump

	_0478d9_jump:
		mov    0x000080(%esp),%ecx
		mov    %ebx,%edx
		xor    %eax,%eax
		sub    %ecx,%edx

	_0478e6_jump:
		mov    0x0000a8(%esp),%ebx
		mov    0x0000a4(%esp),%ecx
		lea    0x000001(%ebx),%ebp
		add    %ecx,%ebx
		mov    (%ebx),%bl
		mov    %bl,0x0000c0(%esp)
		and    $0x0000c0,%bl
		mov    %ebp,0x0000a8(%esp)
		cmp    $0x0000c0,%bl
		jne    _04796b_jump
		mov    0x0000c0(%esp),%bl
		and    $0x00003f,%bl
		mov    %ebp,%ecx
		inc    %ebp
		mov    %ebp,0x0000a8(%esp)
		add    0x0000a4(%esp),%ecx
		mov    (%ecx),%cl
		and    $0x0000ff,%ebx
		mov    %cl,0x0000c0(%esp)

	_04793b_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _047990_jump
		xor    %ecx,%ecx
		mov    %di,%cx
		cmp    %ecx,%eax
		jge    _047968_jump
		test   %edx,%edx
		jl     _047968_jump
		cmp    $0x0000c8,%edx
		jge    _047968_jump
		imul   %edx,%ecx
		add    %eax,%ecx
		lea    (%esi,%ecx,1),%ebp
		mov    0x0000c0(%esp),%cl
		mov    %cl,0x000000(%ebp)

	_047968_jump:
		inc    %eax
		jmp    _04793b_jump

	_04796b_jump:
		xor    %ebx,%ebx
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _04798f_jump
		test   %edx,%edx
		jl     _04798f_jump
		cmp    $0x0000c8,%edx
		jge    _04798f_jump
		imul   %edx,%ebx
		add    %eax,%ebx
		mov    0x0000c0(%esp),%cl
		mov    %cl,(%esi,%ebx,1)

	_04798f_jump:
		inc    %eax

	_047990_jump:
		xor    %ebx,%ebx
		mov    0x0000b4(%esp),%bx
		cmp    %ebx,%eax
		jl     _0478e6_jump
		incl   0x0000b0(%esp)

	_0479a9_jump:
		xor    %eax,%eax
		mov    0x000080(%esp),%edx
		mov    0x0000b8(%esp),%ax
		mov    0x0000b0(%esp),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jg     _0478d9_jump
		cmpb   $0x000002,_0cfa1a_data
		je     _047b5d_jump
		mov    0x0000a4(%esp),%eax
		call   _07fa70_func
		jmp    _047b5d_jump

	_0479e9_jump:
		xor    %ebx,%ebx
		mov    %ebx,0x000088(%esp)
		mov    %ebx,0x000098(%esp)
		jmp    _047b2c_jump

	_0479fe_jump:
		xor    %eax,%eax

	_047a00_jump:
		mov    0x000088(%esp),%edx
		mov    0x0000a4(%esp),%ebx
		lea    0x000001(%edx),%ebp
		add    %ebx,%edx
		mov    (%edx),%dl
		mov    %dl,%dh
		and    $0x0000c0,%dh
		mov    %ebp,0x000088(%esp)
		cmp    $0x0000c0,%dh
		jne    _047ac3_jump
		and    $0x00003f,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %ebp,%edx
		lea    0x000001(%ebp),%ecx
		add    0x0000a4(%esp),%edx
		mov    %ecx,0x000088(%esp)
		mov    (%edx),%dl

	_047a46_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _047b13_jump
		lea    0x000001(%eax),%ecx
		mov    %ecx,0x00008c(%esp)
		cmpb   $0x000000,_095e2d_data
		jne    _047a9a_jump
		xor    %ecx,%ecx
		mov    %di,%cx
		lea    (%ecx,%ecx,1),%ebp
		imul   0x000098(%esp),%ebp
		mov    %ebp,0x000094(%esp)
		add    %eax,%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		mov    0x000094(%esp),%ebp
		add    %ecx,%ebp
		mov    %eax,%ecx
		add    %ebp,%ecx
		mov    0x00008c(%esp),%eax
		mov    %dl,(%ecx,%esi,1)
		jmp    _047a46_jump

	_047a9a_jump:
		xor    %ecx,%ecx
		mov    0x000098(%esp),%ebp
		mov    %di,%cx
		imul   %ebp,%ecx
		mov    %eax,0x000094(%esp)
		add    0x000094(%esp),%ecx
		mov    0x00008c(%esp),%eax
		mov    %dl,(%ecx,%esi,1)
		jmp    _047a46_jump

	_047ac3_jump:
		mov    _095e2d_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _047afb_jump
		xor    %ebx,%ebx
		mov    %di,%bx
		mov    0x000098(%esp),%ebp
		mov    %ebx,0x000094(%esp)
		add    %ebx,%ebx
		imul   %ebp,%ebx
		lea    (%ebx,%eax,1),%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		add    0x000094(%esp),%ebx
		mov    %eax,%ebp
		jmp    _047b0c_jump

	_047afb_jump:
		xor    %ebx,%ebx
		mov    0x000098(%esp),%ebp
		mov    %di,%bx
		imul   %ebx,%ebp
		mov    %eax,%ebx

	_047b0c_jump:
		add    %ebp,%ebx
		mov    %ecx,%eax
		mov    %dl,(%esi,%ebx,1)

	_047b13_jump:
		xor    %edx,%edx
		mov    0x0000b4(%esp),%dx
		cmp    %edx,%eax
		jl     _047a00_jump
		incl   0x000098(%esp)

	_047b2c_jump:
		xor    %eax,%eax
		mov    0x000098(%esp),%ecx
		mov    0x0000b8(%esp),%ax
		cmp    %ecx,%eax
		jg     _0479fe_jump
		mov    0x0000a4(%esp),%eax
		call   _07fa70_func
		jmp    _047b5d_jump

	_047b53_jump:
		mov    $_0c102c_data,%eax
		call   _01f988_func

	_047b5d_jump:
		cmpb   $0x000000,_095e2d_data
		jne    _047b88_jump
		mov    _0cd824_data,%eax
		add    %edi,%edi
		mov    %eax,_0cd800_data
		mov    0x0000b8(%esp),%eax
		mov    %di,_0cf7de_data
		mov    %ax,_0cf7e4_data
		jmp    _047ba1_jump

	_047b88_jump:
		mov    _0cd800_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000b8(%esp),%bx
		mov    %di,%dx
		call   _047c10_func

	_047ba1_jump:
		add    $0x0000c8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047bb0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		cmpb   $0x000002,_0cfa1a_data
		jne    _047bce_jump
		mov    _0cd138_data,%esi
		mov    _0cd130_data,%edx
		jmp    _047c02_jump

	_047bce_jump:
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		mov    %ecx,%eax
		call   _07f5b0_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edx,%edi
		mov    %eax,%esi
		lea    0x000000(,%ebx,8),%edx
		mov    %ecx,%eax
		add    %edi,%edx
		call   _07f5b0_func
		mov    %eax,%edx

	_047c02_jump:
		mov    %edx,_0cd824_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_047c10_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0cf7de_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0cd7f4_data
		imul   %edx,%eax
		mov    %bx,_0cf7e4_data
		mov    %esi,0x000004(%esp)
		mov    _0cd824_data,%esi
		mov    %eax,_0cd808_data
		test   %esi,%esi
		jne    _047c5e_jump
		mov    $_0c1050_data,%eax
		call   _01f988_func

	_047c5e_jump:
		xor    %edi,%edi
		jmp    _047d0b_jump

	_047c65_jump:
		mov    _0cd7f4_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _047d0a_jump

	_047c75_jump:
		mov    %eax,%edx
		mov    _0cd808_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x00000c(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,0x000010(%esp)
		add    %edx,%ebx
		mov    _0cd7f4_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x000008(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0cd7f4_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _047cfb_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ebp
		shl    $0x000002,%edx
		mov    0x000008(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    (%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)

	_047cfb_jump:
		mov    _0cd7f4_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jb     _047c75_jump

	_047d0a_jump:
		inc    %edi

	_047d0b_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jb     _047c65_jump
		mov    _0cd7f4_data,%eax
		mov    _0cd808_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0cd7f4_data
		mov    %edx,_0cd808_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_047d3c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		call   _01d028_func
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		mov    %edi,%eax
		call   _046d68_func
		mov    $_0c7988_data,%edx
		mov    $0x000300,%ecx
		mov    $_0c7088_data,%edi
		mov    %eax,_0cd804_data
		mov    %esi,%eax
		mov    $_0c7988_data,%esi
		call   _047280_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		mov    %eax,_0cd7ec_data
		mov    %eax,_0cd7fc_data
		xor    %eax,%eax
		mov    _0cd7fc_data,%esi
		mov    (%esp),%ax
		imul   %eax,%esi
		mov    _0cd7fc_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0cf7e2_data
		mov    %edx,_0cd7fc_data
		mov    _0cd804_data,%eax
		mov    %esi,_0cd7f8_data
		mov    %eax,_0cd828_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047dd8_func:
		push   %ebx
		push   %ecx
		cmpb   $0x00002c,(%eax)
		je     _047dfd_jump

	_047ddf_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _047dfd_jump
		lea    0x000001(%eax),%ebx
		cmp    $0x000020,%cl
		jb     _047df6_jump
		inc    %edx
		mov    %ebx,%eax
		mov    %cl,-0x000001(%edx)
		jmp    _047df8_jump

	_047df6_jump:
		mov    %ebx,%eax

	_047df8_jump:
		cmpb   $0x00002c,(%eax)
		jne    _047ddf_jump

	_047dfd_jump:
		cmpb   $0x00002a,(%eax)
		jne    _047e07_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_047e07_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_047e10_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebx
		mov    %edx,0x000008(%esp)
		call   _01d028_func
		mov    $0x000064,%eax
		mov    $_0c0e50_data,%edx
		mov    $_0c1080_data,%esi
		call   _07f8d8_func
		mov    %eax,%edi
		mov    %eax,%ebp
		mov    %eax,0x000004(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _081903_func
		mov    %eax,0x000010(%esp)
		test   %eax,%eax
		jne    _047e77_jump
		mov    $0x0000c8,%eax
		call   _07f8d8_func
		push   %ebp
		push   $_0c1088_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_047e77_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0924e9_data(,%eax,4),%dl
		mov    _0924e4_data(,%eax,4),%eax
		mov    %dl,0x000018(%esp)
		mov    %eax,0x000014(%esp)
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07f5b0_func
		mov    %eax,%edx
		mov    %eax,%edi
		mov    $0x000190,%eax
		call   _07f8d8_func
		mov    %eax,0x00000c(%esp)
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _047ec0_jump
		test   %eax,%eax
		jne    _047eca_jump

	_047ec0_jump:
		mov    $_0c109c_data,%eax
		call   _01f988_func

	_047eca_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%esi
		mov    0x000010(%esp),%eax
		sub    %edx,%esi
		mov    0x000010(%esp),%ecx
		shl    $0x000002,%esi
		xor    %ebx,%ebx
		mov    _0924e0_data(%esi),%edx
		mov    0x000014(%esp),%ebp
		call   _080d12_func
		mov    0x000014(%esp),%ebx
		mov    $0x000001,%edx
		mov    %edi,%eax
		add    %edi,%ebp
		call   _080af5_func
		mov    %edi,%eax
		cmp    %ebp,%edi
		jae    _047f29_jump

	_047f0b_jump:
		mov    (%eax),%dl
		mov    0x000018(%esp),%dh
		sub    %dl,%dh
		mov    (%eax),%bl
		mov    %dh,0x000018(%esp)
		mov    _0924e8_data(%esi),%dl
		inc    %eax
		xor    %dl,%bl
		mov    %bl,-0x000001(%eax)
		cmp    %ebp,%eax
		jb     _047f0b_jump

	_047f29_jump:
		cmpb   $0x000000,0x000018(%esp)
		je     _047fe6_jump
		mov    _0924e9_data(%esi),%al
		mov    _0924e0_data(%esi),%edx
		xor    %ebx,%ebx
		mov    %al,0x00001c(%esp)
		mov    0x000010(%esp),%eax
		call   _080d12_func
		mov    0x000014(%esp),%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jbe    _047f77_jump
		mov    %edi,%esi

	_047f5b_jump:
		mov    0x000010(%esp),%ecx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		inc    %ebp
		call   _080af5_func
		mov    0x000014(%esp),%ebx
		inc    %esi
		cmp    %ebx,%ebp
		jb     _047f5b_jump

	_047f77_jump:
		mov    0x000014(%esp),%ecx
		test   %ecx,%ecx
		jbe    _047fb2_jump
		mov    0x000008(%esp),%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		lea    (%ecx,%edi,1),%ebp
		shl    $0x000002,%esi
		mov    %edi,%eax

	_047f94_jump:
		mov    0x00001c(%esp),%cl
		mov    (%eax),%dl
		sub    %dl,%cl
		mov    %cl,0x00001c(%esp)
		mov    _0924e8_data(%esi),%dl
		mov    (%eax),%ch
		inc    %eax
		xor    %dl,%ch
		mov    %ch,-0x000001(%eax)
		cmp    %ebp,%eax
		jb     _047f94_jump

	_047fb2_jump:
		cmpb   $0x000000,0x00001c(%esp)
		je     _047fe6_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%esi
		call   _07f8d8_func
		push   %esi
		push   $_0c0e78_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_047fe6_jump:
		mov    0x000010(%esp),%eax
		call   _0819b7_func
		mov    %edi,%ebp
		xor    %esi,%esi
		xor    %ebx,%ebx

	_047ff5_jump:
		mov    0x00000c(%esp),%edx
		mov    %edi,%eax
		call   _047dd8_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _04801b_jump
		xor    %edx,%edx
		mov    %si,%dx
		inc    %esi
		mov    %ebp,_0c2b48_data(,%edx,4)
		lea    0x000002(%eax),%ebp
		mov    %bl,-0x000001(%eax)
		jmp    _047ff5_jump

	_04801b_jump:
		mov    (%esp),%eax
		call   _07fa70_func
		mov    0x000004(%esp),%eax
		call   _07fa70_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_048038_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000b0,%esp
		mov    %eax,%ebp
		mov    %edx,0x000090(%esp)
		mov    %ebx,0x00009c(%esp)
		mov    %ecx,0x000098(%esp)
		call   _01d028_func
		mov    $0x000064,%eax
		call   _07f8d8_func
		mov    _0cf8f2_data,%dx
		mov    %eax,0x00008c(%esp)
		test   %dx,%dx
		je     _048084_jump
		mov    _0c0e40_data,%edx
		mov    %edx,(%eax)
		jmp    _048087_jump

	_048084_jump:
		movb   $0x000000,(%eax)

	_048087_jump:
		mov    $_0c0f4c_data,%esi
		mov    0x00008c(%esp),%edi
		mov    $_0c0e50_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0480a1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0480b9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0480a1_jump

	_0480b9_jump:
		pop    %edi
		mov    %edi,%eax
		call   _081903_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _0480f7_jump
		mov    $0x0000c8,%eax
		mov    0x00008c(%esp),%ebx
		call   _07f8d8_func
		push   %ebx
		push   $_0c1088_data
		push   %eax
		mov    %eax,%edx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_0480f7_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		shl    $0x000002,%esi
		mov    _092165_data(%esi),%al
		mov    %al,0x0000ac(%esp)
		mov    _092160_data(%esi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%esi),%edx
		mov    %eax,0x000084(%esp)
		mov    %edi,%eax
		mov    %edi,%ecx
		call   _080d12_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _080af5_func
		mov    %esi,%ebx
		xor    %eax,%eax

	_04814f_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000ac(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000ac(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _04814f_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		mov    0x00009c(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000098(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000084(%esp),%ebx
		mov    0x000042(%esp),%eax
		mov    %edi,%ecx
		mov    %eax,0x0000a0(%esp)
		mov    0x000084(%esp),%eax
		mov    $0x000001,%edx
		call   _07f8d8_func
		mov    %eax,%esi
		mov    %eax,0x000094(%esp)
		call   _080af5_func
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x000084(%esp),%ecx
		sub    %eax,%ebx
		add    %esi,%ecx
		shl    $0x000002,%ebx
		mov    %esi,%eax
		cmp    %ecx,%esi
		jae    _04820f_jump

	_0481f4_jump:
		mov    (%eax),%dl
		sub    %dl,0x0000ac(%esp)
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %dh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _0481f4_jump

	_04820f_jump:
		cmpb   $0x000000,0x0000ac(%esp)
		je     _0483ae_jump
		mov    _092165_data(%ebx),%al
		mov    _09215c_data(%ebx),%edx
		mov    %al,0x0000a8(%esp)
		xor    %ebx,%ebx
		mov    %edi,%eax
		mov    %esp,%esi
		call   _080d12_func
		lea    0x004000(%esi),%eax
		mov    %eax,0x000080(%esp)

	_048248_jump:
		mov    $0x000001,%ebx
		mov    %edi,%ecx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _080af5_func
		add    $0x000080,%esi
		cmp    0x000080(%esp),%esi
		jne    _048248_jump
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		xor    %eax,%eax
		shl    $0x000002,%ebx

	_04827c_jump:
		mov    0x0000a8(%esp),%ch
		sub    (%esp,%eax,1),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%esp,%eax,1),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a8(%esp)
		mov    %dh,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _04827c_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		mov    0x00009c(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000098(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		xor    %esi,%esi
		mov    0x000042(%esp),%eax
		mov    %esi,0x000088(%esp)
		mov    %eax,0x0000a0(%esp)
		mov    0x000084(%esp),%eax
		mov    0x000084(%esp),%edx
		call   _07f8d8_func
		mov    %eax,0x000094(%esp)
		test   %edx,%edx
		jbe    _048329_jump
		mov    %eax,%esi

	_0482fe_jump:
		mov    $0x000001,%ebx
		mov    %edi,%ecx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _080af5_func
		mov    0x000088(%esp),%ebx
		inc    %esi
		inc    %ebx
		mov    0x000084(%esp),%ecx
		mov    %ebx,0x000088(%esp)
		cmp    %ecx,%ebx
		jb     _0482fe_jump

	_048329_jump:
		mov    0x000084(%esp),%esi
		test   %esi,%esi
		jbe    _04836c_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    0x000094(%esp),%eax
		shl    $0x000002,%ebx
		lea    (%eax,%esi,1),%ecx

	_048351_jump:
		mov    (%eax),%dl
		sub    %dl,0x0000a8(%esp)
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %dh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _048351_jump

	_04836c_jump:
		cmpb   $0x000000,0x0000a8(%esp)
		je     _0483ae_jump
		mov    $0x0000c8,%eax
		call   _07f8d8_func
		mov    %eax,%edx
		mov    0x000090(%esp),%eax
		push   %eax
		mov    0x000090(%esp),%ebx
		push   %ebx
		push   $_0c10bc_data
		push   %edx
		call   _08044b_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f988_func
		mov    %edx,%eax
		call   _07fa70_func

	_0483ae_jump:
		mov    %edi,%eax
		call   _0819b7_func
		test   %ebp,%ebp
		je     _048493_jump
		cmpl   $0x000000,0x000094(%esp)
		je     _048493_jump
		xor    %edi,%edi
		xor    %esi,%esi
		jmp    _048471_jump

	_0483d4_jump:
		xor    %eax,%eax

	_0483d6_jump:
		mov    0x000094(%esp),%ebx
		mov    %edi,%edx
		add    %ebx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a4(%esp)
		and    $0x0000c0,%dl
		inc    %edi
		cmp    $0x0000c0,%dl
		jne    _04843e_jump
		mov    0x0000a4(%esp),%dl
		and    $0x00003f,%dl
		mov    0x000094(%esp),%ecx
		mov    %edi,%ebx
		add    %ecx,%ebx
		and    $0x0000ff,%edx
		mov    (%ebx),%bl
		inc    %edi
		mov    %bl,0x0000a4(%esp)

	_048418_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _04845e_jump
		mov    0x00009c(%esp),%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000a4(%esp),%cl
		inc    %eax
		mov    %cl,(%ebx,%ebp,1)
		jmp    _048418_jump

	_04843e_jump:
		mov    0x00009c(%esp),%ebx
		xor    %edx,%edx
		mov    (%ebx),%dx
		mov    %edx,%ebx
		imul   %esi,%ebx
		mov    %eax,%edx
		add    %ebx,%edx
		mov    0x0000a4(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%ebp,1)

	_04845e_jump:
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dx
		cmp    %edx,%eax
		jb     _0483d6_jump
		inc    %esi

	_048471_jump:
		mov    0x000098(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _0483d4_jump
		mov    0x000094(%esp),%eax
		call   _07fa70_func
		jmp    _04849d_jump

	_048493_jump:
		mov    $_0c10e0_data,%eax
		call   _01f988_func

	_04849d_jump:
		mov    0x00008c(%esp),%eax
		call   _07fa70_func
		mov    %ebp,%eax
		add    $0x0000b0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0484c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0cf81b_data
		je     _048534_jump
		mov    _0cd0a4_data,%eax
		mov    %eax,_0cd078_data
		mov    _0cd0a0_data,%eax
		mov    %eax,_0cd074_data
		mov    _0cd09c_data,%eax
		mov    %eax,_0cd080_data
		mov    _0cd098_data,%eax
		mov    %eax,_0cd07c_data
		mov    _0cd088_data,%eax
		mov    %eax,_0cd0a4_data
		mov    _0cd084_data,%eax
		mov    %eax,_0cd0a0_data
		mov    _0cd064_data,%eax
		mov    _0cd0a4_data,%ecx
		mov    %eax,_0cd09c_data
		mov    _0cd060_data,%eax
		mov    _0cd0a0_data,%edx
		mov    %eax,_0cd098_data
		mov    %eax,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func

	_048534_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048538_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0cf81b_data
		je     _0485a6_jump
		mov    $0x000023,%ebx
		mov    _0cf830_data,%dx
		mov    $0x00004d,%eax
		test   %dx,%dx
		je     _04856d_jump
		mov    $0x000055,%eax
		xor    %ecx,%ecx
		mov    $0x000041,%ebx
		mov    %cx,_0cf830_data

	_04856d_jump:
		push   $0x000000
		movswl %bx,%ecx
		xor    %edx,%edx
		push   $0x0000ff
		movswl %ax,%ebx
		mov    $0x00000d,%eax
		call   _01a1c4_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _01a1c4_func

	_0485a6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0485ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cd07c_data,%edi
		mov    _0cd078_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0cf7c4_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %ebp,%esi
		jge    _0485db_jump
		mov    %ebp,%esi

	_0485db_jump:
		cmp    _0cd074_data,%esi
		jle    _0485e9_jump
		mov    _0cd074_data,%esi

	_0485e9_jump:
		cmp    _0cd080_data,%edx
		jge    _0485f7_jump
		mov    _0cd080_data,%edx

	_0485f7_jump:
		cmp    %edi,%edx
		jle    _0485fd_jump
		mov    %edi,%edx

	_0485fd_jump:
		cmp    _0cd074_data,%ecx
		jle    _04860b_jump
		mov    _0cd074_data,%ecx

	_04860b_jump:
		cmp    %ebp,%ecx
		jge    _048611_jump
		mov    %ebp,%ecx

	_048611_jump:
		cmp    %edi,%ebx
		jle    _048617_jump
		mov    %edi,%ebx

	_048617_jump:
		cmp    _0cd080_data,%ebx
		jge    _048625_jump
		mov    _0cd080_data,%ebx

	_048625_jump:
		mov    %ebp,_0cd078_data
		mov    %edi,_0cd07c_data
		mov    %esi,_0cd088_data
		mov    %ecx,_0cd084_data
		mov    %ebx,_0cd060_data
		mov    %edx,_0cd064_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_048650_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000005,%ecx
		xor    %ebx,%ebx
		mov    $0x00000f,%esi
		mov    %bx,_0cf7dc_data
		mov    _0cd0a4_data,%ebx
		xor    %edi,%edi
		mov    %ebx,_0cd078_data
		mov    _0cd0a0_data,%ebx
		mov    %cx,_0cf7cc_data
		mov    %ebx,_0cd074_data
		mov    _0cd09c_data,%ebx
		mov    %si,_0cf7b2_data
		mov    %ebx,_0cd080_data
		mov    _0cd098_data,%ebx
		mov    %di,_0cf7c6_data
		mov    %ebx,_0cd07c_data
		call   _0485ac_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0486b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0cf7c4_data,%ecx
		mov    _0cf7b0_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0cd080_data,%edi
		jge    _0486fa_jump
		mov    _0cd080_data,%edi
		mov    %edi,0x000008(%esp)

	_0486fa_jump:
		mov    _0cd07c_data,%edi
		cmp    %edi,%edx
		jl     _048706_jump
		mov    %edi,%edx

	_048706_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0cd07c_data,%eax
		cmp    %eax,%ecx
		jl     _04871e_jump
		mov    %eax,%ecx

	_04871e_jump:
		mov    _0cd080_data,%ebx
		cmp    %ebx,%edx
		jge    _04872a_jump
		mov    %ebx,%edx

	_04872a_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _0487c3_jump
		mov    %ebp,%eax
		mov    _0cd078_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _04877f_jump
		cmp    _0cd074_data,%eax
		jge    _04877f_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _048776_jump
		rep stos %al,%es:(%edi)

	_048776_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04877f_jump
		rep stos %eax,%es:(%edi)

	_04877f_jump:
		mov    _0cd078_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _0487c3_jump
		cmp    _0cd074_data,%eax
		jge    _0487c3_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _0487ba_jump
		rep stos %al,%es:(%edi)

	_0487ba_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _0487c3_jump
		rep stos %eax,%es:(%edi)

	_0487c3_jump:
		cmpl   $0x000000,(%esp)
		jle    _04884d_jump
		mov    %ebp,%eax
		mov    _0cd078_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _04880d_jump
		cmp    _0cd074_data,%eax
		jge    _04880d_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _048804_jump
		rep stos %al,%es:(%edi)

	_048804_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04880d_jump
		rep stos %eax,%es:(%edi)

	_04880d_jump:
		mov    _0cd078_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _04884d_jump
		cmp    _0cd074_data,%esi
		jge    _04884d_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _048844_jump
		rep stos %al,%es:(%edi)

	_048844_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04884d_jump
		rep stos %eax,%es:(%edi)

	_04884d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_048858_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _048887_jump

	_048871_jump:
		mov    0x000004(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _0486b8_func

	_048887_jump:
		mov    _0cf7b0_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _048871_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _04890a_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x000008(%esp)
		mov    %eax,0x00000c(%esp)

	_0488b2_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _0486b8_func
		mov    0x000004(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _0486b8_func
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000008(%esp)
		cmp    %edx,%esi
		jg     _048906_jump
		mov    0x00000c(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)

	_048906_jump:
		cmp    %esi,%edi
		jle    _0488b2_jump

	_04890a_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_048914_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0cf81b_data
		je     _0489d1_jump
		mov    _0cf7a6_data,%edx
		mov    _0cf7c6_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _048941_jump
		neg    %eax

	_048941_jump:
		mov    _0cf7ac_data,%edx
		mov    %eax,%ebx
		mov    _0cf7c8_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04895e_jump
		neg    %eax

	_04895e_jump:
		cmp    %ebx,%eax
		jge    _048964_jump
		mov    %ebx,%eax

	_048964_jump:
		mov    _0cf7c4_data,%ebx
		add    $0x000006,%eax
		mov    _0cf7c6_data,%edx
		mov    %ax,_0cf7b2_data
		mov    _0cf7ca_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0cf7ae_data
		mov    _0cf7c8_data,%ax
		sar    $0x000010,%edx
		mov    %ax,_0cf7a8_data
		mov    _0cf7c8_data,%eax
		sub    $0x000004,%ebx
		sar    $0x000010,%eax
		call   _048858_func
		mov    _0cd078_data,%eax
		mov    %eax,_0cd0a4_data
		mov    _0cd074_data,%eax
		mov    %eax,_0cd0a0_data
		mov    _0cd080_data,%eax
		mov    %eax,_0cd09c_data
		mov    _0cd07c_data,%eax
		mov    %eax,_0cd098_data

	_0489d1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0489d8_func:
		testb  $0x000004,_0cf81b_data
		je     _048a09_jump
		mov    _0cd078_data,%eax
		mov    %eax,_0cd0a4_data
		mov    _0cd074_data,%eax
		mov    %eax,_0cd0a0_data
		mov    _0cd080_data,%eax
		mov    %eax,_0cd09c_data
		mov    _0cd07c_data,%eax
		mov    %eax,_0cd098_data

	_048a09_jump:
		ret    



_048a0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce678_data,%cx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce6c4_data,%al
		mov    _0ce6b8_data,%dl
		mov    %eax,%esi
		add    %edx,%ecx
		mov    _0ce67c_data,%dx
		mov    _0cf89e_data,%ax
		add    %edx,%esi
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0cf7ca_data
		sub    _0cf8a6_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cf7c8_data
		mov    _0cf7ca_data,%ax
		mov    %bx,_0cf7d2_data
		mov    %ax,_0cf7ae_data
		mov    _0cf7c8_data,%ax
		mov    %bx,_0cf7d6_data
		mov    %ax,_0cf7a8_data
		xor    %al,%al

	_048a83_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		mov    %cx,_0c2fa0_data(,%edx,2)
		mov    %si,_0c2f98_data(,%edx,2)
		cmp    $0x000004,%al
		jb     _048a83_jump
		mov    _095e2d_data,%ah
		mov    %cx,_0cf7d0_data
		xor    %ebx,%ebx
		mov    %si,_0cf7ce_data
		mov    %bx,_0cf7d4_data
		test   %ah,%ah
		jne    _048ad4_jump
		mov    _0cf7c6_data,%edx
		mov    _0cf7c8_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _048650_func

	_048ad4_jump:
		mov    _0cf7d0_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048ae0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpw   $0x000003,_0cf868_data
		je     _048d90_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _048b08_jump
		cmpb   $0x000009,_0ce6bc_data
		je     _048b0f_jump

	_048b08_jump:
		mov    $0x000001,%eax
		jmp    _048b11_jump

	_048b0f_jump:
		xor    %eax,%eax

	_048b11_jump:
		test   %eax,%eax
		je     _048d90_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _048b32_jump
		mov    _0ce6bc_data,%bl
		cmp    $0x000016,%bl
		je     _048b39_jump
		cmp    $0x000020,%bl
		je     _048b39_jump

	_048b32_jump:
		mov    $0x000001,%eax
		jmp    _048b3b_jump

	_048b39_jump:
		xor    %eax,%eax

	_048b3b_jump:
		test   %eax,%eax
		je     _048d90_jump
		cmpw   $0x000036,_0cf7c6_data
		jge    _048ba2_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _048ba2_jump
		mov    _0cf7da_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _05dfc0_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    _0cf7dc_data,%di
		mov    %ax,_0cf7c6_data
		cmp    $0x000080,%di
		jge    _048bbf_jump
		mov    %edi,%eax
		add    $0x000002,%eax
		mov    %ax,_0cf7dc_data
		jmp    _048bbf_jump

	_048ba2_jump:
		mov    _0cf9f7_data,%ch
		cmp    $0x000001,%ch
		jb     _048bb6_jump
		decw   _0cf7c6_data
		jmp    _048bbf_jump

	_048bb6_jump:
		jae    _048bbf_jump
		incw   _0cf7c6_data

	_048bbf_jump:
		mov    _0cf7d2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _0ce77e_data,%dl
		mov    _0c2fa0_data(%eax),%di
		mov    _0c2f98_data(%eax),%si
		test   %dl,%dl
		je     _048c10_jump
		mov    _0ce6dc_data,%edx
		xor    %ebx,%ebx
		mov    0x000068(%edx),%bl
		mov    0x000028(%edx),%cx
		add    %ecx,%ebx
		mov    %bx,_0c2fa0_data(%eax)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    %bx,_0c2f98_data(%eax)
		jmp    _048cb1_jump

	_048c10_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01dbb4_func
		mov    _0ce678_data,%bx
		xor    %edx,%edx
		mov    _0cf7d2_data,%eax
		mov    _0ce6b8_data,%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		mov    %dx,_0c2fa0_data(,%eax,2)
		xor    %edx,%edx
		mov    _0ce67c_data,%cx
		mov    _0ce6c4_data,%dl
		add    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c2f98_data(,%eax,2)
		cmpw   $0x000001,0x000008(%esp)
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cf7d2_data,%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		mov    %dx,_0c2fa0_data(,%eax,2)
		cmp    $0x000001,%bx
		setg   %al
		mov    0x00000c(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cf7d2_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0c2f98_data(,%eax,2)

	_048cb1_jump:
		mov    _0cf7d4_data,%ax
		inc    %eax
		mov    %eax,%edx
		xor    %ah,%dh
		mov    %ax,_0cf7d4_data
		and    $0x000003,%dl
		mov    _0cf7d0_data,%bx
		mov    %dx,_0cf7d4_data
		mov    %edi,%edx
		mov    _0cf7d2_data,%cx
		sub    %ebx,%edx
		sub    %cx,%dx
		je     _048cf4_jump
		test   %dx,%dx
		jle    _048cef_jump
		mov    $0x000001,%edx
		jmp    _048cf4_jump

	_048cef_jump:
		mov    $0xffffffff,%edx

	_048cf4_jump:
		mov    _0cf7ce_data,%di
		mov    %esi,%eax
		mov    _0cf7d6_data,%bx
		sub    %edi,%eax
		sub    %bx,%ax
		je     _048d1c_jump
		test   %ax,%ax
		jle    _048d17_jump
		mov    $0x000001,%eax
		jmp    _048d1c_jump

	_048d17_jump:
		mov    $0xffffffff,%eax

	_048d1c_jump:
		mov    _0cf7d2_data,%cx
		add    %edx,%ecx
		mov    %cx,_0cf7d2_data
		cmp    $0x000008,%cx
		jle    _048d3b_jump
		movw   $0x000008,_0cf7d2_data

	_048d3b_jump:
		mov    _0cf7d0_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffff8,%edx
		jge    _048d52_jump
		movw   $0x00fff8,_0cf7d2_data

	_048d52_jump:
		mov    _0cf7d6_data,%bx
		add    %eax,%ebx
		mov    %bx,_0cf7d6_data
		cmp    $0x000008,%bx
		jle    _048d71_jump
		movw   $0x000008,_0cf7d6_data

	_048d71_jump:
		mov    _0cf7d4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _048e70_jump
		movw   $0x00fff8,_0cf7d6_data
		jmp    _048e70_jump

	_048d90_jump:
		cmpw   $0x000036,_0cf7c6_data
		jl     _048dbb_jump
		mov    $0x000200,%eax
		call   _06bf60_func
		mov    _0cf7c6_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0cf7dc_data
		mov    %cx,_0cf7c6_data

	_048dbb_jump:
		mov    _0cf7da_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		movswl %ax,%edx
		mov    _0cf7ca_data,%eax
		sar    $0x000010,%eax
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0cf7d2_data
		mov    _0cf7da_data,%eax
		sar    $0x000010,%eax
		call   _05e000_func
		mov    _0cf7ca_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0cf9f7_data,%cl
		mov    %ax,_0cf7d6_data
		test   %cl,%cl
		je     _048e28_jump
		mov    _0cf7c6_data,%si
		dec    %esi
		mov    %si,_0cf7c6_data
		test   %si,%si
		jge    _048e28_jump
		xor    %eax,%eax
		mov    %ax,_0cf7c6_data

	_048e28_jump:
		mov    $0x000036,%eax
		call   _06bf60_func
		mov    _0cf7dc_data,%dx
		add    %eax,%edx
		mov    %dx,_0cf7dc_data
		cmp    $0x000200,%dx
		jle    _048e70_jump
		mov    _0cf7cc_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0cf7dc_data
		mov    %si,_0cf7cc_data
		cmp    $0x00000a,%si
		jle    _048e70_jump
		movw   $0x00000a,_0cf7cc_data

	_048e70_jump:
		mov    _0cf7d2_data,%ax
		mov    _0cf7d0_data,%dx
		mov    _0cf7ce_data,%bx
		add    %eax,%edx
		mov    _0cf7d6_data,%ax
		mov    _0cf89e_data,%cx
		add    %eax,%ebx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    _0cf8a6_data,%si
		add    $0x000008,%eax
		mov    %dx,_0cf7d0_data
		mov    %ax,_0cf7ca_data
		mov    %ebx,%eax
		mov    %bx,_0cf7ce_data
		sub    %esi,%eax
		mov    _095e2d_data,%dh
		mov    %ax,_0cf7c8_data
		test   %dh,%dh
		jne    _048ee3_jump
		mov    _0cf7c6_data,%edx
		mov    _0cf7c8_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0485ac_func

	_048ee3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048ef0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa1f_data,%eax
		sar    $0x000018,%eax
		mov    _0cef45_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _048f0e_jump
		call   _0473d0_func

	_048f0e_jump:
		cmpb   $0x000000,_095e2d_data
		jne    _048f42_jump
		mov    _0cd138_data,%edx
		mov    _0cd824_data,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0cf7e4_data,%bx
		push   %edx
		xor    %edx,%edx
		mov    _0cfa22_data,%al
		mov    _0cf7de_data,%dx
		call   _0778f0_func

	_048f42_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_048f48_switch:
		.long   _0490e2_case
		.long   _049117_case
		.long   _049137_case
		.long   _04914d_case
		.long   _049163_case
		.long   _049179_case

_048f60_switch:
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _0490fc_case
		.long   _049107_case
		.long   _049191_case
		.long   _0490fc_case
		.long   _049107_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _04910e_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _04910e_case

_048fb8_switch:
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049131_case
		.long   _049131_case
		.long   _049131_case
		.long   _049131_case
		.long   _049131_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049131_case

_049000_switch:
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049131_case
		.long   _049191_case
		.long   _049191_case
		.long   _049110_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case

_049034_switch:
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _04910e_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _04910e_case
		.long   _049191_case
		.long   _049191_case

_049068_switch:
		.long   _049191_case
		.long   _049191_case
		.long   _04910e_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _049191_case
		.long   _04910e_case
		.long   _049191_case




_049098_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf87c_data,%cx
		mov    _0ce638_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cf7e4_data,%ax
		shl    $0x000004,%edx
		xor    %bl,%bl
		cmp    %eax,%edx
		jge    _0490c0_jump
		mov    $0x000003,%dl
		jmp    _0490c2_jump

	_0490c0_jump:
		xor    %dl,%dl

	_0490c2_jump:
		mov    _0cf88c_data,%ax
		dec    %eax
		xor    %dh,%dh
		cmp    $0x000005,%ax
		ja     _049191_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048f48_switch(,%eax,4)

	_0490e2_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000015,%ax
		ja     _049191_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048f60_switch(,%eax,4)

	_0490fc_case:
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		mov    %dh,%dl
		jmp    _049191_case

	_049107_case:
		mov    $0x000003,%dl
		jmp    _049191_case

	_04910e_case:
		mov    $0x000001,%dh

	_049110_case:
		mov    $0x000003,%dl
		jmp    _049191_case

	_049117_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000011,%ax
		ja     _049191_case
		and    $0x00ffff,%eax
		jmp    *%cs:_048fb8_switch(,%eax,4)

	_049131_case:
		mov    $0x000001,%dl
		mov    $0x000004,%bl
		jmp    _049191_case

	_049137_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _049191_case
		and    $0x00ffff,%eax
		jmp    *%cs:_049000_switch(,%eax,4)

	_04914d_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _049191_case
		and    $0x00ffff,%eax
		jmp    *%cs:_049034_switch(,%eax,4)

	_049163_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000b,%ax
		ja     _049191_case
		and    $0x00ffff,%eax
		jmp    *%cs:_049068_switch(,%eax,4)

	_049179_case:
		mov    %ecx,%eax
		cmp    $0x000001,%cx
		jb     _049191_case
		cmp    $0x000003,%cx
		jbe    _049191_case
		cmp    $0x000004,%cx
		jne    _049191_case
		mov    $0x000001,%dh
		mov    $0x000003,%dl

	_049191_case:
		cmpb   $0x000000,_095e2d_data
		jne    _04919c_jump
		xor    %dh,%dh

	_04919c_jump:
		mov    %dl,_0cfa21_data
		mov    %dh,_0cfa24_data
		mov    %bl,_0e40a9_data
		mov    %cx,_0cf87c_data
		call   _048ef0_func
		mov    _0cfa21_data,%dl
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0491c4_switch:
		.long   _0491f9_case
		.long   _04922f_case
		.long   _049264_case
		.long   _049271_case




_0491d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf7e0_data,%cx
		mov    _0cfa21_data,%dl
		cmp    $0x000003,%dl
		ja     _04927e_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_0491c4_switch(,%eax,4)

	_0491f9_case:
		xor    %eax,%eax
		mov    _0cf8a4_data,%edx
		mov    _0cf7e4_data,%ax
		sar    $0x000010,%edx
		sub    $0x0000d8,%eax
		imul   %eax,%edx
		mov    _0cf882_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0cf7e0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04922f_case:
		mov    _0cf8a4_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0e40a9_data,%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0cf7e4_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0cf7e0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049264_case:
		xor    %ecx,%ecx
		mov    %cx,_0cf7e0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049271_case:
		mov    _0cf7e4_data,%cx
		sub    $0x0000d8,%ecx

	_04927e_jump:
		mov    %cx,_0cf7e0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049290_switch:
		.long   0




_049294_func:
		add    $0x5050505,%eax
		add    $0x6f000003,%eax
		outsb  %ds:(%esi),(%dx)
	_0492a0_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_0492a4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x00006e(%edi)
	_0492a7_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
		data16 add %al,0x5050505
		add    $0x030505,%eax

	_0492b5_jump:
		add    $0x3050505,%eax

	_0492ba_jump:
		add    $0x3050505,%eax

	_0492bf_jump:
		add    $0x5050505,%eax
		add    (%eax),%eax
		add    %al,(%eax)

_0492c8_switch:




_0492d8_func:
		add    $0x5050505,%eax
		add    $0x6e6f0305,%eax
	_0492e3_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_0492e7_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x000061(%ebp)
		js     _0492eb_jump

	_0492eb_jump:
		xor    %al,%ss:(%eax)

	_0492ee_jump:
		xor    $0x000030,%eax
		.byte 0x000000

_0492f4_switch:




_049300_func:
		add    $0x5030505,%eax
		add    $0x51530305,%eax
		push   %edx
		mov    $0x000001,%ebx
		xor    %eax,%eax

	_049312_jump:
		mov    _095e40_data(%eax),%edx
		mov    (%edx),%cl
		cmp    $0x000053,%cl
		ja     _04933c_jump
		mov    %cl,%dl
		and    $0x0000ff,%edx
		shl    $0x000002,%edx
		cmpl   $0x000000,_096a88_data(%edx)
		jne    _04933e_jump
		cmpl   $0x000000,_096888_data(%edx)
		jne    _04933e_jump

	_04933c_jump:
		xor    %ebx,%ebx

	_04933e_jump:
		add    $0x000004,%eax
		cmp    $0x00001c,%eax
		jne    _049312_jump
		test   %ebx,%ebx
		jne    _049382_jump
		mov    _095e40_data,%eax
		movb   $0x00004b,(%eax)
		mov    _095e44_data,%eax
		movb   $0x000048,(%eax)
		mov    _095e48_data,%eax
		movb   $0x00004d,(%eax)
		mov    _095e4c_data,%eax
		movb   $0x000050,(%eax)
		mov    _095e50_data,%eax
		movb   $0x00001d,(%eax)
		mov    _095e54_data,%eax
		movb   $0x000038,(%eax)
		mov    _095e58_data,%eax
		movb   $0x00002d,(%eax)

	_049382_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049388_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _075268_func
		test   %al,%al
		je     _04955e_jump
		mov    $_0cd874_data,%eax
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0cfa35_data
		call   _047e10_func
		cmpw   $0x000080,_095e70_data
		jl     _0493d5_jump
		mov    _0cf746_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0493d5_jump
		movb   $0x000001,_095e2d_data
		xor    %ch,%ch
		mov    %ch,_0cfa20_data

	_0493d5_jump:
		cmpb   $0x000002,_0cfa1a_data
		jne    _0493ec_jump
		mov    $0x000001,%ah
		mov    %ah,_095e2d_data
		mov    %ah,_0cfa20_data

	_0493ec_jump:
		call   _041af0_func
		cmpl   $0x0003e7,_0cd044_data
		je     _049462_jump
		cmpb   $0x000000,_0cfa17_data
		je     _049462_jump
		xor    %eax,%eax
		mov    _0cd040_data,%ax
		call   _03efd4_func
		mov    _0cd048_data,%eax
		call   _03efe0_func
		mov    _0cd050_data,%eax
		call   _03efe8_func
		mov    _0cd04c_data,%eax
		call   _03eff0_func
		mov    _0cd044_data,%eax
		call   _03eff8_func
		call   _03e780_func
		test   %eax,%eax
		je     _04944e_jump
		xor    %cl,%cl
		mov    %cl,_0cfa17_data
		jmp    _049474_jump

	_04944e_jump:
		mov    $0x000001,%bh
		call   _03e9b4_func
		mov    %bh,_0cfa17_data
		call   _071da8_func
		jmp    _049474_jump

	_049462_jump:
		mov    _0cd044_data,%eax
		xor    %bl,%bl
		call   _03eff8_func
		mov    %bl,_0cfa17_data

	_049474_jump:
		call   _042790_func
		test   %al,%al
		je     _04953f_jump
		cmpw   $0x000000,_0cf748_data
		jl     _0494f1_jump
		mov    _0cfa1c_data,%al
		cmp    _0cfa23_data,%al
		jne    _0494f1_jump
		mov    _0cfa1e_data,%al
		cmp    _0cfa1d_data,%al
		jne    _0494f1_jump
		mov    _0c97f0_data,%di
		test   %di,%di
		je     _0494bb_jump
		cmp    $0x000001,%di
		jne    _0494f1_jump

	_0494bb_jump:
		mov    _0c97f2_data,%dx
		test   %dx,%dx
		je     _0494cd_jump
		cmp    $0x000001,%dx
		jne    _0494f1_jump

	_0494cd_jump:
		mov    _0c97f4_data,%cx
		test   %cx,%cx
		je     _0494df_jump
		cmp    $0x000001,%cx
		jne    _0494f1_jump

	_0494df_jump:
		mov    _0c97f6_data,%di
		test   %di,%di
		je     _04950f_jump
		cmp    $0x000001,%di
		je     _04950f_jump

	_0494f1_jump:
		movl   $_036c88_func,_0e4cd0_data
		call   _023f30_func
		call   _03cadc_func
		call   _04eb28_func
		jmp    _04960d_jump

	_04950f_jump:
		mov    $0x000002,%dl
		push   $_0cf74c_data
		mov    $_0cf752_data,%ecx
		mov    $_0cf74a_data,%ebx
		mov    $_0cf748_data,%eax
		push   $_0cf74e_data
		mov    %dl,_095eb2_data
		mov    $_0cf750_data,%edx
		call   _0421c0_func
		jmp    _04960d_jump

	_04953f_jump:
		mov    _0cf746_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _04960d_jump
		movw   $0x00fffe,_0cf748_data
		jmp    _04960d_jump

	_04955e_jump:
		cmpb   $0x000000,_0cfa17_data
		je     _049576_jump
		mov    %al,_0cfa17_data
		call   _03e9b4_func
		call   _071da8_func

	_049576_jump:
		xor    %dh,%dh
		mov    $_0cd874_data,%eax
		mov    %dh,_0cfa35_data
		xor    %edx,%edx
		call   _047e10_func
		call   _042790_func
		test   %al,%al
		je     _0495ae_jump
		movl   $_036c88_func,_0e4cd0_data
		call   _023f30_func
		call   _03cadc_func
		call   _04eb28_func
		jmp    _0495b7_jump

	_0495ae_jump:
		movw   $0x00fffe,_0cf748_data

	_0495b7_jump:
		mov    $0x00000d,%ebx
		mov    $0x000012,%ecx
		mov    $0x000001,%esi
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %bx,_0c2f90_data
		mov    %cx,_0c2f92_data
		mov    %si,_0c2f94_data
		mov    %si,_0c2f88_data
		mov    %ax,_0c2f8a_data
		mov    %dx,_0c2f8e_data
		mov    $0x000012,%eax
		xor    %bl,%bl
		call   _071d80_func
		mov    %bl,_095e2d_data
		call   _041af0_func

	_04960d_jump:
		mov    $_096888_data,%esi
		mov    $_096a88_data,%edi
		mov    %esi,_0e4cb0_data
		call   _0498a4_func
		mov    %edi,_0e4cb0_data
		call   _0498a4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049638_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    $0x000002,%al
		jb     _049663_jump
		jbe    _04969f_jump
		cmp    $0x000050,%al
		jb     _04965a_jump
		jbe    _0496d4_jump
		cmp    $0x000064,%al
		je     _0496fa_jump
		jmp    _049715_jump

	_04965a_jump:
		cmp    $0x000046,%al
		je     _0496ae_jump
		jmp    _049715_jump

	_049663_jump:
		test   %al,%al
		ja     _049687_jump
		mov    $0x000001,%cl
		mov    $0x00003c,%eax
		xor    %edi,%edi
		mov    %cl,_0cfa4e_data
		call   _03c194_jump
		mov    %di,_0cf7e8_data
		jmp    _049715_jump

	_049687_jump:
		mov    $0x000001,%bh
		mov    $0x000032,%eax
		xor    %esi,%esi
		mov    %bh,_0cfa4e_data
		mov    %si,_0cf7e8_data
		jmp    _049710_jump

	_04969f_jump:
		xor    %bl,%bl
		mov    $0x00003c,%eax
		mov    %bl,_0cfa4e_data
		jmp    _049710_jump

	_0496ae_jump:
		mov    $0x000001,%dh
		mov    $0x000046,%eax
		xor    %ecx,%ecx
		mov    %dh,_0cfa4e_data
		mov    %cx,_0cf7e8_data
		call   _03c194_jump
		call   _036150_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0496d4_jump:
		mov    $0x000001,%dl
		mov    $0x000050,%eax
		xor    %ebx,%ebx
		mov    %dl,_0cfa4e_data
		mov    %bx,_0cf7e8_data
		call   _03c194_jump
		call   _036150_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0496fa_jump:
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0cfa4e_data
		mov    $0x000064,%eax
		mov    %dx,_0cf7e8_data

	_049710_jump:
		call   _03c194_jump

	_049715_jump:
		call   _036150_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049720_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_095e2d_data
		jne    _049801_jump
		cmpb   $0x000000,_0cfa57_data
		jne    _049757_jump
		cmpw   $0x000006,_0cf88c_data
		jne    _04974e_jump
		cmpw   $0x000004,_0cf87c_data
		je     _049757_jump

	_04974e_jump:
		call   _026a30_func
		test   %al,%al
		je     _0497a0_jump

	_049757_jump:
		mov    _096862_data,%ecx
		mov    _09685a_data,%ebx
		mov    _096852_data,%edx
		mov    _09684a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ecx
		mov    _0cd098_data,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0497a0_jump:
		mov    _095e68_data,%eax
		sar    $0x000010,%eax
		mov    _096862_data(,%eax,2),%ecx
		mov    _09685a_data(,%eax,2),%ebx
		mov    _096852_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09684a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ecx
		mov    _0cd098_data,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func
		mov    _0cd138_data,%edi
		call   _014c8e_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049801_jump:
		call   _016194_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04980c_func:
		push   %ebx
		push   %edx
		mov    _0cf88c_data,%dx
		mov    _0cf87c_data,%bx
		cmp    $0x000001,%dx
		jne    _04982c_jump
		cmp    $0x000010,%bx
		je     _04988c_jump

	_04982c_jump:
		cmp    $0x000002,%dx
		jne    _04983c_jump
		cmp    $0x000010,%bx
		je     _04988c_jump

	_04983c_jump:
		cmp    $0x000003,%dx
		jne    _049848_jump
		cmp    $0x00000a,%bx
		je     _04988c_jump

	_049848_jump:
		cmp    $0x000004,%dx
		jne    _049853_jump
		cmp    %dx,%bx
		je     _04988c_jump

	_049853_jump:
		cmp    $0x000004,%dx
		jne    _04985f_jump
		cmp    $0x00000b,%bx
		je     _04988c_jump

	_04985f_jump:
		cmp    $0x000005,%dx
		jne    _04986b_jump
		cmp    $0x000003,%bx
		je     _04988c_jump

	_04986b_jump:
		cmp    $0x000005,%dx
		jne    _049877_jump
		cmp    $0x00000b,%bx
		je     _04988c_jump

	_049877_jump:
		cmp    $0x000006,%dx
		jne    _049883_jump
		cmp    $0x000004,%bx
		je     _04988c_jump

	_049883_jump:
		cmpb   $0x000000,_095e6d_data
		je     _049890_jump

	_04988c_jump:
		mov    $0x000001,%al
		jmp    _049892_jump

	_049890_jump:
		xor    %al,%al

	_049892_jump:
		mov    %bx,_0cf87c_data
		mov    %dx,_0cf88c_data
		pop    %edx
		pop    %ebx
		ret    



_0498a4_func:
		push   %edx
		mov    _0e4cb0_data,%eax
		mov    _0c2e98_data,%edx
		mov    %edx,0x000038(%eax)
		mov    _0c2e9c_data,%edx
		mov    %edx,0x00003c(%eax)
		mov    _0c2ea0_data,%edx
		mov    %edx,0x000070(%eax)
		mov    _0c2e90_data,%edx
		mov    %edx,0x000074(%eax)
		mov    _0c2e94_data,%edx
		mov    %edx,0x0000e0(%eax)
		mov    _0c2e8c_data,%edx
		mov    %edx,0x0000e4(%eax)
		mov    _0c2ea4_data,%edx
		mov    %edx,0x0000e8(%eax)
		mov    _0c2ea8_data,%edx
		mov    %edx,0x00011c(%eax)
		mov    _0c2e7c_data,%edx
		mov    %edx,0x000120(%eax)
		mov    _0c2eac_data,%edx
		mov    %edx,0x000124(%eax)
		mov    _0c2e78_data,%edx
		mov    %edx,0x00012c(%eax)
		mov    _0c2e80_data,%edx
		mov    %edx,0x000134(%eax)
		mov    _0c2eb0_data,%edx
		mov    %edx,0x00013c(%eax)
		mov    _0c2e84_data,%edx
		mov    %edx,0x000140(%eax)
		mov    _0c2eb4_data,%edx
		mov    %edx,0x000144(%eax)
		mov    _0c2eb8_data,%edx
		mov    %edx,0x000148(%eax)
		mov    _0c2ebc_data,%edx
		mov    %edx,0x00014c(%eax)
		pop    %edx
		ret    

_04996c_switch:
		.long   _049a67_case
		.long   _049b2a_case
		.long   _049b2a_case
		.long   _049a87_case
		.long   _049ab0_case
		.long   _049b2a_case
		.long   _049b2a_case
		.long   _049ae2_case
		.long   _049ae9_case
		.long   _049afd_case
		.long   _049b12_case




_049998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		xor    %ah,%ah
		xor    %bl,%bl
		mov    %ah,_0cfa53_data
		call   _01cee0_func
		mov    %bl,_0cfa82_data
		xor    %bh,%bh
		mov    _095eb6_data,%ah
		mov    %bx,_0cf7b0_data
		mov    %bl,_0cfa7a_data
		mov    %bl,_0cfa38_data
		mov    %bl,_0cfa39_data
		mov    %bl,_0cfa37_data
		test   %ah,%ah
		je     _0499f3_jump
		mov    _0c2f90_data,%al
		mov    %al,_0cfa50_data
		test   %al,%al
		jne    _0499f3_jump
		call   _01d028_func

	_0499f3_jump:
		call   _036c44_func
		call   _023f30_func
		call   _04f488_func
		cmpb   $0x000000,_0cfa36_data
		jne    _049b53_jump

	_049a0f_jump:
		mov    _0cfa7a_data,%ch
		test   %ch,%ch
		jne    _049b53_jump
		test   %dx,%dx
		jne    _049b53_jump
		mov    _0c2f90_data,%eax
		sar    $0x000010,%eax
		call   _071d80_func
		mov    _0c2f92_data,%eax
		sar    $0x000010,%eax
		call   _071da4_func
		mov    _0c2f8e_data,%eax
		sar    $0x000010,%eax
		call   _071da0_func
		mov    _0cfa37_data,%al
		cmp    $0x00000a,%al
		ja     _049b2a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04996c_switch(,%eax,4)

	_049a67_case:
		mov    $_049e98_func,%ebx
		mov    $_036c54_func,%ecx
		mov    %ebx,_0e4cbc_data
		mov    %ecx,_0e4cd0_data
		call   _03ca8c_func
		jmp    _049b25_jump

	_049a87_case:
		call   _034490_func
		cmpb   $0x000000,_0cfa39_data
		jne    _049b2a_case
		mov    $0x000001,%edx
		mov    %ch,_0cfa7a_data
		mov    %dx,_0cf892_data
		jmp    _049b2a_case

	_049ab0_case:
		mov    $_04a44c_func,%esi
		mov    _0e4cd0_data,%edi
		mov    %esi,_0e4cbc_data
		test   %edi,%edi
		je     _049ad8_jump
		movb   $0x000001,_0e4cfd_data
		movl   $_036c88_func,_0e4cd0_data
		jmp    _049b25_jump

	_049ad8_jump:
		xor    %ebp,%ebp
		mov    %ebp,_0e4cd0_data
		jmp    _049b25_jump

	_049ae2_case:
		mov    $_04b3ec_func,%ebx
		jmp    _049b17_jump

	_049ae9_case:
		mov    $_04c3d0_func,%ebp
		xor    %eax,%eax
		mov    %ebp,_0e4cbc_data
		mov    %eax,_0e4cd0_data
		jmp    _049b25_jump

	_049afd_case:
		mov    $_04d094_func,%esi
		xor    %edi,%edi
		mov    %esi,_0e4cbc_data
		mov    %edi,_0e4cd0_data
		jmp    _049b25_jump

	_049b12_case:
		mov    $_04e0a0_func,%ebx

	_049b17_jump:
		xor    %ecx,%ecx
		mov    %ebx,_0e4cbc_data
		mov    %ecx,_0e4cd0_data

	_049b25_jump:
		call   _04f318_func

	_049b2a_case:
		call   _04271c_func
		cmpb   $0x000000,_0cfa39_data
		je     _049b46_jump
		xor    %cl,%cl
		mov    %cl,_0cfa37_data
		mov    %cl,_0cfa39_data

	_049b46_jump:
		cmpb   $0x000000,_0cfa36_data
		je     _049a0f_jump

	_049b53_jump:
		call   _04f4ec_func
		call   _074cc8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049b64_switch:
		.long   _049d14_case
		.long   _049d67_case
		.long   _049d67_case
		.long   _049d2c_case
		.long   _049d3d_case
		.long   _049d4f_case




_049b7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000004,%dh
		mov    _0cfa7d_data,%al
		mov    $0x000001,%bl
		mov    %al,(%esp)
		call   _01cee0_func
		mov    %dh,_0cfa37_data
		mov    %bl,_0e4cfd_data
		xor    %ah,%ah
		mov    _095e64_data,%bh
		mov    %ah,_0cfa38_data
		mov    %ah,_0cfa39_data
		cmp    %bl,%bh
		jne    _049c1d_jump
		cmpb   $0x000040,_096884_data
		jne    _049c12_jump
		mov    _096862_data,%ecx
		mov    _09685a_data,%ebx
		mov    _096852_data,%edx
		mov    _09684a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ecx
		mov    _0cd098_data,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func
		incb   _095e64_data
		jmp    _049e6b_jump

	_049c12_jump:
		mov    %ah,_095e64_data
		jmp    _049e6b_jump

	_049c1d_jump:
		cmp    $0x000002,%bh
		je     _049c2e_jump
		cmp    _095e2d_data,%bl
		jne    _049e6b_jump

	_049c2e_jump:
		cmpw   $0x000006,_0cf88c_data
		jne    _049c42_jump
		cmpw   $0x000004,_0cf87c_data
		je     _049c4b_jump

	_049c42_jump:
		cmpb   $0x000000,_0cfa57_data
		je     _049c5d_jump

	_049c4b_jump:
		mov    _095e6a_data,%al
		xor    %ecx,%ecx
		mov    %al,0x000004(%esp)
		mov    %cx,_095e6a_data

	_049c5d_jump:
		mov    $0x000300,%ecx
		mov    $_0c7f88_data,%esi
		mov    $_0e46ac_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _036c44_func
		call   _04f488_func
		xor    %dl,%dl
		mov    $0x000001,%ah
		mov    %dl,_095e64_data
		mov    %ah,_095e63_data
		xor    %edx,%edx
		call   _01d028_func
		mov    %edx,_0cd85c_data
		cmpb   $0x000000,_0cfa17_data
		je     _049cb1_jump
		call   _073164_func

	_049cb1_jump:
		mov    $0x000004,%bl
		mov    $_04a44c_func,%ebp
		mov    $_04b3ec_func,%edi
		mov    $_04c3d0_func,%esi
		xor    %edx,%edx

	_049cc4_jump:
		cmp    _0cfa37_data,%dl
		je     _049d77_jump
		mov    _0c2f90_data,%eax
		sar    $0x000010,%eax
		call   _071d80_func
		mov    _0c2f92_data,%eax
		sar    $0x000010,%eax
		call   _071da4_func
		mov    _0c2f8e_data,%eax
		sar    $0x000010,%eax
		call   _071da0_func
		call   _04271c_func
		mov    _0cfa37_data,%al
		sub    $0x000004,%al
		cmp    $0x000005,%al
		ja     _049d67_case
		and    $0x0000ff,%eax
		jmp    *%cs:_049b64_switch(,%eax,4)

	_049d14_case:
		mov    _0cfa39_data,%ah
		mov    %ebp,_0e4cbc_data
		mov    %edx,_0e4cd0_data
		cmp    %ah,%dl
		je     _049d67_case
		jmp    _049d61_jump

	_049d2c_case:
		mov    _0cfa39_data,%al
		mov    %edi,_0e4cbc_data
		cmp    %al,%dl
		je     _049d67_case
		jmp    _049d61_jump

	_049d3d_case:
		mov    _0cfa39_data,%ch
		mov    %esi,_0e4cbc_data
		cmp    %ch,%dl
		je     _049d67_case
		jmp    _049d61_jump

	_049d4f_case:
		movl   $_04d094_func,_0e4cbc_data
		cmp    _0cfa39_data,%dl
		je     _049d67_case

	_049d61_jump:
		mov    %bl,_0cfa37_data

	_049d67_case:
		call   _04f318_func
		mov    %dl,_0cfa39_data
		jmp    _049cc4_jump

	_049d77_jump:
		xor    %al,%al
		mov    %al,_095e63_data
		call   _04f4ec_func
		cmpb   $0x000000,_095e2d_data
		jne    _049dea_jump
		mov    _095e68_data,%eax
		sar    $0x000010,%eax
		mov    _096862_data(,%eax,2),%ecx
		mov    _09685a_data(,%eax,2),%ebx
		mov    _096852_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09684a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ecx
		mov    _0cd098_data,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func
		mov    _0cd138_data,%edi
		call   _014c8e_func
		jmp    _049e0d_jump

	_049dea_jump:
		cmpb   $0x000001,_0cfa20_data
		jne    _049e0d_jump
		mov    _0cd808_data,%edx
		mov    _0cd7f4_data,%ebx
		mov    _0cd824_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_049e0d_jump:
		cmpb   $0x000000,_0cfa17_data
		je     _049e1b_jump
		call   _073178_func

	_049e1b_jump:
		mov    $0x000001,%esi
		mov    _0cf88c_data,%ax
		xor    %bl,%bl
		xor    %edi,%edi
		mov    %bl,_0cfa52_data
		mov    %si,_0cf742_data
		xor    %ebx,%ebx
		mov    %di,_0cf740_data
		mov    %ebx,_0ccfd8_data
		cmp    $0x000006,%ax
		jne    _049e56_jump
		cmpw   $0x000004,_0cf87c_data
		je     _049e5f_jump

	_049e56_jump:
		cmpb   $0x000000,_0cfa57_data
		je     _049e6b_jump

	_049e5f_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %ax,_095e6a_data

	_049e6b_jump:
		mov    _0cfa7e_data,%al
		mov    %al,_096884_data
		mov    (%esp),%al
		mov    %al,_0cfa7d_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_049e88_switch:
		.long   _049f89_case
		.long   _049fb7_case
		.long   _049fe5_case
		.long   _04a010_case




_049e98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $_04a178_func,%esi
		mov    $_04a3d8_func,%edi
		mov    _049290_switch,%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    %esp,%ebx
		jmp    _049ec2_jump

	_049eb9_jump:
		movw   $0x009090,(%ecx)
		mov    %ecx,%esp
		nop
		nop

	_049ec2_jump:
		call   _049ed1_func
		jmp    _049eb9_jump



_049ed1_func:
		mov    (%esp),%ecx
		movl   $0x90909090,-0x000005(%ecx)
		movb   $0x000090,-0x000001(%ecx)
		ret    

	_049f38_jump:
		movzbl %bl,%ebp
		imul   $0x0000d8,%ebp,%ecx
		mov    $_0cbd08_data,%edx
		add    %ecx,%edx
		mov    _0c2e40_data(,%ebp,4),%esi
		mov    %edx,%edi
		push   %edi

	_049f52_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049f6a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049f52_jump

	_049f6a_jump:
		pop    %edi
		mov    (%esp,%ebp,1),%al
		mov    %al,_0cbddf_data(%ecx)
		cmp    $0x000003,%bl
		ja     _04a039_jump
		xor    %eax,%eax
		mov    %bl,%al
		jmp    *%cs:_049e88_switch(,%eax,4)

	_049f89_case:
		mov    _0c2cfc_data,%esi
		push   %edi

	_049f90_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049fa8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049f90_jump

	_049fa8_jump:
		pop    %edi
		movw   $0x00001e,_0cbdda_data(%ecx)
		jmp    _04a039_jump

	_049fb7_case:
		mov    _0c2e1c_data,%esi
		mov    $0x00003c,%edx
		push   %edi

	_049fc3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049fdb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049fc3_jump

	_049fdb_jump:
		pop    %edi
		mov    %dx,_0cbdda_data(%ecx)
		jmp    _04a039_jump

	_049fe5_case:
		mov    _0c2d00_data,%esi
		push   %edi

	_049fec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a004_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049fec_jump

	_04a004_jump:
		pop    %edi
		movw   $0x00009b,_0cbdda_data(%ecx)
		jmp    _04a039_jump

	_04a010_case:
		mov    _0c2db0_data,%esi
		push   %edi

	_04a017_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a02f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a017_jump

	_04a02f_jump:
		pop    %edi
		movw   $0x0000b9,_0cbdda_data(%ecx)

	_04a039_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0cf76e_data,%ax
		mov    %ax,_0cbdd8_data(%edx)
		mov    %bh,_0cbddc_data(%edx)
		xor    %ch,%ch
		mov    %bh,_0cbdde_data(%edx)
		mov    $_0cbd08_data,%eax
		mov    %ch,_0cbddd_data(%edx)
		add    %edx,%eax
		add    %bh,%bl
		call   _01f21c_func
		xor    %eax,%eax
		mov    _0cf7a4_data,%si
		mov    %bl,%al
		cmp    %si,%ax
		jl     _049f38_jump
		mov    $0x000001,%al
		mov    $0x000064,%edx
		mov    $0x00000c,%ebx
		xor    %edi,%edi
		mov    $0x000006,%ecx
		mov    %di,_0cf7be_data
		mov    %al,_0cfa7d_data
		mov    %di,_0cf78a_data
		mov    %dx,_0cf794_data
		mov    %bx,_0cf79a_data
		mov    %cx,_0cf77e_data
		mov    %di,_0cf7b0_data
		mov    %di,_0cf78e_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a0dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		call   _03ce20_func
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _04a14e_jump

	_04a0ee_jump:
		cmp    _0cf7be_data,%ax
		jne    _04a113_jump
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0cbd08_data,%eax
		call   _04f800_func
		jmp    _04a14b_jump

	_04a113_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0cbddf_data(%eax),%dl
		mov    _0cbddc_data(%eax),%cl
		mov    _0cbdd8_data(%eax),%ebx
		push   %edx
		mov    _0cbdd6_data(%eax),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    $_0cbd08_data,%eax
		call   _01a3f0_func

	_04a14b_jump:
		incb   (%esp)

	_04a14e_jump:
		xor    %eax,%eax
		mov    _0cf7a4_data,%dx
		mov    (%esp),%al
		cmp    %dx,%ax
		jl     _04a0ee_jump
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04a168_switch:
		.long   _04a303_case
		.long   _04a32a_case
		.long   _04a352_case
		.long   _04a3b7_case




_04a178_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _04f76c_func
		mov    _0cd134_data,%ebx
		xor    %edx,%edx
		inc    %ebx
		mov    _0cf768_data,%dx
		mov    %ebx,_0cd134_data
		cmp    %ebx,%edx
		jg     _04a1ab_jump
		cmpb   $0x000000,_0cfa7a_data
		jne    _04a1ab_jump
		call   _035908_func

	_04a1ab_jump:
		call   _037280_func
		test   %al,%al
		je     _04a1d0_jump
		mov    $0x000001,%eax
		call   _04270c_func
		xor    %eax,%eax
		call   _04fb94_func
		test   %al,%al
		je     _04a1d0_jump
		movb   $0x000001,_0cfa39_data

	_04a1d0_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04a250_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04a213_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04a250_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a250_jump

	_04a213_jump:
		mov    $0x000044,%eax
		call   _072960_func
		xor    %eax,%eax
		mov    _0cf7be_data,%bx
		mov    _096881_data,%al
		cmp    %bx,%ax
		jge    _04a23c_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cf7be_data
		jmp    _04a248_jump

	_04a23c_jump:
		mov    _0cf754_data,%ax
		mov    %ax,_0cf7be_data

	_04a248_jump:
		xor    %esi,%esi
		mov    %esi,_0cd134_data

	_04a250_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04a2c0_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04a28f_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04a2c0_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a2c0_jump

	_04a28f_jump:
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf7be_data,%ax
		cmp    _0cf754_data,%ax
		jge    _04a2ab_jump
		inc    %eax
		jmp    _04a2b2_jump

	_04a2ab_jump:
		xor    %eax,%eax
		mov    _096881_data,%al

	_04a2b2_jump:
		mov    %ax,_0cf7be_data
		xor    %edi,%edi
		mov    %edi,_0cd134_data

	_04a2c0_jump:
		call   _03715c_func
		test   %al,%al
		je     _04a3c9_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04a3c9_jump
		mov    $0x000045,%eax
		call   _072960_func
		mov    _0cf7be_data,%dx
		cmp    $0x000003,%dx
		ja     _04a3c9_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_04a168_switch(,%edx,4)

	_04a303_case:
		mov    $0x000001,%esi
		xor    %eax,%eax
		mov    $0x000003,%dh
		mov    %eax,_0cd134_data
		mov    %si,_0cf78e_data
		mov    %dh,_0cfa37_data
		call   _04f7b0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a32a_case:
		mov    $0x000001,%ecx
		xor    %ebp,%ebp
		mov    $0x000004,%dl
		mov    %ebp,_0cd134_data
		mov    %cx,_0cf78e_data
		mov    %dl,_0cfa37_data
		call   _04f7b0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a352_case:
		mov    $0x000001,%ch
		mov    $0x000004,%ebx
		xor    %edx,%edx
		xor    %al,%al
		mov    %ch,_0cfa46_data
		mov    %dx,_0cf824_data
		mov    %al,_0cfa58_data
		mov    $0x00003d,%edx
		mov    $_0cd84c_data,%eax
		mov    %bx,_0cf826_data
		call   _03640c_func
		call   _01ef80_func
		call   _03cadc_func
		call   _03ca8c_func
		call   _03572c_func
		mov    $_0cd84c_data,%eax
		call   _07fba4_func
		xor    %ah,%ah
		mov    %ah,_0cfa46_data
		call   _04f7b0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a3b7_case:
		xor    %eax,%eax
		call   _04fb94_func
		test   %al,%al
		je     _04a3c9_jump
		movb   $0x000001,_0cfa39_data

	_04a3c9_jump:
		call   _04f7b0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a3d8_func:
		push   %ebx
		push   %edx
		mov    _0cfa39_data,%ah
		test   %ah,%ah
		je     _04a41e_jump
		mov    $0x000001,%bh
		mov    _0e4cc8_data,%edx
		mov    %bh,_0cfa7a_data
		mov    %bh,_0cfa74_data
		test   %edx,%edx
		je     _04a449_jump
		call   *_0e4cc8_data
		call   _016e9a_func
		call   _016e8a_func
		mov    $0x000001,%eax
		call   _023fdc_func
		call   _03b4d0_func
		pop    %edx
		pop    %ebx
		ret    

	_04a41e_jump:
		cmpb   $0x000000,_0cfa36_data
		jne    _04a449_jump
		movw   $0x000708,_0cf768_data
		cmpb   $0x000002,_0cfa41_data
		jne    _04a43f_jump
		mov    %ah,_0cfa41_data

	_04a43f_jump:
		call   _03cadc_func
		call   _03ca8c_func

	_04a449_jump:
		pop    %edx
		pop    %ebx
		ret    



_04a44c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa12_data
		jne    _04a483_jump
		mov    %db0,%eax
		cmp    $0x000000,%eax
		jne    _04a47c_jump
		mov    %db1,%eax
		cmp    $0x000000,%eax
		jne    _04a47c_jump
		mov    %db2,%eax
		cmp    $0x000000,%eax
		jne    _04a47c_jump
		mov    %db3,%eax
		cmp    $0x000000,%eax
		jne    _04a47c_jump
		jmp    _04a483_jump

	_04a47c_jump:
		mov    $0x004c00,%eax
		int    $0x000021

	_04a483_jump:
		mov    $_04a628_func,%edx
		mov    $_04ab34_func,%ebx
		mov    $_04af28_func,%ecx
		mov    $_04b334_func,%esi
		mov    $0x00000c,%edi
		mov    $0x000006,%eax
		mov    %edx,_0e4cb8_data
		mov    %ebx,_0e4cc8_data
		mov    %ecx,_0e4cc4_data
		mov    %esi,_0e4ccc_data
		mov    %di,_0cf79a_data
		mov    %ax,_0cf77e_data
		mov    $0x000014,%edx
		mov    $0x000004,%ebx
		mov    $0x000064,%esi
		mov    _0cfa35_data,%al
		xor    %ecx,%ecx
		mov    %dx,_0cf798_data
		mov    %bx,_0cf79c_data
		mov    %cx,_0cf78a_data
		mov    %si,_0cf794_data
		mov    $0x000001,%dl
		mov    $0x000003,%ebx
		mov    %dl,_0cfa7d_data
		mov    $0x000008,%edx
		mov    %bx,_0cf792_data
		mov    %dx,_0cf77a_data
		cmp    $0x000001,%al
		jb     _04a524_jump
		jbe    _04a531_jump
		cmp    $0x000002,%al
		je     _04a531_jump
		jmp    _04a538_jump

	_04a524_jump:
		test   %al,%al
		jne    _04a538_jump
		movb   $0x00004b,_0e4cfc_data
		jmp    _04a538_jump

	_04a531_jump:
		movb   $0x00005a,_0e4cfc_data

	_04a538_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e4cfc_data,%al
		sub    %eax,%edx
		mov    _095e63_data,%cl
		mov    %dx,_0cf76e_data
		test   %cl,%cl
		je     _04a57a_jump
		mov    $0x000006,%eax
		mov    %ax,_0cf78c_data
		mov    %eax,%ebx
		mov    %ax,_0cf754_data
		xor    %al,%al
		mov    %bx,_0cf7a4_data
		mov    %al,_096881_data
		jmp    _04a59e_jump

	_04a57a_jump:
		mov    $0x000005,%ecx
		mov    %cx,_0cf78c_data
		mov    %ecx,%edi
		mov    %cx,_0cf754_data
		xor    %ch,%ch
		mov    %di,_0cf7a4_data
		mov    %ch,_096881_data

	_04a59e_jump:
		mov    $0x000005,%ebx
		mov    $0x00003c,%edx
		mov    $0x000014,%eax
		call   _04f698_func
		cmpb   $0x000000,_096883_data
		je     _04a5df_jump
		xor    %eax,%eax
		mov    _0e4cd9_data,%al
		mov    %ax,_0cd7a6_data
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0e4cd8_data,%al
		mov    %dl,_096883_data
		mov    %ax,_0cd7a4_data
		jmp    _04a5f7_jump

	_04a5df_jump:
		mov    _0c2f90_data,%ax
		mov    %ax,_0cd7a4_data
		mov    _0c2f92_data,%ax
		mov    %ax,_0cd7a6_data

	_04a5f7_jump:
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dh,_095eb0_data
		mov    %cx,_0cf78e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04a610_switch:
		.long   _04a74d_case
		.long   _04a7b7_case
		.long   _04a809_case
		.long   _04a809_case
		.long   _04a809_case
		.long   _04a809_case




_04a628_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %esp,%edi
		mov    $_049294_func,%esi
		mov    _0492a0_jump,%eax
		mov    $0x000001,%dl
		mov    %eax,0x000010(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %dl,_0cc576_data
		lea    0x00002c(%esp),%edi
		mov    $0x000002,%ah
		xor    %dh,%dh
		mov    %ah,_0cc574_data
		mov    %dh,_0cc575_data
		xor    %eax,%eax
		mov    %dl,_0cc577_data
		mov    _096881_data,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %ax,0x000030(%esp)
		jmp    _04a86f_jump

	_04a67f_jump:
		imul   $0x0000d8,%eax,%ebp
		mov    $0x000002,%bl
		mov    $_0cbd08_data,%edx
		mov    _0cf754_data,%si
		xor    %cl,%cl
		mov    %bl,_0cbddc_data(%ebp)
		add    %ebp,%edx
		mov    %cl,_0cbddd_data(%ebp)
		mov    $0x000001,%bh
		mov    %edx,0x00001c(%esp)
		mov    0x000030(%esp),%edx
		mov    %bh,_0cbdde_data(%ebp)
		cmp    %si,%dx
		jne    _04a704_jump
		mov    0x00001c(%esp),%edi
		mov    _0c2ee8_data,%esi
		mov    $0x0000a0,%ecx
		push   %edi

	_04a6c8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a6e0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a6c8_jump

	_04a6e0_jump:
		pop    %edi
		mov    _0cf7b8_data,%ax
		mov    %cx,_0cbdd8_data(%ebp)
		mov    %ax,_0cbdda_data(%ebp)
		mov    0x000006(%esp),%al
		mov    %al,_0cbddf_data(%ebp)
		jmp    _04a84e_jump

	_04a704_jump:
		mov    0x00001c(%esp),%edi
		mov    (%esp,%eax,1),%dl
		mov    _0c2e40_data(,%eax,4),%esi
		mov    %dl,_0cbddf_data(%ebp)
		push   %edi

	_04a719_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a731_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a719_jump

	_04a731_jump:
		pop    %edi
		mov    0x000030(%esp),%edi
		cmp    $0x000005,%di
		ja     _04a81f_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_04a610_switch(,%eax,4)

	_04a74d_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01f1b0_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		lea    0x000030(%esp),%eax
		add    $0x000010,%esi
		call   _01f1b0_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    %eax,%esi
		lea    0x000014(%esp),%eax
		call   _01f1b0_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0cbdd8_data(%ebp)
		jmp    _04a81f_jump

	_04a7b7_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01f1b0_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c120c_data,%eax
		call   _01f1b0_func
		imul   $0x000014,%eax,%eax
		add    $0x000010,%esi
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0cbdd8_data(%ebp)
		jmp    _04a81f_jump

	_04a809_case:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		movw   $0x0000a0,_0cbdd8_data(%eax)

	_04a81f_jump:
		mov    _0cf7ba_data,%ax
		mov    0x000030(%esp),%ebx
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0cf7c4_data,%si
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %si,_0cbdda_data(%eax)

	_04a84e_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    0x000030(%esp),%esi
		inc    %esi
		add    $_0cbd08_data,%eax
		mov    %si,0x000030(%esp)
		call   _01f21c_func

	_04a86f_jump:
		xor    %eax,%eax
		mov    _0cf7a2_data,%esi
		mov    _096881_data,%al
		sar    $0x000010,%esi
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jle    _04a67f_jump
		mov    $_0cbb58_data,%edi
		mov    $0x0000a0,%edx
		mov    _0c2d68_data,%esi
		mov    $0x000064,%ebx
		push   %edi

	_04a8a6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a8be_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a8a6_jump

	_04a8be_jump:
		pop    %edi
		xor    %ch,%ch
		mov    $0x000064,%esi
		mov    %dx,_0cbc28_data
		mov    %bx,_0cbc2a_data
		mov    %ch,_0cbc2d_data
		mov    $0x000002,%bh
		mov    %edi,%eax
		mov    %bh,_0cbc2c_data
		mov    %bh,_0cbc2e_data
		call   _01f21c_func
		mov    %dx,_0cbd00_data
		mov    %si,_0cbd02_data
		mov    %bh,_0cbd04_data
		mov    %bh,_0cbd06_data
		mov    %ch,_0cbd05_data
		mov    _0cf7ac_data,%bx
		mov    _0e4cfd_data,%dh
		sub    $0x000019,%ebx
		test   %dh,%dh
		je     _04a9c3_jump
		cmpb   $0x000000,_095e63_data
		je     _04ab20_jump
		mov    _0cf76e_data,%ax
		mov    %ax,_0e4cec_data
		xor    %eax,%eax
		mov    _0e4cfc_data,%al
		mov    _0cf752_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e4cf4_data
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		push   $0x000000
		sub    %esi,%eax
		mov    _0cf7ac_data,%cx
		mov    %bx,_0e4cf0_data
		mov    _0cbdda_data(,%eax,8),%ax
		movswl %bx,%edx
		sub    %ecx,%eax
		mov    _0e4cea_data,%esi
		add    $0x000023,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e4cee_data
		mov    _0e4cf2_data,%eax
		mov    _0e4cec_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _0502fc_func
		xor    %ch,%ch
		mov    %ch,_0e4cfd_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a9c3_jump:
		mov    _0cf752_data,%ebp
		sar    $0x000010,%ebp
		lea    0x000000(,%ebp,8),%eax
		sub    %ebp,%eax
		shl    $0x000002,%eax
		mov    _0cf76e_data,%dx
		sub    %ebp,%eax
		mov    %ebx,%esi
		mov    _0cf7ac_data,%bx
		mov    _0cbdda_data(,%eax,8),%ax
		movzbw _0e4cfc_data,%di
		sub    %ebx,%eax
		mov    _0e4cec_data,%cx
		add    $0x000023,%eax
		add    %edi,%edi
		mov    %ax,0x000038(%esp)
		cmp    %cx,%dx
		jge    _04aa18_jump
		mov    %edx,%eax
		jmp    _04aa1a_jump

	_04aa18_jump:
		mov    %ecx,%eax

	_04aa1a_jump:
		mov    _0e4cf0_data,%bx
		cmp    %bx,%si
		jge    _04aa28_jump
		mov    %esi,%ebx

	_04aa28_jump:
		mov    _0e4cf2_data,%ebp
		mov    _0e4cea_data,%ecx
		sar    $0x000010,%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		movswl %dx,%ecx
		mov    %ecx,0x000024(%esp)
		mov    %ebp,0x000014(%esp)
		mov    0x000024(%esp),%ebp
		movswl %di,%ecx
		add    %ebp,%ecx
		mov    0x000014(%esp),%ebp
		cmp    %ebp,%ecx
		jge    _04aa63_jump
		movswl %ax,%ecx
		sub    %ecx,%ebp
		mov    %ebp,0x000018(%esp)
		jmp    _04aa6c_jump

	_04aa63_jump:
		movswl %ax,%ebp
		sub    %ebp,%ecx
		mov    %ecx,0x000018(%esp)

	_04aa6c_jump:
		mov    0x000018(%esp),%ecx
		mov    %cx,0x000034(%esp)
		mov    _0e4cec_data,%ecx
		mov    _0e4cee_data,%ebp
		sar    $0x000010,%ecx
		sar    $0x000010,%ebp
		add    %ecx,%ebp
		movswl %si,%ecx
		mov    %ecx,0x00000c(%esp)
		mov    0x000036(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000028(%esp)
		mov    0x00000c(%esp),%ecx
		add    0x000028(%esp),%ecx
		mov    %ecx,0x000020(%esp)
		cmp    %ecx,%ebp
		jg     _04aaaf_jump
		mov    0x000020(%esp),%ebp

	_04aaaf_jump:
		movswl %bx,%ecx
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    %dx,_0e4cec_data
		mov    0x000038(%esp),%edx
		mov    %si,_0e4cf0_data
		mov    %dx,_0e4cee_data
		mov    _095e63_data,%dl
		mov    %di,_0e4cf4_data
		test   %dl,%dl
		je     _04ab09_jump
		push   $0x000001
		mov    0x000036(%esp),%esi
		movswl %cx,%ecx
		movswl %bx,%edx
		sar    $0x000010,%esi
		cwtl   
		mov    %esi,%ebx
		call   _0502fc_func
		xor    %ch,%ch
		mov    %ch,_0e4cfd_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ab09_jump:
		mov    0x000032(%esp),%edx
		movswl %cx,%ecx
		movswl %bx,%esi
		sar    $0x000010,%edx
		cwtl   
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _050b0c_func

	_04ab20_jump:
		xor    %ch,%ch
		mov    %ch,_0e4cfd_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ab34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		lea    0x000004(%esp),%edi
		mov    _0492a7_jump,%eax
		mov    $_0492a4_jump,%esi
		mov    %eax,(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04ab87_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04ab87_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf7aa_data,%ebx
		mov    _0c2e1c_data,%eax
		sar    $0x000010,%ebx
		call   _01a3f0_func
		mov    _096881_data,%al
		mov    %al,0x000020(%esp)
		jmp    _04aefb_jump

	_04abb4_jump:
		imul   $0x0000d8,%edx,%eax
		mov    _0cbdda_data(%eax),%bx
		mov    %bx,0x000014(%esp)
		xor    %ebx,%ebx
		mov    _0cf78c_data,%cx
		mov    %dl,%bl
		mov    _0cbdd8_data(%eax),%si
		cmp    %cx,%bx
		je     _04ac38_jump
		cmp    _0cf754_data,%bx
		jne    _04ac0d_jump
		mov    _0cbddf_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $0x0000ff,%eax
		movswl %si,%edx
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c2ee8_data,%eax
		call   _01a3f0_func
		jmp    _04ac47_jump

	_04ac0d_jump:
		mov    _0cbddf_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $0x0000ff,%eax
		movswl %si,%edi
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c2e40_data(,%edx,4),%eax
		mov    %edi,%edx
		call   _01a3f0_func
		jmp    _04ac47_jump

	_04ac38_jump:
		mov    $0x000001,%edx
		add    $_0cbd08_data,%eax
		call   _04f800_func

	_04ac47_jump:
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		jne    _04ad95_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0cbd08_data,%eax
		call   _01f1b0_func
		lea    0x000000(,%edi,2),%edx
		mov    %esi,%edi
		add    %eax,%edi
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		add    $0x000010,%eax
		mov    _0cd7a4_data(%edx),%bx
		mov    %eax,0x000008(%esp)
		test   %bx,%bx
		je     _04acd0_jump
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		lea    0x000008(%esp),%eax
		call   _01f1b0_func
		add    %edi,%eax
		add    $0x000020,%eax
		mov    %esp,%ebp
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		lea    0x000004(%esp),%esi
		jmp    _04acfc_jump

	_04acd0_jump:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %ax,0x000010(%esp)
		lea    0x000008(%esp),%eax
		call   _01f1b0_func
		add    %edi,%eax
		lea    0x000004(%esp),%ebp
		add    $0x000020,%eax
		mov    %esp,%esi

	_04acfc_jump:
		mov    %ax,0x000010(%esp)
		push   $0x000005
		mov    0x000016(%esp),%edi
		mov    0x00000e(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01a3f0_func
		xor    %eax,%eax
		mov    _0cf78c_data,%cx
		mov    0x000020(%esp),%al
		cmp    %cx,%ax
		jne    _04ad79_jump
		mov    $_0cc4a0_data,%edi
		push   %edi

	_04ad37_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ad4f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04ad37_jump

	_04ad4f_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ax,_0cc570_data
		mov    0x000014(%esp),%eax
		mov    %ax,_0cc572_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01f21c_func
		mov    %edi,%eax
		call   _04f800_func
		jmp    _04aef7_jump

	_04ad79_jump:
		push   $0x000001
		mov    0x000012(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _01a3f0_func
		jmp    _04aef7_jump

	_04ad95_jump:
		cmp    $0x000001,%dl
		jne    _04aef7_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0cbd08_data,%eax
		call   _01f1b0_func
		mov    _0cf79c_data,%dx
		mov    %eax,%edi
		imul   $0x000014,%edx,%eax
		inc    %eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%eax
		sub    $0x00000e,%eax
		add    $0x000010,%edi
		movswl %ax,%edx
		mov    %esi,%eax
		push   $0x000001
		add    %edi,%eax
		mov    $0x00000f,%ecx
		cwtl   
		call   _024b80_func
		xor    %bl,%bl
		mov    $_0c120c_data,%ebp
		mov    %bl,0x00001c(%esp)
		jmp    _04aee1_jump

	_04ae01_jump:
		mov    _0cf796_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x000003,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %ecx,%ecx
		mov    0x00001c(%esp),%cl
		cmp    %eax,%ecx
		jge    _04ae2e_jump
		movw   $0x000005,0x000018(%esp)
		jmp    _04ae9c_jump

	_04ae2e_jump:
		lea    0x000000(,%ebx,2),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jge    _04ae62_jump
		mov    _0cf79c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jl     _04ae62_jump
		movw   $0x000003,0x000018(%esp)
		jmp    _04ae9c_jump

	_04ae62_jump:
		xor    %eax,%eax
		mov    _0cf798_data,%bx
		mov    0x00001c(%esp),%al
		cmp    %bx,%ax
		jge    _04ae9c_jump
		mov    _0cf79c_data,%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		cmp    %eax,%edx
		jl     _04ae9c_jump
		movw   $0x000001,0x000018(%esp)

	_04ae9c_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		push   %eax
		mov    _0cf7ba_data,%ax
		mov    _0cf7c4_data,%bx
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    _0cf79c_data,%cx
		mov    0x000020(%esp),%al
		imul   %ecx,%eax
		add    %esi,%eax
		add    %edi,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    %ebp,%eax
		call   _01a3f0_func
		incb   0x00001c(%esp)

	_04aee1_jump:
		xor    %eax,%eax
		mov    _0cd7a6_data,%dx
		mov    0x00001c(%esp),%al
		cmp    %dx,%ax
		jl     _04ae01_jump

	_04aef7_jump:
		incb   0x000020(%esp)

	_04aefb_jump:
		xor    %eax,%eax
		mov    _0cf7a2_data,%edx
		mov    _096881_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		cmp    %eax,%edx
		jle    _04abb4_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04af28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _04f76c_func
		call   _037280_func
		test   %al,%al
		je     _04af41_jump
		movb   $0x000001,_0cfa39_data

	_04af41_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04afd1_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04afd1_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _04afd1_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04af9c_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04afd1_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04afd1_jump

	_04af9c_jump:
		mov    $0x000044,%eax
		call   _072960_func
		xor    %eax,%eax
		mov    _0cf78c_data,%bx
		mov    _096881_data,%al
		cmp    %bx,%ax
		jne    _04afc7_jump
		mov    _0cf754_data,%ax
		mov    %ax,_0cf78c_data
		jmp    _04afd1_jump

	_04afc7_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cf78c_data

	_04afd1_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04b058_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04b058_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _04b058_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04b02c_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04b058_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04b058_jump

	_04b02c_jump:
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%ax
		mov    _0cf754_data,%di
		cmp    %di,%ax
		jne    _04b051_jump
		xor    %edi,%eax
		mov    _096881_data,%al
		jmp    _04b052_jump

	_04b051_jump:
		inc    %eax

	_04b052_jump:
		mov    %ax,_0cf78c_data

	_04b058_jump:
		cmpw   $0x000000,_0cf78c_data
		jne    _04b0fa_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04b0fa_jump
		call   _03715c_func
		test   %al,%al
		jne    _04b090_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04b090_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _04b0fa_jump

	_04b090_jump:
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cd7a4_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%edx
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		mov    %edx,%ecx
		mov    %dx,_0cd7a4_data(,%eax,2)
		test   %cx,%cx
		je     _04b0df_jump
		call   _01cee0_func
		xor    %edx,%edx
		mov    _095eb6_data,%ch
		mov    %edx,_0cd85c_data
		test   %ch,%ch
		je     _04b0fa_jump
		movb   $0x000001,_0cfa50_data
		jmp    _04b0fa_jump

	_04b0df_jump:
		call   _01cee0_func
		call   _01d028_func
		cmpb   $0x000000,_095eb6_data
		je     _04b0fa_jump
		xor    %cl,%cl
		mov    %cl,_0cfa50_data

	_04b0fa_jump:
		cmpw   $0x000001,_0cf78c_data
		jne    _04b174_jump
		call   _041d54_func
		test   %ax,%ax
		je     _04b174_jump
		mov    _0cd7a6_data,%ax
		cmp    _0cf798_data,%ax
		jge    _04b174_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04b156_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04b174_jump
		mov    _0cf788_data,%edx
		mov    _0cf790_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04b174_jump

	_04b156_jump:
		mov    $0x000044,%eax
		call   _072960_func
		incw   _0cd7a6_data
		mov    _0cd7a4_data,%eax
		sar    $0x000010,%eax
		call   _071d80_func

	_04b174_jump:
		cmpw   $0x000001,_0cf78c_data
		jne    _04b1e5_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _04b1e5_jump
		cmpw   $0x000000,_0cd7a6_data
		jle    _04b1e5_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04b1c7_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04b1e5_jump
		mov    _0cf788_data,%edx
		mov    _0cf790_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04b1e5_jump

	_04b1c7_jump:
		mov    $0x000044,%eax
		call   _072960_func
		decw   _0cd7a6_data
		mov    _0cd7a4_data,%eax
		sar    $0x000010,%eax
		call   _071d80_func

	_04b1e5_jump:
		cmpw   $0x000003,_0cf78c_data
		jne    _04b245_jump
		call   _03715c_func
		test   %al,%al
		je     _04b245_jump
		call   _042790_func
		test   %al,%al
		je     _04b236_jump
		mov    $0x000001,%dh
		mov    _0cd7a6_data,%al
		mov    $0x000008,%bl
		mov    %al,_0e4cd9_data
		mov    %dh,_096883_data
		mov    %bl,_0cfa37_data
		mov    _0cd7a4_data,%al
		mov    $0x000001,%ebx
		mov    %al,_0e4cd8_data
		mov    %bx,_0cf78e_data
		jmp    _04b327_jump

	_04b236_jump:
		mov    $_0cbb58_data,%eax
		call   _04f904_func
		jmp    _04b327_jump

	_04b245_jump:
		cmpw   $0x000002,_0cf78c_data
		jne    _04b292_jump
		call   _03715c_func
		test   %al,%al
		je     _04b292_jump
		mov    _0cd7a6_data,%al
		mov    $0x000007,%dl
		mov    %al,_0e4cd9_data
		mov    %dl,_0cfa37_data
		mov    _0cd7a4_data,%al
		mov    $0x000001,%edx
		mov    %al,_0e4cd8_data
		mov    $0x000001,%ah
		mov    %dx,_0cf78e_data
		mov    %ah,_096883_data
		call   _04f7b0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b292_jump:
		cmpw   $0x000004,_0cf78c_data
		jne    _04b2dd_jump
		call   _03715c_func
		test   %al,%al
		je     _04b2dd_jump
		mov    _0cd7a6_data,%al
		mov    %al,_0e4cd9_data
		mov    _0cd7a4_data,%al
		mov    %al,_0e4cd8_data
		mov    $0x000009,%al
		mov    $0x000001,%ch
		mov    %al,_0cfa37_data
		mov    $0x000001,%eax
		mov    %ch,_096883_data
		mov    %ax,_0cf78e_data
		call   _04f7b0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b2dd_jump:
		cmpw   $0x000005,_0cf78c_data
		jne    _04b327_jump
		call   _03715c_func
		test   %al,%al
		je     _04b327_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04b327_jump
		cmpb   $0x000000,_095e63_data
		je     _04b327_jump
		xor    %eax,%eax
		call   _04fb94_func
		test   %al,%al
		je     _04b327_jump
		mov    $0x000001,%bh
		mov    $0x000001,%edi
		mov    %bh,_095eb0_data
		mov    %bh,_0cfa7a_data
		mov    %di,_0cf892_data

	_04b327_jump:
		call   _04f7b0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b334_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		jne    _04b34f_jump
		cmpb   $0x000001,_0cfa39_data
		jne    _04b358_jump

	_04b34f_jump:
		cmpb   $0x000000,_0cfa7a_data
		je     _04b370_jump

	_04b358_jump:
		mov    _0cd7a4_data,%ax
		mov    %ax,_0c2f90_data
		mov    _0cd7a6_data,%ax
		mov    %ax,_0c2f92_data

	_04b370_jump:
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		je     _04b391_jump
		cmpb   $0x000001,_0cfa39_data
		je     _04b391_jump
		cmpb   $0x000000,_0cfa7a_data
		je     _04b3e8_jump

	_04b391_jump:
		cmpb   $0x000000,_095eb6_data
		je     _04b3a4_jump
		mov    _0c2f90_data,%al
		mov    %al,_0cfa50_data

	_04b3a4_jump:
		xor    %cl,%cl
		mov    %cl,_0cfa37_data
		cmpb   $0x000000,_095e63_data
		je     _04b3e3_jump
		push   $0x000002
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0502fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b3e3_jump:
		call   _03cadc_func

	_04b3e8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b3ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0cfa35_data
		jne    _04b407_jump
		movl   $_096888_data,_0e4cb0_data
		jmp    _04b411_jump

	_04b407_jump:
		movl   $_096a88_data,_0e4cb0_data

	_04b411_jump:
		call   _0498a4_func
		mov    $_04b514_func,%ecx
		mov    $_04b8a4_func,%esi
		mov    $_04bacc_func,%edi
		mov    $_04bd50_func,%ebp
		mov    $0x000008,%edx
		mov    %ecx,_0e4cb8_data
		mov    %esi,_0e4cc8_data
		mov    %edi,_0e4cc4_data
		mov    %ebp,_0e4ccc_data
		mov    %dx,_0cf78c_data
		mov    %dx,_0cf7a4_data
		mov    %dx,_0cf754_data
		xor    %edx,%edx
		jmp    _04b471_jump

	_04b460_jump:
		xor    %ebx,%ebx
		mov    _095e5c_data(%eax),%bl
		inc    %edx
		mov    %bx,_0cd7a4_data(,%eax,2)

	_04b471_jump:
		movswl %dx,%eax
		cmp    $0x000007,%eax
		jl     _04b460_jump
		mov    $0x000064,%edi
		mov    $0x00000c,%eax
		xor    %dl,%dl
		xor    %esi,%esi
		mov    %dl,_0e4cff_data
		mov    %si,_0cf78a_data
		mov    %di,_0cf794_data
		mov    $0x000001,%dh
		mov    %ax,_0cf79a_data
		mov    %dh,_0cfa7d_data
		mov    $0x000006,%edx
		mov    _0cfa35_data,%al
		mov    %dx,_0cf77e_data
		cmp    $0x000001,%al
		jb     _04b4c6_jump
		jbe    _04b4d3_jump
		cmp    $0x000002,%al
		je     _04b4dc_jump
		jmp    _04b4e3_jump

	_04b4c6_jump:
		test   %al,%al
		jne    _04b4e3_jump
		movb   $0x00005a,_0e4cfc_data
		jmp    _04b4e3_jump

	_04b4d3_jump:
		movb   $0x000069,_0e4cfc_data
		jmp    _04b4e3_jump

	_04b4dc_jump:
		movb   $0x000078,_0e4cfc_data

	_04b4e3_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e4cfc_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cf76e_data
		mov    $0x000044,%edx
		call   _04f698_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b514_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    _0cfa35_data,%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%al
		jb     _04b539_jump
		jbe    _04b544_jump
		cmp    $0x000002,%al
		je     _04b54b_jump
		jmp    _04b550_jump

	_04b539_jump:
		test   %al,%al
		jne    _04b550_jump
		movb   $0x000014,0x000018(%esp)
		jmp    _04b550_jump

	_04b544_jump:
		movb   $0x000019,0x000018(%esp)
		jmp    _04b550_jump

	_04b54b_jump:
		movb   $0x00002d,0x000018(%esp)

	_04b550_jump:
		mov    $_0967d9_data,%edi
		mov    _0c2eec_data,%esi
		push   %edi

	_04b55c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b574_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b55c_jump

	_04b574_jump:
		pop    %edi
		mov    _0c2eec_data,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%ebx
		inc    %ebx
		movswl %bx,%eax
		movb   $0x00002f,_0967d8_data(%eax)
		xor    %bh,%bh
		mov    _0cf7a4_data,%dx
		mov    %bh,_0967d9_data(%eax)
		xor    %bl,%bl
		test   %dx,%dx
		jl     _04b6f3_jump

	_04b5ac_jump:
		movswl %bx,%ecx
		imul   $0x0000d8,%ecx,%edx
		mov    $_0cbd08_data,%edi
		mov    (%esp,%ecx,1),%al
		add    %edx,%edi
		mov    %al,_0cbddf_data(%edx)
		cmp    $0x000008,%bx
		jne    _04b612_jump
		mov    _0c2ee8_data,%esi
		push   %edi

	_04b5d2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b5ea_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b5d2_jump

	_04b5ea_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    _0cf7b8_data,%ax
		mov    %si,_0cbdd8_data(%edx)
		mov    %ax,_0cbdda_data(%edx)
		mov    (%esp,%ecx,1),%al
		mov    %al,_0cbddf_data(%edx)
		jmp    _04b6b8_jump

	_04b612_jump:
		lea    0x000000(,%ecx,4),%esi
		cmp    $0x000007,%bx
		jne    _04b664_jump
		mov    _0c2e20_data(%esi),%esi
		push   %edi

	_04b626_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b63e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b626_jump

	_04b63e_jump:
		pop    %edi
		mov    _0cf7ba_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    $0x0000a0,%edi
		mov    _0cf7c4_data,%cx
		mov    %di,_0cbdd8_data(%edx)
		add    %ecx,%eax
		jmp    _04b6b1_jump

	_04b664_jump:
		mov    _0c2e20_data(%esi),%esi
		push   %edi

	_04b66b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b683_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b66b_jump

	_04b683_jump:
		pop    %edi
		xor    %eax,%eax
		mov    _0cf76e_data,%cx
		mov    0x000018(%esp),%al
		add    %ecx,%eax
		mov    %ax,_0cbdd8_data(%edx)
		mov    _0cf7ba_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0cf7c4_data,%si
		add    %esi,%eax

	_04b6b1_jump:
		mov    %ax,_0cbdda_data(%edx)

	_04b6b8_jump:
		movswl %bx,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $0x000002,%cl
		xor    %al,%al
		mov    %cl,_0cbddc_data(%edx)
		inc    %ebx
		mov    %al,_0cbddd_data(%edx)
		mov    $_0cbd08_data,%eax
		mov    $0x000001,%ch
		add    %edx,%eax
		mov    %ch,_0cbdde_data(%edx)
		call   _01f21c_func
		cmp    _0cf7a4_data,%bx
		jle    _04b5ac_jump

	_04b6f3_jump:
		mov    $0x000001,%dl
		mov    $_0cbb58_data,%edi
		mov    $0x000002,%bl
		mov    _0cf76e_data,%ax
		mov    _0c2ec0_data,%esi
		add    $0x000050,%eax
		mov    %dl,_0cc576_data
		mov    %ax,_0cc570_data
		xor    %dh,%dh
		mov    $0x000002,%ah
		mov    %dh,_0cc575_data
		mov    %ah,_0cc574_data
		push   %edi

	_04b72a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b742_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b72a_jump

	_04b742_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $_0cbb58_data,%eax
		mov    %bl,_0cbc2c_data
		mov    %bl,_0cbc2e_data
		mov    %dh,_0cbc2d_data
		mov    %si,_0cbc28_data
		mov    %di,_0cbc2a_data
		call   _01f21c_func
		xor    %eax,%eax
		mov    _0cf76e_data,%bx
		mov    _0e4cfc_data,%al
		mov    _0cf7ac_data,%cx
		add    %eax,%eax
		mov    _0cf7ac_data,%dx
		mov    %ax,0x000010(%esp)
		mov    _0cc49a_data,%ax
		mov    _0e4cec_data,%si
		sub    %edx,%eax
		sub    $0x000002,%ebx
		add    $0x000023,%eax
		sub    $0x000019,%ecx
		mov    %ax,0x000014(%esp)
		cmp    %si,%bx
		jge    _04b7c2_jump
		mov    %ebx,%edx
		jmp    _04b7c4_jump

	_04b7c2_jump:
		mov    %esi,%edx

	_04b7c4_jump:
		mov    _0e4cf0_data,%di
		cmp    %di,%cx
		jge    _04b7d4_jump
		mov    %ecx,%eax
		jmp    _04b7d6_jump

	_04b7d4_jump:
		mov    %edi,%eax

	_04b7d6_jump:
		mov    0x00000e(%esp),%ebp
		mov    _0e4cea_data,%esi
		mov    _0e4cf2_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%ebp
		add    %edi,%esi
		movswl %bx,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _04b803_jump
		movswl %dx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _04b808_jump

	_04b803_jump:
		movswl %dx,%esi
		sub    %esi,%edi

	_04b808_jump:
		mov    _0e4cec_data,%ebp
		mov    _0e4cee_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000012(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %cx,%esi
		add    %ebp,%esi
		mov    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jge    _04b83d_jump
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _04b842_jump

	_04b83d_jump:
		movswl %ax,%ebp
		sub    %ebp,%esi

	_04b842_jump:
		mov    %bx,_0e4cec_data
		mov    0x000010(%esp),%ebx
		mov    %cx,_0e4cf0_data
		mov    %bx,_0e4cf4_data
		mov    0x000014(%esp),%ebx
		mov    _095e63_data,%ch
		mov    %bx,_0e4cee_data
		test   %ch,%ch
		je     _04b887_jump
		push   $0x000001
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _0502fc_func
		jmp    _04b89a_jump

	_04b887_jump:
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _050b0c_func

	_04b89a_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b8a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cfa35_data,%al
		cmp    $0x000001,%al
		jb     _04b8be_jump
		jbe    _04b8c9_jump
		cmp    $0x000002,%al
		je     _04b8d0_jump
		jmp    _04b8d5_jump

	_04b8be_jump:
		test   %al,%al
		jne    _04b8d5_jump
		movb   $0x00003e,0x000004(%esp)
		jmp    _04b8d5_jump

	_04b8c9_jump:
		movb   $0x000046,0x000004(%esp)
		jmp    _04b8d5_jump

	_04b8d0_jump:
		movb   $0x00004b,0x000004(%esp)

	_04b8d5_jump:
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04b90b_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04b90b_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf7aa_data,%ebx
		mov    $_0967d8_data,%eax
		sar    $0x000010,%ebx
		call   _01a3f0_func
		xor    %bh,%bh
		mov    $_0cc4a0_data,%ebp
		mov    %bh,0x000008(%esp)
		jmp    _04baaa_jump

	_04b93a_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		mov    _0cbdd8_data(%eax),%bx
		mov    _0cf78c_data,%cx
		mov    %bx,(%esp)
		mov    _0cbdda_data(%eax),%bx
		cmp    %cx,%dx
		je     _04b986_jump
		xor    %edx,%edx
		mov    $0x000002,%ecx
		mov    _0cbddf_data(%eax),%dl
		movswl %bx,%ebx
		push   %edx
		mov    0x000002(%esp),%edx
		add    $_0cbd08_data,%eax
		sar    $0x000010,%edx
		call   _01a3f0_func
		jmp    _04b9a3_jump

	_04b986_jump:
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0cbd08_data,%eax
		call   _04f800_func

	_04b9a3_jump:
		mov    _0cf7a2_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000008(%esp),%dl
		dec    %eax
		cmp    %eax,%edx
		jge    _04baa6_jump
		cmpb   $0x000000,_0e4cff_data
		je     _04ba5d_jump
		xor    %eax,%eax
		mov    _0cf78c_data,%si
		mov    %dl,%al
		cmp    %si,%ax
		jne    _04ba5d_jump
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		mov    _0cd7a2_data(,%eax,2),%eax
		mov    _0e4cb0_data,%esi
		sar    $0x000010,%eax
		mov    %ebp,%edi
		mov    (%esi,%eax,4),%esi
		push   %edi

	_04b9f9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04ba11_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b9f9_jump

	_04ba11_jump:
		pop    %edi
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    _0cbddf_data(%eax),%dl
		mov    %dl,_0cc577_data
		mov    _0cbdda_data(%eax),%ax
		mov    %ax,_0cc572_data
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%al
		add    %eax,%edx
		mov    %ebp,%eax
		mov    %dx,_0cc570_data
		call   _01f21c_func
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _04f800_func
		jmp    _04baa6_jump

	_04ba5d_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%ebx
		mov    (%esp),%edi
		mov    $0x000002,%ecx
		xor    %edx,%edx
		mov    _0e4cb0_data,%esi
		mov    _0cbddf_data(%ebx),%dl
		mov    _0cd7a2_data(,%eax,2),%eax
		push   %edx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _0cbdd8_data(%ebx),%ebx
		mov    0x000008(%esp),%dl
		sar    $0x000010,%ebx
		add    %edi,%edx
		mov    (%esi,%eax,4),%eax
		movswl %dx,%edx
		call   _01a3f0_func

	_04baa6_jump:
		incb   0x000008(%esp)

	_04baaa_jump:
		xor    %edx,%edx
		mov    _0cf7a4_data,%bx
		mov    0x000008(%esp),%dl
		cmp    %bx,%dx
		jle    _04b93a_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bacc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf7a4_data,%si
		call   _04f76c_func
		cmpb   $0x000000,_0e4cff_data
		jne    _04bcfb_jump
		call   _037280_func
		test   %al,%al
		je     _04bafa_jump
		movb   $0x000001,_0cfa39_data

	_04bafa_jump:
		call   _041d54_func
		test   %ax,%ax
		jne    _04bbbf_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _04bbbf_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04bb53_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04bbbf_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04bbbf_jump

	_04bb53_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04bb89_jump
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%ax
		test   %ax,%ax
		jne    _04bb7d_jump
		movw   $0x000008,_0cf78c_data
		jmp    _04bbbf_jump

	_04bb7d_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0cf78c_data
		jmp    _04bbbf_jump

	_04bb89_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04bbbf_jump
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%bx
		cmp    $0x000008,%bx
		jne    _04bbb5_jump
		xor    %edi,%edi
		mov    %di,_0cf78c_data
		jmp    _04bbbf_jump

	_04bbb5_jump:
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0cf78c_data

	_04bbbf_jump:
		cmpw   $0x000007,_0cf78c_data
		jne    _04bc33_jump
		call   _03715c_func
		test   %al,%al
		je     _04bc33_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04bc33_jump
		mov    $0x00004b,%ebx
		mov    $0x000048,%ecx
		mov    $0x00004d,%edi
		mov    $0x000050,%eax
		mov    $0x00001d,%edx
		mov    %bx,_0cd7a4_data
		mov    %cx,_0cd7a6_data
		mov    %di,_0cd7a8_data
		mov    %ax,_0cd7aa_data
		mov    %dx,_0cd7ac_data
		mov    $0x000038,%ebx
		mov    $0x00002d,%ecx
		mov    %bx,_0cd7ae_data
		mov    %cx,_0cd7b0_data
		jmp    _04bd3d_jump

	_04bc33_jump:
		mov    _0cf78c_data,%di
		test   %di,%di
		jl     _04bc75_jump
		cmp    $0x000006,%di
		jg     _04bc75_jump
		call   _03715c_func
		test   %al,%al
		je     _04bc75_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04bc75_jump
		movb   $0x000001,_0e4cff_data
		call   _04271c_func
		call   _04f7b0_func
		mov    _0cf7a4_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04bc75_jump:
		cmpw   $0x000008,_0cf78c_data
		jne    _04bd3d_jump
		call   _03715c_func
		test   %al,%al
		je     _04bd3d_jump
		mov    _0cf7a4_data,%si
		xor    %ecx,%ecx
		mov    %esi,%eax
		test   %si,%si
		jg     _04bcce_jump
		jmp    _04bcd3_jump

	_04bca2_jump:
		mov    %ecx,%eax

	_04bca4_jump:
		inc    %eax
		movswl %cx,%edx
		lea    0x000000(,%edx,2),%ebx
		movswl %ax,%edx
		mov    _0cd7a4_data(%ebx),%bx
		cmp    _0cd7a4_data(,%edx,2),%bx
		je     _04bcc8_jump
		cmp    %si,%ax
		jl     _04bca4_jump

	_04bcc8_jump:
		inc    %ecx
		cmp    %si,%cx
		jge    _04bcd3_jump

	_04bcce_jump:
		cmp    %si,%ax
		je     _04bca2_jump

	_04bcd3_jump:
		mov    %si,_0cf7a4_data
		cmp    %si,%ax
		jge    _04bd3d_jump
		mov    $_0cbb58_data,%eax
		call   _04f904_func
		call   _04f7b0_func
		mov    _0cf7a4_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04bcfb_jump:
		xor    %ecx,%ecx
		xor    %ebx,%ebx

	_04bcff_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _041cb0_func
		test   %al,%al
		je     _04bd35_jump
		mov    _0e4cb0_data,%edx
		movswl %cx,%eax
		cmp    (%edx,%eax,4),%ebx
		je     _04bd35_jump
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		mov    %bl,_0e4cff_data
		mov    %cx,_0cd7a4_data(,%eax,2)
		call   _04271c_func

	_04bd35_jump:
		inc    %ecx
		cmp    $0x000080,%cx
		jl     _04bcff_jump

	_04bd3d_jump:
		call   _04f7b0_func
		mov    _0cf7a4_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bd50_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cfa39_data,%dl
		mov    %ah,_0cfa37_data
		test   %dl,%dl
		jne    _04bd8a_jump
		xor    %dh,%dh
		jmp    _04bd76_jump

	_04bd68_jump:
		mov    _0cd7a4_data(,%eax,2),%bl
		inc    %edx
		mov    %bl,_095e5c_data(%eax)

	_04bd76_jump:
		mov    _0cf7a2_data,%ebx
		sar    $0x000010,%ebx
		movswl %dx,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jl     _04bd68_jump
		pop    %edx
		pop    %ebx
		ret    

	_04bd8a_jump:
		xor    %dh,%dh
		mov    _095e63_data,%bl
		mov    %dh,_096883_data
		test   %bl,%bl
		jne    _04bda1_jump
		call   _03cadc_func

	_04bda1_jump:
		pop    %edx
		pop    %ebx
		ret    



_04bda4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04bda4_func,%edx
		mov    $_04be04_func,%ebx
		mov    $_04bf60_func,%ecx
		mov    $_04c138_func,%esi
		mov    $_04c390_func,%edi
		mov    %edx,_0e4cbc_data
		mov    %ebx,_0e4cb8_data
		mov    %ecx,_0e4cc8_data
		mov    %esi,_0e4cc4_data
		xor    %edx,%edx
		mov    %edi,_0e4ccc_data
		mov    %dx,_0c97f6_data
		mov    %dx,_0c97f4_data
		mov    %dx,_0c97f2_data
		mov    %dx,_0c97f0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04be04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %edx,%edx
		mov    $0x00000c,%ecx
		mov    %dx,_0cf78a_data
		mov    %cx,_0cf79a_data
		mov    %dx,_0cf78c_data
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_096881_data
		imul   $0x000014,%ecx,%edx
		mov    %esp,%edi
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $_0492b5_jump,%esi
		xor    %ebp,%ebp
		mov    %ah,_0cfa7d_data
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %bx,_0cf794_data
		mov    $0x000006,%esi
		mov    $0x000004,%eax
		mov    $_0cbd08_data,%ebx
		mov    %si,_0cf77e_data
		mov    %ax,_0cf7a4_data
		add    $0x000046,%edx
		mov    %ax,_0cf754_data
		mov    %edx,0x000008(%esp)

	_04be7e_jump:
		xor    %dh,%dh
		mov    %dh,_0e4cf6_data(%ecx)
		imul   $0x0000d8,%ecx,%edx
		movb   $0x000002,_0cbddc_data(%edx)
		movb   $0x000001,_0cbdde_data(%edx)
		xor    %al,%al
		mov    %al,_0cbddd_data(%edx)
		cmp    $0x000004,%ecx
		jne    _04beed_jump
		mov    $0x0000a0,%eax
		mov    $0x00009b,%esi
		mov    %ebx,%edi
		mov    %si,_0cbdda_data(%edx)
		mov    _0c2ee8_data,%esi
		mov    %ax,_0cbdd8_data(%edx)
		push   %edi

	_04bec8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bee0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bec8_jump

	_04bee0_jump:
		pop    %edi
		mov    0x000004(%esp),%al
		mov    %al,_0cbddf_data(%edx)
		jmp    _04bf2f_jump

	_04beed_jump:
		mov    $0x000078,%edi
		mov    _0c2ed0_data(%ebp),%esi
		mov    %di,_0cbdd8_data(%edx)
		mov    %ebx,%edi
		push   %edi

	_04bf02_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04bf1a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bf02_jump

	_04bf1a_jump:
		pop    %edi
		mov    (%esp,%ecx,1),%al
		mov    0x000008(%esp),%esi
		mov    %al,_0cbddf_data(%edx)
		mov    %si,_0cbdda_data(%edx)

	_04bf2f_jump:
		mov    %ebx,%eax
		mov    0x000008(%esp),%esi
		call   _01f21c_func
		add    $0x000004,%ebp
		inc    %ecx
		add    $0x000014,%esi
		add    $0x0000d8,%ebx
		mov    %esi,0x000008(%esp)
		cmp    $0x000004,%ecx
		jle    _04be7e_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bf60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %esp,%edi
		mov    $_0492ba_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04bfa8_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04bfa8_jump:
		mov    $0x000001,%edx
		mov    $_0cc4a0_data,%eax
		call   _04f800_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)
		mov    $0x000028,%ebp

	_04bfc2_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%eax
		mov    _0cbdd8_data(%eax),%bx
		mov    _0cbdda_data(%eax),%si
		mov    %bx,0x000008(%esp)
		cmp    $0x000004,%dl
		jae    _04c093_jump
		cmpb   $0x000000,_0e4cf6_data(%edx)
		je     _04c018_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x000014,%eax,%eax
		push   $0x000000
		mov    $0x000009,%ecx
		add    $0x00003b,%eax
		mov    $0x000022,%ebx
		movswl %ax,%edx
		mov    $0x0000c0,%eax
		call   _0241fc_func

	_04c018_jump:
		movzbl 0x00000c(%esp),%edi
		cmpw   $0x000002,_0c97f0_data(,%edi,2)
		jne    _04c06d_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000002
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _01a1c4_func
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    (%esp,%edi,1),%al
		mov    $0x0000e9,%edx
		push   %eax
		movswl %si,%ebx
		mov    $_0c1210_data,%eax
		call   _01a3f0_func
		jmp    _04c093_jump

	_04c06d_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000001
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _01a1c4_func

	_04c093_jump:
		xor    %eax,%eax
		mov    _0cf78c_data,%bx
		mov    0x00000c(%esp),%al
		cmp    %bx,%ax
		je     _04c0d2_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		xor    %edx,%edx
		mov    (%esp,%eax,1),%dl
		imul   $0x0000d8,%eax,%eax
		mov    $0x000002,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		movswl %si,%ebx
		sar    $0x000010,%edx
		add    $_0cbd08_data,%eax
		call   _01a3f0_func
		jmp    _04c0fd_jump

	_04c0d2_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%ebx
		mov    (%esp,%edx,1),%al
		mov    %al,_0cbddf_data(%ebx)
		add    $_0cbd08_data,%ebx
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01f21c_func
		mov    %ebx,%eax
		call   _04f800_func

	_04c0fd_jump:
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000004,%dh
		jbe    _04bfc2_jump
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000af,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2ee0_data,%eax
		call   _01a3f0_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c138_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _04f76c_func
		cmpw   $0x000001,_0cf7f6_data
		jne    _04c16d_jump
		mov    _0c97f0_data,%bx
		test   %bx,%bx
		jne    _04c16d_jump
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		jne    _04c16d_jump
		mov    %bx,_0cf7f6_data

	_04c16d_jump:
		call   _037280_func
		test   %al,%al
		je     _04c17d_jump
		movb   $0x000001,_0cfa39_data

	_04c17d_jump:
		cmpb   $0x000000,_0cfa7d_data
		jne    _04c1ba_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04c23a_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04c23a_jump

	_04c1ba_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04c1fb_jump
		mov    $0x000044,%eax
		call   _072960_func
		xor    %eax,%eax
		mov    _0cf78c_data,%cx
		mov    _096881_data,%al
		cmp    %cx,%ax
		jne    _04c1ef_jump
		mov    _0cf754_data,%ax
		mov    %ax,_0cf78c_data
		jmp    _04c23a_jump

	_04c1ef_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0cf78c_data
		jmp    _04c23a_jump

	_04c1fb_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04c23a_jump
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%ax
		mov    _0cf754_data,%dx
		cmp    %dx,%ax
		jne    _04c230_jump
		xor    %edx,%eax
		mov    _096881_data,%al
		mov    %ax,_0cf78c_data
		jmp    _04c23a_jump

	_04c230_jump:
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0cf78c_data

	_04c23a_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa51_data
		call   _041ea4_func
		test   %ax,%ax
		je     _04c277_jump
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		je     _04c277_jump
		cmpb   $0x000000,_0e4cf6_data
		jne    _04c26e_jump
		mov    $0x000044,%eax
		call   _072960_func

	_04c26e_jump:
		movb   $0x000001,_0e4cf6_data
		jmp    _04c291_jump

	_04c277_jump:
		cmpb   $0x000000,_0e4cf6_data
		je     _04c289_jump
		movw   $0x000002,_0c97f0_data

	_04c289_jump:
		xor    %bh,%bh
		mov    %bh,_0e4cf6_data

	_04c291_jump:
		call   _041f30_func
		test   %ax,%ax
		je     _04c2c6_jump
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		je     _04c2c6_jump
		cmpb   $0x000000,_0e4cf7_data
		jne    _04c2bd_jump
		mov    $0x000044,%eax
		call   _072960_func

	_04c2bd_jump:
		movb   $0x000001,_0e4cf7_data
		jmp    _04c2e0_jump

	_04c2c6_jump:
		cmpb   $0x000000,_0e4cf7_data
		je     _04c2d8_jump
		movw   $0x000002,_0c97f2_data

	_04c2d8_jump:
		xor    %ah,%ah
		mov    %ah,_0e4cf7_data

	_04c2e0_jump:
		call   _041fbc_func
		test   %ax,%ax
		je     _04c315_jump
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		je     _04c315_jump
		cmpb   $0x000000,_0e4cf8_data
		jne    _04c30c_jump
		mov    $0x000044,%eax
		call   _072960_func

	_04c30c_jump:
		movb   $0x000001,_0e4cf8_data
		jmp    _04c32f_jump

	_04c315_jump:
		cmpb   $0x000000,_0e4cf8_data
		je     _04c327_jump
		movw   $0x000002,_0c97f4_data

	_04c327_jump:
		xor    %bh,%bh
		mov    %bh,_0e4cf8_data

	_04c32f_jump:
		call   _042048_func
		test   %ax,%ax
		je     _04c364_jump
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		je     _04c364_jump
		cmpb   $0x000000,_0e4cf9_data
		jne    _04c35b_jump
		mov    $0x000044,%eax
		call   _072960_func

	_04c35b_jump:
		movb   $0x000001,_0e4cf9_data
		jmp    _04c37e_jump

	_04c364_jump:
		cmpb   $0x000000,_0e4cf9_data
		je     _04c376_jump
		movw   $0x000002,_0c97f6_data

	_04c376_jump:
		xor    %ah,%ah
		mov    %ah,_0e4cf9_data

	_04c37e_jump:
		movb   $0x000001,_0cfa51_data
		call   _04f7b0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c390_func:
		push   %ebx
		push   %edx
		push   %esi
		xor    %eax,%eax

	_04c395_jump:
		movswl %ax,%edx
		cmpw   $0x000000,_0c97f0_data(,%edx,2)
		sete   %bl
		xor    %bh,%bh
		inc    %eax
		mov    %bx,_0c97f0_data(,%edx,2)
		cmp    $0x000004,%ax
		jl     _04c395_jump
		mov    %bh,_0cfa39_data
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,_0cf78e_data
		mov    %edx,_0e4ccc_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_04c3d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04c4d0_func,%edx
		mov    $_04c854_func,%ebx
		mov    $_04c9d8_func,%ecx
		mov    $_04cd38_func,%esi
		mov    $0x000064,%edi
		mov    _0c2f88_data,%ax
		mov    %edx,_0e4cb8_data
		mov    %ebx,_0e4cc8_data
		mov    %ecx,_0e4cc4_data
		mov    %esi,_0e4ccc_data
		mov    %ax,_0cd7a6_data
		mov    %di,_0cf794_data
		mov    $0x000005,%edx
		mov    _0c2f8a_data,%ax
		xor    %esi,%esi
		mov    %ax,_0cd7a8_data
		mov    %dx,_0cf78c_data
		mov    %dx,_0cf7a4_data
		mov    %dx,_0cf754_data
		mov    %si,_0cf78a_data
		mov    _0c2f8e_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0cd7aa_data
		xor    %ah,%ah
		mov    %dl,_0cfa7d_data
		mov    %ah,_096881_data
		mov    $0x00000c,%eax
		mov    $0x000006,%edx
		mov    %ax,_0cf79a_data
		mov    _0cfa35_data,%al
		mov    %dx,_0cf77e_data
		cmp    $0x000001,%al
		jb     _04c48c_jump
		jbe    _04c499_jump
		cmp    $0x000002,%al
		je     _04c499_jump
		jmp    _04c4a0_jump

	_04c48c_jump:
		test   %al,%al
		jne    _04c4a0_jump
		movb   $0x000041,_0e4cfc_data
		jmp    _04c4a0_jump

	_04c499_jump:
		movb   $0x000069,_0e4cfc_data

	_04c4a0_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e4cfc_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cf76e_data
		mov    $0x00003c,%edx
		call   _04f698_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c4d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    %esp,%edi
		mov    $_0492bf_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0967d8_data,%edi
		mov    _0c2ef0_data,%esi
		push   %edi

	_04c4ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c507_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c4ef_jump

	_04c507_jump:
		pop    %edi
		mov    _096881_data,%al
		mov    %al,0x000030(%esp)
		jmp    _04c6b8_jump

	_04c516_jump:
		mov    %eax,%ebx
		imul   $0x0000d8,%eax,%ebp
		sub    %edx,%ebx
		mov    (%esp,%ebx,1),%dl
		movzbw %al,%si
		mov    %dl,_0cbddf_data(%ebp)
		xor    %edx,%edx
		mov    %esi,%ebx
		mov    _096881_data,%dl
		sub    %edx,%ebx
		mov    %ebx,%edx
		mov    _0cf7ba_data,%bx
		add    $0x00000f,%ebx
		imul   %ebx,%edx
		add    _0cf7c4_data,%dx
		mov    $0x000001,%bl
		mov    %dx,_0cbdda_data(%ebp)
		mov    $0x000002,%dh
		mov    %bl,_0cbdde_data(%ebp)
		mov    _0cf754_data,%cx
		mov    %dh,_0cbddc_data(%ebp)
		mov    $_0cbd08_data,%edx
		xor    %bh,%bh
		add    %ebp,%edx
		mov    %bh,_0cbddd_data(%ebp)
		cmp    %cx,%si
		jne    _04c5be_jump
		mov    _0c2ee8_data,%esi
		mov    %edx,%edi
		push   %edi

	_04c58a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c5a2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c58a_jump

	_04c5a2_jump:
		pop    %edi
		movw   $0x0000a0,_0cbdd8_data(%ebp)
		mov    _0cf7b8_data,%ax
		mov    %ax,_0cbdda_data(%ebp)
		jmp    _04c69e_jump

	_04c5be_jump:
		test   %al,%al
		jne    _04c5f5_jump
		mov    $0x0000a0,%edi
		mov    _0c2e88_data,%esi
		mov    %di,_0cbdd8_data(%ebp)
		mov    %edx,%edi
		push   %edi

	_04c5d7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c5ef_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c5d7_jump

	_04c5ef_jump:
		pop    %edi
		jmp    _04c69e_jump

	_04c5f5_jump:
		mov    0x000030(%esp),%ch
		shl    $0x000002,%eax
		cmp    $0x000004,%ch
		jne    _04c631_jump
		mov    $0x0000a0,%esi
		mov    %edx,%edi
		mov    %si,_0cbdd8_data(%ebp)
		mov    _0c2e2c_data(%eax),%esi
		push   %edi

	_04c616_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c62e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c616_jump

	_04c62e_jump:
		pop    %edi
		jmp    _04c69e_jump

	_04c631_jump:
		mov    $0x000001,%ecx
		mov    %edx,%edi
		mov    _0c2e2c_data(%eax),%esi
		mov    $0x000008,%ebx
		push   %edi

	_04c644_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c65c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c644_jump

	_04c65c_jump:
		pop    %edi
		push   $0x000002
		mov    $0xffffffff,%edx
		mov    %edi,%eax
		call   _01f1b0_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c1170_data,%eax
		add    $0x000010,%esi
		call   _01f1b0_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0cbdd8_data(%ebp)

	_04c69e_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x0000d8,%eax,%eax
		add    $_0cbd08_data,%eax
		call   _01f21c_func
		incb   0x000030(%esp)

	_04c6b8_jump:
		mov    _0cf7a2_data,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _096881_data,%dl
		sar    $0x000010,%esi
		mov    0x000030(%esp),%al
		add    %edx,%esi
		cmp    %esi,%eax
		jle    _04c516_jump
		xor    %eax,%eax
		mov    _0e4cfc_data,%al
		mov    _0cf752_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,0x000028(%esp)
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		sub    %esi,%eax
		mov    _0cf76e_data,%dx
		mov    _0cf7ac_data,%bx
		mov    _0cbdda_data(,%eax,8),%ax
		mov    _0cf7ac_data,%cx
		mov    %eax,%edi
		sub    $0x000019,%ebx
		sub    %ecx,%edi
		mov    _0e4cec_data,%si
		add    $0x000023,%edi
		cmp    %si,%dx
		jge    _04c735_jump
		mov    %edx,%ecx
		jmp    _04c737_jump

	_04c735_jump:
		mov    %esi,%ecx

	_04c737_jump:
		mov    _0e4cf0_data,%ax
		cmp    %ax,%bx
		jge    _04c744_jump
		mov    %ebx,%eax

	_04c744_jump:
		mov    _0e4cea_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000020(%esp)
		mov    _0e4cf2_data,%esi
		mov    0x000020(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000026(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00001c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04c789_jump
		movswl %cx,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000024(%esp)
		jmp    _04c792_jump

	_04c789_jump:
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000024(%esp)

	_04c792_jump:
		mov    0x000024(%esp),%esi
		mov    %si,0x00002c(%esp)
		mov    _0e4cee_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000018(%esp)
		mov    _0e4cec_data,%esi
		mov    0x000018(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %bx,%ebp
		mov    %ebp,0x000010(%esp)
		movswl %di,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000010(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04c7dc_jump
		movswl %ax,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000014(%esp)
		jmp    _04c7e5_jump

	_04c7dc_jump:
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000014(%esp)

	_04c7e5_jump:
		mov    0x000014(%esp),%esi
		mov    %dx,_0e4cec_data
		mov    0x000028(%esp),%edx
		mov    %bx,_0e4cf0_data
		mov    %dx,_0e4cf4_data
		mov    _095e63_data,%dl
		mov    %di,_0e4cee_data
		test   %dl,%dl
		je     _04c830_jump
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		movswl %si,%edx
		cwtl   
		sar    $0x000010,%ebx
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _0502fc_func
		jmp    _04c847_jump

	_04c830_jump:
		mov    0x00002a(%esp),%ebx
		movswl %si,%esi
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %esi,%ecx
		call   _050b0c_func

	_04c847_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c854_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_0492c8_switch,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04c89e_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04c89e_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf7aa_data,%ebx
		mov    $_0967d8_data,%eax
		sar    $0x000010,%ebx
		call   _01a3f0_func
		mov    _096881_data,%al
		mov    %al,0x000018(%esp)
		mov    $0x000002,%ebp
		jmp    _04c9ab_jump

	_04c8d0_jump:
		imul   $0x0000d8,%eax,%eax
		mov    _0cbdd8_data(%eax),%dx
		mov    %dx,0x000010(%esp)
		mov    _0cbdda_data(%eax),%dx
		mov    %dx,0x000014(%esp)
		xor    %edx,%edx
		mov    _0cf78c_data,%bx
		mov    0x000018(%esp),%dl
		cmp    %bx,%dx
		je     _04c925_jump
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    _0cbddf_data(%eax),%dl
		sar    $0x000010,%ebx
		push   %edx
		mov    0x000012(%esp),%edx
		add    $_0cbd08_data,%eax
		sar    $0x000010,%edx
		call   _01a3f0_func
		jmp    _04c942_jump

	_04c925_jump:
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0cbd08_data,%eax
		call   _04f800_func

	_04c942_jump:
		mov    0x000018(%esp),%dl
		test   %dl,%dl
		jbe    _04c9a7_jump
		cmp    $0x000004,%dl
		jae    _04c9a7_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%esi
		mov    $_0cbd08_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		push   %ebp
		mov    $0xffffffff,%edx
		add    %esi,%eax
		call   _01f1b0_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0cbddf_data(%esi),%al
		add    $0x000010,%edx
		push   %eax
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		mov    0x000016(%esp),%ebx
		movswl %ax,%edx
		mov    _0cd7a2_data(,%edi,2),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		call   _01a3f0_func

	_04c9a7_jump:
		incb   0x000018(%esp)

	_04c9ab_jump:
		xor    %eax,%eax
		mov    _0cf7a2_data,%edx
		mov    _096881_data,%al
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %edx,%eax
		jle    _04c8d0_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c9d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04f76c_func
		call   _037280_func
		mov    $0x000004,%cl
		test   %al,%al
		je     _04c9f4_jump
		movb   $0x000001,_0cfa39_data

	_04c9f4_jump:
		cmpb   $0x000000,_0cfa7d_data
		jne    _04ca31_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04cab0_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04cab0_jump

	_04ca31_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04ca71_jump
		mov    $0x000044,%eax
		call   _072960_func
		xor    %eax,%eax
		mov    _0cf78c_data,%di
		mov    _096881_data,%al
		cmp    %di,%ax
		jne    _04ca66_jump
		mov    _0cf754_data,%ax
		mov    %ax,_0cf78c_data
		jmp    _04cab0_jump

	_04ca66_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,_0cf78c_data
		jmp    _04cab0_jump

	_04ca71_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04cab0_jump
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%ax
		mov    _0cf754_data,%bx
		cmp    %bx,%ax
		jne    _04caa6_jump
		xor    %ebx,%eax
		mov    _096881_data,%al
		mov    %ax,_0cf78c_data
		jmp    _04cab0_jump

	_04caa6_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0cf78c_data

	_04cab0_jump:
		cmpw   $0x000000,_0cf78c_data
		jne    _04cb98_jump
		call   _03715c_func
		test   %al,%al
		je     _04cb98_jump
		xor    %cl,%cl
		mov    %cl,_0cfa51_data
		cmpb   $0x000000,_095e63_data
		jne    _04cae1_jump
		call   _03cadc_func

	_04cae1_jump:
		call   _04eb28_func
		cmpb   $0x000000,_095eb2_data
		jne    _04cb81_jump
		mov    $0x0000ff,%ah
		mov    $0xffffffff,%ebx
		mov    _095e63_data,%dh
		mov    %ah,_0cfa1c_data
		mov    %ah,_0cfa23_data
		mov    %bx,_0cf748_data
		mov    %bx,_0cf750_data
		mov    %bx,_0cf74a_data
		mov    %bx,_0cf752_data
		mov    %bx,_0cf74e_data
		mov    %bx,_0cf74c_data
		mov    %bx,_0c97f0_data
		mov    %bx,_0c97f2_data
		mov    %bx,_0c97f4_data
		mov    $0x000001,%eax
		mov    %bx,_0c97f6_data
		mov    %ax,_0cf78e_data
		test   %dh,%dh
		jne    _04cb77_jump
		call   _03cadc_func
		call   _04a44c_func
		call   _04a628_func
		call   _03ca8c_func
		jmp    _04cb81_jump

	_04cb77_jump:
		call   _04a44c_func
		call   _04a628_func

	_04cb81_jump:
		movb   $0x000001,_0cfa51_data
		call   _042134_func
		call   _04f7b0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04cb98_jump:
		mov    _0cf78c_data,%bx
		cmp    $0x000001,%bx
		jl     _04ccf1_jump
		cmp    $0x000003,%bx
		jg     _04ccf1_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04ccf1_jump
		xor    %bh,%bh
		mov    %bh,_0cfa51_data
		call   _041f30_func
		test   %ax,%ax
		je     _04cbed_jump
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000001,_0cd7a4_data(,%edx,2)
		je     _04cbed_jump
		mov    $0x000001,%cl
		jmp    _04cc51_jump

	_04cbed_jump:
		call   _041ea4_func
		test   %ax,%ax
		je     _04cc0f_jump
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0cd7a4_data(,%edx,2)
		je     _04cc0f_jump
		xor    %cl,%cl
		jmp    _04cc51_jump

	_04cc0f_jump:
		call   _041fbc_func
		test   %ax,%ax
		je     _04cc31_jump
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000002,_0cd7a4_data(,%edx,2)
		je     _04cc31_jump
		mov    $0x000002,%cl
		jmp    _04cc51_jump

	_04cc31_jump:
		call   _042048_func
		test   %ax,%ax
		je     _04cc51_jump
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000003,_0cd7a4_data(,%edx,2)
		je     _04cc51_jump
		mov    $0x000003,%cl

	_04cc51_jump:
		cmp    $0x000004,%cl
		je     _04ccdf_jump
		xor    %eax,%eax
		mov    _0cd7a6_data,%si
		mov    %cl,%al
		cmp    %si,%ax
		je     _04cc87_jump
		cmp    _0cd7a8_data,%ax
		je     _04cc87_jump
		cmp    _0cd7aa_data,%ax
		je     _04cc87_jump
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		jmp    _04ccd7_jump

	_04cc87_jump:
		mov    $0x000044,%eax
		call   _072960_func
		mov    $0x000001,%al
		jmp    _04cc97_jump

	_04cc95_jump:
		inc    %al

	_04cc97_jump:
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,2),%ebx
		xor    %edx,%edx
		mov    _0cd7a4_data(%ebx),%si
		mov    %cl,%dl
		cmp    %si,%dx
		je     _04ccb6_jump
		cmp    $0x000003,%al
		jbe    _04cc95_jump

	_04ccb6_jump:
		mov    _0cf78a_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    %al,%bl
		mov    _0cd7a4_data(,%edx,2),%ax
		mov    %ax,_0cd7a4_data(,%ebx,2)
		xor    %eax,%eax
		mov    %cl,%al

	_04ccd7_jump:
		mov    %ax,_0cd7a4_data(,%edx,2)

	_04ccdf_jump:
		movb   $0x000001,_0cfa51_data
		call   _04f7b0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ccf1_jump:
		cmpw   $0x000004,_0cf78c_data
		jne    _04cd2d_jump
		call   _03715c_func
		test   %al,%al
		je     _04cd2d_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04cd2d_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ax,_0cd7a6_data
		mov    %dx,_0cd7a8_data
		mov    %bx,_0cd7aa_data

	_04cd2d_jump:
		call   _04f7b0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04cd38_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cfa39_data,%dl
		mov    %ah,_0cfa37_data
		test   %dl,%dl
		jne    _04cd78_jump
		mov    _0cd7a6_data,%ax
		mov    %ax,_0c2f88_data
		mov    _0cd7a8_data,%ax
		mov    %ax,_0c2f8a_data
		mov    _0cd7aa_data,%ax
		mov    %ax,_0c2f8e_data
		call   _041af0_func
		pop    %edx
		pop    %ebx
		ret    

	_04cd78_jump:
		xor    %dh,%dh
		mov    _095e63_data,%bl
		mov    %dh,_096883_data
		test   %bl,%bl
		jne    _04cd8f_jump
		call   _03cadc_func

	_04cd8f_jump:
		pop    %edx
		pop    %ebx
		ret    



_04cd94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e4cfc_data,%cl
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $0x00000c,%esi
		mov    $0x000006,%edi
		xor    %edx,%edx
		mov    %ah,_0cfa7d_data
		mov    %dx,_0cf78a_data
		mov    %bx,_0cf794_data
		mov    %si,_0cf79a_data
		mov    _0cd7a6_data,%ax
		mov    %di,_0cf77e_data
		test   %ax,%ax
		jne    _04cf5d_jump
		cmpb   $0x000000,_0cfa33_data
		je     _04cf5d_jump
		cmpb   $0x000000,_095e63_data
		je     _04ced6_jump
		cmpw   $0x000006,_0cf88c_data
		jne    _04ce11_jump
		cmpw   $0x000004,_0cf87c_data
		je     _04ce42_jump

	_04ce11_jump:
		cmpb   $0x000000,_0cfa57_data
		jne    _04ce42_jump
		mov    $0x000005,%edi
		mov    $0x000004,%eax
		mov    $0x000002,%ch
		mov    %di,_0cf78c_data
		mov    %ax,_0cf7a4_data
		mov    %ch,_096881_data
		mov    %di,_0cf754_data
		jmp    _04ce6e_jump

	_04ce42_jump:
		mov    $0x000004,%edx
		mov    $0x000003,%ebx
		mov    $0x000005,%esi
		mov    %dx,_0cf78c_data
		mov    %bx,_0cf7a4_data
		mov    $0x000003,%bh
		mov    %si,_0cf754_data
		mov    %bh,_096881_data

	_04ce6e_jump:
		mov    _0cfa35_data,%al
		cmp    $0x000001,%al
		jb     _04ce7f_jump
		jbe    _04ce83_jump
		cmp    $0x000002,%al
		je     _04ce87_jump
		jmp    _04ce89_jump

	_04ce7f_jump:
		test   %al,%al
		jne    _04ce89_jump

	_04ce83_jump:
		mov    $0x00006e,%cl
		jmp    _04ce89_jump

	_04ce87_jump:
		mov    $0x000078,%cl

	_04ce89_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cf76e_data
		mov    $0x00003c,%edx
		mov    %cl,_0e4cfc_data
		call   _04f698_func
		mov    _0cf7a4_data,%bx
		dec    %ebx
		mov    _0e4cfc_data,%cl
		mov    %bx,_0cf7a4_data
		mov    %cl,_0e4cfc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ced6_jump:
		mov    $0x000007,%eax
		mov    $0x000001,%dh
		mov    %ax,_0cf78c_data
		mov    %ax,_0cf7a4_data
		mov    %ax,_0cf754_data
		mov    _0cfa35_data,%al
		mov    %dh,_096881_data
		cmp    %dh,%al
		jb     _04cf06_jump
		jbe    _04cf0a_jump
		cmp    $0x000002,%al
		je     _04cf0e_jump
		jmp    _04cf10_jump

	_04cf06_jump:
		test   %al,%al
		jne    _04cf10_jump

	_04cf0a_jump:
		mov    $0x000078,%cl
		jmp    _04cf10_jump

	_04cf0e_jump:
		mov    $0x00007d,%cl

	_04cf10_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cf76e_data
		mov    $0x000046,%edx
		mov    %cl,_0e4cfc_data
		call   _04f698_func
		mov    _0cf7a4_data,%si
		dec    %esi
		mov    _0e4cfc_data,%cl
		mov    %si,_0cf7a4_data
		mov    %cl,_0e4cfc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04cf5d_jump:
		mov    _0cfa1a_data,%dh
		cmp    $0x000001,%dh
		jne    _04d006_jump
		cmpb   $0x000000,_095e63_data
		je     _04cfc4_jump
		mov    $0x000005,%ebx
		mov    $0x000004,%esi
		mov    $0x000003,%ah
		mov    $0x000006,%edi
		mov    %bx,_0cf78c_data
		mov    %si,_0cf7a4_data
		mov    %ah,_096881_data
		mov    _0cfa35_data,%al
		mov    %di,_0cf754_data
		cmp    %dh,%al
		jb     _04cfb5_jump
		jbe    _04cfbd_jump
		cmp    $0x000002,%al
		je     _04d002_jump
		jmp    _04d056_jump

	_04cfb5_jump:
		test   %al,%al
		jne    _04d056_jump

	_04cfbd_jump:
		mov    $0x00006e,%cl
		jmp    _04d056_jump

	_04cfc4_jump:
		mov    $0x000005,%edi
		mov    _0cfa35_data,%al
		mov    %dh,_096881_data
		mov    $0x000006,%edx
		mov    %di,_0cf78c_data
		mov    %di,_0cf7a4_data
		mov    %dx,_0cf754_data
		cmp    $0x000001,%al
		jb     _04cffa_jump
		jbe    _04cffe_jump
		cmp    $0x000002,%al
		je     _04d002_jump
		jmp    _04d056_jump

	_04cffa_jump:
		test   %al,%al
		jne    _04d056_jump

	_04cffe_jump:
		mov    $0x00006e,%cl
		jmp    _04d056_jump

	_04d002_jump:
		mov    $0x000078,%cl
		jmp    _04d056_jump

	_04d006_jump:
		cmp    $0x000002,%dh
		jne    _04d088_jump
		mov    $0x000005,%edx
		mov    $0x000004,%ebx
		mov    $0x000006,%esi
		mov    _0cfa35_data,%al
		mov    %dx,_0cf78c_data
		mov    %bx,_0cf7a4_data
		mov    $0x000003,%bh
		mov    %si,_0cf754_data
		mov    %bh,_096881_data
		cmp    $0x000001,%al
		jb     _04d04c_jump
		jbe    _04d050_jump
		cmp    $0x000002,%al
		je     _04d054_jump
		jmp    _04d056_jump

	_04d04c_jump:
		test   %al,%al
		jne    _04d056_jump

	_04d050_jump:
		mov    $0x00006e,%cl
		jmp    _04d056_jump

	_04d054_jump:
		mov    $0x000078,%cl

	_04d056_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cf76e_data
		mov    $0x00003c,%edx
		mov    %cl,_0e4cfc_data
		call   _04f698_func
		mov    _0e4cfc_data,%cl

	_04d088_jump:
		mov    %cl,_0e4cfc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d094_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04d094_func,%edx
		mov    $_04d178_func,%ebx
		mov    $_04d55c_func,%ecx
		mov    $_04da8c_func,%esi
		mov    $_04df88_func,%edi
		mov    _095e2d_data,%ah
		mov    %edx,_0e4cbc_data
		mov    %ebx,_0e4cb8_data
		mov    %ecx,_0e4cc8_data
		mov    %esi,_0e4cc4_data
		mov    %edi,_0e4ccc_data
		test   %ah,%ah
		jne    _04d0ec_jump
		movb   $0x000002,_0e4cfe_data
		xor    %ecx,%ecx
		mov    %cx,_0cd7a6_data
		jmp    _04d122_jump

	_04d0ec_jump:
		cmp    $0x000001,%ah
		jne    _04d10e_jump
		cmpb   $0x000000,_0cfa20_data
		jne    _04d10e_jump
		mov    $0x000001,%ebx
		mov    %ah,_0e4cfe_data
		mov    %bx,_0cd7a6_data
		jmp    _04d122_jump

	_04d10e_jump:
		mov    $0x000001,%bl
		mov    $0x000002,%edx
		mov    %bl,_0e4cfe_data
		mov    %dx,_0cd7a6_data

	_04d122_jump:
		mov    _095e6a_data,%ax
		mov    %ax,_0cd7a8_data
		xor    %eax,%eax
		mov    _095e6c_data,%al
		mov    %ax,_0cd7aa_data
		mov    _095e66_data,%ax
		mov    %ax,_0cd7ac_data
		xor    %eax,%eax
		mov    _095e6d_data,%al
		mov    %ax,_0cd7ae_data
		xor    %eax,%eax
		mov    _0cfa1f_data,%al
		mov    %ax,_0cd7b0_data
		call   _04f50c_func
		mov    %ax,_0e4cf2_data
		call   _04cd94_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d178_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %esp,%edi
		mov    $0x000001,%dl
		mov    $_0cbd08_data,%ebp
		mov    $_0492d8_func,%esi
		mov    _0cf7c4_data,%ax
		xor    %bh,%bh
		mov    %ax,_0cbdda_data
		mov    %dl,_0cc577_data
		mov    %dl,_0cc576_data
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %bh,_0cc575_data
		mov    (%esp),%al
		mov    $_0967d8_data,%edi
		mov    %al,_0cbddf_data
		mov    $0x000002,%ah
		mov    _0c2ef4_data,%esi
		mov    %ah,_0cbddc_data
		mov    %ah,_0cc574_data
		push   %edi

	_04d1d3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d1eb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d1d3_jump

	_04d1eb_jump:
		pop    %edi
		mov    _096881_data,%bl
		jmp    _04d378_jump

	_04d1f7_jump:
		imul   $0x0000d8,%eax,%edx
		movb   $0x000002,_0cbddc_data(%edx)
		movb   $0x000001,_0cbdde_data(%edx)
		xor    %cl,%cl
		mov    %cl,_0cbddd_data(%edx)
		mov    _0cf754_data,%cx
		lea    (%edx,%ebp,1),%edi
		cmp    %cx,%bx
		jne    _04d26a_jump
		mov    _0c2ee8_data,%esi
		push   %edi

	_04d229_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d241_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d229_jump

	_04d241_jump:
		pop    %edi
		mov    $0x0000a0,%edi
		mov    _0cf7b8_data,%ax
		mov    %di,_0cbdd8_data(%edx)
		mov    %ax,_0cbdda_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0cbddf_data(%edx)
		jmp    _04d367_jump

	_04d26a_jump:
		mov    _0cf76e_data,%si
		add    $0x00000a,%esi
		mov    (%esp,%eax,1),%cl
		mov    %si,_0cbdd8_data(%edx)
		mov    _0c2e58_data(,%eax,4),%esi
		mov    %cl,_0cbddf_data(%edx)
		push   %edi

	_04d28c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d2a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d28c_jump

	_04d2a4_jump:
		pop    %edi
		mov    _0cf7ba_data,%ax
		mov    _0cd7a6_data,%si
		add    $0x00000f,%eax
		test   %si,%si
		jne    _04d2dc_jump
		movzbw _096881_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		inc    %esi
		imul   %esi,%eax
		mov    _0cf7c4_data,%si
		add    %esi,%eax
		jmp    _04d360_jump

	_04d2dc_jump:
		cmp    $0x000001,%bx
		jne    _04d300_jump
		movzbw _096881_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		add    %ebx,%esi
		imul   %esi,%eax
		mov    _0cf7c4_data,%cx
		add    %ecx,%eax
		jmp    _04d360_jump

	_04d300_jump:
		cmpb   $0x000000,_095e63_data
		jne    _04d312_jump
		cmpb   $0x000002,_0cfa1a_data
		jne    _04d348_jump

	_04d312_jump:
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _096881_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0cf7ba_data,%dx
		inc    %eax
		add    $0x00000f,%edx
		imul   %edx,%eax
		mov    _0cf7c4_data,%dx
		add    %eax,%edx
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %dx,_0cbdda_data(%eax)
		jmp    _04d367_jump

	_04d348_jump:
		movzbw _096881_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		imul   %ecx,%eax
		mov    _0cf7c4_data,%di
		add    %edi,%eax

	_04d360_jump:
		mov    %ax,_0cbdda_data(%edx)

	_04d367_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01f21c_func

	_04d378_jump:
		xor    %edx,%edx
		mov    _0cf7a2_data,%eax
		mov    _096881_data,%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jle    _04d1f7_jump
		mov    _0cf7ac_data,%bx
		mov    _095e2d_data,%cl
		sub    $0x000019,%ebx
		test   %cl,%cl
		jne    _04d3da_jump
		mov    _0cf752_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cf7ac_data,%di
		mov    _0cbdda_data(,%eax,8),%ax
		mov    _0cf76e_data,%dx
		sub    %edi,%eax
		jmp    _04d409_jump

	_04d3da_jump:
		mov    _0cf752_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cf7ac_data,%cx
		mov    _0cbdda_data(,%eax,8),%ax
		mov    _0cf76e_data,%dx
		sub    %ecx,%eax

	_04d409_jump:
		movzbw _0e4cfc_data,%si
		add    $0x000023,%eax
		add    %esi,%esi
		mov    %ax,0x000020(%esp)
		mov    _0e4cec_data,%ax
		cmp    %ax,%dx
		jge    _04d42c_jump
		mov    %edx,%ecx
		jmp    _04d42e_jump

	_04d42c_jump:
		mov    %eax,%ecx

	_04d42e_jump:
		mov    _0e4cf0_data,%di
		cmp    %di,%bx
		jge    _04d43e_jump
		mov    %ebx,%eax
		jmp    _04d440_jump

	_04d43e_jump:
		mov    %edi,%eax

	_04d440_jump:
		mov    _0e4cf2_data,%ebp
		mov    _0e4cea_data,%edi
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		movswl %si,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%edi
		jle    _04d479_jump
		movswl %cx,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000018(%esp)
		jmp    _04d482_jump

	_04d479_jump:
		movswl %cx,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000018(%esp)

	_04d482_jump:
		mov    0x000018(%esp),%edi
		mov    %di,0x000024(%esp)
		mov    _0e4cee_data,%edi
		sar    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		mov    _0e4cec_data,%edi
		mov    0x000010(%esp),%ebp
		sar    $0x000010,%edi
		add    %edi,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x00001e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%edi
		add    %ebp,%edi
		mov    0x00001c(%esp),%ebp
		cmp    %ebp,%edi
		jge    _04d4ca_jump
		movswl %ax,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000014(%esp)
		jmp    _04d4d3_jump

	_04d4ca_jump:
		movswl %ax,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000014(%esp)

	_04d4d3_jump:
		mov    0x000014(%esp),%edi
		mov    %dx,_0e4cec_data
		mov    0x000020(%esp),%edx
		mov    %bx,_0e4cf0_data
		mov    %dx,_0e4cee_data
		mov    _095e63_data,%dl
		mov    %si,_0e4cf4_data
		test   %dl,%dl
		je     _04d51e_jump
		push   $0x000001
		mov    0x000026(%esp),%esi
		movswl %di,%ebx
		movswl %ax,%edx
		sar    $0x000010,%esi
		movswl %cx,%eax
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _0502fc_func
		jmp    _04d537_jump

	_04d51e_jump:
		mov    0x000022(%esp),%ebx
		movswl %di,%edx
		movswl %ax,%esi
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _050b0c_func

	_04d537_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04d544_switch:
		.long   _04d725_case
		.long   _04d769_case
		.long   _04d7b4_case
		.long   _04d97e_case
		.long   _04d95a_case
		.long   _04d931_case




_04d55c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		lea    0x00001c(%esp),%edi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x000018(%esp),%edi
		mov    $_0492eb_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0492e3_jump,%eax
		lea    0x000014(%esp),%edi
		mov    $_0492ee_jump,%esi
		mov    %eax,0x000010(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0492e7_jump,%eax
		mov    %esp,%edi
		mov    $_0492f4_switch,%esi
		mov    %eax,0x00000c(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04d5db_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04d5db_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cf7aa_data,%ebx
		mov    $_0967d8_data,%eax
		sar    $0x000010,%ebx
		call   _01a3f0_func
		xor    %eax,%eax
		mov    _0cbddf_data,%al
		mov    $0x000002,%ecx
		push   %eax
		mov    _0cf76e_data,%ax
		mov    _0cbdd8_data,%ebx
		add    $0x00000a,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    _0c2e58_data,%eax
		call   _01a3f0_func
		mov    _0e4cf0_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cbdda_data,%ax
		sub    $0x00000c,%eax
		push   $0x000100
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e4cfc_data,%al
		push   $0x000080
		add    $0x000016,%eax
		mov    $0x000080,%ebx
		cwtl   
		call   _024c54_func
		mov    _096881_data,%al
		mov    %al,0x000034(%esp)
		dec    %al
		mov    %al,0x000030(%esp)
		jmp    _04da6a_jump

	_04d677_jump:
		cmpw   $0x000000,_0cd7a6_data
		je     _04d689_jump
		cmp    $0x000002,%al
		je     _04da56_jump

	_04d689_jump:
		cmpb   $0x000000,_095e63_data
		je     _04d6a7_jump
		cmpw   $0x000000,_0cd7a6_data
		jne    _04d6a7_jump
		cmpb   $0x000006,0x000034(%esp)
		je     _04da56_jump

	_04d6a7_jump:
		xor    %edx,%edx
		mov    0x000034(%esp),%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0cf78c_data,%di
		xor    %ebx,%ebx
		mov    _0cbdda_data(%edx),%ax
		mov    0x000034(%esp),%bl
		mov    %ax,0x00002c(%esp)
		mov    $_0cbd08_data,%eax
		mov    _0cbdd8_data(%edx),%si
		add    %edx,%eax
		cmp    %di,%bx
		je     _04d702_jump
		mov    _0cbddf_data(%edx),%dl
		mov    0x00002a(%esp),%ebx
		and    $0x0000ff,%edx
		mov    $0x000002,%ecx
		push   %edx
		sar    $0x000010,%ebx
		movswl %si,%edx
		call   _01a3f0_func
		jmp    _04d70c_jump

	_04d702_jump:
		mov    $0x000001,%edx
		call   _04f800_func

	_04d70c_jump:
		mov    0x000030(%esp),%bh
		cmp    $0x000005,%bh
		ja     _04da56_jump
		xor    %eax,%eax
		mov    %bh,%al
		jmp    *%cs:_04d544_switch(,%eax,4)

	_04d725_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    _0cbddf_data(%eax),%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    _0e4cfc_data,%al
		add    $0x000076,%eax
		mov    0x00002e(%esp),%ebx
		movswl %ax,%edx
		mov    _0cd7a4_data,%eax
		mov    $0x000002,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		jmp    _04da51_jump

	_04d769_case:
		cmpw   $0x000000,_0cd7a6_data
		jne    _04da56_jump
		mov    $0x000003,%eax
		sub    _0cd7a8_data,%ax
		cwtl   
		push   %eax
		mov    0x000030(%esp),%eax
		sub    $0x00000c,%eax
		push   $0x000003
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e4cfc_data,%al
		push   $0x000000
		add    $0x000046,%eax
		mov    $0x000050,%ebx
		cwtl   
		call   _024c54_func
		jmp    _04da56_jump

	_04d7b4_case:
		cmpw   $0x000000,_0cd7aa_data
		jne    _04d7c7_jump
		cmpb   $0x000000,_095e2d_data
		je     _04d7ee_jump

	_04d7c7_jump:
		mov    _0cd7aa_data,%cx
		test   %cx,%cx
		je     _04d7e5_jump
		cmp    $0x000046,%cx
		je     _04d7e5_jump
		cmp    $0x000050,%cx
		je     _04d7e5_jump
		cmp    $0x000064,%cx
		jne    _04d81e_jump

	_04d7e5_jump:
		cmpb   $0x000001,_095e2d_data
		jne    _04d81e_jump

	_04d7ee_jump:
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%esi
		mov    _0e4cfc_data,%dl
		lea    0x00000c(%esp),%edi
		mov    %edx,%ebx
		mov    %edx,%ecx
		add    $0x000086,%ebx
		add    $0x000066,%ecx
		add    $0x000036,%edx
		mov    %cx,0x000028(%esp)
		mov    %dx,0x000020(%esp)
		jmp    _04d885_jump

	_04d81e_jump:
		cmpw   $0x000001,_0cd7aa_data
		jne    _04d857_jump
		xor    %edx,%edx
		lea    0x000014(%esp),%esi
		mov    _0e4cfc_data,%dl
		lea    0x00000c(%esp),%edi
		mov    %edx,%eax
		mov    %edx,%ebx
		add    $0x000086,%eax
		add    $0x000066,%ebx
		add    $0x000036,%edx
		mov    %ax,0x000028(%esp)
		mov    %dx,0x000020(%esp)
		lea    0x000018(%esp),%eax
		jmp    _04d885_jump

	_04d857_jump:
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%edi
		mov    _0e4cfc_data,%dl
		lea    0x00000c(%esp),%esi
		mov    %edx,%ebx
		mov    %edx,%ecx
		add    $0x000086,%ebx
		add    $0x000066,%ecx
		add    $0x000036,%edx
		mov    %cx,0x000020(%esp)
		mov    %dx,0x000028(%esp)

	_04d885_jump:
		push   $0x000005
		mov    0x00002e(%esp),%ebp
		mov    $0x000002,%ecx
		sar    $0x000010,%ebp
		movswl %bx,%edx
		mov    %ebp,%ebx
		call   _01a3f0_func
		cmpw   $0x000000,_0cd7a6_data
		jne    _04d8be_jump
		push   $0x000005
		mov    0x000022(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%ebx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01a3f0_func

	_04d8be_jump:
		xor    %eax,%eax
		mov    _0cf78c_data,%cx
		mov    0x000034(%esp),%al
		cmp    %cx,%ax
		jne    _04d918_jump
		mov    $_0cc4a0_data,%edi
		push   %edi

	_04d8d6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d8ee_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d8d6_jump

	_04d8ee_jump:
		pop    %edi
		mov    0x000028(%esp),%eax
		mov    %ax,_0cc570_data
		mov    0x00002c(%esp),%eax
		mov    %ax,_0cc572_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01f21c_func
		mov    %edi,%eax
		call   _04f800_func
		jmp    _04da56_jump

	_04d918_jump:
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		mov    0x00002a(%esp),%edx
		mov    $0x000002,%ecx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		jmp    _04da4e_jump

	_04d931_case:
		cmpb   $0x000000,_095e63_data
		jne    _04da56_jump
		cmpw   $0x000000,_0cd7ae_data
		je     _04da56_jump
		cmpw   $0x000000,_0cd7a6_data
		jne    _04da56_jump

	_04d95a_case:
		cmpb   $0x000000,_095e63_data
		je     _04d971_jump
		cmpw   $0x000000,_0cd7a6_data
		je     _04da56_jump

	_04d971_jump:
		cmpb   $0x000000,_0cfa1a_data
		je     _04da56_jump

	_04d97e_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		cmpw   $0x000000,_0cd7a4_data(,%eax,2)
		je     _04d9b1_jump
		xor    %edx,%edx
		lea    0x000010(%esp),%eax
		mov    _0e4cfc_data,%dl
		lea    0x00001c(%esp),%esi
		mov    %edx,%ebx
		add    $0x000066,%edx
		add    $0x000086,%ebx
		mov    %dx,0x000024(%esp)
		jmp    _04d9d0_jump

	_04d9b1_jump:
		xor    %ebx,%ebx
		mov    _0e4cfc_data,%bl
		mov    %ebx,%eax
		lea    0x000010(%esp),%esi
		add    $0x000086,%eax
		add    $0x000066,%ebx
		mov    %ax,0x000024(%esp)
		lea    0x00001c(%esp),%eax

	_04d9d0_jump:
		push   $0x000005
		mov    0x00002e(%esp),%edi
		mov    $0x000002,%ecx
		sar    $0x000010,%edi
		movswl %bx,%edx
		mov    %edi,%ebx
		call   _01a3f0_func
		xor    %eax,%eax
		mov    _0cf78c_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jne    _04da3f_jump
		mov    $_0cc4a0_data,%edi
		push   %edi

	_04da00_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04da18_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04da00_jump

	_04da18_jump:
		pop    %edi
		mov    0x000024(%esp),%eax
		mov    %ax,_0cc570_data
		mov    0x00002c(%esp),%eax
		mov    %ax,_0cc572_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01f21c_func
		mov    %edi,%eax
		call   _04f800_func
		jmp    _04da56_jump

	_04da3f_jump:
		push   $0x000001
		mov    0x000026(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax

	_04da4e_jump:
		sar    $0x000010,%edx

	_04da51_jump:
		call   _01a3f0_func

	_04da56_jump:
		mov    0x000030(%esp),%dh
		mov    0x000034(%esp),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x000030(%esp)
		mov    %bl,0x000034(%esp)

	_04da6a_jump:
		xor    %eax,%eax
		mov    _0cf754_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jle    _04d677_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04da8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		call   _04f76c_func
		xor    %bl,%bl
		mov    $0x000004,%dl
		mov    %bl,(%esp)
		mov    %dl,_0cfa37_data
		call   _037280_func
		test   %al,%al
		je     _04dab6_jump
		movb   $0x000001,_0cfa39_data

	_04dab6_jump:
		cmpb   $0x000000,_0cfa7d_data
		jne    _04daf3_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04dbac_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _04dbac_jump

	_04daf3_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04db52_jump
		mov    $0x000044,%eax
		call   _072960_func
		xor    %eax,%eax
		mov    _0cf78c_data,%cx
		mov    _096881_data,%al
		cmp    %cx,%ax
		jne    _04db2b_jump
		mov    _0cf754_data,%ax
		mov    %ax,_0cf78c_data
		jmp    _04dbac_jump

	_04db2b_jump:
		cmpw   $0x000000,_0cd7a6_data
		je     _04db49_jump
		cmp    $0x000003,%cx
		jne    _04db49_jump
		mov    %ecx,%edx
		sub    $0x000002,%edx
		mov    %dx,_0cf78c_data
		jmp    _04dbac_jump

	_04db49_jump:
		decw   _0cf78c_data
		jmp    _04dbac_jump

	_04db52_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04dbac_jump
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%ax
		mov    _0cf754_data,%cx
		cmp    %cx,%ax
		jne    _04db87_jump
		xor    %ecx,%eax
		mov    _096881_data,%al
		mov    %ax,_0cf78c_data
		jmp    _04dbac_jump

	_04db87_jump:
		cmpw   $0x000000,_0cd7a6_data
		je     _04dba5_jump
		cmp    $0x000001,%ax
		jne    _04dba5_jump
		mov    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,_0cf78c_data
		jmp    _04dbac_jump

	_04dba5_jump:
		incw   _0cf78c_data

	_04dbac_jump:
		cmpw   $0x000000,_0cd7a6_data
		jne    _04dcda_jump
		cmpw   $0x000002,_0cf78c_data
		jne    _04dc8a_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _04dc8a_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _04dc8a_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04dc8a_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _04dc1e_jump
		mov    _0cd7a8_data,%di
		cmp    $0x000003,%di
		jge    _04dc14_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cd7a8_data
		jmp    _04dc49_jump

	_04dc14_jump:
		xor    %eax,%eax
		mov    %ax,_0cd7a8_data
		jmp    _04dc49_jump

	_04dc1e_jump:
		call   _041d54_func
		test   %ax,%ax
		je     _04dc4b_jump
		mov    _0cd7a8_data,%bx
		test   %bx,%bx
		jle    _04dc40_jump
		mov    %ebx,%esi
		dec    %esi
		mov    %si,_0cd7a8_data
		jmp    _04dc49_jump

	_04dc40_jump:
		movw   $0x000003,_0cd7a8_data

	_04dc49_jump:
		mov    $0x000001,%bl

	_04dc4b_jump:
		test   %bl,%bl
		je     _04dcda_jump
		mov    _0cd7a6_data,%eax
		sar    $0x000010,%eax
		mov    _096862_data(,%eax,2),%ecx
		mov    _09685a_data(,%eax,2),%ebx
		mov    _096852_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09684a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		jmp    _04dcd6_jump

	_04dc8a_jump:
		cmpw   $0x000006,_0cf78c_data
		jne    _04dcda_jump
		cmpb   $0x000000,_095e63_data
		jne    _04dcda_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04dcda_jump
		call   _03715c_func
		test   %al,%al
		jne    _04dcc3_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04dcc3_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _04dcda_jump

	_04dcc3_jump:
		cmpw   $0x000000,_0cd7b0_data
		sete   %al
		xor    %ah,%ah
		mov    %ax,_0cd7b0_data

	_04dcd6_jump:
		movb   $0x000001,(%esp)

	_04dcda_jump:
		cmpw   $0x000003,_0cf78c_data
		jne    _04ddeb_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _04ddeb_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _04ddeb_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04ddeb_jump
		cmpb   $0x000001,_095e2d_data
		jne    _04dd2f_jump
		mov    _0e4cfe_data,%al
		cmp    _0cd7aa_data,%ax
		jge    _04dd2f_jump
		dec    %eax
		mov    %ax,_0cd7aa_data

	_04dd2f_jump:
		call   _03715c_func
		test   %al,%al
		jne    _04dd42_jump
		call   _041d54_func
		test   %ax,%ax
		je     _04dd7f_jump

	_04dd42_jump:
		xor    %eax,%eax
		mov    _0cd7aa_data,%si
		mov    _0e4cfe_data,%al
		cmp    %si,%ax
		jle    _04dd60_jump
		mov    %esi,%eax
		inc    %eax
		mov    %ax,_0cd7aa_data
		jmp    _04dd69_jump

	_04dd60_jump:
		xor    %edi,%edi
		mov    %di,_0cd7aa_data

	_04dd69_jump:
		xor    %eax,%eax
		mov    _0cd7aa_data,%al
		mov    $0x000001,%cl
		call   _049638_func
		mov    %cl,(%esp)
		jmp    _04df68_jump

	_04dd7f_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _04df68_jump
		cmpb   $0x000001,_095e2d_data
		jne    _04ddb0_jump
		xor    %eax,%eax
		mov    _0cd7aa_data,%dx
		mov    _0e4cfe_data,%al
		cmp    %dx,%ax
		jge    _04ddb0_jump
		dec    %eax
		mov    %ax,_0cd7aa_data

	_04ddb0_jump:
		mov    _0cd7aa_data,%bx
		test   %bx,%bx
		jle    _04ddc8_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cd7aa_data
		jmp    _04ddd5_jump

	_04ddc8_jump:
		xor    %eax,%eax
		mov    _0e4cfe_data,%al
		mov    %ax,_0cd7aa_data

	_04ddd5_jump:
		xor    %eax,%eax
		mov    _0cd7aa_data,%al
		mov    $0x000001,%bh
		call   _049638_func
		mov    %bh,(%esp)
		jmp    _04df68_jump

	_04ddeb_jump:
		mov    _0cf78c_data,%cx
		cmp    $0x000004,%cx
		jl     _04df38_jump
		cmp    _0cf754_data,%cx
		jge    _04df38_jump
		cmp    $0x000006,%cx
		je     _04df38_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04df38_jump
		call   _03715c_func
		test   %al,%al
		jne    _04de41_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04de41_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _04df38_jump

	_04de41_jump:
		mov    _0cf78a_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0cd7a4_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    $0x000001,%ch
		mov    %eax,%edx
		mov    _0cf78a_data,%eax
		mov    %ch,(%esp)
		sar    $0x000010,%eax
		mov    _0cf78c_data,%cx
		mov    %dx,_0cd7a4_data(,%eax,2)
		cmp    $0x000005,%cx
		jne    _04df68_jump
		cmpb   $0x000000,_095e63_data
		jne    _04df68_jump
		mov    _0cd7ae_data,%si
		test   %si,%si
		jne    _04df68_jump
		cmpw   $0x000000,_0cd7a6_data
		jne    _04df68_jump
		mov    $0x000001,%eax
		mov    $0x000001,%dl
		mov    %ax,_0cd7a6_data
		mov    %dl,_0e4cfe_data
		xor    %ah,%ah
		mov    _0cd7aa_data,%dx
		mov    %ah,_0cfa20_data
		cmp    $0x000002,%dx
		jne    _04ded9_jump
		mov    %si,_0cd7aa_data

	_04ded9_jump:
		mov    $0x000005,%ecx
		call   _04cd94_func
		mov    %cx,_0cf78c_data
		call   _04d178_func
		mov    _0cf752_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cf7ac_data,%si
		mov    _0cbdda_data(,%eax,8),%ax
		sub    %esi,%eax
		sub    $0x000024,%eax
		movswl %ax,%ecx
		mov    %esi,%eax
		add    $0x00000e,%eax
		mov    $0x00010e,%ebx
		movswl %ax,%edx
		mov    $0x000012,%eax
		call   _050b0c_func
		jmp    _04df68_jump

	_04df38_jump:
		cmpw   $0x000001,_0cf78c_data
		jne    _04df68_jump
		call   _03715c_func
		test   %al,%al
		je     _04df68_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04df68_jump
		mov    $0x00000a,%cl
		mov    $0x000001,%edx
		mov    %cl,_0cfa37_data
		mov    %dx,_0cf78e_data

	_04df68_jump:
		cmpb   $0x000000,(%esp)
		je     _04df79_jump
		call   _04f50c_func
		mov    %ax,_0e4cf2_data

	_04df79_jump:
		call   _04f7b0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04df88_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cfa39_data
		jne    _04e030_jump
		mov    _0cd7a8_data,%ax
		mov    %ax,_095e6a_data
		mov    _0cd7aa_data,%al
		mov    %al,_095e6c_data
		mov    _0cd7ac_data,%ax
		mov    %ax,_095e66_data
		mov    _0cd7ae_data,%al
		mov    %al,_095e6d_data
		call   _04980c_func
		mov    %al,_095e6e_data
		mov    _0cd7b0_data,%al
		mov    %al,_0cfa1f_data
		mov    _0cd7a6_data,%ax
		cmp    $0x000001,%ax
		jb     _04dff0_jump
		jbe    _04e00b_jump
		cmp    $0x000002,%ax
		je     _04e01e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04dff0_jump:
		test   %ax,%ax
		jne    _04e09a_jump
		xor    %ah,%ah
		mov    %ah,_095e2d_data
		mov    %ah,_0cfa20_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e00b_jump:
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_095e2d_data
		mov    %al,_0cfa20_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e01e_jump:
		mov    $0x000001,%bh
		mov    %bh,_095e2d_data
		mov    %bh,_0cfa20_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e030_jump:
		xor    %dl,%dl
		mov    %dl,_096883_data
		cmpb   $0x000000,_095e2d_data
		jne    _04e076_jump
		mov    _095e68_data,%eax
		sar    $0x000010,%eax
		mov    _096862_data(,%eax,2),%ecx
		mov    _09685a_data(,%eax,2),%ebx
		mov    _096852_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09684a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func

	_04e076_jump:
		mov    $0x000019,%eax
		call   _03db24_func
		xor    %eax,%eax
		mov    _095e6c_data,%al
		call   _049638_func
		cmpb   $0x000000,_095e63_data
		jne    _04e09a_jump
		call   _03cadc_func

	_04e09a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e0a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04e0a0_func,%edx
		mov    $_04e1cc_func,%ebx
		mov    $_04e470_func,%ecx
		mov    $_04e574_func,%esi
		mov    $_04e708_func,%edi
		mov    $0x000001,%ah
		mov    %edx,_0e4cbc_data
		mov    %ebx,_0e4cb8_data
		mov    %ecx,_0e4cc8_data
		mov    %esi,_0e4cc4_data
		mov    %edi,_0e4ccc_data
		mov    %ah,_0cfa7d_data
		mov    $0x000064,%ebx
		mov    $0x00000c,%ecx
		mov    $0x000006,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cf78a_data
		mov    %bx,_0cf794_data
		mov    %cx,_0cf79a_data
		mov    %si,_0cf77e_data
		mov    %di,_0cf78c_data
		mov    %di,_0cf7a4_data
		xor    %dl,%dl
		mov    $0x000005,%ebx
		mov    %dl,_096881_data
		mov    $0x000044,%edx
		mov    %di,_0cf754_data
		call   _04f698_func
		xor    %ebx,%ebx
		mov    _095e2d_data,%dh
		mov    %bx,_0cd7a4_data
		mov    %bx,_0cd7a6_data
		mov    %bx,_0cd7a8_data
		test   %dh,%dh
		jne    _04e173_jump
		movw   $0x000001,_0cd7a4_data
		jmp    _04e195_jump

	_04e173_jump:
		cmp    $0x000001,%dh
		jne    _04e18c_jump
		cmpb   $0x000000,_0cfa20_data
		jne    _04e18c_jump
		movw   $0x000001,_0cd7a6_data
		jmp    _04e195_jump

	_04e18c_jump:
		movw   $0x000001,_0cd7a8_data

	_04e195_jump:
		mov    _0cfa35_data,%al
		cmp    $0x000001,%al
		jb     _04e1a6_jump
		jbe    _04e1aa_jump
		cmp    $0x000002,%al
		je     _04e1aa_jump
		jmp    _04e1b1_jump

	_04e1a6_jump:
		test   %al,%al
		jne    _04e1b1_jump

	_04e1aa_jump:
		movb   $0x00008c,_0e4cfc_data

	_04e1b1_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e4cfc_data,%al
		sub    %eax,%edx
		mov    %dx,_0cf76e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e1cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000002,%dl
		mov    $_0967d8_data,%edi
		mov    $_0cbd08_data,%ebp
		mov    _049300_func,%eax
		mov    _0c2e74_data,%esi
		xor    %bl,%bl
		mov    %eax,0x000004(%esp)
		mov    %dl,_0cc574_data
		mov    %bl,_0cc575_data
		mov    $0x000001,%ah
		xor    %bh,%bh
		mov    %ah,_0cc577_data
		mov    %ah,_0cc576_data
		push   %edi

	_04e20f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04e227_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04e20f_jump

	_04e227_jump:
		pop    %edi
		mov    _096881_data,%bl
		jmp    _04e307_jump

	_04e233_jump:
		imul   $0x0000d8,%ecx,%edx
		movw   $0x0000a0,_0cbdd8_data(%edx)
		movb   $0x000002,_0cbddc_data(%edx)
		mov    $0x000001,%ah
		mov    _0cf754_data,%si
		mov    %ah,_0cbdde_data(%edx)
		xor    %al,%al
		lea    (%edx,%ebp,1),%edi
		mov    %al,_0cbddd_data(%edx)
		cmp    %si,%bx
		jne    _04e2a1_jump
		mov    _0c2ee8_data,%esi
		push   %edi

	_04e26f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04e287_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04e26f_jump

	_04e287_jump:
		pop    %edi
		mov    _0cf7b8_data,%ax
		mov    %ax,_0cbdda_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0cbddf_data(%edx)
		jmp    _04e2f6_jump

	_04e2a1_jump:
		mov    _0c2ec4_data(,%ecx,4),%esi
		push   %edi

	_04e2a9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04e2c1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04e2a9_jump

	_04e2c1_jump:
		pop    %edi
		mov    0x000004(%esp,%ecx,1),%al
		mov    %al,_0cbddf_data(%edx)
		xor    %eax,%eax
		mov    %ebx,%ecx
		mov    _096881_data,%al
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    _0cf7ba_data,%cx
		add    $0x00000f,%ecx
		imul   %ecx,%eax
		mov    _0cf7c4_data,%di
		add    %edi,%eax
		mov    %ax,_0cbdda_data(%edx)

	_04e2f6_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01f21c_func

	_04e307_jump:
		xor    %eax,%eax
		mov    _0cf7a2_data,%edx
		mov    _096881_data,%al
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jle    _04e233_jump
		xor    %eax,%eax
		mov    _0e4cfc_data,%al
		mov    _0cf752_data,%ecx
		add    %eax,%eax
		sar    $0x000010,%ecx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0cf76e_data,%dx
		mov    _0cf7ac_data,%cx
		mov    _0cbdda_data(,%eax,8),%ax
		mov    _0cf7ac_data,%bx
		sub    %ecx,%eax
		mov    _0e4cec_data,%si
		add    $0x000023,%eax
		sub    $0x000019,%ebx
		mov    %ax,0x000010(%esp)
		cmp    %si,%dx
		jge    _04e385_jump
		mov    %edx,%eax
		jmp    _04e387_jump

	_04e385_jump:
		mov    %esi,%eax

	_04e387_jump:
		mov    _0e4cf0_data,%di
		cmp    %di,%bx
		jge    _04e397_jump
		mov    %ebx,%ecx
		jmp    _04e399_jump

	_04e397_jump:
		mov    %edi,%ecx

	_04e399_jump:
		mov    _0e4cea_data,%esi
		mov    _0e4cf2_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		add    %esi,%edi
		movswl %dx,%esi
		mov    %esi,(%esp)
		mov    0x00000a(%esp),%esi
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _04e3cc_jump
		movswl %ax,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _04e3d1_jump

	_04e3cc_jump:
		movswl %ax,%edi
		sub    %edi,%esi

	_04e3d1_jump:
		mov    _0e4cec_data,%ebp
		mov    %esi,%edi
		mov    _0e4cee_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%esi
		add    %ebp,%esi
		mov    0x000008(%esp),%ebp
		cmp    %ebp,%esi
		jge    _04e408_jump
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _04e40d_jump

	_04e408_jump:
		movswl %cx,%ebp
		sub    %ebp,%esi

	_04e40d_jump:
		mov    %dx,_0e4cec_data
		mov    0x00000c(%esp),%edx
		mov    %bx,_0e4cf0_data
		mov    %dx,_0e4cf4_data
		mov    0x000010(%esp),%edx
		mov    _095e63_data,%bh
		mov    %dx,_0e4cee_data
		test   %bh,%bh
		je     _04e452_jump
		push   $0x000001
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _0502fc_func
		jmp    _04e465_jump

	_04e452_jump:
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _050b0c_func

	_04e465_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e470_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    %eax,(%esp)
		call   _03ce20_func
		push   $0x000001
		mov    _0cf7aa_data,%ebx
		mov    $_0967d8_data,%eax
		sar    $0x000010,%ebx
		call   _01a3f0_func
		mov    _096881_data,%al
		mov    %al,0x000004(%esp)
		jmp    _04e54c_jump

	_04e4b1_jump:
		imul   $0x0000d8,%ebx,%eax
		mov    _0cbdd8_data(%eax),%dx
		mov    _0cbdda_data(%eax),%cx
		cmp    $0x000003,%bl
		jae    _04e4d9_jump
		cmpw   $0x000000,_0cd7a4_data(,%ebx,2)
		je     _04e4d9_jump
		mov    $0x000001,%bl
		jmp    _04e4e2_jump

	_04e4d9_jump:
		xor    %ebx,%ebx
		mov    0x000004(%esp),%bl
		mov    (%esp,%ebx,1),%bl

	_04e4e2_jump:
		xor    %eax,%eax
		mov    _0cf78c_data,%di
		mov    0x000004(%esp),%al
		cmp    %di,%ax
		je     _04e51c_jump
		xor    %eax,%eax
		mov    %bl,%al
		push   %eax
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%eax
		movswl %dx,%edx
		movswl %cx,%ebx
		mov    $0x000002,%ecx
		add    $_0cbd08_data,%eax
		call   _01a3f0_func
		jmp    _04e548_jump

	_04e51c_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    %bl,_0cbddf_data(%eax)
		mov    $_0cbd08_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01f21c_func
		mov    %ebx,%eax
		call   _04f800_func

	_04e548_jump:
		incb   0x000004(%esp)

	_04e54c_jump:
		mov    _0cf7a2_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _096881_data,%al
		sar    $0x000010,%edx
		mov    0x000004(%esp),%bl
		add    %edx,%eax
		cmp    %eax,%ebx
		jle    _04e4b1_jump
		add    $0x000008,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e574_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04f76c_func
		call   _037280_func
		test   %al,%al
		je     _04e58e_jump
		movb   $0x000001,_0cfa39_data

	_04e58e_jump:
		cmpb   $0x000000,_0cfa7d_data
		jne    _04e5cb_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04e64b_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04e64b_jump

	_04e5cb_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _04e60c_jump
		mov    $0x000044,%eax
		call   _072960_func
		xor    %eax,%eax
		mov    _0cf78c_data,%si
		mov    _096881_data,%al
		cmp    %si,%ax
		jne    _04e600_jump
		mov    _0cf754_data,%ax
		mov    %ax,_0cf78c_data
		jmp    _04e64b_jump

	_04e600_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0cf78c_data
		jmp    _04e64b_jump

	_04e60c_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _04e64b_jump
		mov    $0x000044,%eax
		call   _072960_func
		mov    _0cf78c_data,%ax
		mov    _0cf754_data,%bx
		cmp    %bx,%ax
		jne    _04e641_jump
		xor    %ebx,%eax
		mov    _096881_data,%al
		mov    %ax,_0cf78c_data
		jmp    _04e64b_jump

	_04e641_jump:
		mov    %eax,%ecx
		inc    %ecx
		mov    %cx,_0cf78c_data

	_04e64b_jump:
		mov    _0cf78c_data,%ax
		test   %ax,%ax
		jl     _04e6fd_jump
		cmp    $0x000002,%ax
		jg     _04e6fd_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04e6fd_jump
		call   _03715c_func
		test   %al,%al
		jne    _04e68e_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04e68e_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _04e6fd_jump

	_04e68e_jump:
		xor    %al,%al
		jmp    _04e694_jump

	_04e692_jump:
		inc    %al

	_04e694_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0cd7a4_data(,%edx,2)
		je     _04e692_jump
		xor    %edx,%edx
		mov    _0cf78c_data,%cx
		mov    %al,%dl
		cmp    %cx,%dx
		je     _04e6fd_jump
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0cd7a4_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		mov    _0cf78a_data,%edx
		sar    $0x000010,%edx
		mov    %bx,_0cd7a4_data(,%edx,2)
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0cd7a4_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0cd7a4_data(,%edx,2)

	_04e6fd_jump:
		call   _04f7b0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e708_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa39_data,%ah
		test   %ah,%ah
		jne    _04e782_jump
		cmpw   $0x000000,_0cd7a4_data
		je     _04e739_jump
		mov    $0x000001,%bl
		mov    %ah,_095e2d_data
		mov    %ah,_0cfa20_data
		mov    %bl,_095e6d_data
		jmp    _04e782_jump

	_04e739_jump:
		cmpw   $0x000000,_0cd7a6_data
		je     _04e75c_jump
		mov    $0x000001,%cl
		mov    %ah,_0cfa20_data
		mov    _095e6c_data,%al
		mov    %cl,_095e2d_data
		cmp    $0x000002,%al
		jne    _04e782_jump
		jmp    _04e775_jump

	_04e75c_jump:
		mov    $0x000001,%dl
		mov    _095e6c_data,%bl
		mov    %dl,_095e2d_data
		mov    %dl,_0cfa20_data
		cmp    $0x000002,%bl
		jne    _04e782_jump

	_04e775_jump:
		mov    %ah,_095e6c_data
		xor    %eax,%eax
		call   _049638_func

	_04e782_jump:
		movb   $0x000009,_0cfa37_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e790_func:
		push   %esi
		push   %edi
		movw   $0x0000c8,(%eax)
		mov    $_0cc4a0_data,%edi
		movw   $0x000000,(%edx)
		mov    _0c2ef8_data,%esi
		movw   $0x0000c8,(%ebx)
		mov    $0x0000a0,%edx
		movw   $0x000000,(%ecx)
		mov    $0x000046,%ecx
		mov    $0x000024,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000001,%ah
		mov    %dx,_0cc570_data
		mov    %bx,_0cc572_data
		mov    %ah,_0cc574_data
		xor    %dl,%dl
		mov    %ah,_0cc576_data
		mov    %dl,_0cc575_data
		mov    %edi,%eax
		mov    %dl,_0cc577_data
		call   _01f21c_func
		pop    %edi
		pop    %esi
		ret    



_04e804_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04e840_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04e840_jump:
		mov    $0x000001,%edx
		mov    $_0cc4a0_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000062,%ebx
		call   _04f800_func
		push   $0x000005
		mov    $0x00009b,%edx
		mov    $_0c1214_data,%eax
		call   _01a3f0_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_04e870_jump:
		xor    %ebx,%ebx
		push   $0x000005
		mov    0x000010(%esp),%bl
		mov    $0x000001,%ecx
		shl    $0x000003,%ebx
		mov    $0x000096,%edx
		add    $0x00004a,%ebx
		mov    $_0c11dc_data,%eax
		movswl %bx,%ebx
		call   _01a3f0_func
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000007,%dh
		jb     _04e870_jump
		mov    _0cf746_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _081256_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x0000c6,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		mov    _0cf74e_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _081256_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x000069,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		mov    _0cf750_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _081256_func
		push   $0x000005
		mov    $0x000040,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		mov    _0cf748_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _081256_func
		push   $0x000005
		mov    $0x00008a,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c2d60_data,%eax
		mov    %ebx,%edx
		call   _01a3f0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e99c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0cf752_data,%ecx
		mov    $_0cf74a_data,%ebx
		mov    $_0cf750_data,%edx
		mov    $_0cf748_data,%eax
		call   _04213c_func
		call   _04e804_func
		xor    %edx,%edx
		call   _03715c_func
		mov    %al,%dl
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _04e9e1_jump
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_095eb2_data

	_04e9e1_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e9e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		call   _03ce20_func
		cmpb   $0x000000,_095e63_data
		je     _04ea24_jump
		mov    _0e4cec_data,%ecx
		mov    _0e4cf2_data,%ebx
		mov    _0e4cee_data,%edx
		mov    _0e4cea_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024a98_func

	_04ea24_jump:
		mov    $0x000001,%edx
		mov    $_0cc4a0_data,%eax
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		call   _04f800_func
		push   $0x000005
		mov    $0x0000a0,%edx
		mov    _0c2d5c_data,%eax
		call   _01a3f0_func
		mov    _0cf74c_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _081256_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x000082,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		mov    _0cf74a_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _081256_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x0000b4,%edx
		lea    0x000004(%esp),%eax
		call   _01a3f0_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c2d64_data,%eax
		mov    %ebx,%edx
		call   _01a3f0_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04eae8_func:
		push   %edx
		mov    $_0cf74c_data,%edx
		mov    $_0cf74e_data,%eax
		call   _042184_func
		call   _04e9e8_func
		xor    %edx,%edx
		call   _03715c_func
		mov    %al,%dl
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _04eb21_jump
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_095eb2_data

	_04eb21_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_04eb28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _01cf94_func
		cmpl   $0x000000,_0e4cd0_data
		je     _04ebb6_jump
		xor    %edx,%edx
		call   *_0e4cd0_data
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e43ac_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7c88_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   _023fdc_func

	_04ebb6_jump:
		mov    $_0cf74a_data,%ecx
		mov    $_0cf752_data,%ebx
		mov    $_0cf748_data,%edx
		mov    $_0cf750_data,%eax
		call   _04e790_func
		cmpb   $0x000000,_095e63_data
		jne    _04ebe2_jump
		call   _03ca8c_func
		jmp    _04ed51_jump

	_04ebe2_jump:
		mov    _0cfa35_data,%al
		cmp    $0x000001,%al
		jb     _04ebf6_jump
		jbe    _04ec27_jump
		cmp    $0x000002,%al
		je     _04ec50_jump
		jmp    _04ec77_jump

	_04ebf6_jump:
		test   %al,%al
		jne    _04ec77_jump
		mov    $0x000046,%ecx
		mov    $0x000008,%esi
		mov    $0x0000b0,%edi
		mov    $0x0000be,%eax
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _04ec77_jump

	_04ec27_jump:
		mov    $0x000039,%edi
		mov    $0x000008,%eax
		mov    $0x0000c8,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)
		jmp    _04ec77_jump

	_04ec50_jump:
		mov    $0x000032,%edx
		mov    $0x000008,%ebx
		mov    $0x0000d8,%ecx
		mov    $0x0000be,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x00000c(%esp)

	_04ec77_jump:
		mov    (%esp),%edx
		mov    _0e4cec_data,%ax
		cmp    %dx,%ax
		jg     _04ec87_jump
		mov    %eax,%edx

	_04ec87_jump:
		mov    0x000008(%esp),%ebx
		mov    _0e4cf0_data,%ax
		cmp    %bx,%ax
		jle    _04ec98_jump
		mov    %ebx,%eax

	_04ec98_jump:
		mov    _0e4cea_data,%ebx
		mov    _0e4cf2_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		mov    -0x000002(%esp),%esi
		add    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%ebx
		jle    _04ecc9_jump
		movswl %dx,%ecx
		sub    %ecx,%ebx
		mov    %ebx,%ecx
		jmp    _04ecce_jump

	_04ecc9_jump:
		movswl %dx,%ebx
		sub    %ebx,%ecx

	_04ecce_jump:
		mov    _0e4cec_data,%ebx
		mov    %ecx,%esi
		mov    _0e4cee_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		mov    0x00000a(%esp),%edi
		add    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edi
		sar    $0x000010,%ebx
		add    %edi,%ebx
		cmp    %ebx,%ecx
		jle    _04ed01_jump
		movswl %ax,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04ed06_jump

	_04ed01_jump:
		movswl %ax,%ecx
		sub    %ecx,%ebx

	_04ed06_jump:
		mov    (%esp),%ecx
		mov    %cx,_0e4cec_data
		mov    0x000008(%esp),%ecx
		mov    %cx,_0e4cf0_data
		mov    0x000004(%esp),%ecx
		mov    %cx,_0e4cf4_data
		mov    0x00000c(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e4cee_data
		mov    $_04e804_func,%ecx
		cwtl   
		mov    %ecx,_0e4cc8_data
		movswl %bx,%ecx
		movswl %si,%ebx
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _0502fc_func

	_04ed51_jump:
		cmpb   $0x000000,_095eb2_data
		je     _04f16b_jump
		mov    $_04e99c_func,%eax
		call   _03cb54_func
		cmpb   $0x000000,_095e63_data
		jne    _04ed80_jump
		call   _03cadc_func
		call   _03ca8c_func
		jmp    _04eef5_jump

	_04ed80_jump:
		mov    _0cfa35_data,%al
		cmp    $0x000001,%al
		jb     _04ed94_jump
		jbe    _04edc5_jump
		cmp    $0x000002,%al
		je     _04edee_jump
		jmp    _04ee15_jump

	_04ed94_jump:
		test   %al,%al
		jne    _04ee15_jump
		mov    $0x000046,%edi
		mov    $0x000008,%eax
		mov    $0x0000b0,%edx
		mov    $0x0000af,%ebx
		mov    %di,(%esp)
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)
		jmp    _04ee15_jump

	_04edc5_jump:
		mov    $0x00003d,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c2,%ecx
		mov    $0x0000af,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x00000c(%esp)
		jmp    _04ee15_jump

	_04edee_jump:
		mov    $0x000032,%ecx
		mov    $0x000008,%esi
		mov    $0x0000d7,%edi
		mov    $0x0000af,%eax
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)

	_04ee15_jump:
		mov    (%esp),%ecx
		mov    _0e4cec_data,%ax
		cmp    %cx,%ax
		jle    _04ee25_jump
		mov    %ecx,%eax

	_04ee25_jump:
		mov    0x000008(%esp),%esi
		mov    _0e4cf0_data,%dx
		cmp    %si,%dx
		jle    _04ee37_jump
		mov    %esi,%edx

	_04ee37_jump:
		mov    _0e4cea_data,%ebx
		mov    _0e4cf2_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		mov    -0x000002(%esp),%esi
		add    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%ebx
		jle    _04ee66_jump
		movswl %ax,%ecx
		sub    %ecx,%ebx
		jmp    _04ee6d_jump

	_04ee66_jump:
		movswl %ax,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx

	_04ee6d_jump:
		mov    _0e4cec_data,%ecx
		mov    %ebx,%esi
		mov    _0e4cee_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%edi
		add    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%ebx
		jle    _04ee9e_jump
		movswl %dx,%ecx
		sub    %ecx,%ebx
		jmp    _04eea5_jump

	_04ee9e_jump:
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx

	_04eea5_jump:
		mov    (%esp),%ecx
		mov    %cx,_0e4cec_data
		mov    0x000008(%esp),%ecx
		mov    %cx,_0e4cf0_data
		mov    0x000004(%esp),%ecx
		mov    %cx,_0e4cf4_data
		mov    0x00000c(%esp),%ecx
		mov    %cx,_0e4cee_data
		cmpb   $0x000000,_095eb2_data
		je     _04eef5_jump
		mov    $_04e9e8_func,%edi
		push   $0x000001
		movswl %bx,%ecx
		movswl %dx,%edx
		cwtl   
		movswl %si,%ebx
		mov    %edi,_0e4cc8_data
		call   _0502fc_func

	_04eef5_jump:
		cmpb   $0x000000,_095eb2_data
		je     _04f16b_jump
		mov    $_04eae8_func,%eax
		call   _03cb54_func
		cmpb   $0x000000,_095e63_data
		jne    _04ef24_jump
		call   _03cadc_func
		call   _03ca8c_func
		jmp    _04f09f_jump

	_04ef24_jump:
		mov    _0cfa35_data,%al
		cmp    $0x000001,%al
		jb     _04ef38_jump
		jbe    _04ef69_jump
		cmp    $0x000002,%al
		je     _04ef92_jump
		jmp    _04efb9_jump

	_04ef38_jump:
		test   %al,%al
		jne    _04efb9_jump
		mov    $0x00003c,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c0,%ecx
		mov    $0x0000bb,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x00000c(%esp)
		jmp    _04efb9_jump

	_04ef69_jump:
		mov    $0x00003c,%ecx
		mov    $0x000008,%esi
		mov    $0x0000c0,%edi
		mov    $0x0000bb,%eax
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _04efb9_jump

	_04ef92_jump:
		mov    $0x000032,%edi
		mov    $0x000008,%eax
		mov    $0x0000d6,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_04efb9_jump:
		mov    (%esp),%edi
		mov    _0e4cec_data,%ax
		cmp    %di,%ax
		jle    _04efcb_jump
		mov    %edi,%ebx
		jmp    _04efcd_jump

	_04efcb_jump:
		mov    %eax,%ebx

	_04efcd_jump:
		mov    0x000008(%esp),%edx
		mov    _0e4cf0_data,%ax
		cmp    %dx,%ax
		jg     _04efde_jump
		mov    %eax,%edx

	_04efde_jump:
		mov    _0e4cea_data,%eax
		mov    _0e4cf2_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%esi
		add    %ecx,%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%eax
		jle    _04f00e_jump
		movswl %bx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04f013_jump

	_04f00e_jump:
		movswl %bx,%eax
		sub    %eax,%ecx

	_04f013_jump:
		mov    _0e4cee_data,%eax
		mov    %ecx,%edi
		mov    _0e4cec_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    0x000006(%esp),%esi
		add    %ecx,%eax
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%eax
		jle    _04f045_jump
		movswl %dx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04f04a_jump

	_04f045_jump:
		movswl %dx,%eax
		sub    %eax,%ecx

	_04f04a_jump:
		mov    (%esp),%eax
		mov    %ax,_0e4cec_data
		mov    0x000008(%esp),%eax
		mov    %ax,_0e4cf0_data
		mov    0x000004(%esp),%eax
		mov    %ax,_0e4cf4_data
		mov    0x00000c(%esp),%eax
		mov    %ax,_0e4cee_data
		cmpb   $0x000000,_095eb2_data
		je     _04f09f_jump
		call   _04be04_func
		mov    $_04bf60_func,%ebp
		push   $0x000001
		movswl %cx,%ecx
		movswl %di,%esi
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %esi,%ebx
		mov    %ebp,_0e4cc8_data
		call   _0502fc_func

	_04f09f_jump:
		push   $_0cf74c_data
		mov    $_0cf752_data,%ecx
		mov    $_0cf74a_data,%ebx
		mov    $_0cf750_data,%edx
		mov    _0e4ccc_data,%eax
		push   $_0cf74e_data
		mov    %eax,_0e4cc0_data
		mov    $_0cf748_data,%eax
		call   _0421c0_func
		cmpb   $0x000000,_095eb2_data
		je     _04f16b_jump
		mov    $_04bda4_func,%eax
		mov    _095e63_data,%dh
		mov    %eax,_0e4cbc_data
		test   %dh,%dh
		jne    _04f0f4_jump
		call   _04f318_func
		jmp    _04f0f9_jump

	_04f0f4_jump:
		call   _04f2e0_func

	_04f0f9_jump:
		mov    _0e4cc0_data,%eax
		mov    _095e63_data,%bl
		mov    %eax,_0e4ccc_data
		test   %bl,%bl
		jne    _04f123_jump
		call   _03cadc_func
		call   _04c3d0_func
		call   _04c4d0_func
		call   _03ca8c_func
		jmp    _04f12d_jump

	_04f123_jump:
		call   _04c3d0_func
		call   _04c4d0_func

	_04f12d_jump:
		cmpl   $0x000000,_0e4cd0_data
		je     _04f16b_jump
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e43ac_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04f16b_jump:
		call   _036c44_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f17c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _042134_func
		call   _01cf94_func
		mov    _095eb2_data,%ah
		xor    %dl,%dl
		test   %ah,%ah
		je     _04f1ea_jump
		mov    _0cf746_data,%ax
		cmp    _0cf750_data,%ax
		jge    _04f1af_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf750_data
		jmp    _04f1c0_jump

	_04f1af_jump:
		cmp    _0cf748_data,%ax
		jle    _04f1c0_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf748_data

	_04f1c0_jump:
		mov    _0cf744_data,%ax
		cmp    _0cf752_data,%ax
		jge    _04f1d9_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf752_data
		jmp    _04f1ea_jump

	_04f1d9_jump:
		cmp    _0cf74a_data,%ax
		jle    _04f1ea_jump
		mov    $0x000001,%dl
		mov    %ax,_0cf74a_data

	_04f1ea_jump:
		test   %dl,%dl
		je     _04f211_jump
		push   $_0cf74c_data
		mov    $_0cf752_data,%ecx
		mov    $_0cf74a_data,%ebx
		push   $_0cf74e_data
		mov    $_0cf750_data,%edx
		mov    $_0cf748_data,%eax
		call   _0421c0_func

	_04f211_jump:
		cmpl   $0x000000,_0e4cc8_data
		je     _04f220_jump
		call   *_0e4cc8_data

	_04f220_jump:
		cmpb   $0x000000,_095eb1_data
		je     _04f24a_jump
		xor    %dh,%dh
		mov    %dh,_095eb1_data
		call   _016e9a_func
		call   _016e8a_func
		mov    $0x000001,%eax
		call   _023fdc_func
		call   _03b4d0_func

	_04f24a_jump:
		cmpb   $0x000000,_0cfa7a_data
		jne    _04f270_jump
		mov    _0cf78e_data,%ax
		test   %ax,%ax
		jne    _04f270_jump
		cmpb   $0x000000,_0cfa39_data
		jne    _04f270_jump
		cmpb   $0x000000,_0cfa36_data
		je     _04f275_jump

	_04f270_jump:
		mov    $0x000001,%eax

	_04f275_jump:
		mov    %eax,%edx
		test   %ax,%ax
		jne    _04f2d8_jump
		cmpl   $0x000000,_0e4cc4_data
		je     _04f295_jump
		cmpw   $0x000000,_0cf8da_data
		jne    _04f295_jump
		call   *_0e4cc4_data

	_04f295_jump:
		call   _03715c_func
		test   %al,%al
		je     _04f2c3_jump
		mov    _0cf78c_data,%ax
		cmp    _0cf754_data,%ax
		jne    _04f2c3_jump
		mov    $0x000001,%esi
		mov    $0x000045,%eax
		mov    %si,_0cf78e_data
		call   _072960_func

	_04f2c3_jump:
		cmpb   $0x000000,_0cfa39_data
		je     _04f2d6_jump
		mov    $0x00004d,%eax
		call   _072960_func

	_04f2d6_jump:
		mov    %edx,%eax

	_04f2d8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f2e0_func:
		cmpl   $0x000000,_0e4cbc_data
		je     _04f2ef_jump
		call   *_0e4cbc_data

	_04f2ef_jump:
		cmpl   $0x000000,_0e4cb8_data
		je     _04f2fe_jump
		call   *_0e4cb8_data

	_04f2fe_jump:
		mov    $_04f17c_func,%eax
		call   _03cb54_func
		cmpl   $0x000000,_0e4ccc_data
		je     _04f317_jump
		call   *_0e4ccc_data

	_04f317_jump:
		ret    



_04f318_func:
		push   %ecx
		push   %esi
		push   %edi
		cmpl   $0x000000,_0e4cbc_data
		je     _04f32a_jump
		call   *_0e4cbc_data

	_04f32a_jump:
		cmpl   $0x000000,_0e4cb8_data
		je     _04f339_jump
		call   *_0e4cb8_data

	_04f339_jump:
		cmpl   $0x000000,_0e4cd0_data
		je     _04f348_jump
		call   *_0e4cd0_data

	_04f348_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _04f35c_jump
		cmpw   $0x000009,_0cf87c_data
		je     _04f398_jump

	_04f35c_jump:
		cmpw   $0x000002,_0cf88c_data
		jne    _04f370_jump
		cmpw   $0x000004,_0cf87c_data
		je     _04f398_jump

	_04f370_jump:
		cmpw   $0x000004,_0cf88c_data
		jne    _04f384_jump
		cmpw   $0x000009,_0cf87c_data
		je     _04f398_jump

	_04f384_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _04f3c1_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _04f3c1_jump

	_04f398_jump:
		mov    _0cf73e_data,%esi
		sar    $0x000010,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    _0cd83c_data,%esi
		shl    $0x000008,%eax
		mov    $_0e43ac_data,%edi
		add    %eax,%esi
		jmp    _04f419_jump

	_04f3c1_jump:
		movzbl _0cfa82_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    $_0c7f88_data,%esi
		shl    $0x000008,%eax
		mov    $_0e43ac_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movzbl _0cfa82_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7c88_data,%esi
		add    %eax,%edi

	_04f419_jump:
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _024bf0_func
		xor    %eax,%eax
		call   _023fdc_func
		mov    $_04f17c_func,%eax
		call   _03cb54_func
		cmpl   $0x000000,_0e4ccc_data
		je     _04f44e_jump
		call   *_0e4ccc_data

	_04f44e_jump:
		movzbl _0cfa82_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e43ac_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04f488_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04f491_jump:
		movswl %ax,%edx
		mov    _095e40_data(,%edx,4),%ebx
		mov    (%ebx),%bl
		inc    %eax
		mov    %bl,_095e5c_data(%edx)
		cmp    $0x000007,%ax
		jl     _04f491_jump
		mov    _095e40_data,%edx
		movb   $0x00004b,(%edx)
		mov    _095e44_data,%edx
		movb   $0x000048,(%edx)
		mov    _095e48_data,%edx
		movb   $0x00004d,(%edx)
		mov    _095e4c_data,%edx
		movb   $0x000050,(%edx)
		mov    _095e50_data,%edx
		movb   $0x00001d,(%edx)
		mov    _095e54_data,%edx
		movb   $0x000038,(%edx)
		mov    _095e58_data,%edx
		movb   $0x00002d,(%edx)
		pop    %edx
		pop    %ebx
		ret    



_04f4ec_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04f4f0_jump:
		movswl %ax,%edx
		mov    _095e40_data(,%edx,4),%ebx
		mov    _095e5c_data(%edx),%dl
		inc    %eax
		mov    %dl,(%ebx)
		cmp    $0x000007,%ax
		jl     _04f4f0_jump
		pop    %edx
		pop    %ebx
		ret    



_04f50c_func:
		push   %ebx
		push   %edx
		push   %edi
		cmpw   $0x000000,_0cd7a6_data
		jne    _04f5c7_jump
		cmpw   $0x000002,_0cd7aa_data
		jne    _04f52e_jump
		xor    %eax,%eax
		jmp    _04f660_jump

	_04f52e_jump:
		mov    _0cd7a8_data,%edx
		sar    $0x000010,%edx
		mov    _0cd7ac_data,%di
		mov    _095ea0_data(,%edx,2),%ax
		shl    $0x000003,%edx
		test   %di,%di
		je     _04f561_jump
		mov    _0cd7a6_data,%ebx
		sar    $0x000010,%ebx
		add    _095e70_data(%edx,%ebx,2),%ax
		jmp    _04f572_jump

	_04f561_jump:
		mov    _0cd7a6_data,%ebx
		sar    $0x000010,%ebx
		add    _095e80_data(%edx,%ebx,2),%ax

	_04f572_jump:
		cmpw   $0x000000,_0cd7b0_data
		je     _04f5a6_jump
		mov    _0cd7a8_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%ebx
		mov    _0cd7a6_data,%edx
		sar    $0x000010,%edx
		mov    _095e90_data(%ebx,%edx,2),%dx
		add    %edx,%edx
		add    %edx,%eax
		jmp    _04f660_jump

	_04f5a6_jump:
		mov    _0cd7a6_data,%ebx
		mov    _0cd7a8_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%ebx
		add    _095e90_data(%ebx,%edx,8),%ax
		jmp    _04f660_jump

	_04f5c7_jump:
		cmpb   $0x000000,_0cfa20_data
		jne    _04f61a_jump
		mov    _0cd7a8_data,%eax
		sar    $0x000010,%eax
		mov    _095eaa_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		mov    _0cd7ac_data,%di
		add    %ebx,%eax
		test   %di,%di
		je     _04f5fd_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04f5fd_jump:
		cmpw   $0x000000,_0cd7ae_data
		je     _04f660_jump
		mov    _0cd7a8_data,%edx
		sar    $0x000010,%edx
		add    _095ea4_data(,%edx,2),%ax
		jmp    _04f660_jump

	_04f61a_jump:
		mov    _0cd7a8_data,%eax
		sar    $0x000010,%eax
		mov    _095eaa_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0cd7ac_data
		je     _04f645_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04f645_jump:
		cmpw   $0x000000,_0cd7ae_data
		je     _04f660_jump
		mov    _0cd7a8_data,%edx
		sar    $0x000010,%edx
		add    _095ea8_data(,%edx,2),%ax

	_04f660_jump:
		cmpw   $0x000100,_0e4cf2_data
		jle    _04f674_jump
		mov    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04f674_jump:
		cmp    $0x000080,%ax
		jge    _04f683_jump
		mov    $0x000100,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04f683_jump:
		mov    $0x000100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_04f698_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		mov    %ebx,%edi
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		mov    %eax,%ebx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		movswl %cx,%edx
		mov    %ax,_0cf7ac_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0cf7a2_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ecx
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %ecx,%edx
		sub    %esi,%eax
		sub    %eax,%edx
		inc    %esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%esi
		mov    %ax,_0cf7ba_data
		cwtl   
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %di,%edx
		mov    %ax,_0cf7c4_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		add    %ebx,%eax
		xor    %edx,%edx
		add    %eax,%ecx
		mov    %dx,_0cf78e_data
		mov    %cx,_0cf7b8_data
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04f76c_func:
		push   %edx
		mov    _0cf78a_data,%dx
		cmp    _0cf794_data,%dx
		jge    _04f789_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04f789_jump
		inc    %edx
		jmp    _04f7a5_jump

	_04f789_jump:
		cmpb   $0x000000,_0cfa7d_data
		jne    _04f7a3_jump
		mov    _0cf79a_data,%dx
		inc    %edx
		mov    %dx,_0cf78a_data
		pop    %edx
		ret    

	_04f7a3_jump:
		xor    %edx,%edx

	_04f7a5_jump:
		mov    %dx,_0cf78a_data
		pop    %edx
		ret    



_04f7b0_func:
		push   %edx
		call   _041e34_func
		test   %ax,%ax
		jne    _04f7f4_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _04f7f4_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _04f7f4_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _04f7f4_jump
		call   _03715c_func
		test   %al,%al
		jne    _04f7f4_jump
		movb   $0x000001,_0cfa7d_data
		xor    %edx,%edx
		mov    %dx,_0cf78a_data
		pop    %edx
		ret    

	_04f7f4_jump:
		xor    %ah,%ah
		mov    %ah,_0cfa7d_data
		pop    %edx
		ret    



_04f800_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,_096880_data
		jne    _04f847_jump
		mov    0x0000cc(%esi),%ecx
		xor    %eax,%eax
		mov    0x0000ca(%esi),%ebx
		mov    %dl,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x0000c8(%esi),%edx
		mov    0x0000c6(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0241fc_func
		mov    %esi,%eax
		call   _01abe0_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04f847_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl
		mov    %esi,%eax
		call   _01a3f0_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04f878_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x0000cc(%eax),%ecx
		mov    0x0000ca(%eax),%ebx
		mov    0x0000c8(%eax),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x0000c6(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024738_func
		mov    %esi,%eax
		call   _01abe0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f8b4_jump:
		xor    %ah,%ah
		mov    %ah,_096882_data
		call   _042134_func
		cmpl   $0x000000,_0e4cc8_data
		je     _04f8d0_jump
		call   *_0e4cc8_data

	_04f8d0_jump:
		mov    _0e4cac_data,%eax
		call   _04f878_func
		cmpl   $0x000000,_0e4cd4_data
		je     _04f8e9_jump
		call   *_0e4cd4_data

	_04f8e9_jump:
		call   _037280_func
		test   %al,%al
		jne    _04f8fb_jump
		cmpb   $0x000000,_096882_data
		je     _04f901_jump

	_04f8fb_jump:
		mov    $0x000001,%eax
		ret    

	_04f901_jump:
		xor    %ah,%ah
		ret    



_04f904_func:
		push   %ebx
		push   %edx
		mov    _0e4cc8_data,%edx
		mov    %eax,_0e4cac_data
		test   %edx,%edx
		je     _04f91b_jump
		call   *_0e4cc8_data

	_04f91b_jump:
		call   _016e9a_func
		call   _016e8a_func
		call   _0243e0_func
		call   _03b4d0_func
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		mov    %ah,_096880_data
		mov    $_04f8b4_jump,%eax
		mov    %ebx,_0e4cd4_data
		call   _03cb54_func
		mov    %dl,_096880_data
		movb   $0x000001,_095eb1_data
		call   _04271c_func
		pop    %edx
		pop    %ebx
		ret    



_04f960_func:
		push   %ebx
		mov    %eax,_0e4cac_data
		mov    %edx,_0e4cd4_data
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_096880_data
		call   _016e9a_func
		call   _016e8a_func
		call   _0243e0_func

	_04f985_jump:
		cmp    _0e4cc8_data,%edx
		je     _04f993_jump
		call   *_0e4cc8_data

	_04f993_jump:
		mov    _0e4cac_data,%eax
		call   _04f878_func
		call   _04f9f0_func
		call   _016e9a_func
		call   _016e8a_func
		call   _03ca64_func
		call   _03b4d0_func
		call   _042134_func
		call   _03715c_func
		test   %al,%al
		jne    _04f985_jump
		mov    _0cf8da_data,%bx
		cmp    %bx,%dx
		jne    _04f985_jump
		mov    $_04f8b4_jump,%eax
		xor    %bl,%dl
		call   _03cb54_func
		mov    %dl,_096880_data
		movb   $0x000001,_095eb1_data
		call   _04271c_func
		pop    %ebx
		ret    



_04f9f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cfa4f_data
		jne    _04fa53_jump
		mov    _0e4cac_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2d94_data,%eax
		call   _01a3f0_func
		mov    _0e4cac_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		jmp    _04faa8_jump

	_04fa53_jump:
		mov    _0e4cac_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2d94_data,%eax
		call   _01a3f0_func
		mov    _0e4cac_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001

	_04faa8_jump:
		add    $0x000023,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c2d98_data,%eax
		call   _01a3f0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04fac4_func:
		push   %ebx
		push   %edx
		call   _04f76c_func
		call   _041ce4_func
		test   %ax,%ax
		jne    _04fadf_jump
		call   _041d54_func
		test   %ax,%ax
		je     _04fb42_jump

	_04fadf_jump:
		call   _041dc4_func
		test   %ax,%ax
		jne    _04fb42_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _04fb42_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _04fb28_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _04fb42_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04fb42_jump

	_04fb28_jump:
		mov    _0cfa4f_data,%dl
		test   %dl,%dl
		sete   %al
		mov    %al,_0cfa4f_data
		mov    $0x000044,%eax
		call   _072960_func

	_04fb42_jump:
		call   _04f9f0_func
		call   _037280_func
		test   %al,%al
		je     _04fb5e_jump
		mov    $0x000001,%dh
		mov    %dh,_0cfa4f_data
		mov    %dh,_096882_data

	_04fb5e_jump:
		call   _03715c_func
		test   %al,%al
		je     _04fb77_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _04fb77_jump
		movb   $0x000001,_096882_data

	_04fb77_jump:
		call   _04f7b0_func
		pop    %edx
		pop    %ebx
		ret    

_04fb80_switch:
		.long   _04fbdc_case
		.long   _04fc49_case
		.long   _04fca3_case
		.long   _04fcfe_case
		.long   _04fdea_case




_04fb94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000a0,%edx
		mov    $0x000064,%ebx
		mov    $0x000002,%ah
		mov    %dx,_0cbd00_data
		mov    %bx,_0cbd02_data
		mov    %ah,_0cbd04_data
		xor    %dh,%dh
		mov    %ah,_0cbd06_data
		mov    %dh,_0cbd05_data
		cmp    $0x000004,%al
		ja     _04fede_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04fb80_switch(,%eax,4)

	_04fbdc_case:
		mov    $0x000001,%ah
		mov    _095e63_data,%dl
		mov    %ah,_0cfa4f_data
		test   %dl,%dl
		je     _04fbfb_jump
		mov    $_0cbc30_data,%edi
		mov    _0c2d54_data,%esi
		jmp    _04fc06_jump

	_04fbfb_jump:
		mov    $_0cbc30_data,%edi
		mov    _0c2d58_data,%esi

	_04fc06_jump:
		push   %edi

	_04fc07_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04fc1f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04fc07_jump

	_04fc1f_jump:
		pop    %edi
		mov    $_0cbc30_data,%eax
		mov    $_04fac4_func,%edx
		call   _01f21c_func
		mov    $_0cbc30_data,%eax
		call   _04f960_func
		cmpb   $0x000000,_0cfa4f_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04fc49_case:
		mov    $0x000001,%al
		mov    $_03452c_func,%esi
		mov    $_0cbc30_data,%edi
		mov    %esi,_0e4cc8_data
		mov    _0c2d4c_data,%esi
		mov    %al,_0cfa4f_data
		push   %edi

	_04fc67_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04fc7f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04fc67_jump

	_04fc7f_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04fac4_func,%edx
		call   _01f21c_func
		mov    %edi,%eax
		call   _04f960_func
		cmpb   $0x000000,_0cfa4f_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04fca3_case:
		mov    $0x000001,%ch
		mov    $_0cbc30_data,%edi
		mov    %ch,_0cfa4f_data
		mov    $_03452c_func,%ecx
		mov    _0c2d50_data,%esi
		mov    %ecx,_0e4cc8_data
		push   %edi

	_04fcc2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04fcda_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04fcc2_jump

	_04fcda_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04fac4_func,%edx
		call   _01f21c_func
		mov    %edi,%eax
		call   _04f960_func
		cmpb   $0x000000,_0cfa4f_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04fcfe_case:
		call   _04f488_func
		mov    $0x000001,%cl
		mov    $_0c7f88_data,%esi
		mov    $_0e49ac_data,%edi
		mov    $0x000001,%edx
		mov    %cl,_0cfa4f_data
		mov    $0x000300,%ecx
		mov    $_03ce20_func,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02479c_func
		mov    _0cd7d0_data,%eax
		mov    $_0de43c_data,%esi
		call   _02494c_func
		call   _03cadc_func
		mov    _0cd7d0_data,%edi
		mov    $_04fac4_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7f88_data,%edi
		call   _03ca8c_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0cbc30_data,%edi
		mov    _0c2d50_data,%esi
		mov    %ebx,_0e4cc8_data
		push   %edi

	_04fd95_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04fdad_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04fd95_jump

	_04fdad_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $0x000300,%ecx
		call   _01f21c_func
		mov    %edi,%eax
		mov    $_0e49ac_data,%esi
		call   _04f960_func
		mov    $_0c7f88_data,%edi
		call   _03cadc_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ca8c_func
		jmp    _04fed9_jump

	_04fdea_case:
		call   _04f488_func
		mov    $0x000001,%bl
		mov    $0x000300,%ecx
		mov    $_0c7f88_data,%esi
		mov    $_0e49ac_data,%edi
		mov    $0x000001,%edx
		mov    %bl,_0cfa4f_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02479c_func
		mov    _0cd7d0_data,%eax
		mov    $_0de43c_data,%esi
		call   _02494c_func
		call   _03cadc_func
		xor    %bh,%bh
		mov    _0cd7d0_data,%edi
		mov    $_03ce20_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7f88_data,%edi
		call   _03ca8c_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0cbc30_data,%edi
		mov    $0x000300,%ecx
		mov    _0c2d54_data,%esi
		mov    %edx,_0e4cc8_data
		push   %edi

	_04fe83_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04fe9b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04fe83_jump

	_04fe9b_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04fac4_func,%edx
		call   _01f21c_func
		mov    %edi,%eax
		mov    $_0e49ac_data,%esi
		call   _04f960_func
		mov    $_0c7f88_data,%edi
		call   _03cadc_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ca8c_func
		mov    %bh,_095eb1_data

	_04fed9_jump:
		call   _04f4ec_func

	_04fede_jump:
		cmpb   $0x000000,_0cfa4f_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04fef0_func:
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,(%esp)

	_04fef9_jump:
		call   _016e9a_func
		call   _016e8a_func
		mov    $_0e40ac_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		call   _03b4d0_func
		call   *(%esp)
		test   %ax,%ax
		je     _04fef9_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_04ff3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e4ce8_data,%di
		mov    _0cd098_data,%ebp
		mov    $0x000140,%eax
		sub    %edi,%eax
		mov    %ax,(%esp)
		call   _01cf94_func
		call   _03ce20_func
		mov    _0cd130_data,%edx
		mov    _0e4ce2_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    _0e4ce4_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0e4ce0_data,%edx
		sar    $0x000010,%edx
		shl    $0x000006,%eax
		neg    %edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0e4ce8_data,%di
		mov    %ax,0x000004(%esp)
		jmp    _050056_jump

	_04ffba_jump:
		mov    0x000004(%esp),%eax
		imul   _0e4cea_data,%ax
		add    $0x000064,%eax
		cwtl   
		imul   $0x000140,%eax,%esi
		mov    _0cd138_data,%edx
		mov    _0cd0a4_data,%ebx
		add    %edx,%esi
		cmp    %ebx,%eax
		jle    _050040_jump
		cmp    _0cd0a0_data,%eax
		jge    _050040_jump
		movswl %di,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		jmp    _050022_jump

	_04fffe_jump:
		mov    _0e4cea_data,%ax
		imul   %ebx,%eax
		add    $0x0000a0,%eax
		movswl %ax,%edx
		cmp    _0cd09c_data,%edx
		jle    _050020_jump
		cmp    %ebp,%edx
		jge    _050020_jump
		mov    (%ecx),%al
		mov    %al,(%edx,%esi,1)

	_050020_jump:
		inc    %ebx
		inc    %ecx

	_050022_jump:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _04fffe_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		jmp    _050046_jump

	_050040_jump:
		add    $0x000140,%ecx

	_050046_jump:
		mov    0x000004(%esp),%esi
		inc    %esi
		mov    %ebp,_0cd098_data
		mov    %si,0x000004(%esp)

	_050056_jump:
		mov    _0e4ce0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    _0cd098_data,%ebp
		cmp    %eax,%edx
		jl     _04ffba_jump
		cmpb   $0x000000,_0e4cfb_data
		je     _0500a0_jump
		mov    _0e4cea_data,%si
		dec    %esi
		mov    %si,_0e4cea_data
		cmp    $0x000001,%si
		sete   %bl
		xor    %bh,%bh
		jmp    _0500e0_jump

	_0500a0_jump:
		mov    _0e4cea_data,%dx
		mov    %di,_0e4ce8_data
		cmp    $0x000010,%dx
		jne    _0500b9_jump
		call   _03cab4_func

	_0500b9_jump:
		mov    _0e4cea_data,%bx
		mov    _0cd098_data,%ebp
		inc    %ebx
		mov    _0e4ce8_data,%di
		mov    %bx,_0e4cea_data
		cmp    $0x000020,%bx
		sete   %al
		xor    %ah,%ah
		mov    %eax,%ebx

	_0500e0_jump:
		mov    %ebx,%eax
		mov    %ebp,_0cd098_data
		mov    %di,_0e4ce8_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0500fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e4ce8_data,%dx
		mov    _0e4ce4_data,%ebx
		mov    _0cd138_data,%ecx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    _0e4ce2_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%ebx,4),%eax
		sar    $0x000010,%edx
		add    %ebx,%eax
		add    %edx,%ecx
		shl    $0x000006,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    _0cd130_data,%ecx
		mov    $0x000011,%ebp
		add    $0x00fa00,%ecx
		xor    %esi,%esi
		add    %edx,%ecx
		mov    %esi,0x000004(%esp)
		jmp    _0501b1_jump

	_05015a_jump:
		xor    %esi,%esi
		jmp    _05018f_jump

	_05015e_jump:
		mov    (%ebx),%al
		cmp    (%ecx),%al
		je     _05018c_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0e4ce8_data,%eax
		mov    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		imul   %edi,%edx
		movzbl (%ecx),%edi
		add    %edi,%edx
		mov    %ebp,%edi
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %al,(%ebx)

	_05018c_jump:
		inc    %esi
		inc    %ebx
		inc    %ecx

	_05018f_jump:
		xor    %edx,%edx
		mov    _0e4ce6_data,%eax
		mov    %si,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _05015e_jump
		mov    0x000004(%esp),%edi
		xor    %eax,%eax
		inc    %edi
		mov    (%esp),%ax
		mov    %edi,0x000004(%esp)
		add    %eax,%ebx

	_0501b1_jump:
		add    %eax,%ecx
		xor    %eax,%eax
		mov    _0e4ce0_data,%edx
		mov    0x000004(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _05015a_jump
		mov    _0e4cea_data,%ax
		inc    %eax
		mov    %ax,_0e4cea_data
		cmp    $0x000010,%ax
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0501e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%ebx
		xor    %edx,%edx

	_0501f4_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e40ac_data(%eax),%cl
		mov    _0e49ac_data(%eax),%ch
		cmp    %ch,%cl
		je     _050243_jump
		movzbl %ch,%esi
		xor    %ecx,%ecx
		lea    0x000002(%esi),%edi
		mov    _0e40ac_data(%eax),%cl
		xor    %ebx,%ebx
		cmp    %edi,%ecx
		jle    _05022b_jump
		mov    %cl,%ch
		sub    $0x000002,%ch
		mov    %ch,_0e40ac_data(%eax)
		jmp    _050243_jump

	_05022b_jump:
		sub    $0x000002,%esi
		cmp    %esi,%ecx
		jge    _050237_jump
		add    $0x000002,%cl
		jmp    _05023d_jump

	_050237_jump:
		mov    _0e49ac_data(%eax),%cl

	_05023d_jump:
		mov    %cl,_0e40ac_data(%eax)

	_050243_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e49ad_data(%eax),%cl
		cmp    _0e40ad_data(%eax),%cl
		je     _050294_jump
		xor    %ecx,%ecx
		mov    _0e49ad_data(%eax),%cl
		movzbl _0e40ad_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _050278_jump
		subb   $0x000002,_0e40ad_data(%eax)
		jmp    _050294_jump

	_050278_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _050288_jump
		addb   $0x000002,_0e40ad_data(%eax)
		jmp    _050294_jump

	_050288_jump:
		mov    _0e49ad_data(%eax),%cl
		mov    %cl,_0e40ad_data(%eax)

	_050294_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e40ae_data(%eax),%cl
		cmp    _0e49ae_data(%eax),%cl
		je     _0502e5_jump
		xor    %ecx,%ecx
		mov    _0e49ae_data(%eax),%cl
		movzbl _0e40ae_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _0502c9_jump
		subb   $0x000002,_0e40ae_data(%eax)
		jmp    _0502e5_jump

	_0502c9_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _0502d9_jump
		addb   $0x000002,_0e40ae_data(%eax)
		jmp    _0502e5_jump

	_0502d9_jump:
		mov    _0e49ae_data(%eax),%cl
		mov    %cl,_0e40ae_data(%eax)

	_0502e5_jump:
		inc    %edx
		cmp    $0x000100,%dx
		jl     _0501f4_jump
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0502fc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    0x000014(%esp),%cl
		cmp    $0x000001,%cl
		jb     _050316_jump
		jbe    _05032c_jump
		cmp    $0x000002,%cl
		je     _050337_jump
		jmp    _050348_jump

	_050316_jump:
		test   %cl,%cl
		jne    _050348_jump
		movw   $0x000020,_0e4cea_data
		movb   $0x000001,_0e4cfb_data
		jmp    _050348_jump

	_05032c_jump:
		xor    %edi,%edi
		mov    %di,_0e4cea_data
		jmp    _050348_jump

	_050337_jump:
		movw   $0x000001,_0e4cea_data
		xor    %ch,%ch
		mov    %ch,_0e4cfb_data

	_050348_jump:
		mov    %eax,%ecx
		xor    %ah,%ch
		mov    $0x000004,%edi
		and    $0x000003,%cl
		sub    %ecx,%edi
		add    %edi,%eax
		mov    %ax,_0e4ce4_data
		mov    %ebx,%eax
		mov    %dx,_0e4ce6_data
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    %ebx,%eax
		add    $0x000002,%esi
		add    $0x000002,%eax
		mov    %si,_0e4ce2_data
		mov    %ax,_0e4ce8_data
		mov    $0x000140,%eax
		mov    _0e4ce8_data,%si
		sub    %esi,%eax
		mov    %eax,(%esp)
		mov    0x000014(%esp),%al
		test   %al,%al
		jne    _050529_jump
		cmpb   $0x000000,_095e2d_data
		jne    _050458_jump
		mov    $0x000001,%edx
		mov    _0cd7b8_data,%eax
		call   _02494c_func
		testb  $0x000004,_0cf81b_data
		je     _050411_jump
		mov    _096862_data,%ecx
		mov    _09685a_data,%ebx
		mov    _096852_data,%edx
		mov    _09684a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ecx
		mov    _0cd098_data,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func

	_050411_jump:
		call   _03cadc_func
		mov    _095e68_data,%eax
		sar    $0x000010,%eax
		mov    _096862_data(,%eax,2),%ecx
		mov    _09685a_data(,%eax,2),%ebx
		mov    _096852_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09684a_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05ce08_func
		mov    _0cd138_data,%edi
		call   _014c8e_func
		jmp    _050484_jump

	_050458_jump:
		mov    $0x000001,%edx
		mov    _0cd7d0_data,%eax
		call   _02494c_func
		call   _03cadc_func
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d9e4_func
		xor    %eax,%eax
		mov    _095e6c_data,%al
		call   _049638_func

	_050484_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _050498_jump
		cmpw   $0x000009,_0cf87c_data
		je     _0504d4_jump

	_050498_jump:
		cmpw   $0x000002,_0cf88c_data
		jne    _0504ac_jump
		cmpw   $0x000004,_0cf87c_data
		je     _0504d4_jump

	_0504ac_jump:
		cmpw   $0x000004,_0cf88c_data
		jne    _0504c0_jump
		cmpw   $0x000009,_0cf87c_data
		je     _0504d4_jump

	_0504c0_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _050510_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _050510_jump

	_0504d4_jump:
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		mov    $_0c7f88_data,%edi
		lea    0x000000(,%edx,4),%eax
		mov    $0x000300,%ecx
		sub    %edx,%eax
		mov    _0cd83c_data,%esi
		shl    $0x000008,%eax
		add    $0x002d00,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_050510_jump:
		call   _02479c_func
		mov    _0cd138_data,%eax
		mov    %eax,_0cd7b8_data
		call   _03ce20_func
		jmp    _05065d_jump

	_050529_jump:
		cmp    $0x000001,%al
		jne    _05065d_jump
		mov    $0x000003,%esi
		xor    %ecx,%ecx

	_050538_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0de43d_data(%ebx),%al
		mov    _0de43c_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0de43e_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0de43c_data(%eax),%dl
		mov    %dl,_0e49ac_data(%ebx)
		mov    _0de43d_data(%eax),%dl
		mov    _0de43e_data(%eax),%al
		mov    %dl,_0e49ad_data(%ebx)
		inc    %ecx
		mov    %al,_0e49ae_data(%ebx)
		cmp    $0x000100,%cx
		jb     _050538_jump
		mov    $0x000300,%ecx
		mov    $_0de43c_data,%esi
		mov    $_0e40ac_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0501e8_func,%eax
		call   _04fef0_func
		mov    _0e4ce2_data,%ebx
		mov    _0cd138_data,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		mov    _0e4ce4_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		jmp    _05064a_jump

	_0505ef_jump:
		xor    %ecx,%ecx
		jmp    _050631_jump

	_0505f3_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		movzbl _0de43d_data(%edx),%esi
		mov    _0de43c_data(%edx),%al
		mov    _0de43e_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    $0x000003,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_050631_jump:
		xor    %eax,%eax
		mov    _0e4ce6_data,%edx
		mov    %cx,%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _0505f3_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi

	_05064a_jump:
		add    %eax,%ebx
		xor    %edx,%edx
		mov    _0e4ce0_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _0505ef_jump

	_05065d_jump:
		mov    _0cd130_data,%eax
		add    $0x00fa00,%eax
		mov    %eax,_0cd7b8_data
		call   *_0e4cc8_data
		mov    _0cd138_data,%eax
		mov    0x000014(%esp),%bl
		mov    %eax,_0cd7b8_data
		cmp    $0x000001,%bl
		jne    _050728_jump
		mov    _0cd130_data,%edx
		mov    _0e4ce2_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0e4ce4_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    $0x000003,%ebp
		jmp    _050717_jump

	_0506c0_jump:
		xor    %ecx,%ecx
		jmp    _0506fd_jump

	_0506c4_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		mov    _0de43d_data(%edx),%al
		movzbl _0de43c_data(%edx),%esi
		mov    _0de43e_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_0506fd_jump:
		xor    %edx,%edx
		mov    _0e4ce6_data,%eax
		mov    %cx,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _0506c4_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi
		add    %eax,%ebx

	_050717_jump:
		xor    %edx,%edx
		mov    _0e4ce0_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _0506c0_jump

	_050728_jump:
		mov    0x000014(%esp),%bh
		test   %bh,%bh
		jne    _0507eb_jump
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e49ac_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0de43c_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03ca8c_func
		mov    $_04ff3c_func,%eax
		xor    %edx,%edx
		call   _03cb54_func
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e49ac_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0507eb_jump:
		cmp    $0x000001,%bh
		jne    _0508a1_jump
		mov    $_0500fc_func,%eax
		mov    $0x000003,%esi
		call   _03cb54_func
		xor    %ecx,%ecx

	_050805_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0de43d_data(%ebx),%al
		mov    _0de43c_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0de43e_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0de43c_data(%eax),%dl
		mov    %dl,_0e40ac_data(%ebx)
		mov    _0de43d_data(%eax),%dl
		mov    _0de43e_data(%eax),%al
		mov    %dl,_0e40ad_data(%ebx)
		inc    %ecx
		mov    %al,_0e40ae_data(%ebx)
		cmp    $0x000100,%cx
		jb     _050805_jump
		mov    $0x000300,%ecx
		mov    $_0de43c_data,%esi
		mov    $_0e49ac_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   *_0e4cc8_data
		mov    $_0501e8_func,%eax
		call   _04fef0_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0508a1_jump:
		cmp    $0x000002,%bh
		jne    _050a2e_jump
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e49ac_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0de43c_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04ff3c_func,%eax
		call   _03cb54_func
		cmpb   $0x000001,_095e2d_data
		jne    _05093f_jump
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		call   _03d8ac_func
		xor    %eax,%eax
		mov    _095e6c_data,%al
		call   _049638_func

	_05093f_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _050953_jump
		cmpw   $0x000009,_0cf87c_data
		je     _05098f_jump

	_050953_jump:
		cmpw   $0x000002,_0cf88c_data
		jne    _050967_jump
		cmpw   $0x000004,_0cf87c_data
		je     _05098f_jump

	_050967_jump:
		cmpw   $0x000004,_0cf88c_data
		jne    _05097b_jump
		cmpw   $0x000009,_0cf87c_data
		je     _05098f_jump

	_05097b_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _0509cc_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _0509cc_jump

	_05098f_jump:
		mov    _0cf73e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cd83c_data,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x000008,%eax
		mov    _0cfa82_data,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7f88_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		jmp    _0509ef_jump

	_0509cc_jump:
		xor    %edx,%edx
		mov    _0cfa82_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7f88_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e49ac_data,%esi

	_0509ef_jump:
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,_0cfa82_data
		je     _050a29_jump
		mov    $0x000300,%ecx
		mov    $_0e46ac_data,%esi
		mov    $_0c7f88_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_050a29_jump:
		call   _03ca8c_func

	_050a2e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_050a38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e4ce8_data,%dx
		mov    _0e4ce4_data,%esi
		mov    _0cd138_data,%edi
		sar    $0x000010,%esi
		sub    %edx,%eax
		mov    _0e4ce2_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%esi,4),%eax
		sar    $0x000010,%edx
		add    %eax,%esi
		add    %edx,%edi
		shl    $0x000006,%esi
		lea    (%edi,%esi,1),%eax
		mov    _0cd130_data,%edi
		add    $0x00fa00,%edi
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    %ebx,0x000004(%esp)
		jmp    _050ad9_jump

	_050a90_jump:
		xor    %ecx,%ecx
		jmp    _050ab6_jump

	_050a94_jump:
		xor    %edi,%edi
		mov    _0e4ce8_data,%esi
		mov    %bx,%di
		sar    $0x000010,%esi
		cmp    %esi,%edi
		jne    _050ab2_jump
		mov    (%eax),%bl
		mov    (%edx),%bh
		cmp    %bh,%bl
		je     _050ab0_jump
		mov    %bh,(%eax)

	_050ab0_jump:
		xor    %ebx,%ebx

	_050ab2_jump:
		inc    %ecx
		inc    %eax
		inc    %edx
		inc    %ebx

	_050ab6_jump:
		xor    %esi,%esi
		mov    _0e4ce6_data,%edi
		mov    %cx,%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _050a94_jump
		mov    0x000004(%esp),%edi
		xor    %esi,%esi
		inc    %edi
		mov    (%esp),%si
		mov    %edi,0x000004(%esp)
		add    %esi,%eax

	_050ad9_jump:
		add    %esi,%edx
		xor    %esi,%esi
		mov    _0e4ce0_data,%edi
		mov    0x000004(%esp),%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _050a90_jump
		mov    _0e4cea_data,%ax
		dec    %ax
		mov    %ax,_0e4cea_data
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050b0c_func:
		mov    %ax,_0e4ce4_data
		mov    %dx,_0e4ce6_data
		mov    %bx,_0e4ce8_data
		mov    %cx,_0e4ce2_data
		mov    _0cd130_data,%eax
		mov    $0x000010,%edx
		add    $0x00fa00,%eax
		mov    %dx,_0e4cea_data
		mov    %eax,_0cd7b8_data
		call   *_0e4cc8_data
		mov    _0cd138_data,%eax
		mov    %eax,_0cd7b8_data
		mov    $_050a38_func,%eax
		jmp    _03cb54_func



_050b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ecx
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		mov    %ecx,%esi
		test   %bx,%bx
		jle    _050ba3_jump

	_050b80_jump:
		mov    0x000060(%edx),%di
		cmp    $0x0000cb,%di
		jne    _050b8f_jump
		mov    %eax,%ecx
		jmp    _050b97_jump

	_050b8f_jump:
		cmp    $0x000070,%di
		jne    _050b97_jump
		mov    %eax,%esi

	_050b97_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _050b80_jump

	_050ba3_jump:
		mov    %si,_0e4d8c_data
		mov    %cx,_0e4d90_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050bb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0cfa68_data
		jne    _050c7b_jump
		mov    _0cf858_data,%ecx
		mov    _0cf8b0_data,%eax
		mov    _0cf856_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _050bff_jump
		cmp    %ecx,%eax
		jg     _050bff_jump
		mov    $0x000001,%eax
		jmp    _050c01_jump

	_050bff_jump:
		xor    %eax,%eax

	_050c01_jump:
		test   %eax,%eax
		je     _050c44_jump
		mov    _0cf85a_data,%ecx
		mov    _0cf8b2_data,%eax
		mov    _0cf854_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _050c3a_jump
		cmp    %ecx,%eax
		jg     _050c3a_jump
		mov    $0x000001,%eax
		jmp    _050c3c_jump

	_050c3a_jump:
		xor    %eax,%eax

	_050c3c_jump:
		test   %eax,%eax
		je     _050c44_jump
		mov    $0x000001,%al
		jmp    _050c46_jump

	_050c44_jump:
		xor    %al,%al

	_050c46_jump:
		mov    %al,_0cfa68_data
		test   %al,%al
		je     _050cab_jump
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf86e_data
		mov    _0cf856_data,%ax
		mov    %ax,_0cf854_data
		mov    _0cf85c_data,%ax
		mov    %ax,_0cf85e_data
		jmp    _050cab_jump

	_050c7b_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _050c92_jump
		cmpb   $0x000000,_0cf9f7_data
		jne    _050c92_jump
		mov    %bl,%cl
		dec    %cl
		mov    %cl,0x00007f(%edx)

	_050c92_jump:
		mov    _0cf854_data,%ax
		mov    _0cf8a6_data,%bx
		cmp    %bx,%ax
		jge    _050cab_jump
		mov    %bx,_0cf854_data

	_050cab_jump:
		cmpb   $0x000000,_0cfa68_data
		je     _050cc0_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _050cc0_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050cc0_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050cc8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _050cda_jump
		cmp    $0x000001,%dl
		je     _050d05_jump
		jmp    _050d32_jump

	_050cda_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf86c_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _050d9b_jump

	_050d05_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf870_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _050d9b_jump

	_050d32_jump:
		mov    _0cf86c_data,%esi
		mov    _0cf870_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _050d87_jump
		add    $0x000130,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050d87_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_050d9b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_050da4_func:
		push   %edx
		mov    _0e4d94_data,%eax
		sar    $0x000010,%eax
		call   _05e000_func
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e4d90_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,_0cf850_data
		mov    _0e4d94_data,%eax
		sar    $0x000010,%eax
		call   _05dfc0_func
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e4d92_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0e4d96_data,%dx
		add    $0x000004,%edx
		mov    %ax,_0cf84a_data
		mov    %dx,_0e4d96_data
		cmp    $0x000200,%dx
		jle    _050e3d_jump
		movw   $0x008300,_0e4d96_data

	_050e3d_jump:
		pop    %edx
		ret    

_050e40_switch:
		.long   _050e9f_case
		.long   _050ee8_case
		.long   _050ead_case
		.long   _050ee8_case
		.long   _050ead_case
		.long   _050ee8_case
		.long   _050ed0_case




_050e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)

	_050e6b_jump:
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _050fc8_jump
		mov    0x00006c(%esi),%dl
		dec    %dl

	_050e88_jump:
		xor    %bl,%bl
		mov    %bl,0x000004(%esp)
		cmp    $0x000006,%dl
		ja     _050ee8_case
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    *%cs:_050e40_switch(,%ebx,4)

	_050e9f_case:
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %bh,0x000008(%esp)
		mov    %dh,0x00000c(%esp)
		jmp    _050ee8_case

	_050ead_case:
		testb  $0x000008,0x000081(%esi)
		je     _050ec4_jump
		mov    $0x000004,%dh
		mov    $0x000005,%bl
		mov    %dh,0x000008(%esp)
		mov    %bl,0x00000c(%esp)
		jmp    _050ee8_case

	_050ec4_jump:
		movb   $0x000002,0x000008(%esp)
		movb   $0x000003,0x00000c(%esp)
		jmp    _050ee8_case

	_050ed0_case:
		testb  $0x000008,0x000081(%esi)
		je     _050ede_jump
		movb   $0x000001,0x000004(%esp)

	_050ede_jump:
		movb   $0x000006,0x000008(%esp)
		movb   $0x000007,0x00000c(%esp)

	_050ee8_case:
		cmpw   $0x0000c2,0x000060(%ecx)
		jne    _050fb8_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _050fb8_jump
		mov    0x000008(%esp),%bl
		mov    0x00006c(%ecx),%dh
		cmp    %bl,%dh
		je     _050f13_jump
		cmp    0x00000c(%esp),%dh
		jne    _050fb8_jump

	_050f13_jump:
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f8e8_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    (%esp),%bl
		mov    %eax,0x00002c(%ecx)
		test   %bl,%bl
		je     _050f6a_jump
		mov    0x00000c(%esp),%al
		jmp    _050f6e_jump

	_050f6a_jump:
		mov    0x000008(%esp),%al

	_050f6e_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d818_func
		mov    %ecx,%eax
		mov    0x000004(%esp),%bh
		call   _01e030_func
		mov    $0x000001,%eax
		test   %bh,%bh
		je     _050f9f_jump
		cmpb   $0x000000,(%esp)
		sete   %dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    _050fa9_jump

	_050f9f_jump:
		mov    (%esp),%dh
		xor    %ebx,%ebx
		test   %dh,%dh
		setne  %bl

	_050fa9_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _061220_func
		jmp    _050fc8_jump

	_050fb8_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _050e88_jump

	_050fc8_jump:
		mov    (%esp),%dl
		add    $0x000002,%dl
		mov    %dl,(%esp)
		cmp    $0x000002,%dl
		jbe    _050e6b_jump
		mov    %esi,%eax
		call   _07b29c_func
		mov    0x000032(%esi),%edx
		mov    $0x0000dc,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051010_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		mov    $0xffffffff,%edi

	_05101c_jump:
		xor    %eax,%eax

	_05101e_jump:
		movswl %si,%edx
		movswl %ax,%ebx
		shl    $0x000004,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    _0e4cfe_data(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _051051_jump
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%ecx
		movb   $0x000046,0x00007f(%ecx,%edx,1)
		mov    %di,_0e4d00_data(%ebx)

	_051051_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _05101e_jump
		inc    %esi
		cmp    $0x000008,%si
		jl     _05101c_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_051068_switch:
		.long   _051293_case
		.long   _0512a2_case
		.long   _0512ba_case
		.long   _0512e8_case
		.long   _051293_case
		.long   _0512a2_case
		.long   _0512d2_case
		.long   _0512e8_case
		.long   _0512ff_case




_05108c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		cmpb   $0x0000fe,_0e4d9c_data
		jne    _0511b9_jump
		mov    _0e4d8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _0511b9_jump
		mov    _0ce678_data,%dx
		movzbw 0x000068(%edi),%si
		mov    0x000028(%edi),%bx
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0ce6b8_data,%al
		movswl %si,%ebx
		add    %edx,%eax
		lea    0x000008(%ebx),%ecx
		cwtl   
		sub    $0x000008,%ebx
		cmp    %ebx,%eax
		jl     _0510eb_jump
		cmp    %ecx,%eax
		jg     _0510eb_jump
		mov    $0x000001,%eax
		jmp    _0510ed_jump

	_0510eb_jump:
		xor    %eax,%eax

	_0510ed_jump:
		test   %eax,%eax
		je     _051464_jump
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%ax
		xor    %edx,%edx
		test   %ax,%ax
		jle    _0511a0_jump

	_05110c_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _051190_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _051190_jump
		andb   $0x0000f7,0x000081(%ebx)
		xor    %edx,%edx
		movswl %si,%eax
		mov    0x000068(%ebx),%dl
		movb   $0x000000,0x00006c(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    $0x000012,%ecx
		mov    0x000069(%edi),%al
		mov    0x00002c(%edi),%edi
		mov    _0cd0a4_data,%ebp
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0cd0a0_data,%edx
		mov    0x000069(%ebx),%al
		sub    %ebp,%edx
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		movl   $0x000001,0x000024(%ebx)
		mov    %eax,%edx
		mov    0x000081(%ebx),%cl
		shl    $0x000002,%eax
		or     $0x000004,%cl
		sub    %edx,%eax
		mov    %cl,0x000081(%ebx)
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    %edi,0x00002c(%ebx)
		call   _01f8e8_func
		movb   $0x000032,0x00007f(%ebx)
		jmp    _0511a0_jump

	_051190_jump:
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _05110c_jump

	_0511a0_jump:
		mov    $0x0000ff,%ch
		mov    %si,_0e4d8e_data
		mov    %ch,_0e4d9c_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0511b9_jump:
		xor    %dl,%dl
		mov    %dl,0x000010(%esp)

	_0511bf_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		cmpb   $0x000007,_0e4d80_data(%edx)
		jne    _0511ec_jump
		mov    $0x0000ff,%al
		mov    $0xffff8300,%ebx
		mov    %al,_0e4d9c_data
		mov    %bx,_0e4d8e_data
		mov    %al,_0e4d80_data(%edx)
		jmp    _051451_jump

	_0511ec_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %eax,%edx
		mov    0x000010(%esp),%ah
		mov    %dx,0x000008(%esp)
		test   %ah,%ah
		jne    _05123f_jump
		mov    _0cd098_data,%edx
		sub    _0cd09c_data,%edx
		mov    $0x000009,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000006(%esp),%ebx
		mov    %eax,%edx
		mov    _0e4d8c_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _051237_jump
		neg    %eax

	_051237_jump:
		cmp    %edx,%eax
		jl     _051464_jump

	_05123f_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0e4d9c_data,%al
		mov    0x000010(%esp),%bl
		lea    0x000000(,%eax,4),%edx
		mov    _0e4d80_data(%ebx),%cl
		lea    0x000000(,%ebx,4),%eax
		mov    _096e28_data(%edx),%edx
		inc    %cl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %cl,_0e4d80_data(%ebx)
		mov    %cl,%dl
		mov    (%eax),%eax
		add    %edx,%edx
		mov    (%edx,%eax,1),%ax
		cmp    $0x000008,%ax
		ja     _051316_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_051068_switch(,%eax,4)

	_051293_case:
		xor    %cl,%cl
		mov    %cl,0x000014(%esp)
		mov    %cl,0x00000c(%esp)
		jmp    _051316_jump

	_0512a2_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000002,%bh
		shr    $0x000007,%al
		mov    %bh,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _051316_jump

	_0512ba_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000006,%bl
		shr    $0x000007,%al
		mov    %bl,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _051316_jump

	_0512d2_case:
		mov    $0x000006,%ch
		mov    0x000081(%edi),%ah
		mov    %ch,0x000014(%esp)
		test   $0x000008,%ah
		sete   0x00000c(%esp)
		jmp    _051316_jump

	_0512e8_case:
		movb   $0x000004,0x000014(%esp)
		mov    0x000081(%edi),%dh
		test   $0x000008,%dh
		sete   %al
		mov    %al,0x00000c(%esp)
		jmp    _051316_jump

	_0512ff_case:
		mov    $0xffffffff,%esi
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    %ax,0x000008(%esp)
		mov    %si,_0e4d00_data(%edx,%ebx,1)

	_051316_jump:
		cmpw   $0x000000,0x000008(%esp)
		je     _051440_jump
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%si
		xor    %ecx,%ecx
		test   %si,%si
		jle    _051420_jump

	_05133a_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _051410_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _051410_jump
		mov    0x000081(%ebx),%dl
		mov    0x000014(%esp),%al
		and    $0x0000f7,%dl
		mov    %al,0x00006c(%ebx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000081(%ebx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000003,%al
		movzbl 0x000010(%esp),%ebp
		or     %al,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%ebx)
		mov    %ebp,%edx
		mov    _0e4d80_data(%ebp),%al
		shl    $0x000004,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    %cx,_0e4d00_data(%eax)
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		movb   $0x000000,0x00006b(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%ebx),%dl
		sub    %edx,%eax
		mov    _0cd0a0_data,%edx
		mov    %eax,0x000004(%esp)
		sub    _0cd0a4_data,%edx
		movl   $0x000012,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    $0x000006,%ebp
		imul   %ebp,%eax
		mov    0x000004(%esp),%edx
		add    %eax,%edx
		mov    0x000081(%ebx),%al
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%al
		mov    %al,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01f8e8_func
		jmp    _051420_jump

	_051410_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %si,%cx
		jl     _05133a_jump

	_051420_jump:
		cmp    %si,%cx
		jl     _051440_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		xor    %eax,%eax
		mov    _0e4d80_data(%edx),%al
		shl    $0x000004,%edx
		movw   $0x00ffff,_0e4d00_data(%edx,%eax,2)

	_051440_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		mov    %ax,_0e4d8e_data

	_051451_jump:
		mov    0x000010(%esp),%ah
		inc    %ah
		mov    %ah,0x000010(%esp)
		cmp    $0x000008,%ah
		jb     _0511bf_jump

	_051464_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051470_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movzbl %dl,%esi
		mov    %esi,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    0x00000c(%ecx),%eax
		lea    0x000000(,%esi,8),%edx
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%esi
		mov    0x000002(%edx,%esi,1),%dl
		mov    %dl,0x00006a(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05149c_func:
		test   %dl,%dl
		je     _0514a8_jump
		movw   $0x0000d5,0x000060(%eax)
		jmp    _0514ae_jump

	_0514a8_jump:
		movw   $0x000062,0x000060(%eax)

	_0514ae_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0933ee_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    

_0514c4_switch:
		.long   _05164f_case
		.long   _051655_case
		.long   _051666_case
		.long   _051605_case
		.long   _051605_case
		.long   _0518cd_case
		.long   _051605_case
		.long   _051949_case
		.long   _051a16_case
		.long   _051605_case
		.long   _051605_case
		.long   _051605_case
		.long   _051a8d_case
		.long   _051b85_case
		.long   _051bd1_case
		.long   _051c8d_case
		.long   _051cd4_case
		.long   _051605_case
		.long   _051de1_case
		.long   _051fa7_case
		.long   _051605_case
		.long   _051fd9_case
		.long   _05207c_case
		.long   _052148_case
		.long   _0522b5_case
		.long   _052141_case
		.long   _051daf_case
		.long   _052381_case
		.long   _052406_case
		.long   _05259c_case
		.long   _05211d_case
		.long   _052339_case
		.long   _051ee1_case
		.long   _051ee1_case
		.long   _051e23_case
		.long   _051e6b_case
		.long   _051c12_case
		.long   _0522ee_case
		.long   _051b05_case
		.long   _05200b_case
		.long   _0517d8_case
		.long   _0518f1_case
		.long   _0516f5_case
		.long   _051ee1_case
		.long   _051730_case
		.long   _052148_case
		.long   _05169b_case

_051580_switch:
		.long   _05174a_case
		.long   _05174a_case
		.long   _05174a_case
		.long   _05174a_case
		.long   _05174a_case
		.long   _0517a6_case

_051598_switch:
		.long   _051e94_case
		.long   _051eac_case
		.long   _051e94_case
		.long   _051e81_case
		.long   _051e94_case




_0515ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0e4d8e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%edi
		add    %edx,%eax
		mov    _0e4d8a_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		lea    (%edi,%eax,1),%ebp
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edi
		mov    _0e4d94_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _0525f2_jump
		mov    %esi,%eax
		add    $0x000081,%eax
		mov    %eax,(%esp)

	_051605_case:
		cmpb   $0x000000,_0cfa6c_data
		je     _0525f2_jump
		xor    %eax,%eax
		mov    _0cfa6e_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cfa6f_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ef8_data(%edx),%edx
		mov    %al,_0cfa6f_data
		mov    (%edx,%ebx,1),%al
		mov    %al,0x000004(%esp)
		cmp    $0x00002e,%al
		ja     _051605_case
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		jmp    *%cs:_0514c4_switch(,%eax,4)

	_05164f_case:
		incb   _0cfa6e_data

	_051655_case:
		xor    %ch,%ch
		mov    $0x000001,%al
		mov    %ch,_0cfa6f_data
		mov    %al,_0cfa6c_data
		jmp    _051605_case

	_051666_case:
		mov    _0cfa69_data,%al
		mov    %al,_0cfa6e_data
		mov    _0cfa67_data,%al
		mov    %al,_0cfa6f_data
		cmp    $0x0000ff,%al
		jne    _051688_jump
		mov    %al,%dh
		inc    %dh
		mov    %dh,_0cfa6f_data

	_051688_jump:
		movb   $0x000001,_0cfa6c_data
		movb   $0x0000ff,_0cfa69_data
		jmp    _051605_case

	_05169b_case:
		mov    $0xffff8300,%edx
		mov    $0x000007,%ebx
		mov    $_0ce650_data,%eax
		mov    %dx,_0cf86a_data
		mov    $0x000003,%edx
		call   _01d818_func
		mov    $0x000001,%dh
		mov    $_0ce650_data,%eax
		mov    _0cf81e_data,%bl
		mov    %dh,_0cfa76_data
		or     $0x000020,%bl
		mov    $0x000001,%edx
		mov    %bl,_0cf81e_data
		call   _01d6c8_func
		xor    %bh,%bh
		sub    $0x000003,%eax
		mov    %bh,_0cfa6c_data
		mov    %ax,0x000048(%esi)
		jmp    _051605_case

	_0516f5_case:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    _0ce678_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf86a_data
		mov    %esi,%eax
		call   _061220_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000048(%esi)
		mov    %bl,_0cfa6c_data
		jmp    _051605_case

	_051730_case:
		mov    0x00006c(%edi),%al
		sub    $0x000025,%al
		cmp    $0x000005,%al
		ja     _0517cc_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_051580_switch(,%eax,4)

	_05174a_case:
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x00002b,%edx
		mov    %ebp,%eax
		call   _051470_func
		mov    0x00006c(%edi),%al
		xor    %edx,%edx
		inc    %al
		mov    %al,%dl
		mov    %edi,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		xor    %dl,%dl
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006b(%edi)
		mov    %dl,_0cfa6c_data
		mov    %eax,0x00002c(%edi)
		movb   $0x0000ff,_0cfa6d_data
		jmp    _051605_case

	_0517a6_case:
		mov    0x000081(%ebp),%cl
		xor    %al,%al
		and    $0x0000fb,%cl
		mov    %al,_0cfa6f_data
		mov    $0x000001,%ah
		mov    %cl,0x000081(%ebp)
		mov    $0x000006,%ch
		mov    %ah,_0cfa6c_data
		mov    %ch,_0cfa6e_data

	_0517cc_jump:
		movb   $0x0000ff,_0cfa6d_data
		jmp    _051605_case

	_0517d8_case:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf84a_data
		mov    _0ce6dc_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		je     _0518b2_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		mov    0x00000c(%esi),%eax
		mov    (%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x00000d(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0cf850_data
		mov    _0ce6dc_data,%eax
		mov    0x000040(%eax),%cx
		test   %cx,%cx
		jge    _051859_jump
		mov    _0cf850_data,%cx
		mov    0x000028(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0cf850_data
		jmp    _05186e_jump

	_051859_jump:
		jle    _05186e_jump
		mov    _0cf850_data,%bx
		mov    0x000028(%esi),%ax
		sub    %ebx,%eax
		mov    %ax,_0cf850_data

	_05186e_jump:
		mov    $0x0000ff,%ch
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cfa64_data
		mov    %ch,_0cfa65_data
		mov    %ah,_0cfa6a_data
		mov    $0x0000ff,%ecx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %dl,%dl
		mov    %dl,_0cfa6c_data
		jmp    _051605_case

	_0518b2_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %dl,%dl
		mov    %dl,_0cfa6c_data
		jmp    _051605_case

	_0518cd_case:
		mov    %esi,%eax
		call   _07a474_func
		movw   $0x000001,_0cf880_data
		orb    $0x000020,_0cf81e_data
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _051605_case

	_0518f1_case:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dfb8_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _05193d_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _061220_func
		mov    %cl,_0cfa6c_data
		jmp    _051605_case

	_05193d_jump:
		movb   $0x000001,_0cfa6c_data
		jmp    _051605_case

	_051949_case:
		mov    $0x000001,%edx
		xor    %ah,%ah
		mov    $0x00002c,%ebx
		mov    %ah,_0e4d9a_data
		mov    %ah,_0e4d9b_data
		mov    %esi,%eax
		movb   $0x000003,0x00007e(%esi)
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _050cc8_func
		mov    0x000081(%esi),%dh
		mov    0x000028(%esi),%eax
		and    $0x0000f7,%dh
		sub    $0x000090,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x000028(%esi)
		mov    _0cf81e_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		mov    $0x0000ff,%ecx
		sub    %edx,%eax
		mov    $0x000001,%bl
		sub    $0x000020,%eax
		mov    %bl,_0cfa6a_data
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0cf86e_data,%dx
		mov    0x000068(%esi),%al
		mov    $0x0000ff,%bh
		sub    %eax,%edx
		mov    %bh,_0cfa64_data
		mov    %edx,%eax
		mov    %bh,_0cfa65_data
		add    $0x000032,%eax
		mov    %ecx,%ebx
		mov    %ax,_0cf850_data
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0cf84a_data
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _061220_func
		mov    %ch,_0cfa6c_data
		jmp    _051605_case

	_051a16_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000004,%ecx
		call   _05149c_func
		mov    $0x000001,%edx
		mov    0x000028(%esi),%ax
		mov    %cx,_0e4d96_data
		mov    %ax,_0e4d92_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		sub    $0x00003c,%eax
		mov    %ecx,%ebx
		mov    %ax,_0e4d94_data
		call   _050da4_func
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%bh
		mov    $0x0000ff,%cl
		mov    %esi,%eax
		mov    %bh,_0cfa6a_data
		mov    $0x000001,%ebx
		mov    %cl,_0cfa64_data
		mov    %ebx,%edx
		mov    %cl,_0cfa65_data
		call   _061220_func
		xor    %al,%al
		mov    %al,_0cfa6c_data
		jmp    _051605_case

	_051a8d_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05149c_func
		mov    0x000028(%esi),%ax
		add    $0x00006e,%eax
		mov    %ax,_0cf850_data
		xor    %eax,%eax
		mov    _0cf820_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x00007c,%eax
		mov    $0x0000ff,%dl
		mov    %ax,_0cf84a_data
		mov    %dl,_0cfa64_data
		mov    %dl,_0cfa65_data
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ah,_0cfa6a_data
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %bl,%bl
		mov    %bl,_0cfa6c_data
		jmp    _051605_case

	_051b05_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _05149c_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _01d818_func
		mov    $0x000001,%bl
		mov    _0cf820_data,%ax
		mov    %cl,_0cfa65_data
		xor    %edx,%edx
		mov    %bl,_0cfa6a_data
		mov    0x000069(%esi),%dl
		xor    %ecx,%ecx
		mov    $0x0000ff,%bh
		sub    %edx,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf84a_data
		mov    %bh,_0cfa64_data
		mov    0x000028(%esi),%ax
		mov    $0x0000ff,%ebx
		mov    %ax,_0cf850_data
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _061220_func
		mov    %ch,_0cfa6c_data
		jmp    _051605_case

	_051b85_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x00000a,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ebp)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ebp)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%edi)
		mov    %esi,%eax
		call   _061220_func
		xor    %al,%al
		mov    %al,_0cfa6c_data
		jmp    _051605_case

	_051bd1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000025,%ebx
		call   _05149c_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%edi),%cl
		or     $0x000004,%cl
		mov    %edi,%eax
		mov    %cl,0x000081(%edi)
		call   _01f8e8_func
		mov    %edi,%eax
		mov    $0x000001,%ch
		call   _01e030_func
		mov    %ch,_0cfa6c_data
		jmp    _051605_case

	_051c12_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05149c_func
		testb  $0x000004,0x000081(%edi)
		jne    _051c2e_jump
		mov    %edi,%eax
		call   _01f8e8_func

	_051c2e_jump:
		orb    $0x000004,0x000081(%edi)
		movb   $0x000006,0x00007e(%esi)
		testb  $0x000004,0x000081(%ebp)
		jne    _051c49_jump
		mov    %ebp,%eax
		call   _01f8e8_func

	_051c49_jump:
		mov    $0x000013,%ebx
		mov    0x000081(%ebp),%cl
		mov    %esi,%eax
		or     $0x000004,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebp)
		call   _01d818_func
		mov    $0x000024,%edx
		mov    %ebp,%eax
		mov    $0x000001,%ebx
		call   _051470_func
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %ch,%ch
		call   _061220_func
		mov    %ch,_0cfa6c_data
		jmp    _051605_case

	_051c8d_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05149c_func
		mov    $0x000001,%eax
		call   _06bf60_func
		test   %ax,%ax
		je     _051cab_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    _051cb2_jump

	_051cab_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax

	_051cb2_jump:
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %bh,%bh
		mov    %bh,_0cfa6c_data
		jmp    _051605_case

	_051cd4_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _05149c_func
		mov    _0e4d9a_data,%ch
		mov    %ebx,%edx
		inc    %ch
		mov    %esi,%eax
		mov    %ch,_0e4d9a_data
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf84a_data
		mov    0x00000c(%esi),%eax
		mov    0x000004(%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x000005(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0cf850_data
		testb  $0x000008,0x000081(%esi)
		je     _051d58_jump
		mov    _0cf850_data,%bx
		mov    0x000028(%esi),%ax
		add    %eax,%ebx
		mov    %bx,_0cf850_data
		jmp    _051d6b_jump

	_051d58_jump:
		mov    _0cf850_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %ax,_0cf850_data

	_051d6b_jump:
		mov    $0x000001,%ah
		mov    $0x0000ff,%dl
		mov    $0x0000ff,%ecx
		mov    %ah,_0cfa6a_data
		mov    %dl,_0cfa64_data
		mov    %dl,_0cfa65_data
		mov    %ecx,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %bl,%bl
		mov    %bl,_0cfa6c_data
		jmp    _051605_case

	_051daf_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _051605_case

	_051de1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%bl
		call   _05149c_func
		mov    %bl,_0cfa6d_data
		mov    %esi,%eax
		mov    $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,_0e4d99_data
		mov    $0x000007,%ebx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _061220_func
		mov    %cl,_0cfa6c_data
		jmp    _051605_case

	_051e23_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000015,%al
		jb     _051e3f_jump
		jbe    _051e58_jump
		cmp    $0x00001f,%al
		jb     _051eac_case
		jbe    _051e58_jump
		cmp    $0x000022,%al
		je     _051e45_jump
		jmp    _051eac_case

	_051e3f_jump:
		cmp    $0x000013,%al
		je     _051e58_jump
		jmp    _051eac_case

	_051e45_jump:
		mov    $0x00001f,%edx
		mov    %esi,%eax
		call   _01d808_func
		mov    $0x000021,%edx
		jmp    _051ea5_jump

	_051e58_jump:
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d808_func
		mov    $0x000019,%edx
		jmp    _051ea5_jump

	_051e6b_case:
		mov    0x00006c(%esi),%al
		sub    $0x000013,%al
		cmp    $0x000004,%al
		ja     _051eac_case
		and    $0x0000ff,%eax
		jmp    *%cs:_051598_switch(,%eax,4)

	_051e81_case:
		mov    $0x000017,%edx
		mov    %esi,%eax
		call   _01d808_func
		mov    $0x00001a,%edx
		jmp    _051ea5_jump

	_051e94_case:
		mov    $0x00001e,%edx
		mov    %esi,%eax
		call   _01d808_func
		mov    $0x000020,%edx

	_051ea5_jump:
		mov    %ebp,%eax
		call   _051470_func

	_051eac_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05149c_func
		mov    0x000081(%ebp),%al
		mov    $0x000001,%ebx
		or     $0x000004,%al
		xor    %edx,%edx
		mov    %al,0x000081(%ebp)
		mov    %esi,%eax
		call   _061220_func
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _051605_case

	_051ee1_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05149c_func
		xor    %eax,%eax
		mov    $0x000008,%dl
		mov    _0cfa6e_data,%al
		mov    %dl,_0cfa6d_data
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0cfa6f_data,%al
		mov    %al,%dl
		inc    %al
		mov    _096ef8_data(%ebx),%ebx
		mov    %al,_0cfa6f_data
		mov    (%edx,%ebx,1),%al
		mov    0x000004(%esp),%dh
		mov    %al,_0e4d99_data
		cmp    $0x000021,%dh
		jb     _051f33_jump
		jbe    _051f3a_jump
		cmp    $0x00002b,%dh
		je     _051f64_jump
		jmp    _051f7e_jump

	_051f33_jump:
		cmp    $0x000020,%dh
		je     _051f4f_jump
		jmp    _051f7e_jump

	_051f3a_jump:
		mov    $0x000016,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000012,%edx
		jmp    _051f77_jump

	_051f4f_jump:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000011,%edx
		jmp    _051f77_jump

	_051f64_jump:
		mov    $0x000022,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000023,%edx

	_051f77_jump:
		mov    %ebp,%eax
		call   _051470_func

	_051f7e_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ebp),%ch
		mov    %esi,%eax
		or     $0x000004,%ch
		xor    %edx,%edx
		mov    %ch,0x000081(%ebp)
		call   _061220_func
		xor    %al,%al
		mov    %al,_0cfa6c_data
		jmp    _051605_case

	_051fa7_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %dh,%dh
		mov    %dh,_0cfa6c_data
		jmp    _051605_case

	_051fd9_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000b,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %dl,%dl
		mov    %dl,_0cfa6c_data
		jmp    _051605_case

	_05200b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05149c_func
		mov    0x000081(%edi),%dh
		mov    $0x000001,%ebx
		or     $0x000004,%dh
		mov    %edi,%eax
		mov    %dh,0x000081(%edi)
		call   _01f8e8_func
		mov    $0x000002,%edx
		movb   $0x000003,0x00007e(%esi)
		mov    %edi,%eax
		movw   $0x00fffa,0x000042(%edi)
		call   _01d818_func
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%edi),%al
		movsbw (%edx,%eax,8),%ax
		mov    $0x00000e,%ebx
		mov    %ax,0x000040(%edi)
		neg    %eax
		xor    %edx,%edx
		mov    %ax,0x000040(%edi)
		mov    %esi,%eax
		call   _01d818_func
		addl   $0x000064,0x000028(%esi)
		jmp    _052093_jump

	_05207c_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000d,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_052093_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,_0cf850_data
		xor    %eax,%eax
		mov    _0cf85e_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf84a_data
		mov    %esi,%eax
		call   _018890_func
		cmpb   $0x000016,0x000004(%esp)
		jne    _052102_jump
		mov    $0x000020,%bh
		mov    $0x000002,%ch
		mov    0x000081(%esi),%al
		mov    %bh,_0cfa64_data
		mov    %bh,_0cfa65_data
		mov    %ch,_0cfa6a_data
		test   $0x000008,%al
		je     _0520fa_jump
		addw   $0x000050,_0cf850_data
		jmp    _052102_jump

	_0520fa_jump:
		subw   $0x000050,_0cf850_data

	_052102_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _051605_case

	_05211d_case:
		mov    0x000081(%esi),%dh
		mov    (%esp),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _052148_case

	_052141_case:
		orb    $0x000008,0x000081(%esi)

	_052148_case:
		mov    $0x00003c,%ecx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %ecx,_0e4d88_data
		call   _05149c_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		mov    0x000004(%esp),%bl
		call   _050cc8_func
		cmp    $0x00002d,%bl
		jne    _0521a8_jump
		mov    _0ce678_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ce6b8_data,%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,_0cf850_data
		mov    _0cf84e_data,%eax
		sar    $0x000010,%eax
		jmp    _05222f_jump

	_0521a8_jump:
		cmp    $0x000019,%bl
		jne    _0521de_jump
		mov    _0e4d8a_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		mov    0x000028(%edx,%eax,1),%ax
		add    $0x000064,%eax
		mov    %ax,_0cf850_data
		mov    _0cf84e_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _05222f_jump

	_0521de_jump:
		testb  $0x000008,0x000081(%esi)
		je     _052203_jump
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,_0cf850_data
		mov    _0cf84e_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _05222f_jump

	_052203_jump:
		mov    0x000028(%esi),%ax
		sub    $0x0000a0,%eax
		mov    %ax,_0cf850_data
		cmp    $0x000019,%bl
		jne    _052224_jump
		mov    %eax,%edx
		add    $0x000070,%edx
		mov    %dx,_0cf850_data

	_052224_jump:
		mov    _0cf84e_data,%eax
		sar    $0x000010,%eax
		sub    $0x000050,%eax

	_05222f_jump:
		mov    %eax,0x000028(%esi)
		mov    _0cf85c_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		sub    $0x000010,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,0x00002c(%esi)
		mov    %ecx,%ebx
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%dl
		mov    %ax,_0cf84a_data
		mov    %dl,_0cfa6a_data
		mov    $0x000018,%al
		mov    $0x000001,%edx
		mov    %al,_0cfa64_data
		mov    %al,_0cfa65_data
		mov    %esi,%eax
		call   _018890_func
		xor    %edx,%edx
		mov    _0cf820_data,%ax
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    $0x00000e,%ebx
		mov    %ax,_0cf84a_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %dh,%dh
		mov    %dh,_0cfa6c_data
		jmp    _051605_case

	_0522b5_case:
		mov    %esi,%eax
		call   _01dfb8_func
		xor    %edx,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %dh,%dh
		mov    %dh,_0cfa6c_data
		jmp    _051605_case

	_0522ee_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05149c_func
		andb   $0x0000fb,0x000081(%ebp)
		mov    0x000081(%edi),%ah
		mov    $0x000006,%ebx
		and    $0x0000fb,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%edi)
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %dl,%dl
		mov    %dl,_0cfa6c_data
		jmp    _051605_case

	_052339_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05149c_func
		subl   $0x000064,0x000028(%esi)
		mov    0x000081(%edi),%ah
		xor    %edx,%edx
		and    $0x0000fb,%ah
		mov    $0x000014,%ebx
		mov    %ah,0x000081(%edi)
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %dl,%dl
		mov    %dl,_0cfa6c_data
		jmp    _051605_case

	_052381_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		call   _05149c_func
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _01d818_func
		mov    $0x0000ff,%bl
		mov    _0cf85e_data,%dx
		mov    0x000028(%esi),%ax
		mov    %cl,_0cfa6a_data
		mov    %ax,_0cf850_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    0x000069(%esi),%al
		mov    %bl,_0cfa64_data
		sub    %eax,%edx
		mov    %bl,_0cfa65_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf84a_data
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _061220_func
		mov    $0x0000ff,%al
		mov    %ch,_0cfa6c_data
		mov    %al,_0e4d9c_data
		jmp    _051605_case

	_052406_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05149c_func
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		test   $0x000008,%bh
		sete   %dl
		mov    %esi,%eax
		call   _050cc8_func
		testb  $0x000008,0x000081(%esi)
		je     _052465_jump
		mov    $0x000090,%eax
		mov    _0cd0a4_data,%edx
		mov    0x000028(%esi),%ebx
		sub    %edx,%eax
		mov    _0cf872_data,%dx
		sub    %eax,%ebx
		xor    %eax,%eax
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		add    $0x000090,%edx
		mov    %ebx,0x000028(%esi)
		mov    %dx,_0cf850_data
		jmp    _05248d_jump

	_052465_jump:
		xor    %eax,%eax
		mov    _0cf86e_data,%dx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ecx
		mov    %edx,%eax
		add    $0x000088,%ecx
		sub    $0x000090,%eax
		mov    %ecx,0x000028(%esi)
		mov    %ax,_0cf850_data

	_05248d_jump:
		xor    %eax,%eax
		mov    _0cfa6e_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cfa6f_data,%al
		mov    _096ef8_data(%edx),%edx
		mov    %al,%bl
		inc    %al
		mov    (%edx,%ebx,1),%dl
		mov    %al,_0cfa6f_data
		mov    _0cf81e_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		sub    %ebx,%eax
		and    $0x0000ff,%edx
		sub    $0x000020,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    $0x00000f,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0cf84a_data
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _01d818_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cfa64_data
		mov    %ch,_0cfa65_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0cfa6a_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %eax,%eax
		mov    $0x000029,%dl
		mov    _0cfa6e_data,%al
		mov    %dl,_0e4d98_data
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cfa6f_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ef8_data(%edx),%edx
		mov    %al,_0cfa6f_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e4d9c_data
		cmp    $0x0000ff,%al
		jne    _05256f_jump

	_052558_jump:
		mov    $0x000006,%eax
		call   _06bf60_func
		mov    %al,_0e4d9c_data
		cmp    $0x000001,%al
		je     _052558_jump
		cmp    $0x000006,%al
		je     _052558_jump

	_05256f_jump:
		mov    $0x0000ff,%bl
		xor    %edx,%edx

	_052573_jump:
		movswl %dx,%eax
		inc    %edx
		mov    %bl,_0e4d80_data(%eax)
		cmp    $0x000008,%dx
		jl     _052573_jump
		mov    $0xffff8300,%edx
		xor    %bh,%bh
		mov    %dx,_0e4d8e_data
		mov    %bh,_0cfa6c_data
		jmp    _051605_case

	_05259c_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05149c_func
		mov    0x000081(%esi),%cl
		mov    (%esp),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		xor    %ebx,%ebx
		mov    %dh,(%eax)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		xor    %bl,%bl
		call   _051010_func
		mov    %bl,_0cfa6c_data
		jmp    _051605_case

	_0525f2_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0525fc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    0x000048(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%edi
		shl    $0x000005,%edi
		add    %edx,%edi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edi
		mov    %esp,%ecx
		add    %eax,%edi
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    0x000050(%esi),%edx
		push   %eax
		sar    $0x000010,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		cmpb   $0x000000,0x000010(%esp)
		je     _0526c9_jump
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    0x00006c(%edi),%al
		cmp    $0x000012,%al
		jb     _052670_jump
		jbe    _052680_jump
		cmp    $0x000023,%al
		je     _05267a_jump
		jmp    _052684_jump

	_052670_jump:
		cmp    $0x000011,%al
		jne    _052684_jump
		movb   $0x00002f,0x000002(%edx)
		jmp    _052684_jump

	_05267a_jump:
		movb   $0x000030,0x000002(%edx)
		jmp    _052684_jump

	_052680_jump:
		movb   $0x00002e,0x000002(%edx)

	_052684_jump:
		mov    0x000002(%edx),%al
		mov    %al,0x00006a(%edi)
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0526bc_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000028(%esi),%ebx
		sub    $0x000005,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		jmp    _0526c9_jump

	_0526bc_jump:
		mov    0x000028(%esi),%edx
		movb   $0x000000,0x000070(%esi)
		add    $0x000005,%edx
		mov    %edx,0x000028(%esi)

	_0526c9_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movw   $0x000000,0x000042(%esi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%edx
		sar    %ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_052708_switch:
		.long   _052739_case
		.long   _052746_case
		.long   _052753_case
		.long   _052760_case




_052718_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    _0e4d99_data,%al
		dec    %al
		cmp    $0x000003,%al
		ja     _05276b_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_052708_switch(,%edx,4)

	_052739_case:
		mov    $0x000003,%ch
		mov    $0x0000c0,%al
		mov    %ch,0x000004(%esp)
		mov    %al,(%esp)
		jmp    _05276b_jump

	_052746_case:
		mov    $0x000004,%bh
		mov    $0x0000c0,%cl
		mov    %bh,0x000004(%esp)
		mov    %cl,(%esp)
		jmp    _05276b_jump

	_052753_case:
		mov    $0x000002,%dh
		mov    $0x0000c0,%bl
		mov    %dh,0x000004(%esp)
		mov    %bl,(%esp)
		jmp    _05276b_jump

	_052760_case:
		mov    $0x000004,%ah
		mov    $0x0000f4,%dl
		mov    %ah,0x000004(%esp)
		mov    %dl,(%esp)

	_05276b_jump:
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _052857_jump

	_052783_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    (%esp),%cl
		mov    0x000060(%ebx),%dx
		cmp    %ecx,%edx
		jne    _052847_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _052847_jump
		cmpw   $0x0000d5,0x000060(%edi)
		jne    _0527c3_jump
		mov    _0e4d8e_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0ccdf0_data,%edi
		shl    $0x000002,%edx
		add    %edx,%edi

	_0527c3_jump:
		mov    0x000034(%edi),%ax
		mov    %ax,0x00004a(%ebx)
		xor    %eax,%eax
		mov    _0cfa6d_data,%al
		mov    %ax,0x000052(%ebx)
		mov    0x000081(%ebx),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ebx)
		mov    %dl,%dh
		movb   $0x000000,0x00006b(%ebx)
		or     %al,%dh
		mov    0x000004(%esp),%al
		mov    %dh,0x000081(%ebx)
		mov    %al,0x00006c(%ebx)
		mov    0x000034(%ebx),%ax
		mov    $0x000001,%edx
		mov    %ax,0x00004a(%edi)
		mov    %ebx,%eax
		call   _0525fc_func
		mov    0x000081(%ebx),%cl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _01f8e8_func
		mov    %ebx,%eax
		call   _01e030_func
		jmp    _052857_jump

	_052847_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jl     _052783_jump

	_052857_jump:
		mov    $0x0000ff,%ch
		xor    %al,%al
		mov    %ch,_0cfa6d_data
		mov    %al,_0e4d99_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052870_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0e4d88_data,%edx
		test   %edx,%edx
		je     _05288e_jump
		lea    -0x000001(%edx),%ebx
		mov    %ebx,_0e4d88_data
		jmp    _052985_jump

	_05288e_jump:
		call   _050bb8_func
		test   %al,%al
		je     _052985_jump
		mov    _0cfa6b_data,%ah
		test   %ah,%ah
		je     _0528af_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cfa6b_data

	_0528af_jump:
		testb  $0x000001,0x000081(%esi)
		jne    _05297e_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _0528fe_jump
		cmpb   $0x0000ff,_0cfa6d_data
		je     _0528d3_jump
		mov    %esi,%eax
		call   _052718_func

	_0528d3_jump:
		movw   $0x000000,0x000040(%esi)
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0cf850_data
		mov    %dx,_0cf84a_data
		mov    %dx,_0e4d96_data
		jmp    _052977_jump

	_0528fe_jump:
		mov    _0e4d94_data,%edx
		mov    $0x0000ff,%bl
		sar    $0x000010,%edx
		mov    %bl,_0cfa6d_data
		cmp    $0xffff8300,%edx
		je     _05291e_jump
		call   _050da4_func
		jmp    _052958_jump

	_05291e_jump:
		cmpb   $0x000000,_0e4d98_data
		jne    _052944_jump
		cmp    _0e4d9c_data,%bl
		je     _052944_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _052944_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _052944_jump
		mov    %esi,%eax
		call   _05108c_func
		jmp    _052958_jump

	_052944_jump:
		mov    _0e4d98_data,%ah
		test   %ah,%ah
		je     _052958_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0e4d98_data

	_052958_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cfa65_data,%cl
		mov    _0cfa64_data,%bl
		mov    _0cfa6a_data,%dl
		call   _018890_func

	_052977_jump:
		mov    %esi,%eax
		call   _018a64_func

	_05297e_jump:
		mov    %esi,%eax
		call   _0515ac_func

	_052985_jump:
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_052994_switch:
		.long   _0529e8_case
		.long   _052a07_case
		.long   _052a13_case
		.long   _052a13_case
		.long   _052a13_case




_0529a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa6e_data,%ah
		cmp    $0x000008,%ah
		je     _0529bb_jump
		cmp    $0x000009,%ah
		jne    _0529c7_jump

	_0529bb_jump:
		mov    $_0cfa69_data,%eax
		mov    $_0cfa67_data,%ebx
		jmp    _0529d1_jump

	_0529c7_jump:
		mov    $_0cfa6e_data,%eax
		mov    $_0cfa6f_data,%ebx

	_0529d1_jump:
		mov    (%eax),%dh
		mov    %dh,%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _052a13_case
		xor    %ecx,%ecx
		mov    %dl,%cl
		jmp    *%cs:_052994_switch(,%ecx,4)

	_0529e8_case:
		cmpb   $0x000002,_0e4d9b_data
		jb     _052a13_case
		cmpb   $0x000002,_0e4d9a_data
		jbe    _052a13_case
		xor    %cl,%cl
		movb   $0x000002,(%eax)
		mov    %cl,_0e4d9a_data
		jmp    _052a13_case

	_052a07_case:
		cmpb   $0x000003,_0e4d9b_data
		jb     _052a13_case
		movb   $0x000003,(%eax)

	_052a13_case:
		cmp    (%eax),%dh
		je     _052a21_jump
		xor    %al,%al
		movb   $0x000000,(%ebx)
		mov    %al,_0e4d9b_data

	_052a21_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052a28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa6f_data,%dl
		mov    _0cfa6e_data,%dh

	_052a37_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dh,%bl
		mov    %dl,%cl
		mov    _096ef8_data(,%ebx,4),%ebx
		xor    %ah,%ah
		mov    (%ecx,%ebx,1),%al
		cmp    $0x000018,%al
		jb     _052a8d_jump
		jbe    _052ab9_jump
		cmp    $0x00001d,%al
		jb     _052a7d_jump
		jbe    _052ac2_jump
		cmp    $0x000022,%al
		jb     _052a74_jump
		cmp    $0x000024,%al
		jbe    _052ab9_jump
		cmp    $0x00002b,%al
		je     _052ab7_jump
		jmp    _052ace_jump

	_052a74_jump:
		cmp    $0x000021,%al
		je     _052ab7_jump
		jmp    _052ace_jump

	_052a7d_jump:
		cmp    $0x00001a,%al
		jb     _052ace_jump
		jbe    _052ab9_jump
		cmp    $0x00001c,%al
		je     _052abf_jump
		jmp    _052ace_jump

	_052a8d_jump:
		cmp    $0x00000f,%al
		jb     _052aa1_jump
		jbe    _052ab9_jump
		cmp    $0x000012,%al
		jb     _052ace_jump
		cmp    $0x000013,%al
		jbe    _052ab9_jump
		cmp    $0x000016,%al
		je     _052ac6_jump
		jmp    _052ace_jump

	_052aa1_jump:
		test   %al,%al
		jbe    _052aaf_jump
		cmp    $0x000001,%al
		jne    _052ace_jump
		mov    %al,%ah
		xor    %dl,%dl
		jmp    _052ace_jump

	_052aaf_jump:
		mov    $0x000001,%ah
		xor    %dl,%dl
		add    %ah,%dh
		jmp    _052ace_jump

	_052ab7_jump:
		inc    %dl

	_052ab9_jump:
		mov    $0x000001,%ah
		add    %ah,%dl
		jmp    _052ace_jump

	_052abf_jump:
		add    $0x000002,%dl

	_052ac2_jump:
		mov    $0x000001,%ah
		jmp    _052ace_jump

	_052ac6_jump:
		test   %dl,%dl
		je     _052ace_jump
		mov    $0x000001,%ah
		sub    %ah,%dl

	_052ace_jump:
		test   %ah,%ah
		jne    _052a37_jump
		mov    %dl,_0cfa67_data
		mov    %dh,_0cfa69_data
		mov    %dh,_0cfa6e_data
		mov    %dl,_0cfa6f_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052af4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		mov    0x00000c(%ebx),%esi
		lea    0x000000(,%ecx,4),%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    (%esi),%esi
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%esi,%eax,8)
		je     _052c40_jump
		cmpb   $0x000000,_0cfa6b_data
		jne    _052c40_jump
		shl    $0x000008,%ecx
		add    %ecx,%eax
		cmp    $0x000013,%eax
		jb     _052b7b_jump
		jbe    _052ba1_jump
		cmp    $0x000022,%eax
		jb     _052b61_jump
		jbe    _052ba1_jump
		cmp    $0x000025,%eax
		jb     _052baf_jump
		jbe    _052ba8_jump
		cmp    $0x00002c,%eax
		je     _052ba8_jump
		jmp    _052baf_jump

	_052b61_jump:
		cmp    $0x000015,%eax
		jb     _052baf_jump
		cmp    $0x000018,%eax
		jbe    _052ba1_jump
		cmp    $0x00001e,%eax
		jb     _052baf_jump
		cmp    $0x00001f,%eax
		jbe    _052ba1_jump
		jmp    _052baf_jump

	_052b7b_jump:
		cmp    $0x00000a,%eax
		jb     _052b93_jump
		cmp    $0x00000b,%eax
		jbe    _052ba8_jump
		cmp    $0x00000d,%eax
		jb     _052baf_jump
		jbe    _052ba8_jump
		cmp    $0x00000f,%eax
		je     _052ba8_jump
		jmp    _052baf_jump

	_052b93_jump:
		cmp    $0x000002,%eax
		jb     _052baf_jump
		jbe    _052ba8_jump
		cmp    $0x000006,%eax
		je     _052ba8_jump
		jmp    _052baf_jump

	_052ba1_jump:
		mov    $0x0000ff,%eax
		jmp    _052bb4_jump

	_052ba8_jump:
		mov    $0xffffffff,%eax
		jmp    _052bb4_jump

	_052baf_jump:
		mov    $0x000001,%eax

	_052bb4_jump:
		cmp    %dx,%ax
		jne    _052c40_jump
		cmp    $0x000001,%dx
		jne    _052bdc_jump
		movb   $0x000001,_0ce77f_data
		mov    %ebx,%eax
		call   _01eb80_func
		incb   _0e4d9b_data
		call   _0529a8_func

	_052bdc_jump:
		cmpb   $0x000000,0x000076(%ebx)
		je     _052c0d_jump
		mov    _0cfa6e_data,%al
		cmp    $0x000008,%al
		je     _052c1b_jump
		cmp    $0x000009,%al
		je     _052c1b_jump
		call   _052a28_func
		cmpw   $0x000062,0x000060(%ebx)
		jne    _052c04_jump
		movb   $0x000008,_0cfa6e_data
		jmp    _052c1b_jump

	_052c04_jump:
		movb   $0x000009,_0cfa6e_data
		jmp    _052c1b_jump

	_052c0d_jump:
		movb   $0x00000a,_0cfa6e_data
		movb   $0x000001,_0cfa78_data

	_052c1b_jump:
		xor    %cl,%cl
		mov    $0x000001,%al
		mov    %cl,_0cfa6f_data
		mov    %al,_0cfa6c_data
		mov    0x000081(%ebx),%ah
		mov    $0x0000ff,%ch
		or     %al,%ah
		mov    %ch,_0cfa6b_data
		mov    %ah,0x000081(%ebx)

	_052c40_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_052c44_switch:
		.long   _052c77_case
		.long   _052c6f_case
		.long   _052c73_case
		.long   _052c6f_case




_052c54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x00006c(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000003,%al
		ja     _052c79_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_052c44_switch(,%eax,4)

	_052c6f_case:
		xor    %dl,%dl
		jmp    _052c79_jump

	_052c73_case:
		mov    $0x000007,%dl
		jmp    _052c79_jump

	_052c77_case:
		mov    $0x00000e,%dl

	_052c79_jump:
		cmp    0x00006b(%ebx),%dl
		jb     _052c8c_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _0525fc_func
		jmp    _052d05_jump

	_052c8c_jump:
		mov    0x000048(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000034(%ebx),%cx
		cmp    0x00004a(%eax),%cx
		jne    _052d05_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ecx),%ecx
		shl    $0x000003,%edx
		mov    0x00006a(%eax),%al
		add    %ecx,%edx
		cmp    $0x00002f,%al
		jb     _052cdf_jump
		jbe    _052cf2_jump
		cmp    $0x000030,%al
		je     _052d01_jump
		mov    %ebx,%eax
		call   _055ee4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052cdf_jump:
		cmp    $0x00002e,%al
		jne    _052d05_jump
		movb   $0x000001,0x000002(%edx)
		mov    %ebx,%eax
		call   _055ee4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052cf2_jump:
		movb   $0x000000,0x000002(%edx)
		mov    %ebx,%eax
		call   _055ee4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052d01_jump:
		movb   $0x00001c,0x000002(%edx)

	_052d05_jump:
		mov    %ebx,%eax
		call   _055ee4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052d10_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _052d26_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)
		jne    _052d26_jump
		call   _050e5c_func

	_052d26_jump:
		pop    %edx
		ret    



_052d30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ebx
		mov    _0ce6dc_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _052d7f_jump
		xor    %ecx,%ecx
		mov    _0ce678_data,%di
		mov    _0ce6b8_data,%cl
		movzbl _0ce6c4_data,%esi
		add    %edi,%ecx
		movzbl _0ce6b9_data,%edi
		add    %edi,%esi
		mov    _0ce67c_data,%ebp
		sar    %esi
		movw   $0x000000,0x000040(%edx)
		add    %ebp,%esi
		movw   $0x000000,0x000042(%edx)
		sub    $0x00000a,%esi
		jmp    _052d9c_jump

	_052d7f_jump:
		xor    %ecx,%ecx
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%cl
		movzbl 0x000069(%edx),%edi
		add    %esi,%ecx
		movzbl 0x000074(%edx),%esi
		add    %edi,%esi
		sar    %esi
		add    0x00002c(%edx),%esi
		sub    $0x000003,%esi

	_052d9c_jump:
		xor    %edx,%edx
		movzbl 0x000074(%eax),%edi
		mov    0x000069(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %si,%edx
		mov    0x000028(%eax),%si
		sub    %esi,%ecx
		mov    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %edx,%edi
		sub    %ecx,%esi
		mov    %edi,%edx
		mov    %si,(%ebx)
		test   %di,%di
		jge    _052e13_jump
		mov    _0ce6dc_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jle    _052dfd_jump
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _052deb_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _052e5c_jump

	_052deb_jump:
		cmp    $0xffffffd0,%edx
		jle    _052e5c_jump
		incw   0x000042(%eax)
		jmp    _052e5c_jump

	_052dfd_jump:
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _052e0c_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _052e5c_jump

	_052e0c_jump:
		cmp    $0xffffffd0,%edx
		jle    _052e5c_jump
		jmp    _052e58_jump

	_052e13_jump:
		mov    _0ce6dc_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jl     _052e41_jump
		cmp    $0x00001e,%dx
		jge    _052e31_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052e31_jump:
		cmp    $0x000030,%dx
		jge    _052e5c_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052e41_jump:
		cmp    $0x00001e,%dx
		jge    _052e52_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_052e52_jump:
		cmp    $0x000030,%dx
		jge    _052e5c_jump

	_052e58_jump:
		decw   0x000042(%eax)

	_052e5c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_052e64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006d(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%dl
		je     _052e9e_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _052ec7_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _061220_func
		jmp    _052ec7_jump

	_052e9e_jump:
		cmp    %dl,%dl
		jne    _052ec5_jump
		cmpb   $0x000001,0x00006c(%eax)
		jne    _052ec5_jump
		cmpb   $0x000000,0x00006b(%eax)
		jne    _052ec5_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000071(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000072(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _052ec7_jump

	_052ec5_jump:
		mov    $0x000001,%cl

	_052ec7_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052ed0_func:
		testb  $0x000008,0x000081(%eax)
		jne    _052ede_jump
		test   %dx,%dx
		jg     _052eec_jump

	_052ede_jump:
		testb  $0x000008,0x000081(%eax)
		je     _052eef_jump
		test   %dx,%dx
		jge    _052eef_jump

	_052eec_jump:
		mov    $0x000001,%al
		ret    

	_052eef_jump:
		xor    %al,%al
		ret    



_052ef4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000002,0x00006d(%eax)
		je     _052f0a_jump
		cmpb   $0x000001,0x00006d(%ebx)
		jne    _05305b_jump

	_052f0a_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _052ed0_func
		test   %al,%al
		je     _052f62_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _052f3d_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _052f3d_jump
		cmpb   $0x000000,0x00006c(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _052f3d_jump
		incw   0x000042(%ebx)
		jmp    _052f44_jump

	_052f3d_jump:
		mov    %ebx,%eax
		call   _052e64_func

	_052f44_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _052f54_jump
		mov    $0x000004,%eax
		jmp    _052f59_jump

	_052f54_jump:
		mov    $0xfffffffc,%eax

	_052f59_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _052fd2_jump

	_052f62_jump:
		mov    _0ce690_data,%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ebx)
		neg    %edx
		mov    0x00003a(%ebx),%eax
		mov    %dx,0x000040(%ebx)
		sar    $0x000010,%eax
		cmp    0x000028(%ebx),%eax
		jle    _052fa3_jump
		testb  $0x000008,0x000081(%ebx)
		je     _052fa3_jump
		mov    0x000040(%ebx),%di
		test   %di,%di
		jge    _052f99_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _052fd2_jump

	_052f99_jump:
		mov    %edi,%eax
		add    %edi,%eax
		mov    %ax,0x000040(%ebx)
		jmp    _052fd2_jump

	_052fa3_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _052fd2_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _052fd2_jump
		mov    0x000040(%ebx),%cx
		test   %cx,%cx
		jle    _052fca_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _052fd2_jump

	_052fca_jump:
		mov    %ecx,%esi
		add    %ecx,%esi
		mov    %si,0x000040(%ebx)

	_052fd2_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000001,%cl
		jne    _053033_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000081(%ebx),%ch
		add    $0x000007,%eax
		test   $0x000008,%ch
		jne    _053007_jump
		cmpw   $0x000000,0x000040(%ebx)
		jg     _053017_jump

	_053007_jump:
		testb  $0x000008,0x000081(%ebx)
		je     _05301e_jump
		cmpw   $0x000000,0x000040(%ebx)
		jge    _05301e_jump

	_053017_jump:
		mov    $0x000001,%edx
		jmp    _053020_jump

	_05301e_jump:
		xor    %edx,%edx

	_053020_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_053033_jump:
		cmpw   $0x000004,0x000040(%ebx)
		jle    _053045_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_053045_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _053062_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05305b_jump:
		mov    %ebx,%eax
		call   _055ee4_func

	_053062_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_053068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _05309a_jump
		cmpb   $0x00000a,0x00006c(%ebx)
		jne    _05309a_jump
		mov    0x00004a(%ebx),%cx
		cmp    $0x000032,%cx
		jle    _053314_jump
		mov    %ecx,%esi
		sub    $0x000032,%esi
		mov    %si,0x00004a(%ebx)
		jmp    _053314_jump

	_05309a_jump:
		mov    %ebx,%eax
		call   _052e64_func
		test   %al,%al
		je     _053314_jump
		cmpb   $0x000001,0x00006c(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _0530ef_jump
		cmpw   $0x0001f4,0x00004a(%ebx)
		jne    _0530ef_jump
		movb   $0x00008c,0x00007d(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01d808_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0530ef_jump:
		mov    0x00006c(%ebx),%cl
		cmp    $0x000003,%cl
		jne    _05311e_jump
		cmpb   $0x000000,0x000072(%ebx)
		je     _053314_jump
		mov    0x000042(%ebx),%di
		test   %di,%di
		jl     _053314_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05311e_jump:
		cmp    $0x000004,%cl
		jne    _053314_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _05313a_jump
		neg    %eax

	_05313a_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce678_data,%esi
		mov    _0ce6b8_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    %esi,%eax
		movzbl 0x000068(%ebx),%esi
		sub    %esi,%eax
		sub    $0x00000a,%eax
		test   %eax,%eax
		jge    _053166_jump
		neg    %eax

	_053166_jump:
		movzbw 0x00007d(%ebx),%si
		mov    %ax,(%esp)
		cmp    %si,%dx
		jg     _05317f_jump
		cmp    %ax,%dx
		jle    _0531ce_jump
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _0531ce_jump

	_05317f_jump:
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _053193_jump
		cmpw   $0x00008c,(%esp)
		jge    _053193_jump
		mov    (%esp),%al
		mov    %al,0x00007d(%ebx)

	_053193_jump:
		cmpb   $0x000001,0x000072(%ebx)
		jne    _0531ac_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _0531a8_jump
		incw   0x000040(%ebx)
		jmp    _0531ac_jump

	_0531a8_jump:
		decw   0x000040(%ebx)

	_0531ac_jump:
		cmpb   $0x000001,0x000071(%ebx)
		jne    _0532e6_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _0532e6_jump
		decw   0x000042(%ebx)
		jmp    _0532e6_jump

	_0531ce_jump:
		xor    %eax,%eax
		mov    _0ce67c_data,%di
		mov    0x000069(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0ce6b9_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cmpw   $0x000000,0x000040(%ebx)
		jg     _0531ff_jump
		testb  $0x000008,0x000081(%ebx)
		je     _05320f_jump

	_0531ff_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _053263_jump
		testb  $0x000008,0x000081(%ebx)
		je     _053263_jump

	_05320f_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _053220_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _053226_jump

	_053220_jump:
		movw   $0x000004,0x000040(%ebx)

	_053226_jump:
		cmp    $0x00000a,%ax
		jle    _053237_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _0532e6_jump

	_053237_jump:
		cwtl   
		cmp    $0xffffffec,%eax
		jge    _053248_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _0532e6_jump

	_053248_jump:
		cmp    $0xfffffff6,%eax
		jge    _053258_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _0532e6_jump

	_053258_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _0532e6_jump

	_053263_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _05327a_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _05327a_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _053280_jump

	_05327a_jump:
		movw   $0x000001,0x000042(%ebx)

	_053280_jump:
		cmp    $0x000008,%cx
		jge    _05328f_jump
		testb  $0x000008,0x000081(%ebx)
		je     _05329e_jump

	_05328f_jump:
		cmp    $0x000008,%cx
		jle    _0532b5_jump
		testb  $0x000008,0x000081(%ebx)
		je     _0532b5_jump

	_05329e_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _0532ca_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _0532ca_jump

	_0532b5_jump:
		mov    0x000040(%ebx),%di
		inc    %edi
		mov    %di,0x000040(%ebx)
		cmp    $0x000004,%di
		jle    _0532ca_jump
		movw   $0x000004,0x000040(%ebx)

	_0532ca_jump:
		mov    0x000040(%ebx),%si
		test   %si,%si
		jne    _0532e6_jump
		cmp    $0x000008,%cx
		jge    _0532e6_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		mov    %si,0x00004a(%ebx)
		call   _01d808_func

	_0532e6_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _053314_jump
		cmpw   $0x000000,0x000040(%ebx)
		jle    _05330b_jump
		mov    $0xffffffff,%eax
		jmp    _053310_jump

	_05330b_jump:
		mov    $0x000001,%eax

	_053310_jump:
		mov    %ax,0x000040(%ebx)

	_053314_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053320_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00006d(%eax),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jne    _053356_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _053356_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000081(%edx)
		jmp    _053416_jump

	_053356_jump:
		cmpb   $0x000001,0x00006d(%edx)
		jne    _053362_jump
		cmpb   $0x000002,0x00006c(%edx)
		je     _05338a_jump

	_053362_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _053375_jump
		mov    0x00006c(%edx),%ah
		cmp    $0x000002,%ah
		je     _05338a_jump
		cmp    $0x000004,%ah
		je     _05338a_jump

	_053375_jump:
		mov    0x00006d(%edx),%cl
		cmp    $0x000002,%cl
		jne    _053416_jump
		cmp    0x00006c(%edx),%cl
		jne    _053416_jump

	_05338a_jump:
		mov    %edx,%eax
		mov    $0x000001,%bl
		call   _01d074_func
		test   %al,%al
		je     _0533a3_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0533a3_jump:
		cmpb   $0x000002,0x00006d(%edx)
		je     _0533b6_jump
		mov    %edx,%eax
		call   _055ee4_func
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0533b6_jump:
		mov    0x00004a(%edx),%cx
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%cx
		jl     _053416_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _0533da_jump
		neg    %eax

	_0533da_jump:
		cmp    $0x000008,%ax
		jge    _0533fd_jump
		testb  $0x000008,0x000081(%edx)
		jne    _0533f3_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0533f3_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0533fd_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _05340d_jump
		mov    $0x000004,%eax
		jmp    _053412_jump

	_05340d_jump:
		mov    $0xfffffffc,%eax

	_053412_jump:
		mov    %ax,0x000040(%edx)

	_053416_jump:
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05341c_switch:
		.long   _053628_case
		.long   _053653_case
		.long   _0536c8_case
		.long   _053628_case




_05342c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _053320_func
		test   %al,%al
		jne    _05382d_jump
		cmpw   $0x0001f4,0x00004a(%ecx)
		jl     _053477_jump
		mov    %ecx,%eax
		call   _053068_func
		jmp    _05382d_jump

	_053477_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _053487_jump
		cmpb   $0x000007,0x00006c(%ecx)
		je     _05382d_jump

	_053487_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _053497_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0534a3_jump

	_053497_jump:
		cmp    $0x000001,%dh
		jne    _0534a3_jump
		orb    $0x000008,0x000081(%ecx)

	_0534a3_jump:
		cmpb   $0x000000,0x00007b(%ecx)
		je     _053789_jump
		xor    %eax,%eax
		mov    _0ce678_data,%bx
		mov    _0ce6b8_data,%al
		mov    0x000028(%ecx),%si
		add    %ebx,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%esi
		movswl %si,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0534d7_jump
		neg    %eax

	_0534d7_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %ebx,%eax
		mov    _0ce67c_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0ce6b9_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000008(%esp)
		call   _052ed0_func
		test   %al,%al
		je     _05353c_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _053530_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _053530_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d808_func
		jmp    _053705_jump

	_053530_jump:
		mov    %ecx,%eax
		call   _052e64_func
		jmp    _053705_jump

	_05353c_jump:
		cmpb   $0x000000,_0ce77e_data
		jne    _053552_jump
		cmpb   $0x000000,_0ce780_data
		je     _05360e_jump

	_053552_jump:
		mov    %esp,%edx
		mov    %ecx,%eax
		call   _052d30_func
		testb  $0x000008,0x000081(%ecx)
		jne    _053588_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _053588_jump
		movswl %di,%eax
		mov    -0x000002(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _0535a9_jump
		mov    _0ce6dc_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _0535a9_jump

	_053588_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0535cf_jump
		cmp    $0x00000a,%si
		jle    _0535cf_jump
		cmp    (%esp),%di
		jg     _0535a9_jump
		mov    _0ce6dc_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jg     _0535cf_jump

	_0535a9_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _0535b9_jump
		mov    %ecx,%eax
		call   _052e64_func
		jmp    _0535e7_jump

	_0535b9_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _0535e7_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _0535e7_jump

	_0535cf_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0535e7_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _0535e7_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d808_func

	_0535e7_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _0535f8_jump
		movw   $0x00fffd,0x000042(%ecx)

	_0535f8_jump:
		cmpw   $0x000003,0x000042(%ecx)
		jle    _053705_jump
		movw   $0x000003,0x000042(%ecx)
		jmp    _053705_jump

	_05360e_jump:
		mov    _0ce6bd_data,%al
		cmp    $0x000003,%al
		ja     _053705_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05341c_switch(,%eax,4)

	_053628_case:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%dl
		je     _05363a_jump
		test   %dl,%dl
		jne    _053648_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _053648_jump

	_05363a_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func

	_053648_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _053705_jump

	_053653_case:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _053705_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _053671_jump
		cmpb   $0x000009,0x00006c(%ecx)
		je     _053678_jump

	_053671_jump:
		mov    $0x000001,%edx
		jmp    _05367a_jump

	_053678_jump:
		xor    %edx,%edx

	_05367a_jump:
		test   %edx,%edx
		je     _053705_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05368e_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		je     _053695_jump

	_05368e_jump:
		mov    $0x000001,%edx
		jmp    _053697_jump

	_053695_jump:
		xor    %edx,%edx

	_053697_jump:
		test   %edx,%edx
		je     _053705_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0536ab_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		je     _0536b2_jump

	_0536ab_jump:
		mov    $0x000001,%eax
		jmp    _0536b4_jump

	_0536b2_jump:
		xor    %eax,%eax

	_0536b4_jump:
		test   %eax,%eax
		je     _053705_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		jmp    _053705_jump

	_0536c8_case:
		mov    %ecx,%eax
		call   _052e64_func
		test   %al,%al
		je     _053705_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _0536f8_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _053705_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _053705_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _053705_jump

	_0536f8_jump:
		cmpw   $0x000001,0x000042(%ecx)
		jle    _053705_jump
		movw   $0x000001,0x000042(%ecx)

	_053705_jump:
		cmp    $0x000028,%di
		jge    _053745_jump
		cmpw   $0x00000a,0x000008(%esp)
		jge    _053745_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _053745_jump
		testb  $0x000002,0x000007(%ebp)
		je     _053745_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _05372f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d810_func

	_05372f_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d808_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x00007f(%ecx)

	_053745_jump:
		cmpw   $0x000001,0x000052(%ecx)
		jne    _05375f_jump
		mov    0x00007f(%ecx),%dl
		inc    %dl
		mov    %dl,0x00007f(%ecx)
		cmp    $0x000028,%dl
		jbe    _05375f_jump
		movw   $0x000000,0x000052(%ecx)

	_05375f_jump:
		mov    _0cf8a4_data,%eax
		mov    0x00002c(%ecx),%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%ecx),%dl
		sub    $0x000032,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _05377d_jump
		addw   $0x000002,0x000042(%ecx)

	_05377d_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _052ef4_func
		jmp    _0537ef_jump

	_053789_jump:
		mov    0x00006d(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%dl
		je     _0537ef_jump
		cmp    $0x000001,%dl
		jne    _0537bb_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _061220_func

	_0537bb_jump:
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dfb8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _0537ef_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func

	_0537ef_jump:
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000001,_09253c_data(%eax)
		je     _053803_jump
		movw   $0x000000,0x000042(%ecx)

	_053803_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _053820_jump
		movw   $0x000000,0x000040(%ecx)

	_053820_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _05382d_jump
		mov    %ecx,%eax
		call   _025820_func

	_05382d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053838_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _053876_jump
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _053861_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_053861_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		andb   $0x0000ef,0x000081(%ecx)

	_053876_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05387c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0538ae_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _0538ae_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0538ae_jump:
		mov    %ecx,%eax
		call   _053a68_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _0538de_jump
		mov    %ecx,%eax
		call   _052e64_func
		test   %al,%al
		je     _0538de_jump
		testb  $0x000008,0x000081(%ecx)
		je     _0538d8_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _0538de_jump

	_0538d8_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_0538de_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _05391a_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _05390c_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_05390c_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func

	_05391a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		mov    0x00006d(%ecx),%bh
		movzbw %al,%si
		cmp    $0x000002,%bh
		jne    _05396f_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _05399c_jump
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05399c_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _05399c_jump

	_05396f_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _05399c_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _061220_func

	_05399c_jump:
		movswl %si,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _0539fc_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0539ba_jump
		mov    %ecx,%eax
		call   _01e05c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0539ba_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000040(%ecx),%si
		mov    %ah,0x000081(%ecx)
		shl    $0x000003,%al
		neg    %esi
		mov    %ah,%dl
		mov    %si,0x000040(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)

	_0539fc_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053a04_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _053a64_jump
		mov    _0ce6dc_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _053a25_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _053a2e_jump

	_053a25_jump:
		jge    _053a2e_jump
		orb    $0x000008,0x000081(%ecx)

	_053a2e_jump:
		mov    %ecx,%eax
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _053a4f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_053a4f_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		andb   $0x0000ef,0x000081(%ecx)

	_053a64_jump:
		pop    %ecx
		pop    %ebx
		ret    



_053a68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0ce77e_data
		jne    _053a87_jump
		cmpb   $0x000000,_0ce780_data
		je     _053b7e_jump

	_053a87_jump:
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _07bc60_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _053aa5_jump
		neg    %eax

	_053aa5_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _053bad_jump
		cmpw   $0x000023,(%esp)
		jge    _053bad_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _053bad_jump
		testb  $0x000008,0x000081(%esi)
		jne    _053ada_jump
		cmpw   $0x000000,0x000004(%esp)
		jl     _053af3_jump

	_053ada_jump:
		testb  $0x000008,0x000081(%esi)
		je     _053bad_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _053bad_jump

	_053af3_jump:
		mov    _0ce6dc_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _053b0c_jump
		mov    $0x000001,%eax
		jg     _053b0c_jump
		neg    %eax

	_053b0c_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _053b24_jump
		mov    $0x000001,%eax
		jg     _053b24_jump
		neg    %eax

	_053b24_jump:
		cmp    %edx,%eax
		jne    _053bad_jump
		movw   $0x000000,0x000040(%esi)
		mov    _0ce6bd_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%al
		je     _053b49_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _053bad_jump

	_053b49_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _053bad_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _053ba6_jump

	_053b7e_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _053bad_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _053bad_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01d808_func
		mov    $0x000008,%edx

	_053ba6_jump:
		mov    %esi,%eax
		call   _061220_func

	_053bad_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053bc0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf862_data,%ecx
		mov    _0cf85e_data,%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    %ecx
		add    %esi,%ecx
		mov    %ecx,%esi
		mov    _0cf874_data,%ecx
		mov    _0cf860_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    %ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000081(%eax)
		je     _053c12_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _053c1a_jump

	_053c12_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_053c1a_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_053c2c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _053bc0_func
		mov    (%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _053c5d_jump
		neg    %eax

	_053c5d_jump:
		mov    %ax,(%esp)
		mov    0x000004(%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _053c7f_jump
		neg    %eax

	_053c7f_jump:
		mov    -0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,0x000004(%esp)
		cmp    %edx,%ebx
		jge    _053ca2_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _053ca2_jump
		mov    $0x000001,%al
		jmp    _053ca4_jump

	_053ca2_jump:
		xor    %al,%al

	_053ca4_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_053cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0cfa68_data
		jne    _053d70_jump
		mov    _0cf858_data,%ecx
		mov    _0cf8b0_data,%eax
		mov    _0cf856_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _053cf4_jump
		cmp    %ecx,%eax
		jg     _053cf4_jump
		mov    $0x000001,%eax
		jmp    _053cf6_jump

	_053cf4_jump:
		xor    %eax,%eax

	_053cf6_jump:
		test   %eax,%eax
		je     _053d39_jump
		mov    _0cf85a_data,%ecx
		mov    _0cf8b2_data,%eax
		mov    _0cf854_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _053d2f_jump
		cmp    %ecx,%eax
		jg     _053d2f_jump
		mov    $0x000001,%eax
		jmp    _053d31_jump

	_053d2f_jump:
		xor    %eax,%eax

	_053d31_jump:
		test   %eax,%eax
		je     _053d39_jump
		mov    $0x000001,%al
		jmp    _053d3b_jump

	_053d39_jump:
		xor    %al,%al

	_053d3b_jump:
		mov    %al,_0cfa68_data
		test   %al,%al
		je     _053da7_jump
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf86e_data
		mov    _0cf856_data,%ax
		mov    %ax,_0cf854_data
		mov    _0cf85c_data,%ax
		mov    %ax,_0cf85e_data
		jmp    _053da7_jump

	_053d70_jump:
		mov    _0cf854_data,%ax
		mov    _0cf8a6_data,%bx
		cmp    %bx,%ax
		jge    _053d89_jump
		mov    %bx,_0cf854_data

	_053d89_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _053d97_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x00007f(%edx)

	_053d97_jump:
		mov    0x00005a(%edx),%cx
		test   %cx,%cx
		je     _053da7_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005a(%edx)

	_053da7_jump:
		cmpb   $0x000000,_0cfa68_data
		je     _053dbd_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _053dbd_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053dbd_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053dc4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _053dd6_jump
		cmp    $0x000001,%dl
		je     _053e01_jump
		jmp    _053e2e_jump

	_053dd6_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf86c_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _053e97_jump

	_053e01_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cf870_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _053e97_jump

	_053e2e_jump:
		mov    _0cf86c_data,%esi
		mov    _0cf870_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _053e83_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_053e83_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_053e97_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_053ea0_switch:
		.long   _053f91_case
		.long   _053f8b_case
		.long   _0544d1_case
		.long   _053fa5_case
		.long   _054374_case
		.long   _0546d3_case
		.long   _0546e1_case
		.long   _0547f4_case
		.long   _0545b0_case
		.long   _0544a1_case
		.long   _0540cd_case
		.long   _054617_case
		.long   _054587_case
		.long   _05455e_case
		.long   _05434b_case
		.long   _0542c3_case
		.long   _054904_case
		.long   _054904_case
		.long   _054a13_case
		.long   _0549bd_case
		.long   _05416a_case
		.long   _054466_case
		.long   _054227_case
		.long   _0540fe_case
		.long   _05439d_case




_053f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0cf86c_data,%edx
		mov    _0cf870_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		lea    0x000140(%eax),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0cfa6c_data
		je     _054ae2_jump

	_053f40_jump:
		xor    %eax,%eax
		mov    _0cfa6e_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cfa6f_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096fb4_data(%edx),%edx
		mov    %al,_0cfa6f_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e4da0_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0ce5b4_data
		cmp    $0x000018,%al
		ja     _054ad5_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_053ea0_switch(,%eax,4)

	_053f8b_case:
		incb   _0cfa6e_data

	_053f91_case:
		xor    %dl,%dl
		mov    %dl,_0cfa6f_data
		movb   $0x000001,_0cfa6c_data
		jmp    _054ad5_jump

	_053fa5_case:
		mov    _0cfa69_data,%al
		mov    %al,_0cfa6e_data
		mov    _0cfa67_data,%al
		mov    %al,_0cfa6f_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cfa6e_data,%al
		mov    _0cfa6f_data,%dl
		mov    _096fb4_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0e4da0_data
		cmp    $0x00001a,%al
		je     _053fdf_jump
		cmp    $0x00000e,%al
		jne    _05401d_jump

	_053fdf_jump:
		mov    _0e4da0_data,%bl
		cmp    $0x00001a,%bl
		je     _053ff3_jump
		cmp    $0x00000e,%bl
		jne    _0540b1_jump

	_053ff3_jump:
		mov    _0cfa6f_data,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		inc    %cl
		mov    _0cfa6e_data,%al
		mov    %cl,%dl
		mov    _096fb4_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %cl,_0cfa6f_data
		mov    %al,_0e4da0_data
		jmp    _053fdf_jump

	_05401d_jump:
		cmp    $0x000014,%al
		jne    _054030_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0cfa6f_data
		jmp    _0540b1_jump

	_054030_jump:
		cmp    $0x000012,%al
		je     _054040_jump
		cmp    $0x000013,%al
		je     _054040_jump
		cmp    $0x000015,%al
		jne    _0540b1_jump

	_054040_jump:
		cmpb   $0x000015,_0e4da0_data
		jne    _05404f_jump
		incb   _0cfa6f_data

	_05404f_jump:
		mov    _0cfa6f_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0cfa6e_data,%al
		mov    %dl,_0cfa6f_data

	_054064_jump:
		xor    %edx,%edx
		mov    _096fb4_data(,%eax,4),%eax
		mov    _0cfa6f_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0e4da0_data
		mov    _0e4da0_data,%ch
		cmp    $0x000015,%ch
		je     _05408b_jump
		cmp    $0x000014,%ch
		jne    _0540b1_jump

	_05408b_jump:
		cmpb   $0x000015,_0e4da0_data
		jne    _05409a_jump
		incb   _0cfa6f_data

	_05409a_jump:
		mov    _0cfa6f_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0cfa6e_data,%al
		mov    %dh,_0cfa6f_data
		jmp    _054064_jump

	_0540b1_jump:
		mov    $0x000001,%al
		mov    $0x0000ff,%ch
		mov    %al,_0cfa6c_data
		xor    %ah,%ah
		mov    %ch,_0cfa69_data
		mov    %ah,_0e4da2_data
		jmp    _054ad5_jump

	_0540cd_case:
		mov    _0cfa6f_data,%al
		xor    %cl,%cl
		and    $0x0000ff,%eax
		mov    %cl,_0cfa6f_data
		mov    (%edx,%eax,1),%al
		cmp    _0cfa6e_data,%al
		jne    _0540ec_jump
		inc    %al

	_0540ec_jump:
		mov    %al,_0cfa6e_data
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _054ad5_jump

	_0540fe_case:
		cmpb   $0x000005,0x000077(%esi)
		jne    _054112_jump
		call   _07bfb0_func
		orb    $0x000001,_0cf81e_data
		jmp    _05415d_jump

	_054112_jump:
		mov    $0xffff8300,%ebx
		mov    _0cf81e_data,%dl
		mov    $_0ce650_data,%eax
		or     $0x000002,%dl
		mov    %bx,_0cf86a_data
		mov    $0x000007,%ebx
		mov    %dl,_0cf81e_data
		mov    $0x000003,%edx
		call   _01d818_func
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d6c8_func
		mov    $0x000001,%dh
		inc    %eax
		mov    %dh,_0cfa76_data
		mov    %ax,0x000048(%esi)

	_05415d_jump:
		xor    %bh,%bh
		mov    %bh,_0cfa6c_data
		jmp    _054ad5_jump

	_05416a_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _054183_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _0541ff_jump

	_054183_jump:
		mov    _0ccdf0_data,%eax
		mov    _0ccdf4_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _0541ff_jump

	_054196_jump:
		cmpw   $0x0000ab,0x000060(%eax)
		jne    _0541f4_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x00006d(%eax),%dl
		mov    %dl,0x00006d(%esi)
		mov    0x00006c(%eax),%dl
		mov    0x000069(%esi),%bl
		mov    %dl,0x00006c(%esi)
		add    $0x000004,%bl
		mov    0x00006a(%eax),%al
		movb   $0x000000,0x00006b(%esi)
		mov    %bl,0x000069(%esi)
		mov    0x000081(%esi),%bh
		mov    %al,0x00006a(%esi)
		and    $0x0000f7,%bh
		xor    %ecx,%ecx
		mov    %bh,0x000081(%esi)
		mov    %ecx,_0ce674_data
		jmp    _0541ff_jump

	_0541f4_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jl     _054196_jump

	_0541ff_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0cfa6c_data
		mov    %ax,0x000048(%esi)
		jmp    _054ad5_jump

	_054227_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _054231_jump
		subb   $0x000010,0x000069(%esi)

	_054231_jump:
		mov    0x000081(%esi),%al
		and    $0x0000f7,%al
		mov    _0cf86e_data,%dx
		mov    %al,0x000081(%esi)
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0cf850_data
		mov    _0cf84e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cf820_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cf84a_data
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000002,0x000072(%esi)
		call   _061220_func
		xor    %dl,%dl
		mov    $0x0000ff,%ah
		mov    %dl,_0cfa65_data
		mov    $0x000001,%dh
		mov    %ah,_0cfa64_data
		mov    %dh,_0cfa6a_data
		mov    %dl,_0cfa6c_data
		jmp    _054ad5_jump

	_0542c3_case:
		mov    _0cf86e_data,%ax
		xor    %edx,%edx
		add    $0x0000a0,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,_0cf850_data
		mov    _0cf820_data,%ax
		mov    _0cd0a4_data,%dx
		sub    $0x0000e6,%eax
		add    %edx,%eax
		mov    $0x000006,%ebx
		mov    %ax,_0cf84a_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _061220_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0cfa64_data
		mov    %ch,_0cfa65_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0cfa6a_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018890_func
		xor    %dl,%dl
		mov    %dl,_0cfa6c_data
		jmp    _054ad5_jump

	_05434b_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %dh,%dh
		mov    %dh,_0cfa6c_data
		jmp    _054ad5_jump

	_054374_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _054ad5_jump

	_05439d_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0543d5_jump
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0543d5_jump
		mov    %esi,%eax
		call   _01dfb8_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %al,%al
		mov    %al,_0cfa6c_data
		jmp    _054ad5_jump

	_0543d5_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _01dfb8_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _054ad5_jump
		mov    %dl,%al
		mov    0x000081(%esi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		xor    %edx,%edx
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		or     %al,%cl
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d818_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d6c8_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		mov    0x000048(%esi),%dx
		add    %ecx,%edx
		xor    %ch,%ch
		mov    %dx,0x000048(%esi)
		jmp    _054acf_jump

	_054466_case:
		mov    _0cf86e_data,%dx
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		sub    $0x000030,%edx
		mov    _0ce678_data,%bh
		mov    %dx,_0cf86a_data
		test   $0x000001,%bh
		je     _054498_jump
		orb    $0x000001,_0cf86a_data
		jmp    _0544d1_case

	_054498_jump:
		andb   $0x0000fe,_0cf86a_data
		jmp    _0544d1_case

	_0544a1_case:
		xor    %dl,%dl
		mov    %dl,_0cfa6b_data
		mov    _0e4da2_data,%dh
		movb   $0x000003,0x00007e(%esi)
		test   %dh,%dh
		jne    _0544c3_jump
		movb   $0x000001,_0cfa6c_data
		jmp    _054ad5_jump

	_0544c3_jump:
		mov    $0x000004,%bh
		mov    %dl,_0e4da2_data
		mov    %bh,_0e4da0_data

	_0544d1_case:
		mov    _0cf854_data,%dx
		mov    _0cd0a4_data,%cx
		mov    _0e4da0_data,%bl
		add    %ecx,%edx
		mov    0x000028(%esi),%ax
		sub    $0x000080,%edx
		mov    %ax,_0cf850_data
		mov    %dx,_0cf84a_data
		cmp    $0x000004,%bl
		jne    _05450a_jump
		mov    $0x000008,%ebx
		jmp    _05450f_jump

	_05450a_jump:
		mov    $0x000006,%ebx

	_05450f_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0cfa64_data
		mov    %ch,_0cfa6a_data
		mov    $0x0000ff,%ecx
		mov    %bh,_0cfa65_data
		mov    %ecx,%ebx
		call   _018890_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _061220_func
		xor    %al,%al
		mov    %al,_0cfa6c_data
		jmp    _054ad5_jump

	_05455e_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %bl,%bl
		mov    %bl,_0cfa6c_data
		jmp    _054ad5_jump

	_054587_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		xor    %bh,%bh
		mov    %bh,_0cfa6c_data
		jmp    _054ad5_jump

	_0545b0_case:
		mov    %esi,%eax
		call   _01dfb8_func
		mov    0x000081(%esi),%ch
		xor    %edx,%edx
		test   $0x000008,%ch
		sete   %dl
		mov    %esi,%eax
		call   _053dc4_func
		mov    _0cf852_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%esi)
		je     _0545ff_jump
		mov    0x000028(%esi),%ecx
		mov    0x000081(%esi),%dl
		sub    $0x000030,%ecx
		and    $0x0000f7,%dl
		mov    %ecx,0x000028(%esi)
		mov    %dl,0x000081(%esi)
		jmp    _054617_case

	_0545ff_jump:
		mov    0x000028(%esi),%ebx
		mov    0x000081(%esi),%ah
		add    $0x000030,%ebx
		or     $0x000008,%ah
		mov    %ebx,0x000028(%esi)
		mov    %ah,0x000081(%esi)

	_054617_case:
		mov    0x000081(%esi),%al
		mov    $_0cf84a_data,%ebx
		shl    $0x000004,%al
		xor    %dh,%dh
		shr    $0x000007,%al
		mov    %dh,_0e4da1_data
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    $_0cf850_data,%edx
		call   _01dfb8_func
		mov    %esi,%eax
		call   _053bc0_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%cl
		call   _01d818_func
		mov    $0x000010,%bl
		mov    $0x000001,%edx
		mov    %cl,_0cfa6a_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0cfa64_data
		mov    %bl,_0cfa65_data
		mov    %ecx,%ebx
		call   _018890_func
		cmpb   $0x00000d,_0e4da0_data
		jne    _05468e_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _054694_jump

	_05468e_jump:
		movw   $0x000000,0x000040(%esi)

	_054694_jump:
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000001,%ebx
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		mov    $0x000002,%edx
		call   _061220_func
		xor    %dh,%dh
		mov    %dh,_0cfa6c_data
		jmp    _054ad5_jump

	_0546d3_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_0546e1_case:
		cmpb   $0x000008,_0e4da0_data
		jne    _0546f8_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_0546f8_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _053dc4_func
		test   %ax,%ax
		jle    _054736_jump
		mov    _0cf86e_data,%dx
		mov    0x000081(%esi),%bl
		xor    %eax,%eax
		and    $0x0000f7,%bl
		mov    0x000068(%esi),%al
		mov    %bl,0x000081(%esi)
		sub    %eax,%edx
		mov    0x000028(%esi),%ebx
		mov    %edx,%eax
		add    $0x000030,%ebx
		sub    $0x000030,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _05475d_jump

	_054736_jump:
		orb    $0x000008,0x000081(%esi)
		mov    0x000028(%esi),%edx
		sub    $0x000030,%edx
		mov    _0cf872_data,%ax
		mov    %edx,0x000028(%esi)
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		add    $0x000030,%eax

	_05475d_jump:
		mov    %ax,_0cf850_data
		mov    _0cf81e_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf84a_data
		xor    %eax,%eax
		mov    _0cfa6e_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cfa6f_data,%al
		mov    %ch,_0cfa6a_data
		mov    %al,%bl
		inc    %al
		mov    _096fb4_data(%edx),%edx
		mov    %al,_0cfa6f_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0ce5b4_data
		mov    %bh,_0cfa64_data
		mov    %bh,_0cfa65_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _061220_func
		xor    %al,%al
		mov    %al,_0cfa6c_data
		jmp    _054ad5_jump

	_0547f4_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _053dc4_func
		test   %ax,%ax
		jle    _05483b_jump
		addl   $0x000050,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cf86e_data,%dx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%esi)
		sub    $0x000050,%eax
		jmp    _05486a_jump

	_05483b_jump:
		mov    _0cf872_data,%ax
		mov    0x000081(%esi),%bl
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		or     $0x000008,%bl
		sub    $0x000060,%ebp
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		mov    %bl,0x000081(%esi)
		sub    %edx,%eax
		mov    %ebp,0x000028(%esi)
		add    $0x000040,%eax

	_05486a_jump:
		mov    %ax,_0cf850_data
		mov    _0cf81e_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cf84a_data
		xor    %eax,%eax
		mov    _0cfa6e_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0cfa6f_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096fb4_data(%edx),%edx
		mov    %al,_0cfa6f_data
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%cl
		and    $0x0000ff,%eax
		mov    $0x000001,%edx
		shl    $0x00000a,%eax
		mov    %cl,_0cfa64_data
		mov    %cl,_0cfa65_data
		mov    $0x0000ff,%ecx
		mov    %eax,_0ce5b4_data
		mov    $0x000001,%al
		mov    %ecx,%ebx
		mov    %al,_0cfa6a_data
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _061220_func
		xor    %ah,%ah
		mov    %ah,_0cfa6c_data
		jmp    _054ad5_jump

	_054904_case:
		mov    _0cf81e_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		cmpb   $0x000013,_0e4da0_data
		jne    _05491f_jump
		subl   $0x000030,0x00002c(%esi)

	_05491f_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _053dc4_func
		test   %ax,%ax
		jle    _054944_jump
		andb   $0x0000f7,0x000081(%esi)
		addl   $0x000044,0x000028(%esi)
		mov    0x000028(%esi),%ax
		sub    $0x000018,%eax
		jmp    _054958_jump

	_054944_jump:
		orb    $0x000008,0x000081(%esi)
		subl   $0x00004c,0x000028(%esi)
		mov    0x000028(%esi),%ax
		add    $0x000010,%eax

	_054958_jump:
		mov    %ax,_0cf850_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x0000ff,%ecx
		call   _01d818_func
		mov    $0x0000ff,%dh
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%bh
		mov    %ax,_0cf84a_data
		mov    %dh,_0cfa64_data
		mov    %dh,_0cfa65_data
		mov    %bh,_0cfa6a_data
		mov    $0x000001,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018890_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _061220_func
		mov    %cl,_0cfa6c_data
		jmp    _054ad5_jump

	_0549bd_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		mov    _0cfa6f_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0cfa6e_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _096fb4_data(,%edx,4),%edx
		mov    %al,_0cfa6f_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0cfa6c_data
		mov    %dx,0x000048(%esi)
		jmp    _054ad5_jump

	_054a13_case:
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		movswl %di,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _054a4e_jump
		mov    0x000081(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f7,%dh
		mov    0x000068(%esi),%al
		mov    %dh,0x000081(%esi)
		mov    _0cf86e_data,%dx
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000038,%eax
		mov    %ax,_0cf850_data
		jmp    _054a7b_jump

	_054a4e_jump:
		mov    0x000081(%esi),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%esi)
		mov    _0cf872_data,%dx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		sub    %eax,%edx
		add    $0x000030,%edx
		mov    %dx,_0cf850_data

	_054a7b_jump:
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0cf84a_data
		mov    %esi,%eax
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x000001,%cl
		call   _061220_func
		mov    $0x0000ff,%bl
		mov    $0x000001,%edx
		mov    %cl,_0cfa6a_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0cfa64_data
		mov    %bl,_0cfa65_data
		mov    %ecx,%ebx
		call   _018890_func
		xor    %ch,%ch

	_054acf_jump:
		mov    %ch,_0cfa6c_data

	_054ad5_jump:
		cmpb   $0x000000,_0cfa6c_data
		jne    _053f40_jump

	_054ae2_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054aec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x00006c(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _054b20_jump
		jbe    _054b14_jump
		cmp    $0x00000c,%al
		jne    _054b20_jump
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _054b20_jump

	_054b14_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)

	_054b20_jump:
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _054c8f_jump

	_054b38_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000060(%esi),%bx
		cmp    %edx,%ebx
		jne    _054c7f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _054c7f_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f8e8_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01dbb4_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _054bff_jump
		jbe    _054be3_jump
		cmp    $0x000034,%cl
		je     _054bf1_jump
		jmp    _054bff_jump

	_054be3_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _054bff_jump

	_054bf1_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)

	_054bff_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006a(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01e030_func
		movb   $0x000000,0x000071(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000081(%esi)
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054c7f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jl     _054b38_jump

	_054c8f_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054c9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		add    0x000028(%eax),%di
		mov    0x00006c(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x00000b,%al
		jb     _054d15_jump
		jbe    _054cf6_jump
		cmp    $0x00000c,%al
		jne    _054d15_jump
		mov    0x00003e(%esi),%eax
		mov    _0ce68e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _054d15_jump

	_054cf6_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx

	_054d15_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _054d1e_jump
		neg    %eax

	_054d1e_jump:
		mov    %ax,0x000004(%esp)
		test   %bx,%bx
		jge    _054d2a_jump
		add    %ebx,%edi

	_054d2a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0cf854_data,%bx
		add    %eax,%edx
		mov    _0cf85e_data,%ax
		sub    %ebx,%eax
		mov    _0cf870_data,%ecx
		add    $0x0000c8,%eax
		mov    %dx,0x000010(%esp)
		mov    %ax,(%esp)
		mov    _0cf862_data,%eax
		mov    _0cf85e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    _0cf874_data,%eax
		mov    _0cf860_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    $0x000130,%ecx
		add    %ebx,%eax
		mov    _0cf86c_data,%ebx
		mov    %ax,0x00000c(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _054daf_jump
		cmp    %ecx,%eax
		jg     _054daf_jump
		mov    $0x000001,%eax
		jmp    _054db1_jump

	_054daf_jump:
		xor    %eax,%eax

	_054db1_jump:
		test   %eax,%eax
		je     _054e10_jump
		cmp    %di,%dx
		jl     _054e10_jump
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jl     _054e10_jump
		mov    0x000002(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jg     _054e10_jump
		mov    0x00000e(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _054e10_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _054aec_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		subw   $0x000040,_0cf84a_data

	_054e10_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054e1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _053cac_func
		test   %al,%al
		je     _055008_jump
		mov    0x00005a(%esi),%dx
		test   %dx,%dx
		je     _054e3f_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005a(%esi)

	_054e3f_jump:
		mov    _0cfa6b_data,%ah
		test   %ah,%ah
		je     _054e53_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cfa6b_data

	_054e53_jump:
		mov    0x000081(%esi),%dh
		test   $0x000001,%dh
		jne    _055001_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _054ebc_jump
		cmpw   $0x00000e,_096fdc_data
		jne    _054e98_jump
		cmpb   $0x00000f,0x00006a(%esi)
		jne    _054e98_jump
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_054e98_jump:
		mov    $0xffff8300,%ecx
		mov    %cx,_0cf850_data
		mov    %cx,_0cf84a_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _054ffa_jump

	_054ebc_jump:
		mov    _0e4da0_data,%al
		cmp    $0x00000a,%al
		jb     _054ed0_jump
		jbe    _054ed9_jump
		cmp    $0x00000d,%al
		je     _054ed9_jump
		jmp    _054fc1_jump

	_054ed0_jump:
		cmp    $0x000004,%al
		je     _054f0a_jump
		jmp    _054fc1_jump

	_054ed9_jump:
		mov    $_0cf84a_data,%ebx
		mov    %esi,%eax
		mov    $_0cf850_data,%edx
		call   _01dfb8_func
		mov    %esi,%eax
		call   _053bc0_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _053c2c_func
		test   %al,%al
		je     _054f0a_jump
		movb   $0x000001,_0cfa6c_data

	_054f0a_jump:
		cmpb   $0x000002,0x000076(%esi)
		jae    _054fc1_jump
		cmpb   $0x000000,_0ce77e_data
		je     _054fc1_jump
		cmpb   $0x000000,_0e4da1_data
		jne    _054fc1_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _054fc1_jump
		cmpb   $0x000000,_0caf64_data
		jne    _054fc1_jump
		mov    $0x000001,%dl
		xor    %eax,%eax
		mov    %dl,_0e4da1_data
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00002c(%esi),%ecx
		mov    _0ce6dc_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%dl
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _054f93_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _054f98_jump

	_054f93_jump:
		subw   $0x000050,0x000042(%esi)

	_054f98_jump:
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		mov    _0ce6dc_data,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000028(%eax),%ecx
		mov    0x000068(%eax),%bl
		add    %ecx,%ebx
		cmp    %ebx,%edx
		jle    _054fbc_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _054fc1_jump

	_054fbc_jump:
		subw   $0x000050,0x000040(%esi)

	_054fc1_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cfa65_data,%cl
		mov    _0cfa64_data,%bl
		mov    _0cfa6a_data,%dl
		call   _018890_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _054ffa_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x00000c,%bl
		je     _054ff3_jump
		cmp    $0x00000b,%bl
		jne    _054ffa_jump

	_054ff3_jump:
		mov    %esi,%eax
		call   _054c9c_func

	_054ffa_jump:
		mov    %esi,%eax
		call   _018a64_func

	_055001_jump:
		mov    %esi,%eax
		call   _053f04_func

	_055008_jump:
		xor    %eax,%eax
		mov    0x000081(%esi),%bh
		mov    0x00006a(%esi),%al
		and    $0x0000fe,%bh
		mov    %ax,_096fdc_data
		mov    %bh,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_055028_switch:
		.long   _05509f_case
		.long   _0550a5_case
		.long   _0550ca_case
		.long   _0550b2_case
		.long   _0550ca_case
		.long   _0550ca_case
		.long   _0550ca_case
		.long   _0550ca_case
		.long   _0550ca_case
		.long   _0550ca_case
		.long   _0550bb_case




_055054_func:
		push   %ebx
		push   %edx
		mov    _0cfa6e_data,%bl
		cmp    $0x000008,%bl
		je     _05506f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    _0cfa6f_data,%dl
		jmp    _05507e_jump

	_05506f_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cfa69_data,%al
		mov    _0cfa67_data,%dl

	_05507e_jump:
		mov    _096fb4_data(,%eax,4),%eax
		add    %edx,%eax
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _0550ca_case
		and    $0x0000ff,%edx
		jmp    *%cs:_055028_switch(,%edx,4)

	_05509f_case:
		xor    %eax,%eax
		mov    %bl,%al
		jmp    _0550c3_jump

	_0550a5_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _096fb8_data(,%eax,4),%eax
		jmp    _0550ca_case

	_0550b2_case:
		xor    %eax,%eax
		mov    _0cfa69_data,%al
		jmp    _0550c3_jump

	_0550bb_case:
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax

	_0550c3_jump:
		mov    _096fb4_data(,%eax,4),%eax

	_0550ca_case:
		mov    (%eax),%al
		mov    %bl,_0cfa6e_data
		pop    %edx
		pop    %ebx
		ret    



_0550d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000008,_0cfa6e_data
		jne    _0550f2_jump
		mov    $_0cfa69_data,%eax
		mov    $_0cfa67_data,%ebx
		jmp    _0550fc_jump

	_0550f2_jump:
		mov    $_0cfa6e_data,%eax
		mov    $_0cfa6f_data,%ebx

	_0550fc_jump:
		mov    (%eax),%cl
		cmpb   $0x00000c,0x000077(%edx)
		jne    _055140_jump
		mov    0x000076(%edx),%ch
		cmp    $0x000009,%ch
		jbe    _055111_jump
		movb   $0x000003,(%eax)
		jmp    _055139_jump

	_055111_jump:
		cmp    $0x000007,%ch
		jbe    _05511b_jump
		movb   $0x000005,(%eax)
		jmp    _055139_jump

	_05511b_jump:
		cmp    $0x000004,%ch
		jbe    _055125_jump
		movb   $0x000006,(%eax)
		jmp    _055139_jump

	_055125_jump:
		test   %ch,%ch
		jbe    _05512e_jump
		movb   $0x000007,(%eax)
		jmp    _055139_jump

	_05512e_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0cfa6b_data

	_055139_jump:
		cmp    (%eax),%cl
		je     _055140_jump
		movb   $0x000000,(%ebx)

	_055140_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055144_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0cfa6b_data
		jne    _05522a_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0ce77f_data
		call   _01eb80_func
		mov    $0x0000ff,%dh
		mov    0x000081(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0cfa6b_data
		mov    %cl,0x000081(%ebx)
		call   _0550d8_func
		call   _055054_func
		cmp    $0x000007,%al
		jb     _05519d_jump
		cmp    $0x00000a,%al
		jbe    _055196_jump
		cmp    $0x000012,%al
		jb     _05519d_jump
		cmp    $0x000015,%al
		ja     _05519d_jump

	_055196_jump:
		movb   $0x000001,_0e4da2_data

	_05519d_jump:
		mov    0x000076(%ebx),%al
		test   %al,%al
		je     _0551ff_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x000077(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    _0cfa6e_data,%dh
		mov    %eax,_0ce5b0_data
		cmp    $0x000008,%dh
		je     _05521a_jump
		mov    $0x000008,%bl
		mov    _0cfa6f_data,%al
		mov    %dh,_0cfa69_data
		mov    %al,_0cfa67_data
		mov    %bl,_0cfa6e_data
		jmp    _05521a_jump

	_0551ff_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0ce5b0_data
		mov    $0x000001,%dl
		mov    %ah,_0cfa6e_data
		mov    %dl,_0cfa78_data

	_05521a_jump:
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0cfa6f_data
		mov    %cl,_0cfa6c_data

	_05522a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_055230_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000000,0x000076(%eax)
		jne    _0553c2_jump
		mov    0x00007f(%eax),%cl
		cmp    $0x000001,%cl
		jb     _055258_jump
		jbe    _055285_jump
		cmp    $0x000002,%cl
		je     _0552c8_jump
		jmp    _0552f7_jump

	_055258_jump:
		test   %cl,%cl
		jne    _0552f7_jump
		mov    _0ce678_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0ce67c_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x000056(%eax)
		mov    %ebx,%edx
		jmp    _0552f7_jump

	_055285_jump:
		cmpw   $0x000000,_0cf868_data
		jg     _055293_jump
		movb   $0x000002,0x00007f(%eax)

	_055293_jump:
		mov    _0cf89e_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0cf8a6_data,%dx
		add    %ecx,%edx
		mov    _0cf8b2_data,%bx
		sub    $0x00000a,%edx
		inc    %ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000002,%edx
		jmp    _0552f7_jump

	_0552c8_jump:
		mov    _0cf89e_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0ce67c_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000001,%edx

	_0552f7_jump:
		mov    _0cf8d0_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05530f_jump
		cmpb   $0x000002,0x00007f(%eax)
		je     _05530f_jump
		movb   $0x000001,0x00007f(%eax)

	_05530f_jump:
		cmpb   $0x000000,_0cf9fa_data
		je     _0553c2_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _055357_jump
		mov    0x000040(%eax),%di
		inc    %edi
		mov    %di,0x000040(%eax)
		cmp    %di,%bx
		jge    _05533b_jump
		mov    %bx,0x000040(%eax)

	_05533b_jump:
		mov    0x00003e(%eax),%esi
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %edi,%esi
		cmp    %ecx,%esi
		jle    _05536c_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _05536c_jump

	_055357_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _05536c_jump
		movw   $0x00ffff,0x000040(%eax)

	_05536c_jump:
		mov    0x000040(%eax),%ebx
		mov    0x00002c(%eax),%ebp
		mov    0x000054(%eax),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		add    %ebp,%ebx
		cmp    %ebx,%esi
		jle    _055395_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _0553c2_jump
		mov    %dx,0x000042(%eax)
		jmp    _0553c2_jump

	_055395_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%esi
		jge    _0553bc_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _0553c2_jump
		mov    %edx,%edi
		mov    %dx,0x000042(%eax)
		neg    %edi
		mov    %di,0x000042(%eax)
		jmp    _0553c2_jump

	_0553bc_jump:
		movw   $0x000000,0x000042(%eax)

	_0553c2_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0553cc_switch:
		.long   _05541f_case
		.long   _055428_case
		.long   _055431_case
		.long   _05543a_case
		.long   _055443_case




_0553e0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0cf876_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0001f4,0x000050(%eax)
		je     _055449_jump
		mov    0x000076(%ebx),%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _055449_jump
		and    $0x0000ff,%edx
		jmp    *%cs:_0553cc_switch(,%edx,4)

	_05541f_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_055428_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_055431_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05543a_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_055443_case:
		movw   $0x000000,0x000052(%eax)

	_055449_jump:
		pop    %edx
		pop    %ebx
		ret    



_05544c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		je     _055475_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _055475_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _061220_func
		movb   $0x000004,0x000072(%ecx)

	_055475_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055480_func:
		push   %ecx
		push   %edx
		mov    $0x000019,%ecx
		mov    $_0cf9f5_data,%eax
		xor    %edx,%edx
		call   _085a00_func
		pop    %edx
		pop    %ecx
		ret    



_055498_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		xor    %eax,%eax

	_05549e_jump:
		incb   _0cf9f5_data(%eax)
		xor    %edx,%edx
		mov    _0cf9f5_data(%eax),%dl
		cmp    %eax,%edx
		jl     _0554b8_jump
		xor    %dh,%dh
		mov    %dh,_0cf9f5_data(%eax)

	_0554b8_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jl     _05549e_jump
		xor    %eax,%eax
		mov    _0cd8c0_data,%edx
		mov    %bl,%al
		add    %eax,%edx
		mov    %edx,_0cd8c0_data
		pop    %edx
		pop    %ebx
		ret    

_0554d4_switch:
		.long   _055521_case
		.long   _055614_case
		.long   _055705_case
		.long   _0557f6_case
		.long   _0558e7_case
		.long   _0559d7_case




_0554ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    $0xfffffffe,%edi

	_0554fc_jump:
		movswl %bx,%eax
		mov    %edx,%ecx
		add    %eax,%eax
		dec    %ecx
		add    $_0cb9c0_data,%eax
		cmp    $0x000005,%cx
		ja     _055ab3_jump
		and    $0x00ffff,%ecx
		jmp    *%cs:_0554d4_switch(,%ecx,4)

	_055521_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00001e,(%eax)
		add    $0x000002,%eax
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0554fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055614_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000028,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0554fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055705_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000014,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0554fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0557f6_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000032,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0554fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0558e7_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0554fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0559d7_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x00003e(%eax)
		mov    %di,-0x00003c(%eax)
		mov    %di,-0x00003a(%eax)
		mov    %di,-0x000038(%eax)
		mov    %di,-0x000036(%eax)
		mov    %di,-0x000034(%eax)
		mov    %di,-0x000032(%eax)
		mov    %di,-0x000030(%eax)
		mov    %di,-0x00002e(%eax)
		mov    %di,-0x00002c(%eax)
		mov    %di,-0x00002a(%eax)
		mov    %di,-0x000028(%eax)
		mov    %di,-0x000026(%eax)
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)

	_055ab3_jump:
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _0554fc_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055ac8_func:
		push   %ebx
		push   %ecx
		cmpl   $0x000000,_0cd8c0_data
		jne    _055ad8_jump
		call   _03ca8c_func

	_055ad8_jump:
		mov    $0x000020,%ebx
		mov    _0cf7e6_data,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    _0cfa7e_data,%al
		add    $0x000021,%ecx
		cmp    %ebx,%eax
		jl     _055aff_jump
		cmp    %ecx,%eax
		jg     _055aff_jump
		mov    $0x000001,%eax
		jmp    _055b01_jump

	_055aff_jump:
		xor    %eax,%eax

	_055b01_jump:
		test   %eax,%eax
		je     _055b13_jump
		cmpb   $0x000041,_0cfa87_data
		jne    _055b13_jump
		call   _03cab4_func

	_055b13_jump:
		testb  $0x000040,_0cfa87_data
		jne    _055b21_jump
		call   _03ca64_func

	_055b21_jump:
		pop    %ecx
		pop    %ebx
		ret    



_055b24_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _094c14_data(,%eax,2),%ax
		test   %ax,%ax
		js     _055b3a_jump
		sar    %cl,%ax
		jmp    _055b43_jump

	_055b3a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_055b43_jump:
		pop    %ecx
		ret    



_055b48_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x000000,_0cf852_data
		je     _055b8b_jump
		mov    _0cf850_data,%eax
		sar    $0x000010,%eax
		call   _055b24_func
		mov    _0cf852_data,%bx
		inc    %ebx
		mov    %eax,%edx
		mov    %bx,_0cf852_data
		cmp    $0x0000ff,%ax
		jne    _055b84_jump
		xor    %ecx,%ecx
		xor    %eax,%edx
		mov    %cx,_0cf852_data

	_055b84_jump:
		add    %dx,_0cf8a6_data

	_055b8b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055b90_func:
		push   %ebx
		push   %edx
		mov    _0cf84c_data,%dx
		movswl %dx,%eax
		mov    _094c92_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _055bbd_jump
		mov    _0cf8a6_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cf8a6_data
		jmp    _055bbf_jump

	_055bbd_jump:
		xor    %edx,%edx

	_055bbf_jump:
		mov    %dx,_0cf84c_data
		pop    %edx
		pop    %ebx
		ret    



_055bcc_func:
		push   %ebx
		push   %edx
		mov    _0cf84e_data,%dx
		movswl %dx,%eax
		mov    _094c92_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _055bf9_jump
		mov    _0cf89e_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cf89e_data
		jmp    _055bfb_jump

	_055bf9_jump:
		xor    %edx,%edx

	_055bfb_jump:
		mov    %dx,_0cf84e_data
		pop    %edx
		pop    %ebx
		ret    



_055c08_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0cf8a6_data,%cx
		mov    _0cf89e_data,%si
		mov    %eax,%ebx
		cmpw   $0x0000ff,(%edx)
		jne    _055c28_jump
		movw   $0x000000,(%edx)

	_055c28_jump:
		cmpw   $0x000006,_0cf88c_data
		jne    _055c41_jump
		cmpw   $0x000004,_0cf87c_data
		jne    _055c41_jump
		movw   $0x000000,(%ebx)

	_055c41_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _055c5a_jump
		cmpw   $0x00000b,_0cf87c_data
		jne    _055c5a_jump
		movw   $0x000000,(%ebx)

	_055c5a_jump:
		mov    _0cf88c_data,%ax
		mov    %cx,_0cf8a6_data
		mov    %si,_0cf89e_data
		cmp    $0x000005,%ax
		jne    _055c88_jump
		cmpw   $0x000003,_0cf87c_data
		jne    _055c88_jump
		movw   $0x000000,(%ebx)
		movw   $0x000000,(%edx)

	_055c88_jump:
		call   _055b48_func
		cmpw   $0x000000,_0cf84e_data
		jle    _055c9c_jump
		call   _055bcc_func

	_055c9c_jump:
		cmpw   $0x000000,_0cf84c_data
		jle    _055cab_jump
		call   _055b90_func

	_055cab_jump:
		mov    _0cf8a6_data,%cx
		mov    (%edx),%ax
		mov    _0cf89e_data,%si
		add    %eax,%ecx
		mov    (%ebx),%ax
		mov    _0cf86e_data,%di
		add    %eax,%esi
		cmp    %di,%si
		jge    _055ce3_jump
		mov    %edi,%eax
		sub    %esi,%eax
		add    %ax,(%ebx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_092520_data
		jmp    _055d05_jump

	_055ce3_jump:
		mov    _0cf872_data,%di
		cmp    %di,%si
		jle    _055d05_jump
		mov    %esi,%eax
		mov    %edi,%esi
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_092520_data

	_055d05_jump:
		mov    _0cf854_data,%bx
		cmp    %bx,%cx
		jge    _055d2f_jump
		mov    %ebx,%eax
		xor    %edi,%edi
		mov    (%edx),%bx
		sub    %ecx,%eax
		mov    %di,_092522_data
		add    %eax,%ebx
		mov    _0cf854_data,%cx
		mov    %bx,(%edx)
		jmp    _055d52_jump

	_055d2f_jump:
		mov    _0cf85e_data,%di
		cmp    %di,%cx
		jle    _055d52_jump
		mov    %ecx,%eax
		mov    (%edx),%cx
		sub    %edi,%eax
		sub    %eax,%ecx
		mov    %cx,(%edx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_092522_data

	_055d52_jump:
		mov    $_0ce650_data,%eax
		mov    %cx,_0cf8a6_data
		mov    %si,_0cf89e_data
		call   _01e030_func
		mov    _0cf8a6_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_055d78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi

	_055d81_jump:
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _055e4b_jump

	_055d99_jump:
		cmpw   $0x0000d0,0x000060(%ecx)
		jne    _055e3b_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _055e3b_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f8e8_func
		movw   $0x000000,0x00005e(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000030(%ecx)
		test   %si,%si
		setne  %bl
		call   _01d818_func
		xor    %ebx,%ebx
		mov    0x000028(%edi),%eax
		mov    0x000068(%edi),%bl
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000069(%edi),%bl
		mov    0x00002c(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		test   %si,%si
		je     _055e19_jump
		mov    $0x000002,%ebx
		jmp    _055e1e_jump

	_055e19_jump:
		mov    $0x000007,%ebx

	_055e1e_jump:
		mov    %ecx,%eax
		mov    %bl,0x00007e(%ecx)
		call   _01e030_func
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _055d81_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055e3b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _055d99_jump

	_055e4b_jump:
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _055d81_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _055e74_jump
		sar    %cl,%ax
		jmp    _055e7d_jump

	_055e74_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_055e7d_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _055e8b_jump
		neg    %eax

	_055e8b_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _055eda_jump
		mov    _0cd8c0_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		je     _055ea7_jump
		sar    %cl,%eax
		jmp    _055ead_jump

	_055ea7_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_055ead_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		je     _055ebd_jump
		sar    %cl,%eax
		jmp    _055ec3_jump

	_055ebd_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_055ec3_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _055ed5_jump
		mov    $0x000001,%eax
		jg     _055ed5_jump
		neg    %eax

	_055ed5_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_055eda_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055ee4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		xor    %ecx,%ecx
		inc    %eax
		mov    %al,%cl
		cmpb   $0x000000,_0cf9f5_data(%ecx)
		jne    _055f67_jump
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x000081(%edx),%ah
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000004,%ah
		mov    0x00000c(%edx),%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		shl    $0x000003,%esi
		shr    $0x000007,%ah
		add    %esi,%ecx
		test   %ah,%ah
		jbe    _055f4e_jump
		cmp    $0x000001,%ah
		je     _055f5a_jump
		jmp    _055f69_jump

	_055f4e_jump:
		movsbw 0x000001(%ecx),%bx
		xor    %ah,%ah
		imul   %eax,%ebx
		jmp    _055f69_jump

	_055f5a_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %al,%bl
		imul   %ecx,%ebx
		jmp    _055f69_jump

	_055f67_jump:
		xor    %ebx,%ebx

	_055f69_jump:
		cmpw   $0x000017,0x000060(%edx)
		jne    _055f92_jump
		testb  $0x000002,_0cf81b_data
		je     _055f92_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _055f87_jump
		sar    %cl,%ax
		jmp    _055f90_jump

	_055f87_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_055f90_jump:
		mov    %eax,%ebx

	_055f92_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_055f9a_jump:
		ret    



_055f9c_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _055f9a_jump
		jmp    _07b628_func



_055fbc_func:
		testb  $0x000004,0x000081(%eax)
		je     _055f9a_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _055f9a_jump
		jmp    _07b628_func



_055fe4_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %cl,0x000010(%esp)
		xor    %edx,%edx
		mov    _0e4da4_data,%dx
		xor    %ecx,%ecx
		mov    _092ba2_data(,%edx,2),%ax
		mov    _092996_data(,%edx,2),%bx
		mov    %ax,0x000004(%esp)
		mov    0x000068(%edi),%al
		shl    $0x000002,%edx
		mov    %al,0x00000c(%esp)
		mov    _09257c_data(%edx),%ah
		mov    %bx,(%esp)
		test   $0x000010,%ah
		je     _0561fd_jump
		test   $0x000080,%ah
		je     _05604b_jump
		cmpb   $0x000000,_0cfa8e_data
		je     _05604b_jump

	_056041_jump:
		mov    $0x000001,%ecx
		jmp    _0561fd_jump

	_05604b_jump:
		mov    _0e4da4_data,%ax
		cmp    $0x00009d,%ax
		jb     _0560bb_jump
		jbe    _0561b3_jump
		cmp    $0x0000d7,%ax
		jb     _05608f_jump
		jbe    _056041_jump
		cmp    $0x0000dc,%ax
		jb     _056080_jump
		jbe    _056135_jump
		cmp    $0x0000f4,%ax
		je     _0561f8_jump
		jmp    _0561fd_jump

	_056080_jump:
		cmp    $0x0000db,%ax
		je     _05618f_jump
		jmp    _0561fd_jump

	_05608f_jump:
		cmp    $0x0000c0,%ax
		jb     _0560b0_jump
		jbe    _0561f8_jump
		cmp    $0x0000cc,%ax
		jb     _0561fd_jump
		cmp    $0x0000cd,%ax
		jbe    _056041_jump
		jmp    _0561fd_jump

	_0560b0_jump:
		cmp    $0x0000be,%ax
		je     _056041_jump
		jmp    _0561fd_jump

	_0560bb_jump:
		cmp    $0x000078,%ax
		jb     _0560f1_jump
		jbe    _056041_jump
		cmp    $0x00008f,%ax
		jb     _0560e2_jump
		jbe    _056041_jump
		cmp    $0x000099,%ax
		je     _056041_jump
		jmp    _0561fd_jump

	_0560e2_jump:
		cmp    $0x00007a,%ax
		je     _0561cb_jump
		jmp    _0561fd_jump

	_0560f1_jump:
		cmp    $0x00005e,%ax
		jb     _056108_jump
		jbe    _056041_jump
		cmp    $0x000061,%ax
		je     _056112_jump
		jmp    _0561fd_jump

	_056108_jump:
		cmp    $0x00000a,%ax
		jne    _0561fd_jump

	_056112_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _0561fd_jump
		cmp    $0x0001bc,%si
		jge    _0561fd_jump
		mov    $0x000001,%ecx
		jmp    _0561fd_jump

	_056135_jump:
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _05618f_jump
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _05618f_jump
		cmp    $0x0001f4,%si
		jge    _05618f_jump
		mov    _0cf88c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x000076(%eax)
		jne    _05618f_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x000076(%eax)
		call   _01d818_func

	_05618f_jump:
		mov    _0cf88c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		cmpb   $0x000000,0x000076(%edx,%eax,4)
		jbe    _0561fd_jump
		mov    $0x000001,%ecx
		jmp    _0561fd_jump

	_0561b3_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _0561fd_jump
		cmp    $0x0001f4,%si
		jge    _0561fd_jump
		mov    $0x000001,%ecx
		jmp    _0561fd_jump

	_0561cb_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _0561fd_jump
		cmp    $0x0001bc,%si
		jge    _0561fd_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _0561fd_jump
		cmpw   $0x0000fa,0x000008(%esp)
		jge    _0561fd_jump
		mov    $0x000001,%ecx
		jmp    _0561fd_jump

	_0561f8_jump:
		movb   $0x000080,0x00000c(%esp)

	_0561fd_jump:
		test   %cx,%cx
		jne    _0562b1_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _056223_jump
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ecx
		add    $0x00003c,%ebx
		add    $0x00003c,%ecx
		mov    %bx,(%esp)
		mov    %cx,0x000004(%esp)

	_056223_jump:
		mov    -0x000002(%esp),%eax
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%eax
		movswl %si,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _0562a8_jump
		add    $0x0001bc,%eax
		cmp    %eax,%edx
		jg     _0562a8_jump
		mov    0x000002(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _0562a8_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _0562a8_jump
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _0562a8_jump
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _0562a8_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    0x000028(%edi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _0562a8_jump
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _0562ac_jump

	_0562a8_jump:
		xor    %ecx,%ecx
		jmp    _0562b1_jump

	_0562ac_jump:
		mov    $0x000001,%ecx

	_0562b1_jump:
		cmp    $0x000001,%cx
		jne    _0562fe_jump
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000080,_09257c_data(,%eax,4)
		je     _0562fe_jump
		mov    $0x000001,%dh
		mov    _0cfa71_data,%bl
		mov    %dh,_0cfa8e_data
		test   %bl,%bl
		jne    _0562ea_jump
		cmpb   $0x000000,0x000076(%edi)
		je     _0562ea_jump
		cmpb   $0x000000,_0cfa68_data
		jne    _0562f9_jump

	_0562ea_jump:
		cmpb   $0x000000,_0cfa71_data
		je     _0562fe_jump
		cmpb   $0x000000,0x000076(%edi)
		jne    _0562fe_jump

	_0562f9_jump:
		call   _01f8a4_func

	_0562fe_jump:
		cmp    $0x000001,%cx
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_056310_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_056338_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000060(%ebx),%bx
		mov    %bx,_0e4da4_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _056599_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _055fe4_func
		test   %ax,%ax
		je     _056481_jump
		cmpw   $0x000000,0x00005e(%esi)
		jne    _056465_jump
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000001,_09257d_data(,%eax,4)
		jne    _0563b6_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _0563b6_jump
		je     _056465_jump
		cmp    $0x00000a,%ax
		jne    _056465_jump

	_0563b6_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_09257c_data(%eax)
		jne    _0563db_jump
		testb  $0x000040,_09257f_data(%eax)
		je     _056409_jump

	_0563db_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _0563f7_jump
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000001,_09257d_data(,%eax,4)
		je     _0563f7_jump
		mov    $0x000001,%al
		jmp    _0563f9_jump

	_0563f7_jump:
		xor    %al,%al

	_0563f9_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _055f9c_func
		jmp    _056599_jump

	_056409_jump:
		mov    0x000034(%esi),%ax
		xor    %ecx,%ecx

	_05640f_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		add    %eax,%ebx
		cmp    0x000024(%ebx),%ecx
		jne    _056437_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_09257d_data(,%eax,4)
		je     _056437_jump
		mov    $0x000001,%al
		jmp    _056439_jump

	_056437_jump:
		mov    %cl,%al

	_056439_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _055fbc_func
		mov    0x000032(%ebx),%eax
		mov    _0cee58_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%di
		mov    (%edx,%eax,2),%ax
		cmp    %di,%ax
		jne    _05640f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_056465_jump:
		mov    0x00005e(%esi),%di
		test   %di,%di
		jle    _056599_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x00005e(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_056481_jump:
		mov    0x000030(%esi),%ax
		cmp    $0x000001,%ax
		je     _056599_jump
		xor    %edx,%edx
		mov    _0e4da4_data,%dx
		movw   $0x000000,0x00005e(%esi)
		testb  $0x000020,_09257e_data(,%edx,4)
		je     _0564b7_jump
		mov    %esi,%eax
		call   _056310_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0564b7_jump:
		cmp    $0x000002,%ax
		jne    _0564cc_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0564cc_jump:
		test   %ax,%ax
		je     _0564db_jump
		cmp    $0x000004,%ax
		jne    _056599_jump

	_0564db_jump:
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000001,_09257c_data(,%eax,4)
		je     _0564fc_jump
		mov    %esi,%eax
		call   _060288_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0564fc_jump:
		movl   $0x000004,0x000030(%esi)
		mov    _0e4da4_data,%dx
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%dx
		je     _05654c_jump

	_05651d_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		add    %edx,%eax
		cmpl   $0x000004,0x000030(%eax)
		je     _056536_jump
		mov    $0x000001,%bl
		jmp    _05654c_jump

	_056536_jump:
		mov    0x000032(%eax),%eax
		mov    _0cee58_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _05651d_jump

	_05654c_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _056562_jump
		movl   $0x000000,0x000024(%esi)

	_056562_jump:
		test   %bl,%bl
		jne    _056599_jump
		mov    0x000034(%esi),%ax

	_05656a_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _060288_func
		mov    0x000032(%ebx),%eax
		mov    _0cee58_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05656a_jump

	_056599_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_0565a4_switch:
		.long   _056667_case
		.long   _05667d_case
		.long   _056693_case
		.long   _0566b4_case
		.long   _0566cf_case
		.long   _05664e_case
		.long   _056711_case
		.long   _056711_case
		.long   _056711_case
		.long   _0566dc_case
		.long   _0566f6_case




_0565d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		mov    0x000005(%ecx,%esi,8),%cl
		xor    %ebx,%ebx
		shr    $0x000004,%cl
		xor    %eax,%eax
		test   %cl,%cl
		je     _05672a_jump
		mov    0x000060(%edx),%si
		cmp    $0x000057,%si
		je     _05660c_jump
		cmp    $0x000058,%si
		jne    _056635_jump

	_05660c_jump:
		mov    0x00007d(%edx),%cl
		test   %cl,%cl
		jbe    _05661d_jump
		dec    %cl
		mov    %cl,0x00007d(%edx)
		jmp    _056711_case

	_05661d_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _056711_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)
		jmp    _056711_case

	_056635_jump:
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _056711_case
		and    $0x0000ff,%ecx
		jmp    *%cs:_0565a4_switch(,%ecx,4)

	_05664e_case:
		cmpb   $0x000000,_0cf9f7_data
		jne    _056711_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _056711_case

	_056667_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _056711_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _056711_case

	_05667d_case:
		cmpb   $0x000000,0x000072(%edx)
		jne    _056711_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _056711_case

	_056693_case:
		mov    0x000042(%edx),%cx
		cmp    $0x000001,%cx
		jge    _0566a7_jump
		mov    $0x000001,%eax
		jmp    _056711_case

	_0566a7_jump:
		jle    _056711_case
		mov    $0xffffffff,%eax
		jmp    _056711_case

	_0566b4_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _0566c6_jump
		mov    $0xffffffff,%eax
		jmp    _056711_case

	_0566c6_jump:
		jge    _056711_case
		mov    $0x000001,%eax
		jmp    _056711_case

	_0566cf_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _056711_case
		mov    $0xffffffff,%eax
		jmp    _056711_case

	_0566dc_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _056711_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000071(%edx)
		mov    %eax,%ebx
		jmp    _056711_case

	_0566f6_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _056711_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000071(%edx)

	_056711_case:
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		testb  $0x000020,_09257d_data(,%ecx,4)
		je     _056726_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_056726_jump:
		add    %ax,0x000042(%edx)

	_05672a_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056734_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _056791_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _056786_jump
		mov    %ebx,%eax

	_056786_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _0567a2_jump

	_056791_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0567a2_jump
		mov    %ebx,%eax

	_0567a2_jump:
		mov    %al,0x00006b(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_0567ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		mov    0x000004(%esi),%ebp
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _056823_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _056823_jump
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		jne    _056820_jump
		incb   0x00006b(%esi)
		jmp    _056823_jump

	_056820_jump:
		decb   0x00006b(%esi)

	_056823_jump:
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		shl    $0x000002,%edi
		mov    0x000004(%esi),%eax
		add    %eax,%edi
		mov    0x000073(%esi),%al
		cmp    $0x000001,%al
		jb     _0568cb_jump
		jbe    _056855_jump
		cmp    $0x000002,%al
		je     _05687f_jump
		jmp    _0568cb_jump

	_056855_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00006a(%esi),%al
		cmp    %dx,%ax
		je     _056877_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _05686f_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _056877_jump

	_05686f_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_056877_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _0568cb_jump
		jmp    _056899_jump

	_05687f_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _05688b_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _056893_jump

	_05688b_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_056893_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _0568cb_jump

	_056899_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _07228c_func

	_0568cb_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006b(%esi),%dl
		mov    0x00000a(%edi),%ax
		cmp    %eax,%edx
		jge    _0568e3_jump
		cmp    $0x0000ff,%dl
		jne    _0569d0_jump

	_0568e3_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x00006c(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x00006d(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		xor    %ebx,%ebx
		lea    0x000000(,%eax,4),%edx
		mov    0x00006c(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		add    %eax,%ebx
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000004(%esi),%edi
		mov    0x000060(%esi),%cx
		add    %eax,%edi
		cmp    $0x000017,%cx
		jne    _056958_jump
		cmpw   $0x000008,_0cf8d4_data
		jne    _056958_jump
		mov    _0cf8c4_data,%dx
		cmp    $0x000002,%dx
		je     _056952_jump
		cmp    $0x000006,%dx
		jne    _056958_jump

	_056952_jump:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _056972_jump

	_056958_jump:
		cmpw   $0x00003d,_0cf8d4_data
		jne    _05698e_jump
		cmpw   $0x000000,_0cf8c4_data
		jne    _05698e_jump
		cmpb   $0x00003d,0x00006c(%esi)
		je     _05698e_jump

	_056972_jump:
		cmpw   $0x00003c,_0ce6a6_data
		jle    _05698e_jump
		testb  $0x000080,_0cf81b_data
		jne    _05698e_jump
		movw   $0x00003c,_0ce6a6_data

	_05698e_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _05699d_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _05699f_jump

	_05699d_jump:
		xor    %eax,%eax

	_05699f_jump:
		mov    %al,0x00006b(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _0569d0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000032(%esi),%edx
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%bl
		sar    $0x000010,%edx
		mov    0x000006(%eax,%ebx,8),%al
		and    $0x0000ff,%eax
		call   _07228c_func

	_0569d0_jump:
		mov    0x000081(%esi),%al
		movb   $0x000000,0x000073(%esi)
		test   $0x000020,%al
		je     _0569f0_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01db04_func

	_0569f0_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x00006b(%esi),%al
		lea    0x000081(%esi),%ebx
		cmp    %dx,%ax
		jne    _056a12_jump
		xor    %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00006a(%esi),%al
		cmp    %cx,%ax
		je     _056a19_jump

	_056a12_jump:
		mov    $0x000001,%eax
		jmp    _056a1b_jump

	_056a19_jump:
		xor    %eax,%eax

	_056a1b_jump:
		and    $0x000001,%al
		mov    (%ebx),%ah
		and    $0x00007f,%ah
		mov    %ah,(%ebx)
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056a38_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    



_056a4c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		cmpw   $0x000001,0x000042(%eax)
		jg     _056a8a_jump
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		and    $0x0000ff,%ebx
		mov    (%esp),%dl
		call   _01d818_func
		cmpb   $0x000002,(%esp)
		je     _056bbd_jump
		mov    %ecx,%eax
		call   _025b30_func
		jmp    _056bbd_jump

	_056a8a_jump:
		cmpb   $0x000000,_0cf9f7_data
		jne    _056bad_jump
		mov    0x000062(%ecx),%al
		cmp    $0x00000c,%al
		jb     _056aea_jump
		jbe    _056bad_jump
		cmp    $0x000014,%al
		jb     _056acd_jump
		cmp    $0x000015,%al
		jbe    _056b5a_jump
		cmp    $0x000018,%al
		jb     _056b79_jump
		cmp    $0x000019,%al
		jbe    _056bad_jump
		cmp    $0x00001e,%al
		je     _056b93_jump
		jmp    _056bad_jump

	_056acd_jump:
		cmp    $0x000012,%al
		jb     _056ad5_jump
		jbe    _056b17_jump
		jmp    _056b3a_jump

	_056ad5_jump:
		cmp    $0x00000e,%al
		jb     _056bad_jump
		cmp    $0x00000f,%al
		jbe    _056b93_jump
		jmp    _056bad_jump

	_056aea_jump:
		cmp    $0x000004,%al
		jb     _056b0d_jump
		cmp    $0x000005,%al
		jbe    _056b5a_jump
		cmp    $0x000008,%al
		jb     _056b79_jump
		jbe    _056bad_jump
		cmp    $0x000009,%al
		je     _056b9c_jump
		jmp    _056bad_jump

	_056b0d_jump:
		cmp    $0x000002,%al
		jb     _056bad_jump
		ja     _056b3a_jump

	_056b17_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%ax
		sar    $0x000010,%edx
		sub    $0x000002,%eax
		sar    %edx
		mov    %ax,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _056bad_jump

	_056b3a_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%di
		sar    $0x000010,%edx
		add    $0x000002,%edi
		sar    %edx
		mov    %di,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _056bad_jump

	_056b5a_jump:
		mov    0x000040(%ecx),%edx
		mov    $0x000001,%ebx
		sar    $0x000010,%edx
		mov    0x000040(%ecx),%si
		inc    %edx
		dec    %esi
		sar    %edx
		mov    %si,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _056bad_jump

	_056b79_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		mov    $0x000001,%ebx
		sar    %edx
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		incw   0x000040(%ecx)
		jmp    _056bad_jump

	_056b93_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		jmp    _056ba5_jump

	_056b9c_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		add    $0x000003,%edx

	_056ba5_jump:
		sar    %edx
		neg    %edx
		mov    %dx,0x000042(%ecx)

	_056bad_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _056bbd_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d808_func

	_056bbd_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_056bc4_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		testb  $0x000001,_09253c_data(%edx)
		je     _056be8_jump
		mov    0x000065(%eax),%al
		and    $0x0000ff,%eax
		testb  $0x000040,_09253c_data(%eax)
		je     _056be8_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_056be8_jump:
		xor    %al,%al
		pop    %edx
		ret    



_056bec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000060(%eax),%si
		cmp    $0x00002f,%si
		jne    _056c08_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _056c18_jump

	_056c08_jump:
		cmp    $0x000045,%si
		jne    _056c18_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_056c18_jump:
		mov    %edx,%eax
		call   _056bc4_func
		test   %al,%al
		je     _056c29_jump
		mov    0x000065(%edx),%al
		mov    %al,0x000062(%edx)

	_056c29_jump:
		mov    0x000062(%edx),%al
		cmp    $0x00000e,%al
		jb     _056c5d_jump
		cmp    $0x00000f,%al
		jbe    _056cc6_jump
		cmp    $0x000014,%al
		jb     _056c51_jump
		cmp    $0x000015,%al
		jbe    _056c77_jump
		cmp    $0x000017,%al
		jbe    _056c8f_jump
		cmp    $0x00001e,%al
		je     _056cc6_jump
		jmp    _056cca_jump

	_056c51_jump:
		cmp    $0x000012,%al
		jb     _056cca_jump
		jbe    _056ca4_jump
		jmp    _056c89_jump

	_056c5d_jump:
		cmp    $0x000004,%al
		jb     _056c6f_jump
		cmp    $0x000005,%al
		jbe    _056c77_jump
		cmp    $0x000007,%al
		jbe    _056c8f_jump
		cmp    $0x000009,%al
		je     _056cc3_jump
		jmp    _056cca_jump

	_056c6f_jump:
		cmp    $0x000002,%al
		jb     _056cca_jump
		jbe    _056ca4_jump
		jmp    _056c89_jump

	_056c77_jump:
		mov    %bx,0x000042(%edx)
		mov    %ecx,%eax
		mov    %cx,0x000040(%edx)
		neg    %eax
		mov    %ax,0x000040(%edx)
		jmp    _056cca_jump

	_056c89_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_056c8f_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056ca4_jump:
		add    $0x000002,%ebx
		mov    %bx,0x000042(%edx)
		mov    $0xfffffff0,%ebx
		sub    %ecx,%ebx
		mov    %bx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056cc3_jump:
		sub    $0x000003,%ebx

	_056cc6_jump:
		mov    %bx,0x000042(%edx)

	_056cca_jump:
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056cd8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    $0x000005,%esi
		mov    0x00006d(%eax),%ah
		mov    $0x000003,%edx
		cmp    $0x000002,%ah
		jne    _056d07_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _056d07_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _07d43c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_056d07_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _056d2c_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _056d2c_jump
		mov    %ecx,%eax
		mov    0x000060(%ecx),%dx
		movw   $0x00002f,0x000060(%ecx)
		call   _056bec_func
		mov    %dx,0x000060(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_056d2c_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jl     _056ecd_jump
		mov    %ecx,%eax
		call   _056bc4_func
		mov    %al,%ah
		test   %al,%al
		je     _056d49_jump
		mov    0x000065(%ecx),%al
		jmp    _056d4c_jump

	_056d49_jump:
		mov    0x000062(%ecx),%al

	_056d4c_jump:
		cmp    $0x00000c,%al
		jb     _056d7b_jump
		jbe    _056e24_jump
		cmp    $0x000014,%al
		jb     _056d6f_jump
		cmp    $0x000015,%al
		jbe    _056dde_jump
		cmp    $0x000018,%al
		jb     _056df9_jump
		jmp    _056e24_jump

	_056d6f_jump:
		cmp    $0x000012,%al
		jb     _056e24_jump
		jbe    _056da8_jump
		jmp    _056dc3_jump

	_056d7b_jump:
		cmp    $0x000004,%al
		jb     _056d9e_jump
		cmp    $0x000005,%al
		jbe    _056dde_jump
		cmp    $0x000008,%al
		jb     _056df9_jump
		jbe    _056e24_jump
		cmp    $0x000009,%al
		je     _056e14_jump
		jmp    _056e24_jump

	_056d9e_jump:
		cmp    $0x000002,%al
		jb     _056e24_jump
		ja     _056dc3_jump

	_056da8_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _056db8_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_056db8_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _056e24_jump

	_056dc3_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _056dd3_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_056dd3_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _056e24_jump

	_056dde_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _056dee_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_056dee_jump:
		imul   0x000042(%ecx),%dx
		sub    %dx,0x000040(%ecx)
		jmp    _056e24_jump

	_056df9_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _056e09_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_056e09_jump:
		imul   0x000042(%ecx),%dx
		add    %dx,0x000040(%ecx)
		jmp    _056e24_jump

	_056e14_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _056e24_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_056e24_jump:
		test   %bx,%bx
		jle    _056e4d_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000001,%si
		jle    _056e45_jump
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %di,%di
		je     _056e53_jump
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _056e53_jump

	_056e45_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _056e53_jump

	_056e4d_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_056e53_jump:
		test   %ah,%ah
		je     _056e94_jump

	_056e57_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		cmp    0x000062(%ecx),%al
		jne    _056e84_jump
		decl   0x00002c(%ecx)
		jmp    _056e57_jump

	_056e84_jump:
		mov    %ecx,%eax
		call   _025b30_func
		mov    %ecx,%eax
		call   _01e790_func
		jmp    _056ecd_jump

	_056e94_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000001,_09253c_data(%eax)
		je     _056ec6_jump
		mov    %ecx,%eax
		call   _056a38_func
		cmp    $0x000004,%ax
		jl     _056ec6_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000002,%si
		jg     _056ec6_jump
		test   %si,%si
		jne    _056ecd_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _056ecd_jump

	_056ec6_jump:
		mov    %ecx,%eax
		call   _025b30_func

	_056ecd_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _056efc_jump
		cmp    $0x00000a,%al
		je     _056efc_jump
		movb   $0x000000,0x000072(%ecx)

	_056efc_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_056f00_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x000004(%esp)
		cmpw   $0x000026,0x000060(%eax)
		jne    _056f2b_jump
		mov    $0x000001,%eax
		mov    $0x000002,%edi
		mov    %eax,%ebx
		mov    %eax,%edx
		mov    %ax,0x000008(%esp)
		jmp    _056f46_jump

	_056f2b_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%ecx
		mov    $0x000001,%edi
		mov    %eax,%edx
		mov    %cx,0x000008(%esp)

	_056f46_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _0571d3_jump
		mov    0x000040(%esi),%cx
		test   %cx,%cx
		jle    _056f5e_jump
		sub    %eax,%ecx
		jmp    _056f62_jump

	_056f5e_jump:
		jge    _056f66_jump
		add    %eax,%ecx

	_056f62_jump:
		mov    %cx,0x000040(%esi)

	_056f66_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _056f82_jump
		cmp    %ecx,%eax
		jg     _056f82_jump
		mov    $0x000001,%eax
		jmp    _056f84_jump

	_056f82_jump:
		xor    %eax,%eax

	_056f84_jump:
		test   %eax,%eax
		je     _056f8e_jump
		movw   $0x000000,0x000040(%esi)

	_056f8e_jump:
		mov    %esi,%eax
		call   _056bc4_func
		mov    %al,%cl
		test   %al,%al
		je     _056fa0_jump
		mov    0x000065(%esi),%al
		jmp    _056fa3_jump

	_056fa0_jump:
		mov    0x000062(%esi),%al

	_056fa3_jump:
		cmp    $0x00000c,%al
		jb     _056fd2_jump
		jbe    _0570bf_jump
		cmp    $0x000014,%al
		jb     _056fc6_jump
		cmp    $0x000015,%al
		jbe    _05703b_jump
		cmp    $0x000018,%al
		jb     _057075_jump
		jmp    _0570bf_jump

	_056fc6_jump:
		cmp    $0x000012,%al
		jb     _0570bf_jump
		jbe    _056fff_jump
		jmp    _05701d_jump

	_056fd2_jump:
		cmp    $0x000004,%al
		jb     _056ff5_jump
		cmp    $0x000005,%al
		jbe    _05703b_jump
		cmp    $0x000008,%al
		jb     _057075_jump
		jbe    _0570bf_jump
		cmp    $0x000009,%al
		je     _0570af_jump
		jmp    _0570bf_jump

	_056ff5_jump:
		cmp    $0x000002,%al
		jb     _0570bf_jump
		ja     _05701d_jump

	_056fff_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05700f_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_05700f_jump:
		imul   0x000042(%esi),%dx
		sub    %dx,0x000040(%esi)
		jmp    _0570bf_jump

	_05701d_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05702d_jump
		mov    $0x000001,%edi
		mov    %di,0x000042(%esi)

	_05702d_jump:
		imul   0x000042(%esi),%dx
		add    %dx,0x000040(%esi)
		jmp    _0570bf_jump

	_05703b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _05704b_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_05704b_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _0570bf_jump

	_057075_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _057085_jump
		mov    $0x000001,%ebx
		mov    %bx,0x000042(%esi)

	_057085_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _0570bf_jump

	_0570af_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _0570bf_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_0570bf_jump:
		mov    0x000004(%esp),%eax
		test   %ax,%ax
		jle    _0570fd_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000001,%dx
		jle    _0570ee_jump
		sub    %edx,%eax
		mov    (%esp),%edi
		mov    %ax,0x000042(%esi)
		test   %di,%di
		je     _057160_jump
		inc    %eax
		mov    %ax,0x000042(%esi)
		jmp    _057160_jump

	_0570ee_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x000076(%esi)
		jmp    _057160_jump

	_0570fd_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000008,%dx
		je     _057122_jump
		cmp    $0x000086,%dx
		je     _057122_jump
		cmp    $0x0000a7,%dx
		je     _057122_jump
		cmp    $0x0000b1,%dx
		je     _057122_jump
		cmp    $0x000006,%dx
		jne    _05715a_jump

	_057122_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _057147_jump
		testb  $0x000002,_0cf81b_data
		je     _05713f_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _05714d_jump

	_05713f_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _05714d_jump

	_057147_jump:
		movw   $0x00fffb,0x000042(%esi)

	_05714d_jump:
		cmpw   $0x000006,0x000060(%esi)
		jne    _057160_jump
		incw   0x000042(%esi)
		jmp    _057160_jump

	_05715a_jump:
		movw   $0x00fffd,0x000042(%esi)

	_057160_jump:
		test   %cl,%cl
		je     _05719a_jump

	_057164_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		cmp    0x000062(%esi),%al
		jne    _057191_jump
		decl   0x00002c(%esi)
		jmp    _057164_jump

	_057191_jump:
		mov    %esi,%eax
		call   _01e790_func
		jmp    _0571cc_jump

	_05719a_jump:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000001,_09253c_data(%eax)
		je     _0571cc_jump
		mov    %esi,%eax
		call   _056a38_func
		cmp    $0x000004,%ax
		jl     _0571cc_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000002,%dx
		jg     _0571cc_jump
		test   %dx,%dx
		jne    _0571d3_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _0571d3_jump

	_0571cc_jump:
		mov    %esi,%eax
		call   _025b30_func

	_0571d3_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _057202_jump
		cmp    $0x00000a,%al
		je     _057202_jump
		movb   $0x000000,0x000072(%esi)

	_057202_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05720c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01d818_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057230_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _025b30_func
		mov    0x000076(%ecx),%dl
		cmp    0x000077(%ecx),%dl
		je     _05727b_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _057264_jump
		mov    $0x000002,%edx
		jmp    _057269_jump

	_057264_jump:
		mov    $0x00000b,%edx

	_057269_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01d818_func
		jmp    _057290_jump

	_05727b_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		orb    $0x000010,0x000081(%ecx)

	_057290_jump:
		mov    %ecx,%eax
		call   _01dfb8_func
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0572c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _0572f4_jump
		call   _025b30_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		cmpw   $0x0001f4,0x00004a(%ecx)
		jle    _0572f4_jump
		movw   $0x000000,0x00004a(%ecx)

	_0572f4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0572f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0cfa70_data
		je     _05731e_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _05731e_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _056a4c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05731e_jump:
		cmpb   $0x000000,0x00006c(%ecx)
		je     _05733f_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _025b30_func

	_05733f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057344_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		jne    _057367_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func
		mov    %ecx,%eax
		call   _025b30_func

	_057367_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05736c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%ebx
		lea    0x000002(%eax),%esi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    _0ce636_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ebx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce640_data,%ebx
		sar    $0x000004,%esi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		add    %esi,%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0574ab_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _0574ab_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _057407_jump
		testb  $0x000008,0x000081(%ecx)
		je     _057424_jump

	_057407_jump:
		movswl %dx,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _0574ab_jump
		testb  $0x000008,0x000081(%ecx)
		je     _0574ab_jump

	_057424_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05745a_jump
		testb  $0x000008,0x000081(%ecx)
		je     _057447_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _061220_func
		jmp    _0574ab_jump

	_057447_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _061220_func
		jmp    _0574ab_jump

	_05745a_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ebp
		mov    $0x000004,%edx
		add    %eax,%ebp
		mov    %ecx,%eax
		mov    %ebp,0x000028(%ecx)
		call   _061220_func
		mov    0x000081(%ecx),%bl
		lea    0x000081(%ecx),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)

	_0574ab_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0574b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%ecx)
		je     _0574e0_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _0574e9_jump

	_0574e0_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_0574e9_jump:
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0574f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		call   _01d818_func
		mov    %ecx,%eax
		call   _025b30_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_057514_switch:
		.long   _057bc8_case
		.long   _057c0e_case
		.long   _0577de_case
		.long   _057bc8_case
		.long   _0577de_case
		.long   _0577de_case
		.long   _057bbd_case




_057530_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _05757f_jump
		cmp    $0x00000a,%al
		je     _05757f_jump
		mov    0x000071(%esi),%ah
		inc    %ah
		mov    %ah,0x000071(%esi)
		cmp    $0x000003,%ah
		jb     _05756e_jump
		movb   $0x000000,0x000071(%esi)

	_05756e_jump:
		mov    0x000072(%esi),%dh
		inc    %dh
		mov    %dh,0x000072(%esi)
		cmp    $0x000004,%dh
		jb     _05757f_jump
		movb   $0x000000,0x000072(%esi)

	_05757f_jump:
		mov    %esi,%eax
		call   _0565d0_func
		mov    0x000060(%esi),%dx
		mov    %eax,%edi
		cmp    $0x000003,%dx
		jne    _0575e4_jump
		cmpw   $0x000000,0x000042(%esi)
		jl     _0575ab_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0575ab_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d808_func

	_0575ab_jump:
		cmpb   $0x000000,_0cfa70_data
		jne    _057658_jump
		cmpw   $0x000003,0x000042(%esi)
		jl     _057658_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _057658_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d808_func
		movw   $0x000000,0x000040(%esi)
		jmp    _057658_jump

	_0575e4_jump:
		cmp    $0x000028,%dx
		je     _0575f0_jump
		cmp    $0x00007a,%dx
		jne    _05763f_jump

	_0575f0_jump:
		mov    %esi,%eax
		call   _05736c_func
		mov    0x00006d(%esi),%bh
		cmp    $0x000002,%bh
		jne    _057658_jump
		mov    0x000042(%esi),%cx
		test   %cx,%cx
		jle    _05761b_jump
		cmp    0x00006c(%esi),%bh
		je     _057658_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _057658_jump

	_05761b_jump:
		jge    _057658_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _057658_jump
		movw   $0x000000,0x000042(%esi)
		jmp    _057658_jump

	_05763f_jump:
		cmp    $0x00005b,%dx
		jne    _057658_jump
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _057658_jump
		mov    %esi,%eax
		call   _075e88_func

	_057658_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_09257f_data(,%eax,4)
		je     _05770e_jump
		cmpw   $0x000000,0x000042(%esi)
		jge    _05770e_jump
		testb  $0x000020,0x000081(%esi)
		je     _0576b6_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		jmp    _0576ce_jump

	_0576b6_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		mov    0x00002c(%esi),%dx

	_0576ce_jump:
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000040(%esi),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _05770e_jump
		movw   $0x000000,0x000042(%esi)

	_05770e_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_09257e_data(,%eax,4)
		je     _0577de_case
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_09253c_data(%eax)
		je     _0577de_case
		mov    0x000060(%esi),%ax
		cmp    $0x000064,%ax
		jb     _057965_jump
		jbe    _057c52_jump
		cmp    $0x0000ac,%ax
		jb     _057886_jump
		jbe    _057c5e_jump
		cmp    $0x0000cc,%ax
		jb     _05781d_jump
		cmp    $0x0000cd,%ax
		jbe    _0577de_case
		cmp    $0x0000d9,%ax
		jb     _0577b2_jump
		jbe    _057c52_jump
		cmp    $0x0000de,%ax
		jb     _0577a3_jump
		jbe    _0577de_case
		cmp    $0x0000e3,%ax
		jb     _0577d7_jump
		jbe    _0577de_case
		cmp    $0x0000ef,%ax
		je     _057e58_jump
		jmp    _0577d7_jump

	_0577a3_jump:
		cmp    $0x0000da,%ax
		je     _057b3f_jump
		jmp    _0577d7_jump

	_0577b2_jump:
		cmp    $0x0000d4,%ax
		jb     _0577cd_jump
		jbe    _0577de_case
		cmp    $0x0000d5,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_0577cd_jump:
		cmp    $0x0000d3,%ax
		je     _057f58_jump

	_0577d7_jump:
		mov    %esi,%eax
		call   _0574f4_func

	_0577de_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_09257d_data(,%eax,4)
		je     _057fc5_jump
		cmpw   $0x000060,0x000042(%esi)
		jle    _0577ff_jump
		movw   $0x000060,0x000042(%esi)

	_0577ff_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _057fe3_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05781d_jump:
		cmp    $0x0000bb,%ax
		jb     _05785c_jump
		jbe    _057f40_jump
		cmp    $0x0000c3,%ax
		jb     _05784d_jump
		jbe    _057f64_jump
		cmp    $0x0000c6,%ax
		jb     _0577d7_jump
		jbe    _057f10_jump
		cmp    $0x0000c8,%ax
		je     _057f1c_jump
		jmp    _0577d7_jump

	_05784d_jump:
		cmp    $0x0000be,%ax
		je     _057f4c_jump
		jmp    _0577d7_jump

	_05785c_jump:
		cmp    $0x0000b4,%ax
		jb     _057877_jump
		jbe    _057f28_jump
		cmp    $0x0000b6,%ax
		je     _057ec9_jump
		jmp    _0577d7_jump

	_057877_jump:
		cmp    $0x0000b1,%ax
		je     _057dc1_jump
		jmp    _0577d7_jump

	_057886_jump:
		cmp    $0x000084,%ax
		jb     _0578f7_jump
		jbe    _0577de_case
		cmp    $0x000093,%ax
		jb     _0578d8_jump
		jbe    _0577de_case
		cmp    $0x000097,%ax
		jb     _0578c9_jump
		jbe    _0577de_case
		cmp    $0x0000a5,%ax
		jb     _0577d7_jump
		jbe    _057c9f_jump
		cmp    $0x0000a7,%ax
		je     _057dc1_jump
		jmp    _0577d7_jump

	_0578c9_jump:
		cmp    $0x000096,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_0578d8_jump:
		cmp    $0x000086,%ax
		jb     _057eb8_jump
		jbe    _057dc1_jump
		cmp    $0x00008b,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_0578f7_jump:
		cmp    $0x000070,%ax
		jb     _057937_jump
		jbe    _057c2b_jump
		cmp    $0x00007a,%ax
		jb     _057928_jump
		jbe    _057cf9_jump
		cmp    $0x00007b,%ax
		jbe    _057ba3_jump
		cmp    $0x000082,%ax
		je     _057dc1_jump
		jmp    _0577d7_jump

	_057928_jump:
		cmp    $0x000077,%ax
		je     _057c83_jump
		jmp    _0577d7_jump

	_057937_jump:
		cmp    $0x000067,%ax
		jb     _057956_jump
		cmp    $0x000068,%ax
		jbe    _0577de_case
		cmp    $0x00006e,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_057956_jump:
		cmp    $0x000066,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_057965_jump:
		cmp    $0x000034,%ax
		jb     _057a62_jump
		jbe    _057d89_jump
		cmp    $0x000048,%ax
		jb     _0579f8_jump
		jbe    _057e92_jump
		cmp    $0x00004e,%ax
		jb     _0579d9_jump
		jbe    _057d05_jump
		cmp    $0x00005a,%ax
		jb     _0579c0_jump
		cmp    $0x00005d,%ax
		jbe    _057ec9_jump
		cmp    $0x000061,%ax
		jb     _0577d7_jump
		jbe    _057ed5_jump
		cmp    $0x000062,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_0579c0_jump:
		cmp    $0x000057,%ax
		jb     _0577d7_jump
		cmp    $0x000058,%ax
		jbe    _0577de_case
		jmp    _0577d7_jump

	_0579d9_jump:
		cmp    $0x00004a,%ax
		jb     _0577de_case
		jbe    _057f34_jump
		cmp    $0x00004d,%ax
		je     _057e58_jump
		jmp    _0577d7_jump

	_0579f8_jump:
		cmp    $0x00003e,%ax
		jb     _057a38_jump
		jbe    _057c46_jump
		cmp    $0x000044,%ax
		jb     _057a29_jump
		jbe    _0577de_case
		cmp    $0x000045,%ax
		jbe    _057cab_jump
		cmp    $0x000046,%ax
		je     _057b33_jump
		jmp    _0577d7_jump

	_057a29_jump:
		cmp    $0x000041,%ax
		je     _057eed_jump
		jmp    _0577d7_jump

	_057a38_jump:
		cmp    $0x00003a,%ax
		jb     _057a53_jump
		jbe    _057e33_jump
		cmp    $0x00003c,%ax
		jb     _0577d7_jump
		jmp    _057ee1_jump

	_057a53_jump:
		cmp    $0x000035,%ax
		je     _057d19_jump
		jmp    _0577d7_jump

	_057a62_jump:
		cmp    $0x00001b,%ax
		jb     _057ad4_jump
		jbe    _0577de_case
		cmp    $0x000028,%ax
		jb     _057aaa_jump
		jbe    _057cf9_jump
		cmp    $0x00002f,%ax
		jb     _057a9b_jump
		jbe    _057cab_jump
		cmp    $0x000032,%ax
		jb     _0577d7_jump
		jbe    _0577de_case
		jmp    _057d51_jump

	_057a9b_jump:
		cmp    $0x00002e,%ax
		je     _057ef9_jump
		jmp    _0577d7_jump

	_057aaa_jump:
		cmp    $0x000024,%ax
		jb     _057ac5_jump
		jbe    _057cce_jump
		cmp    $0x000026,%ax
		je     _057dc1_jump
		jmp    _0577d7_jump

	_057ac5_jump:
		cmp    $0x000020,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_057ad4_jump:
		cmp    $0x000008,%ax
		jb     _057b0a_jump
		jbe    _057dc1_jump
		cmp    $0x00000d,%ax
		jb     _057afb_jump
		jbe    _0577de_case
		cmp    $0x00000f,%ax
		je     _0577de_case
		jmp    _0577d7_jump

	_057afb_jump:
		cmp    $0x000009,%ax
		je     _057c9f_jump
		jmp    _0577d7_jump

	_057b0a_jump:
		cmp    $0x000003,%ax
		jb     _057b25_jump
		jbe    _057e4c_jump
		cmp    $0x000006,%ax
		je     _057dc1_jump
		jmp    _0577d7_jump

	_057b25_jump:
		test   %ax,%ax
		je     _057c9f_jump
		jmp    _0577d7_jump

	_057b33_jump:
		mov    %esi,%eax
		call   _07e69c_func
		jmp    _0577de_case

	_057b3f_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01dfb8_func
		mov    %esi,%eax
		mov    $0x000003,%edx
		call   _025b30_func
		mov    %esi,%eax
		call   _061220_func
		cmpb   $0x000002,_0ce6bd_data
		je     _057b95_jump
		mov    %esi,%eax
		call   _055d78_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    $0x000001,%ah
		mov    $0xfffffff8,%ebx
		mov    %ah,_0cfa7d_data
		call   _06cd40_func
		mov    %bx,_0ce692_data

	_057b95_jump:
		movw   $0x000001,_0cf852_data
		jmp    _0577de_case

	_057ba3_jump:
		mov    0x000075(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _0577de_case
		and    $0x0000ff,%eax
		jmp    *%cs:_057514_switch(,%eax,4)

	_057bbd_case:
		mov    %esi,%eax
		movb   $0x000002,0x00007d(%esi)
		call   _01dfb8_func

	_057bc8_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _057beb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _057bf5_jump

	_057beb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_057bf5_jump:
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _025b30_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0577de_case

	_057c0e_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    %esi,%eax
		call   _025b30_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0577de_case

	_057c2b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jle    _0577de_case
		mov    %esi,%eax
		call   _025b30_func
		negw   0x000042(%esi)
		jmp    _0577de_case

	_057c46_jump:
		mov    %esi,%eax
		call   _05720c_func
		jmp    _0577de_case

	_057c52_jump:
		mov    %esi,%eax
		call   _0572c4_func
		jmp    _0577de_case

	_057c5e_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _0577de_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _061220_func
		movb   $0x000000,0x00007d(%esi)
		jmp    _0577de_case

	_057c83_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    %esi,%eax
		call   _07b370_func
		jmp    _0577de_case

	_057c9f_jump:
		mov    %esi,%eax
		call   _057230_func
		jmp    _0577de_case

	_057cab_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _057cc2_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_057cc2_jump:
		mov    %esi,%eax
		call   _056bec_func
		jmp    _0577de_case

	_057cce_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _057ce5_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_057ce5_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _056cd8_func
		jmp    _0577de_case

	_057cf9_jump:
		mov    %esi,%eax
		call   _057344_func
		jmp    _0577de_case

	_057d05_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _056f00_func
		jmp    _0577de_case

	_057d19_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _0577de_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _07228c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _056f00_func
		decw   0x000050(%esi)
		jmp    _0577de_case

	_057d51_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _0577de_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _07228c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _056f00_func
		decw   0x000050(%esi)
		jmp    _0577de_case

	_057d89_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _0577de_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _07228c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _056cd8_func
		decw   0x000050(%esi)
		jmp    _0577de_case

	_057dc1_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000082,%dx
		jb     _057de9_jump
		jbe    _057e15_jump
		cmp    $0x0000a7,%dx
		jb     _057de0_jump
		jbe    _057e01_jump
		cmp    $0x0000b1,%dx
		je     _057e0b_jump
		jmp    _057e22_jump

	_057de0_jump:
		cmp    $0x000086,%dx
		je     _057e01_jump
		jmp    _057e22_jump

	_057de9_jump:
		cmp    $0x000008,%dx
		jb     _057df9_jump
		jbe    _057e01_jump
		cmp    $0x000026,%dx
		je     _057e15_jump
		jmp    _057e22_jump

	_057df9_jump:
		cmp    $0x000006,%dx
		je     _057e0b_jump
		jmp    _057e22_jump

	_057e01_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		jmp    _057e1a_jump

	_057e0b_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		jmp    _057e1a_jump

	_057e15_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax

	_057e1a_jump:
		sar    $0x000010,%edx
		call   _07228c_func

	_057e22_jump:
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _056f00_func
		jmp    _0577de_case

	_057e33_jump:
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0577de_case

	_057e4c_jump:
		mov    %esi,%eax
		call   _0572f8_func
		jmp    _0577de_case

	_057e58_jump:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _057e65_jump
		mov    $0x000007,%ebx
		jmp    _057e71_jump

	_057e65_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _057e7a_jump
		mov    $0x00000a,%ebx

	_057e71_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_057e7a_jump:
		mov    %esi,%eax
		call   _025b30_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _0577de_case

	_057e92_jump:
		mov    %esi,%eax
		mov    $0x000005,%ebx
		call   _025b30_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d818_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _0577de_case

	_057eb8_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _0577de_case

	_057ec9_jump:
		mov    %esi,%eax
		call   _076124_func
		jmp    _0577de_case

	_057ed5_jump:
		mov    %esi,%eax
		call   _020674_func
		jmp    _0577de_case

	_057ee1_jump:
		mov    %esi,%eax
		call   _02b0fc_func
		jmp    _0577de_case

	_057eed_jump:
		mov    %esi,%eax
		call   _0574b8_func
		jmp    _0577de_case

	_057ef9_jump:
		cmpw   $0x00000a,0x000056(%esi)
		jge    _0577de_case
		mov    %esi,%eax
		call   _0214f8_func
		jmp    _0577de_case

	_057f10_jump:
		mov    %esi,%eax
		call   _022a98_func
		jmp    _0577de_case

	_057f1c_jump:
		mov    %esi,%eax
		call   _022d9c_func
		jmp    _0577de_case

	_057f28_jump:
		mov    %esi,%eax
		call   _0776a0_func
		jmp    _0577de_case

	_057f34_jump:
		mov    %esi,%eax
		call   _077134_func
		jmp    _0577de_case

	_057f40_jump:
		mov    %esi,%eax
		call   _0663b0_func
		jmp    _0577de_case

	_057f4c_jump:
		mov    %esi,%eax
		call   _0662a0_func
		jmp    _0577de_case

	_057f58_jump:
		mov    %esi,%eax
		call   _0205c4_func
		jmp    _0577de_case

	_057f64_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0577de_case
		cmpw   $0x000000,0x000042(%esi)
		jle    _0577de_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000028(%esi),%ebx
		mov    _0ce678_data,%edx
		lea    0x000081(%esi),%eax
		cmp    %ebx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _0577de_case

	_057fc5_jump:
		cmpw   $0x000006,0x000042(%esi)
		jle    _057fd2_jump
		movw   $0x000006,0x000042(%esi)

	_057fd2_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _057fe3_jump
		movw   $0x00fff8,0x000042(%esi)

	_057fe3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057fec_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x00000a,0x000062(%eax)
		jne    _05807f_jump
		cmpw   $0x000017,0x000060(%edx)
		jne    _05800a_jump
		cmpb   $0x000006,_0ce6bd_data
		je     _058011_jump

	_05800a_jump:
		mov    $0x000001,%eax
		jmp    _058013_jump

	_058011_jump:
		xor    %eax,%eax

	_058013_jump:
		test   %eax,%eax
		je     _05807f_jump
		mov    0x000060(%edx),%cx
		cmp    $0x000034,%cx
		jne    _05802b_jump
		andb   $0x0000fb,0x000081(%edx)
		pop    %edx
		pop    %ecx
		ret    

	_05802b_jump:
		xor    %eax,%eax
		mov    %cx,%ax
		testb  $0x000002,_09257e_data(,%eax,4)
		je     _05807f_jump
		testb  $0x000040,0x000081(%edx)
		jne    _058058_jump
		mov    %edx,%eax
		call   _07ad20_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_058058_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000002,_09257f_data(,%eax,4)
		je     _05807f_jump
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_05807f_jump:
		pop    %edx
		pop    %ecx
		ret    



_058084_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpw   $0x000000,0x000040(%eax)
		jne    _0580a1_jump
		cmpw   $0x000000,0x000042(%eax)
		je     _058257_jump

	_0580a1_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		mov    0x000040(%esi),%dx
		mov    _09257e_data(,%ebx,4),%cl
		mov    0x000042(%esi),%ax
		test   $0x000080,%cl
		je     _0580e6_jump
		cmpb   $0x000001,0x00007d(%esi)
		jne    _0580e6_jump
		cmpb   $0x000000,_0cfa09_data
		jne    _0580e6_jump
		test   %dx,%dx
		jle    _0580d4_jump
		mov    %edx,%ebx
		dec    %ebx
		jmp    _0580d7_jump

	_0580d4_jump:
		mov    %edx,%ebx
		inc    %ebx

	_0580d7_jump:
		mov    %bx,0x000040(%esi)
		cmpw   $0x000000,0x000040(%esi)
		jne    _0580e6_jump
		movb   $0x000000,0x00007d(%esi)

	_0580e6_jump:
		cmpw   $0x00005e,0x000060(%esi)
		jne    _05811b_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0ce770_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0ce770_data
		mov    %ebp,0x000028(%esi)
		jmp    _05821c_jump

	_05811b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		testb  $0x000020,_09257d_data(,%ebx,4)
		je     _058136_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _055e60_func

	_058136_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_09257d_data(,%eax,4)
		je     _058159_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		mov    %eax,%edi
		jmp    _05815b_jump

	_058159_jump:
		mov    %edx,%edi

	_05815b_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000040,_09257e_data(,%eax,4)
		je     _058202_jump
		mov    0x000028(%esi),%cx
		mov    0x00002c(%esi),%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		add    %ecx,%eax
		sub    $0x000008,%edx
		mov    %eax,%ecx
		movswl %dx,%ebx
		cwtl   
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		add    %edi,%ecx
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		jne    _0581cb_jump
		movswl %cx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		jne    _0581f6_jump

	_0581cb_jump:
		mov    _0cf88e_data,%ebx
		sar    $0x000010,%ebx
		add    $0x000130,%ebx
		movswl %cx,%eax
		mov    %ebx,%ecx
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _0581f0_jump
		cmp    %ecx,%eax
		jg     _0581f0_jump
		mov    $0x000001,%eax
		jmp    _0581f2_jump

	_0581f0_jump:
		xor    %eax,%eax

	_0581f2_jump:
		test   %eax,%eax
		jne    _058202_jump

	_0581f6_jump:
		mov    0x000040(%esi),%cx
		neg    %ecx
		neg    %edi
		mov    %cx,0x000040(%esi)

	_058202_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_05821c_jump:
		lea    0x000082(%esi),%ebx
		test   %di,%di
		jne    _05822e_jump
		cmpw   $0x000000,(%esp)
		je     _058235_jump

	_05822e_jump:
		mov    $0x000001,%eax
		jmp    _058237_jump

	_058235_jump:
		xor    %eax,%eax

	_058237_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _057fec_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058257_jump:
		mov    0x000082(%eax),%ah
		and    $0x0000fe,%ah
		mov    %ah,0x000082(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058270_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01dff4_func
		test   %ax,%ax
		je     _058298_jump
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_093608_data(%ebx)

	_058298_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_0582a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000002,_09257c_data(,%eax,4)
		je     _0582bd_jump
		mov    %edx,%eax
		call   _07ae1c_func

	_0582bd_jump:
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000020,_09257c_data(,%eax,4)
		je     _0582d6_jump
		mov    %edx,%eax
		call   _02df88_func

	_0582d6_jump:
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000001,_09257e_data(,%eax,4)
		je     _0582ef_jump
		mov    %edx,%eax
		call   _01e790_func

	_0582ef_jump:
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000080,_09257d_data(,%eax,4)
		je     _05830a_jump
		mov    %edx,%eax
		call   _0611ac_func
		jmp    _05830e_jump

	_05830a_jump:
		movb   $0x00001e,0x000070(%edx)

	_05830e_jump:
		xor    %ebx,%ebx
		mov    _0e4da4_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0935fc_data(%ebx)
		cmpb   $0x000002,0x00006d(%edx)
		jne    _058338_jump
		mov    %edx,%eax
		call   _057530_func

	_058338_jump:
		testb  $0x000020,0x000081(%edx)
		je     _05834a_jump
		mov    %edx,%eax
		call   _02d4d0_func
		jmp    _058350_jump

	_05834a_jump:
		movw   $0x002710,0x000054(%edx)

	_058350_jump:
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000040,_09257d_data(,%eax,4)
		je     _058369_jump
		mov    %edx,%eax
		call   _063800_func

	_058369_jump:
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000020,_09257c_data(,%eax,4)
		je     _058382_jump
		mov    %edx,%eax
		call   _058270_func

	_058382_jump:
		pop    %edx
		pop    %ebx
		ret    



_058388_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0cf89c_data,%eax
		mov    %dx,_0cf024_data
		sar    $0x000010,%eax
		mov    %bx,_0cef5c_data
		mov    %eax,0x000004(%esp)
		mov    _0cf8a4_data,%ebx
		mov    0x000004(%esp),%edx
		sar    $0x000010,%ebx
		add    $0x000528,%eax
		mov    %ebx,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		sar    %eax
		add    $0x0004b0,%ebx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		sub    %ecx,%ebx
		sub    $0x0001f4,%eax
		sar    %ebx
		mov    %eax,0x000004(%esp)
		lea    -0x0001f4(%ecx,%ebx,1),%eax
		mov    %eax,(%esp)
		mov    _0ccdf8_data,%eax
		movswl (%eax),%ecx
		mov    %ecx,%eax
		xor    %edi,%edi
		shl    $0x000005,%eax
		mov    %ebx,0x000010(%esp)
		add    %ecx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _05843b_jump

	_058417_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0ccdf8_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_05843b_jump:
		mov    _0ccdfa_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _058417_jump
		mov    $_0cef5c_data,%esi
		mov    _0cf022_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0ccdf8_data,%eax
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		mov    %esi,0x000008(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jl     _05855b_jump

	_058489_jump:
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _05852f_jump
		mov    0x000004(%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _0584a6_jump
		neg    %eax

	_0584a6_jump:
		cmp    %ebp,%eax
		jge    _0584ec_jump
		mov    (%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000010(%esp),%ebp
		test   %eax,%eax
		jge    _0584bc_jump
		neg    %eax

	_0584bc_jump:
		cmp    %ebp,%eax
		jge    _0584ec_jump
		mov    _0cf8a6_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0cf89e_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _056338_func
		jmp    _05852f_jump

	_0584ec_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000010,_09257c_data(,%eax,4)
		je     _058528_jump
		mov    _0cf8a6_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0cf89e_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _056338_func
		jmp    _05852f_jump

	_058528_jump:
		movl   $0x000000,0x000024(%ebx)

	_05852f_jump:
		mov    _0ccdf8_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0ccdf0_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _058489_jump

	_05855b_jump:
		mov    _0ccdfa_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0ccdf8_data,%eax
		lea    0x000000(,%ebp,2),%ecx
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		test   %ebp,%ebp
		jl     _058618_jump
		mov    %ecx,%ebx

	_058591_jump:
		cmpl   $0x000000,0x000024(%eax)
		je     _0585d9_jump
		mov    _0cf89e_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0cf8a6_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _0585f4_jump
		mov    $_0c1220_data,%eax
		call   _01f988_func
		jmp    _0585f4_jump

	_0585d9_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		testb  $0x000001,_09257c_data(,%ecx,4)
		je     _0585f4_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _01f918_func

	_0585f4_jump:
		mov    _0ccdf8_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx
		jge    _058591_jump

	_058618_jump:
		mov    0x000008(%esp),%ebx
		movw   $0x00ffff,(%esi)
		sub    %ebx,%esi
		mov    _0cf022_data,%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		mov    %ax,_0cf024_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058644_func:
		push   %edx
		mov    _0cef52_data,%dx
		inc    %edx
		mov    %dx,_0cef52_data
		cmp    $0x000063,%dx
		jle    _058663_jump
		movw   $0x000063,_0cef52_data

	_058663_jump:
		mov    _0cef5b_data,%ah
		cmp    $0x000004,%ah
		jne    _058676_jump
		mov    %ah,_0ce6c6_data
		pop    %edx
		ret    

	_058676_jump:
		movb   $0x000002,_0ce6c6_data
		pop    %edx
		ret    



_058680_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0586f1_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00007f(%edx),%ah
		test   %ah,%ah
		jbe    _0586b4_jump
		mov    %ah,%bl
		movb   $0x000000,0x00006b(%edx)
		dec    %bl
		mov    %bl,0x00007f(%edx)

	_0586b4_jump:
		mov    %edx,%eax
		call   _0567ac_func
		mov    %edx,%eax
		call   _01d074_func
		test   %al,%al
		je     _0586f1_jump
		mov    $0xffffffff,%ebx
		mov    _0cf868_data,%cx
		mov    %bx,_0cf82c_data
		cmp    $0x000003,%cx
		je     _0586ea_jump
		cmp    $0x000004,%cx
		je     _0586ea_jump
		call   _058644_func

	_0586ea_jump:
		andb   $0x0000fb,0x000081(%edx)

	_0586f1_jump:
		mov    _0cf844_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05874f_jump
		mov    %edx,%eax
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x00007f(%edx),%cl
		test   %cl,%cl
		jbe    _058723_jump
		mov    %cl,%ch
		movb   $0x000000,0x00006b(%edx)
		dec    %ch
		mov    %ch,0x00007f(%edx)

	_058723_jump:
		mov    %edx,%eax
		call   _0567ac_func
		mov    %edx,%eax
		call   _01d074_func
		test   %al,%al
		je     _05874f_jump
		mov    0x000081(%edx),%al
		mov    $0xffffffff,%edi
		and    $0x0000fb,%al
		mov    %di,_0cf846_data
		mov    %al,0x000081(%edx)

	_05874f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cef5a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0cf024_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0587c0_jump

	_058781_jump:
		mov    0x000060(%eax),%si
		cmp    $0x0000cc,%si
		je     _058798_jump
		cmp    $0x0000cd,%si
		je     _058798_jump
		call   _0567ac_func

	_058798_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		mov    _0cf024_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _058781_jump

	_0587c0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0587c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0587e6_jump
		mov    _0cf844_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0587eb_jump

	_0587e6_jump:
		call   _058680_func

	_0587eb_jump:
		cmpb   $0x000000,_0cfa66_data
		je     _05880b_jump
		mov    $0x000007,%edx
		mov    _0cd8c8_data,%eax
		call   _028f14_func
		xor    %dl,%dl
		mov    %dl,_0cfa66_data

	_05880b_jump:
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cf024_data,%cx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _058901_jump

	_058838_jump:
		mov    0x000060(%edx),%ax
		mov    %ax,_0e4da4_data
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000008,_09257f_data(,%eax,4)
		jne    _058880_jump
		cmp    $0x0000a1,%ax
		jne    _058860_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _058880_jump

	_058860_jump:
		cmpw   $0x000053,_0e4da4_data
		jne    _058870_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _058880_jump

	_058870_jump:
		cmpw   $0x000021,_0e4da4_data
		jne    _058887_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _058887_jump

	_058880_jump:
		mov    %edx,%eax
		call   _01eb18_func

	_058887_jump:
		cmpw   $0x0000a1,_0e4da4_data
		je     _0588d5_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _0588d5_jump
		mov    %edx,%eax
		call   _0582a0_func
		xor    %eax,%eax
		mov    _0e4da4_data,%ax
		testb  $0x000080,_09257c_data(,%eax,4)
		jne    _0588d5_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _0588d5_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _0588d5_jump
		incb   0x000076(%edx)

	_0588d5_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		mov    _0cf024_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _058838_jump

	_058901_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058908_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cef5a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _0cf024_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _058960_jump

	_058933_jump:
		inc    %edx
		call   _058084_func
		movswl %dx,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		mov    _0cf024_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _058933_jump

	_058960_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058964_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0cef5a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0cf024_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0589c1_jump

	_058995_jump:
		inc    %edx
		call   _01e030_func
		movswl %dx,%eax
		mov    _0cef5a_data(,%eax,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0ccdf0_data,%eax
		mov    _0cf024_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _058995_jump

	_0589c1_jump:
		mov    _0ce698_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _058a90_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _058a90_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0ce6b9_data,%dl
		sub    %edx,%eax
		mov    0x000060(%esi),%di
		mov    %eax,_0ce67c_data
		cmp    $0x0000fe,%di
		jne    _058a86_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _058a6e_jump
		sar    %cl,%ax
		jmp    _058a77_jump

	_058a6e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_058a77_jump:
		mov    _0ce67c_data,%esi
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ce67c_data

	_058a86_jump:
		mov    $_0ce650_data,%eax
		call   _01e030_func

	_058a90_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_058a9c_switch:
		.long   _058c58_case
		.long   _058d22_case
		.long   _058af5_case
		.long   _058ba5_case




_058aac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce6d1_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _058aca_jump
		mov    _0ce678_data,%si
		add    $0x000046,%esi
		jmp    _058ad4_jump

	_058aca_jump:
		mov    _0ce678_data,%si
		add    $0x00003a,%esi

	_058ad4_jump:
		mov    _0ce67c_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _058de0_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_058a9c_switch(,%eax,4)

	_058af5_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _058de0_jump
		mov    _0ce636_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_09253c_data(%edx)
		je     _058b4c_jump
		mov    $0x000001,%ebx

	_058b4c_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_09253c_data(%edx)
		je     _058b74_jump
		mov    $0x000001,%ebx

	_058b74_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _058de0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058ba5_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _058de0_jump
		add    $0x000040,%ecx
		mov    _0ce636_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_09253c_data(%edx)
		je     _058bff_jump
		mov    $0x000001,%ebx

	_058bff_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_09253c_data(%edx)
		je     _058c27_jump
		mov    $0x000001,%ebx

	_058c27_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _058de0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058c58_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _058de0_jump
		movswl %di,%eax
		mov    _0ce636_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_09253c_data(%edx)
		je     _058cb3_jump
		mov    $0x000001,%ebx

	_058cb3_jump:
		mov    _0ce636_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0ce640_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_09253c_data(%edx)
		je     _058ce5_jump
		mov    $0x000001,%ebx

	_058ce5_jump:
		mov    _0ce636_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _058de0_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058d22_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _058de0_jump
		movswl %di,%eax
		mov    _0ce636_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ce640_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _058d7e_jump
		mov    $0x000001,%ebx

	_058d7e_jump:
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0ce640_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _058db0_jump
		mov    $0x000001,%ebx

	_058db0_jump:
		mov    _0ce636_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _058de0_jump
		mov    $0x000001,%ebx

	_058de0_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058de8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cf868_data
		jne    _058e0e_jump
		mov    $0x000002,%eax
		call   _058aac_func
		test   %ax,%ax
		je     _058e0e_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce692_data

	_058e0e_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce65c_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _058e3c_jump
		testb  $0x000002,_0cf81b_data
		je     _058e43_jump

	_058e3c_jump:
		mov    $0x000028,%eax
		jmp    _058e48_jump

	_058e43_jump:
		mov    $0x000019,%eax

	_058e48_jump:
		mov    _0ce690_data,%edx
		mov    _0ce67c_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    _0cf852_data,%edx
		mov    %ebx,_0ce67c_data
		sar    $0x000010,%edx
		movswl %ax,%ebx
		lea    -0x000014(%edx),%eax
		mov    _0ce67c_data,%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jle    _058eaf_jump
		mov    %eax,_0ce67c_data
		mov    _0ce698_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0ce692_data
		cmp    $0xffffffff,%eax
		je     _058eaf_jump
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $0x0000ff,%eax
		call   _02dbdc_func

	_058eaf_jump:
		mov    $_0ce650_data,%eax
		xor    %esi,%esi
		call   _01e030_func
		mov    %si,_0cf8b4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058ec8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpw   $0x000002,_0cf868_data
		jne    _058eee_jump
		mov    $0x000003,%eax
		call   _058aac_func
		test   %ax,%ax
		je     _058eee_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce692_data

	_058eee_jump:
		mov    _0ce690_data,%eax
		mov    _0ce67c_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0ce650_data,%eax
		mov    %edx,_0ce67c_data
		call   _01e030_func
		cmpb   $0x000002,_0ce6bd_data
		jne    _058f6a_jump
		mov    _0cf85c_data,%eax
		mov    _0cf8a4_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _058f61_jump
		cmpw   $0x000064,_0ce688_data
		jge    _058f50_jump
		xor    %edi,%edi
		mov    %di,_0cf8b4_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058f50_jump:
		mov    _0ce692_data,%ax
		mov    %ax,_0cf8b4_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058f61_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf8b4_data

	_058f6a_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058f70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000003,_0ce6bd_data
		jne    _058f8b_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _059412_jump

	_058f8b_jump:
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05919c_jump
		mov    _0cf874_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0ce6b9_data,%al
		sar    %edx
		sub    %eax,%edx
		mov    _0ce6bd_data,%bl
		add    $0x000072,%edx
		cmp    $0x000002,%bl
		setne  %al
		and    $0x0000ff,%eax
		jne    _058fe0_jump
		cmpb   $0x00000f,_0ce6bc_data
		jne    _059118_jump
		cmpb   $0x000000,_0cfa75_data
		je     _059118_jump

	_058fe0_jump:
		cmpw   $0x000000,_0cf852_data
		jne    _059118_jump
		cmpw   $0x0000ff,_0cf8b4_data
		jne    _059007_jump
		cmpw   $0x000000,_0cf866_data
		je     _0590dc_jump

	_059007_jump:
		mov    _0ce688_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _05901d_jump
		sar    %cl,%ax
		jmp    _059026_jump

	_05901d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_059026_jump:
		mov    %ax,_0cf8b4_data
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05903a_jump
		neg    %eax

	_05903a_jump:
		mov    %eax,%ebx
		mov    _0cf8b2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05904a_jump
		neg    %eax

	_05904a_jump:
		cmp    %eax,%ebx
		jg     _05919c_jump
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _059060_jump
		neg    %eax

	_059060_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _05906d_jump
		mov    %ebx,%eax

	_05906d_jump:
		mov    _0cf8b4_data,%bx
		test   %bx,%bx
		jle    _059095_jump
		movswl %ax,%ebx
		mov    _0cf8b2_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05908a_jump
		mov    %ebx,%eax

	_05908a_jump:
		mov    %ax,_0cf8b4_data
		jmp    _05919c_jump

	_059095_jump:
		jge    _0590b5_jump
		movswl %ax,%ebx
		mov    _0cf8b2_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _0590aa_jump
		mov    %ebx,%eax

	_0590aa_jump:
		mov    %ax,_0cf8b4_data
		jmp    _05919c_jump

	_0590b5_jump:
		test   %dx,%dx
		jle    _0590c8_jump
		movw   $0x000001,_0cf8b4_data
		jmp    _05919c_jump

	_0590c8_jump:
		jge    _05919c_jump
		movw   $0x00ffff,_0cf8b4_data
		jmp    _05919c_jump

	_0590dc_jump:
		cmpb   $0x000001,_0ce6bd_data
		je     _05919c_jump
		mov    _0ce686_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _05910a_jump
		movw   $0x00fffc,_0cf8b4_data
		jmp    _05919c_jump

	_05910a_jump:
		xor    %edi,%edi
		mov    %di,_0cf8b4_data
		jmp    _05919c_jump

	_059118_jump:
		mov    _0cf8a6_data,%ax
		cmp    _0cf85e_data,%ax
		je     _05914b_jump
		mov    _0ce686_data,%ebx
		mov    _0ce690_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _05914b_jump
		cmpw   $0x000000,_0ce692_data
		jg     _05917d_jump

	_05914b_jump:
		mov    _0cf8a6_data,%ax
		cmp    _0cf854_data,%ax
		je     _05919c_jump
		xor    %eax,%eax
		mov    _0ce6c4_data,%al
		mov    _0ce686_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _05919c_jump
		cmpw   $0x000000,_0ce692_data
		jge    _05919c_jump

	_05917d_jump:
		mov    _0ce692_data,%dx
		cmp    $0x000010,%dx
		jg     _059193_jump
		mov    %dx,_0cf8b4_data
		jmp    _05919c_jump

	_059193_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cf8b4_data

	_05919c_jump:
		mov    _0cf8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0593a3_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0ce6b8_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %edx,%ebx
		mov    _0cf8a8_data,%dx
		sub    $0x000030,%ebx
		add    $0x000030,%eax
		sub    %edx,%ebx
		mov    _0cf8ae_data,%dx
		mov    _0cf866_data,%cx
		add    %eax,%edx
		test   %cx,%cx
		jg     _0591f1_jump
		mov    _0ce690_data,%si
		test   %si,%si
		jle    _059236_jump

	_0591f1_jump:
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _059205_jump
		sar    %cl,%ax
		jmp    _05920e_jump

	_059205_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05920e_jump:
		mov    _092520_data,%cx
		cmp    %cx,%ax
		jge    _059228_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_092520_data
		jmp    _05930a_jump

	_059228_jump:
		jle    _05930a_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _059303_jump

	_059236_jump:
		test   %cx,%cx
		jl     _059240_jump
		test   %si,%si
		jge    _059282_jump

	_059240_jump:
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _059254_jump
		sar    %cl,%ax
		jmp    _05925d_jump

	_059254_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05925d_jump:
		mov    _092520_data,%cx
		cmp    %cx,%ax
		jle    _059277_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_092520_data
		jmp    _05930a_jump

	_059277_jump:
		jge    _05930a_jump
		jmp    _059300_jump

	_059282_jump:
		mov    _0ce6d1_data,%al
		test   $0x000008,%al
		je     _0592c6_jump
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _05929f_jump
		sar    %cl,%ax
		jmp    _0592a8_jump

	_05929f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0592a8_jump:
		mov    _092520_data,%cx
		cmp    %cx,%ax
		jge    _0592bf_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_092520_data
		jmp    _05930a_jump

	_0592bf_jump:
		jle    _05930a_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _059303_jump

	_0592c6_jump:
		test   $0x000008,%al
		jne    _05930a_jump
		mov    _0ce686_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _0592de_jump
		sar    %cl,%ax
		jmp    _0592e7_jump

	_0592de_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0592e7_jump:
		mov    _092520_data,%cx
		cmp    %cx,%ax
		jle    _0592fe_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_092520_data
		jmp    _05930a_jump

	_0592fe_jump:
		jge    _05930a_jump

	_059300_jump:
		mov    %ecx,%edi
		dec    %edi

	_059303_jump:
		mov    %di,_092520_data

	_05930a_jump:
		cmpb   $0x000000,_0cfa53_data
		je     _059342_jump
		mov    _09251e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _059321_jump
		neg    %eax

	_059321_jump:
		cmp    $0x000004,%eax
		jle    _059342_jump
		cmpw   $0x000000,_092520_data
		jle    _059337_jump
		mov    $0x000004,%eax
		jmp    _05933c_jump

	_059337_jump:
		mov    $0xfffffffc,%eax

	_05933c_jump:
		mov    %ax,_092520_data

	_059342_jump:
		mov    $0x000002,%cl
		mov    _092520_data,%ax
		test   %ax,%ax
		js     _059354_jump
		sar    %cl,%ax
		jmp    _05935d_jump

	_059354_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05935d_jump:
		mov    _0cf8b2_data,%si
		add    %eax,%esi
		mov    _0ce686_data,%di
		mov    %si,_0cf8b2_data
		cmp    %di,%dx
		jle    _059383_jump
		cmpw   $0x000000,_0ce690_data
		jl     _059396_jump

	_059383_jump:
		cmp    _0ce686_data,%bx
		jge    _0593a3_jump
		cmpw   $0x000000,_0ce690_data
		jle    _0593a3_jump

	_059396_jump:
		mov    _0ce690_data,%ax
		add    %ax,_0cf8b2_data

	_0593a3_jump:
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _059412_jump
		mov    _0ce698_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _059412_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_09257d_data(,%eax,4)
		je     _0593f3_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		add    %ax,_0cf8b4_data
		jmp    _059407_jump

	_0593f3_jump:
		mov    _0cf8b4_data,%si
		mov    0x000042(%edx),%ax
		add    %eax,%esi
		mov    %si,_0cf8b4_data

	_059407_jump:
		mov    0x00004c(%edx),%ax
		add    %ax,_0cf8b4_data

	_059412_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059418_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cf868_data
		jne    _059444_jump
		mov    $0x000001,%eax
		call   _058aac_func
		test   %ax,%ax
		je     _059444_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce690_data
		mov    %bx,_0cf866_data

	_059444_jump:
		mov    _0ce68e_data,%eax
		mov    _0ce678_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cf75a_data,%ax
		cwtl   
		mov    %edx,_0ce678_data
		cmp    %edx,%eax
		jge    _05948c_jump
		mov    %eax,_0ce678_data
		xor    %esi,%esi
		mov    _0ce6bd_data,%ah
		mov    %si,_0ce690_data
		mov    %si,_0cf866_data
		cmp    $0x000002,%ah
		je     _05948c_jump
		mov    %si,_0ce692_data

	_05948c_jump:
		mov    $_0ce650_data,%eax
		call   _01e030_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05949c_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0cf868_data
		jne    _0594c5_jump
		xor    %eax,%eax
		call   _058aac_func
		test   %ax,%ax
		je     _0594c5_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce690_data
		mov    %bx,_0cf866_data

	_0594c5_jump:
		mov    _0ce68e_data,%eax
		mov    _0ce678_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cf8d0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0ce678_data
		cmp    $0xffffffff,%eax
		jne    _059513_jump
		mov    _0cf756_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _059513_jump
		mov    %eax,_0ce678_data
		xor    %esi,%esi
		mov    _0ce6bd_data,%ah
		mov    %si,_0cf866_data
		cmp    $0x000002,%ah
		je     _059513_jump
		mov    %si,_0ce692_data

	_059513_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_059518_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_0cef5b_data
		jne    _059538_jump
		mov    _0ce6c6_data,%al
		xor    %bh,%bh
		mov    %al,_0cef57_data
		mov    %bh,_0cef56_data
		jmp    _05955f_jump

	_059538_jump:
		mov    _0ce6c6_data,%dl
		cmp    $0x000002,%dl
		ja     _05954d_jump
		xor    %bl,%bl
		mov    %dl,_0cef57_data
		jmp    _059559_jump

	_05954d_jump:
		mov    $0x000002,%dh
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %dh,_0cef57_data

	_059559_jump:
		mov    %bl,_0cef56_data

	_05955f_jump:
		mov    _0cef50_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _05957d_jump
		xor    %cl,%cl
		mov    %cl,_0cef55_data
		mov    %cl,_0cef54_data
		jmp    _05959f_jump

	_05957d_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0cef55_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0cef54_data

	_05959f_jump:
		cmpb   $0x000063,_0cef58_data
		jbe    _0595af_jump
		mov    $0x000063,%eax
		jmp    _0595b6_jump

	_0595af_jump:
		xor    %eax,%eax
		mov    _0cef58_data,%al

	_0595b6_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %al,%bl
		mov    %al,_0cef58_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0cef59_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0cef5a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0595e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cee58_data,%esi
		mov    _0cf806_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05964e_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000020(%ecx)
		je     _05964e_jump
		mov    0x000032(%ecx),%eax
		mov    %esi,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _05964e_jump

	_05962a_jump:
		cwtl   
		imul   $0x000084,%eax,%ebx
		mov    _0ccdf0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%ebx,1)
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05962a_jump

	_05964e_jump:
		mov    %esi,_0cee58_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05965c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0cee58_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _0596ad_jump

	_059682_jump:
		cwtl   
		imul   $0x000084,%eax,%edx
		mov    _0ccdf0_data,%ebx
		cmpw   $0x0000a4,0x000060(%edx,%ebx,1)
		jne    _05969e_jump
		movb   $0x000001,(%esp)
		jmp    _0596ad_jump

	_05969e_jump:
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _059682_jump

	_0596ad_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0cee58_data
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0596c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%ax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _0597f1_jump

	_0596e7_jump:
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _0597de_jump
		mov    _0cee58_data,%ecx
		movswl %di,%eax
		mov    (%ecx,%eax,2),%ax
		mov    %edi,%edx
		cmp    %di,%ax
		je     _059746_jump

	_059707_jump:
		cmp    %di,%ax
		je     _059746_jump
		testb  $0x000004,0x000081(%ebx)
		je     _059734_jump
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _059734_jump
		movswl %ax,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0ccdf0_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)

	_059734_jump:
		mov    _0cee58_data,%ecx
		mov    %eax,%edx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %dx,%ax
		jne    _059707_jump

	_059746_jump:
		cmp    %di,%ax
		jne    _05979c_jump
		movswl %di,%ecx
		mov    _0cee58_data,%eax
		add    %ecx,%ecx
		lea    (%eax,%ecx,1),%esi
		movswl %dx,%ecx
		lea    (%ecx,%ecx,1),%ebp
		add    %ebp,%eax
		mov    (%esi),%si
		mov    %si,(%eax)
		cmp    %si,%dx
		jne    _05977e_jump
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%eax
		movl   $0x000000,0x000020(%ecx,%eax,1)

	_05977e_jump:
		movswl %di,%eax
		mov    _0cee58_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%ebx)
		mov    %di,(%eax)
		movl   $0x000000,0x000020(%ebx)

	_05979c_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _0597de_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _0597de_jump
		mov    0x000052(%ebx),%si

	_0597b0_jump:
		movswl %si,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0cee58_data,%eax
		mov    (%edx,%eax,1),%dx
		movswl %dx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ecx
		add    %ecx,%eax
		call   _0597fc_func
		cmp    %si,%dx
		jne    _0597b0_jump

	_0597de_jump:
		mov    (%esp),%ecx
		inc    %edi
		add    $0x000084,%ebx
		cmp    %cx,%di
		jl     _0596e7_jump

	_0597f1_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0597fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cee58_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _05982d_jump

	_05981c_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _05981c_jump

	_05982d_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _059862_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,4)

	_059862_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0cee58_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059888_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _0598f9_jump

	_0598a0_jump:
		mov    _0cee58_data,%ecx
		movswl %bx,%eax
		cmp    (%ecx,%eax,2),%bx
		je     _0598e6_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		shl    $0x000002,%eax
		mov    _09257f_data(%eax),%cl
		test   $0x000040,%cl
		jne    _0598d4_jump
		test   $0x000020,%cl
		je     _0598dd_jump
		mov    %edx,%eax
		call   _05965c_func
		test   %ax,%ax
		jne    _0598dd_jump

	_0598d4_jump:
		mov    %edx,%eax
		call   _0597fc_func
		jmp    _0598ed_jump

	_0598dd_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _0598ed_jump

	_0598e6_jump:
		movl   $0x000000,0x000020(%edx)

	_0598ed_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _0598a0_jump

	_0598f9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059900_func:
		push   %ebx
		push   %edx
		mov    $0x000002,%bl
		mov    _0cf81a_data,%ah
		mov    _0cf81b_data,%dl
		and    $0x000048,%ah
		and    $0x000002,%dl
		mov    %bl,_0cef5b_data
		mov    %ah,_0cf81a_data
		mov    %dl,_0cf81b_data
		xor    %bh,%bh
		mov    _0ce6d1_data,%dh
		mov    %bh,_0cef58_data
		and    $0x0000fe,%dh
		mov    %bh,_0cfa5c_data
		mov    %dh,_0ce6d1_data
		pop    %edx
		pop    %ebx
		ret    



_059948_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ah,%ah
		mov    _0ce6bd_data,%dl
		mov    %ah,_0cfa62_data
		cmp    $0x000006,%dl
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0cf774_data
		mov    _0cf81b_data,%dh
		mov    %ax,_0cf868_data
		test   $0x000002,%dh
		je     _05999f_jump
		mov    $0x000021,%ecx
		mov    _0ce6c6_data,%al
		mov    $_0ce650_data,%edi
		mov    $_0cedd4_data,%esi
		mov    %al,_0cee4a_data
		rep movsl %ds:(%esi),%es:(%edi)

	_05999f_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    $0x000014,%cl
		xor    %al,%al
		xor    %ebx,%ebx
		mov    _0ce6d1_data,%ah
		mov    %bx,_0cf89e_data
		mov    %bx,_0cf8a6_data
		mov    %si,_0ce6b0_data
		mov    %bx,_0ce686_data
		mov    %bx,_0ce688_data
		mov    %bx,_0ce690_data
		mov    %bx,_0ce692_data
		mov    %edx,_0ce678_data
		mov    %cl,_0ce6c4_data
		mov    $0x00000a,%ebx
		mov    $0x000002,%dl
		or     $0x00000c,%ah
		xor    %ch,%ch
		mov    %ebx,_0ce67c_data
		mov    %ch,_0ce6ba_data
		mov    %ch,_0ce6bb_data
		mov    %ah,_0ce6d1_data
		mov    %dl,_0ce6bd_data
		mov    %dl,_0ce6bc_data
		mov    %al,_0ce6cd_data
		mov    %al,_0ce6cf_data
		mov    $0x000050,%bl
		mov    $0xffffffff,%ecx
		xor    %dl,%dl
		mov    %bl,_0ce6b8_data
		mov    %cx,_0ce69a_data
		mov    %ecx,%edi
		mov    %cx,_0ce6a2_data
		xor    %dh,%dh
		mov    $0x00004e,%bh
		mov    $0x000001,%ecx
		mov    %di,_0ce6a6_data
		mov    %dx,_0cf866_data
		mov    _0ce678_data,%dx
		mov    %bh,_0ce6b9_data
		mov    %ecx,_0ce674_data
		mov    %ah,%cl
		xor    %bl,%bl
		mov    $0xffff8300,%eax
		and    $0x0000bf,%cl
		mov    %bl,_0cfa88_data
		mov    %bl,_0cfa79_data
		mov    %bl,_0cfa8c_data
		mov    %cl,_0ce6d1_data
		mov    %ax,_0cf86a_data
		xor    %al,%al
		mov    $0x000001,%ch
		xor    %ah,%ah
		mov    %ch,_0cfa72_data
		mov    %al,_0cfa8b_data
		mov    %al,_0cfa7b_data
		mov    %al,_0cfa77_data
		mov    %al,_0cfa3c_data

	_059abf_jump:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,_0ce5b8_data(,%ebx,2)
		cmp    $0x00000a,%ax
		jl     _059abf_jump
		xor    %ch,%ch
		mov    (%esp),%ah
		mov    %ch,_0ce77e_data
		mov    %ch,_0ce780_data
		test   %ah,%ah
		je     _059aed_jump
		andb   $0x0000f7,_0cf81a_data

	_059aed_jump:
		cmpw   $0x000009,_0cf87c_data
		jne    _059b01_jump
		cmpw   $0x000001,_0cf88c_data
		je     _059b1a_jump

	_059b01_jump:
		cmpb   $0x000000,_0cfa36_data
		jne    _059b1a_jump
		cmpb   $0x000000,_0caf64_data
		jne    _059b1a_jump
		andb   $0x0000bf,_0cf81a_data

	_059b1a_jump:
		mov    _0cf81b_data,%cl
		test   $0x000080,%cl
		je     _059b4d_jump
		mov    %cl,%al
		mov    %cl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    %al,_0cf81b_data
		mov    %ah,%al
		mov    _0cf81b_data,%ch
		add    %ah,%al
		or     %al,%ch
		mov    %ch,_0cf81b_data
		call   _05b378_func

	_059b4d_jump:
		andb   $0x0000e5,_0cf81b_data
		cmpb   $0x000000,_0ceae0_data
		je     _059b92_jump
		mov    _0ce8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059b92_jump
		mov    _0cf81b_data,%bl
		and    $0x00009f,%bl
		mov    _0cf88c_data,%si
		mov    %bl,_0cf81b_data
		cmp    $0x000006,%si
		jne    _059bb1_jump
		cmpw   $0x000003,_0cf87c_data
		jne    _059bb1_jump
		jmp    _059bac_jump

	_059b92_jump:
		mov    _0cf81b_data,%dl
		and    $0x00009f,%dl
		mov    %dl,_0cf81b_data
		mov    %dl,%dh
		or     $0x000020,%dh
		mov    %dh,_0cf81b_data

	_059bac_jump:
		call   _05b0a4_func

	_059bb1_jump:
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _059cc4_jump

	_059bc9_jump:
		cmpw   $0x000063,0x000060(%edx)
		jne    _059cb4_jump
		cmpb   $0x000000,_0cfa5c_data
		jne    _059bf4_jump
		mov    _0ce6d1_data,%cl
		xor    %esi,%esi
		and    $0x0000fb,%cl
		mov    %esi,_0ce674_data
		mov    %cl,_0ce6d1_data

	_059bf4_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%al
		add    %esi,%eax
		sub    $0x0000a0,%eax
		mov    %ax,_0cf89e_data
		mov    0x00002c(%edx),%ax
		sub    $0x00000a,%eax
		mov    _095e2d_data,%ch
		mov    %ax,_0cf8a6_data
		test   %ch,%ch
		jne    _059c29_jump
		call   _05cad0_func
		jmp    _059c80_jump

	_059c29_jump:
		mov    _0cf89e_data,%ax
		mov    _0cf890_data,%di
		cmp    %di,%ax
		jl     _059c42_jump
		mov    %di,_0cf89e_data

	_059c42_jump:
		mov    _0cf8a6_data,%ax
		mov    _0cf884_data,%bx
		cmp    %bx,%ax
		jl     _059c5b_jump
		mov    %bx,_0cf8a6_data

	_059c5b_jump:
		cmpw   $0x000000,_0cf89e_data
		jge    _059c6e_jump
		xor    %esi,%esi
		mov    %si,_0cf89e_data

	_059c6e_jump:
		cmpw   $0x000000,_0cf8a6_data
		jge    _059c80_jump
		xor    %eax,%eax
		mov    %ax,_0cf8a6_data

	_059c80_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x000068(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce6b8_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce6b9_data,%al
		sub    %eax,%edx
		mov    %ebx,_0ce678_data
		mov    %edx,_0ce67c_data
		jmp    _059cc4_jump

	_059cb4_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _059bc9_jump

	_059cc4_jump:
		cmpb   $0x000000,_0cfa98_data
		je     _059cd9_jump
		mov    $_0ce650_data,%eax
		call   _01e790_func
		jmp    _059ce9_jump

	_059cd9_jump:
		xor    %eax,%eax

	_059cdb_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0ce6b1_data(%eax)
		cmp    $0x000005,%eax
		jb     _059cdb_jump

	_059ce9_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059cf4_func:
		push   %edx
		and    $0x0000ff,%eax
		mov    _09253c_data(%eax),%dl
		test   $0x000040,%dl
		je     _059d11_jump
		test   $0x000008,%dl
		je     _059d11_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_059d11_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_059d18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0ce6bd_data
		je     _059e94_jump
		mov    _0ce678_data,%si
		xor    %eax,%eax
		mov    _0ce67c_data,%dx
		mov    _0ce6b8_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0ce6b9_data,%bl
		mov    _0ce6b2_data,%al
		add    %edx,%ebx
		testb  $0x000040,_09253c_data(%eax)
		je     _059d60_jump
		sub    $0x000008,%ebx

	_059d60_jump:
		mov    _0ce690_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01e588_func
		mov    %al,0x000008(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01e588_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01e588_func
		mov    %al,0x00000c(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e588_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    _09253c_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _059dee_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _059cf4_func
		test   %ax,%ax
		jne    _059dee_jump
		mov    $0x000001,%ebx

	_059dee_jump:
		test   %bx,%bx
		jne    _059e67_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce65c_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce6bc_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _059e67_jump
		testb  $0x000002,_0cf81b_data
		jne    _059e67_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_09253c_data(%eax)
		je     _059e45_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _059cf4_func
		test   %ax,%ax
		je     _059e62_jump

	_059e45_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		testb  $0x000010,_09253c_data(%eax)
		je     _059e67_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _059cf4_func
		test   %ax,%ax
		jne    _059e67_jump

	_059e62_jump:
		mov    $0x000001,%ebx

	_059e67_jump:
		test   %bx,%bx
		je     _059e94_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0ce690_data
		mov    %bx,_0cf866_data
		mov    %bx,_0ce698_data
		call   _06caf8_func
		xor    %eax,%eax
		call   _06caf8_func

	_059e94_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059e9c_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0cf8b2_data
		mov    %dx,_0cf8b4_data
		mov    %dx,_0ce690_data
		mov    %dx,_0ce692_data
		call   _041d54_func
		test   %ax,%ax
		je     _059ee1_jump
		xor    %eax,%eax
		mov    _0ce690_data,%dx
		mov    _0cfa73_data,%al
		add    %eax,%edx
		mov    %dx,_0ce690_data
		jmp    _059f02_jump

	_059ee1_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _059f02_jump
		xor    %eax,%eax
		mov    _0ce690_data,%di
		mov    _0cfa73_data,%al
		sub    %eax,%edi
		mov    %di,_0ce690_data

	_059f02_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _059f22_jump
		xor    %edx,%edx
		mov    _0ce690_data,%eax
		mov    _0cfa73_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		jmp    _059f40_jump

	_059f22_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _059f46_jump
		xor    %edx,%edx
		mov    _0ce690_data,%eax
		mov    _0cfa73_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax

	_059f40_jump:
		mov    %ax,_0ce692_data

	_059f46_jump:
		mov    _0ce692_data,%bx
		test   %bx,%bx
		jle    _059f59_jump
		call   _058ec8_func
		jmp    _059f60_jump

	_059f59_jump:
		jge    _059f60_jump
		call   _058de8_func

	_059f60_jump:
		mov    _0ce690_data,%si
		test   %si,%si
		jge    _059f73_jump
		call   _05949c_func
		jmp    _059f7a_jump

	_059f73_jump:
		jle    _059f7a_jump
		call   _059418_func

	_059f7a_jump:
		mov    $_0ce650_data,%eax
		call   _01e030_func
		mov    _0ce690_data,%ax
		mov    %ax,_0cf8b2_data
		mov    _0ce692_data,%ax
		mov    %ax,_0cf8b4_data
		call   _02ea2c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_059fa8_switch:
		.long   _05a032_case
		.long   _05a067_case
		.long   _05a09c_case
		.long   _05a0b7_case




_059fb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0ce678_data,%ax
		mov    _0ce67c_data,%di
		mov    _0cf87a_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		mov    %dx,_0cf8d2_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jle    _05a147_jump

	_059ff2_jump:
		movswl %bx,%eax
		mov    _0ce5ce_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%esi
		add    %esi,%eax
		cmpw   $0x000040,0x000060(%eax)
		jne    _05a147_jump
		mov    0x000076(%eax),%cl
		cmp    $0x000003,%cl
		ja     _05a136_jump
		and    $0x0000ff,%ecx
		jmp    *%cs:_059fa8_switch(,%ecx,4)

	_05a032_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _05a136_jump
		mov    0x00003a(%eax),%ecx
		mov    _0cf8d2_data,%si
		sar    $0x000010,%ecx
		inc    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0cf8d2_data
		mov    %ecx,0x000028(%eax)
		jmp    _05a136_jump

	_05a067_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jl     _05a136_jump
		mov    0x00003a(%eax),%ecx
		mov    _0cf8d2_data,%si
		sar    $0x000010,%ecx
		dec    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0cf8d2_data
		mov    %ecx,0x000028(%eax)
		jmp    _05a136_jump

	_05a09c_case:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _05a0ab_jump
		neg    %edx
		jmp    _05a136_jump

	_05a0ab_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _05a136_jump

	_05a0b7_case:
		mov    _0cf880_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05a0da_jump
		imul   $0x000084,%ecx,%ecx
		add    %ecx,%esi
		cmpb   $0x000000,0x000076(%esi)
		jne    _05a136_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _05a136_jump

	_05a0da_jump:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _05a109_jump
		movswl %dx,%eax
		mov    %dx,_0cf8ba_data
		test   %eax,%eax
		jge    _05a0f2_jump
		neg    %eax

	_05a0f2_jump:
		mov    _0cf8ba_data,%dx
		cmp    $0x000001,%eax
		jne    _05a105_jump
		mov    $0x000002,%edx
		jmp    _05a110_jump

	_05a105_jump:
		neg    %edx
		jmp    _05a110_jump

	_05a109_jump:
		movl   $0x002710,0x00002c(%eax)

	_05a110_jump:
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05a136_jump
		cmp    $0x000002,%dx
		je     _05a136_jump
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ecx
		movw   $0x000002,0x000056(%ecx,%eax,1)

	_05a136_jump:
		mov    _0cf87a_data,%si
		inc    %ebx
		cmp    %si,%bx
		jl     _059ff2_jump

	_05a147_jump:
		mov    _0cf8d2_data,%si
		mov    $0x000001,%al
		test   %si,%si
		jg     _05a15f_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0cf8d2_data

	_05a15f_jump:
		test   %al,%al
		je     _05a1cd_jump
		mov    _0cf8d2_data,%ax
		test   %ax,%ax
		jg     _05a186_jump
		mov    _0cf8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jge    _05a18c_jump
		mov    _0cf8d2_data,%ax
		inc    %eax

	_05a186_jump:
		mov    %ax,_0cf8b2_data

	_05a18c_jump:
		cmp    $0x000001,%dx
		jne    _05a19d_jump
		movw   $0x00ffff,_0cf8b4_data
		jmp    _05a1cd_jump

	_05a19d_jump:
		cmp    $0x000002,%dx
		jne    _05a1c0_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _05a1b7_jump
		movw   $0x00ffff,_0cf8b4_data
		jmp    _05a1c0_jump

	_05a1b7_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cf8b4_data

	_05a1c0_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _05a1cd_jump
		mov    $0xffffffff,%edx

	_05a1cd_jump:
		mov    %dx,_0cf8ba_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a1e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%cl
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _05a20e_jump

	_05a1fb_jump:
		add    $0x000084,%edx
		inc    %eax
		movl   $0x000000,-0x000068(%edx)
		cmp    %bx,%ax
		jl     _05a1fb_jump

	_05a20e_jump:
		xor    %ebx,%ebx
		xor    %esi,%esi

	_05a212_jump:
		movswl %bx,%edx
		imul   $0x000282,%edx,%edx
		mov    %esi,%eax
		mov    %si,_0c9d00_data(%edx)
		add    $_0c9a80_data,%edx

	_05a22a_jump:
		add    $0x000002,%edx
		inc    %eax
		mov    %si,-0x000002(%edx)
		cmp    $0x000140,%ax
		jl     _05a22a_jump
		inc    %ebx
		cmp    $0x000008,%bx
		jl     _05a212_jump
		cmpb   $0x000000,_0cfa5c_data
		jne    _05a24d_jump
		call   _05b9a0_func

	_05a24d_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _05a26b_jump
		cmpw   $0x000009,_0cf87c_data
		jne    _05a26b_jump
		mov    $0x00000b,%eax
		call   _05c43c_jump

	_05a26b_jump:
		mov    _0cf81f_data,%al
		xor    %dl,%dl
		xor    %esi,%esi
		xor    %bl,%bl
		mov    %dl,_0cfa68_data
		mov    %si,_0cf810_data
		mov    %bl,_0cfa53_data
		mov    %si,_0cf8de_data
		shl    $0x000005,%al
		mov    %si,_0cf8ec_data
		shr    $0x000007,%al
		xor    %dh,%dh
		xor    %bh,%bh
		mov    %dl,_0cfa44_data
		mov    %dx,_0cf8dc_data
		mov    %bh,_0cfa8f_data
		mov    _0cf88c_data,%bx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cf786_data
		mov    %edx,_0ceef4_data
		cmp    $0x000005,%bx
		jne    _05a2f8_jump
		cmpw   $0x00000a,_0cf87c_data
		jne    _05a2f8_jump
		mov    $0x000020,%edi
		mov    $0x000138,%eax
		mov    %di,_0ce63a_data
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf884_data

	_05a2f8_jump:
		mov    $0xfffffffe,%esi
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0cfa52_data
		mov    %ebx,_0cd8c0_data
		mov    %esi,_0cd8c4_data
		call   _055480_func
		mov    $0xffffffff,%ebx
		mov    _095e2d_data,%al
		xor    %esi,%esi
		mov    %bx,_0ce684_data
		mov    %si,_0cf024_data
		mov    %bx,_0cef5c_data
		mov    %si,_0cf89e_data
		mov    %si,_0cf8a6_data
		test   %al,%al
		jne    _05a352_jump
		call   _05ca24_func
		jmp    _05a3c2_jump

	_05a352_jump:
		mov    _0ce63a_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0cf884_data
		mov    _0ce638_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0cf890_data
		test   %ax,%ax
		jge    _05a388_jump
		mov    %si,_0cf890_data

	_05a388_jump:
		cmpw   $0x000000,_0cf884_data
		jge    _05a39a_jump
		xor    %eax,%eax
		mov    %ax,_0cf884_data

	_05a39a_jump:
		xor    %edx,%edx
		mov    _0cf890_data,%ax
		mov    %dx,_0cf86e_data
		mov    %ax,_0cf872_data
		mov    _0cf884_data,%ax
		mov    %dx,_0cf854_data
		mov    %ax,_0cf85e_data

	_05a3c2_jump:
		mov    $0xffffffff,%ebx
		mov    _0cfa7a_data,%ch
		xor    %esi,%esi
		xor    %ah,%ah
		mov    %si,_0cf8b4_data
		mov    %si,_0cf8b2_data
		mov    %si,_092522_data
		mov    %si,_092520_data
		mov    %si,_0cf8a4_data
		mov    %ah,_0cfa70_data
		mov    %si,_0cf866_data
		mov    %si,_0cf870_data
		mov    %si,_0cf852_data
		xor    %al,%al
		mov    %bx,_0cf898_data
		mov    %ax,_0cf874_data
		mov    %al,_0cfa66_data
		mov    %al,_0cfa76_data
		mov    %al,_0cfa78_data
		mov    %al,_0cfa89_data
		test   %ch,%ch
		jne    _05a43d_jump
		movb   $0x000040,_0cfa7e_data

	_05a43d_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _059948_func
		cmpw   $0x000000,_0cf806_data
		jne    _05a479_jump
		cmpw   $0x000000,_0cf8a0_data
		je     _05a479_jump
		cmpb   $0x000000,_0ceae5_data
		je     _05a479_jump
		mov    $_0ce88c_data,%eax
		mov    _0cef58_data,%dl
		call   _073dc4_func
		mov    %dl,_0cef58_data

	_05a479_jump:
		cmpw   $0x000000,_0cf8a0_data
		jne    _05a502_jump
		mov    _0cfa85_data,%al
		mov    %al,_0ceae5_data
		mov    _0cf8a8_data,%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		mov    _0ce6d1_data,%dh
		mov    %eax,_0ce678_data
		mov    _0cf8a0_data,%eax
		mov    %edi,_0ce674_data
		sar    $0x000010,%eax
		and    $0x0000fb,%dh
		mov    %eax,_0ce67c_data
		mov    _0cfa84_data,%al
		mov    %dh,_0ce6d1_data
		inc    %al
		mov    %dh,%bl
		mov    %al,_0cfa82_data
		xor    %eax,%eax
		or     $0x000004,%bl
		mov    _0cfa84_data,%al
		mov    %bl,_0ce6d1_data
		call   _03c6f8_func
		mov    _0cf8b6_data,%ax
		mov    %ax,_0cf89e_data
		mov    _0cf8b8_data,%ax
		mov    %ax,_0cf8a6_data
		jmp    _05a50a_jump

	_05a502_jump:
		xor    %dl,%dl
		mov    %dl,_0cfa55_data

	_05a50a_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _05f2d4_func
		call   _059888_func
		call   _0595e8_func
		call   _0602c4_func
		cmpw   $0x000005,_0cf83a_data
		jne    _05a548_jump
		cmpw   $0x000004,_0cf82e_data
		jne    _05a548_jump
		testb  $0x000002,_0cf81f_data
		je     _05a548_jump
		orb    $0x000004,_0cf81b_data
		jmp    _05a54f_jump

	_05a548_jump:
		andb   $0x0000fb,_0cf81b_data

	_05a54f_jump:
		testb  $0x000004,_0cf81b_data
		je     _05a55d_jump
		call   _048a0c_func

	_05a55d_jump:
		call   _0587c8_func
		cmpw   $0x000014,_0ce638_data
		jg     _05a591_jump
		cmpw   $0x000000,_095e6a_data
		je     _05a57f_jump
		cmpb   $0x000001,_095e2d_data
		jne    _05a591_jump

	_05a57f_jump:
		mov    _0cf872_data,%ax
		mov    %ax,_0cf86e_data
		mov    %ax,_0cf89e_data

	_05a591_jump:
		cmpb   $0x000000,_0cfa24_data
		je     _05a5ac_jump
		mov    _0cf86e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf89e_data

	_05a5ac_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a5b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0554ec_func
		call   _023b8c_func
		call   _01f880_func
		call   _025c7c_func
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%edi
		xor    %bl,%bl
		mov    %dx,_0cf880_data
		mov    %edx,%esi
		mov    %dx,_0cf892_data
		mov    %cx,_0cef52_data
		mov    %ah,_0ce6c6_data
		mov    %bl,_0cfa62_data
		mov    $0x000001,%dl
		mov    $0x0000a0,%eax
		mov    %si,_0cf8a0_data
		xor    %bh,%bh
		mov    %dl,_0ce77c_data
		mov    $0x000009,%dh
		xor    %cl,%cl
		mov    %dh,_0cfa3b_data
		mov    $0x0000aa,%edx
		mov    %bl,_0cfa46_data
		call   _01d560_func
		call   _059900_func
		mov    $0x000005,%eax
		mov    %di,_0cf8d2_data
		mov    %di,_0cf8ba_data
		mov    %bx,_0cf8ae_data
		xor    %edx,%edx
		mov    %cl,_0cfa74_data
		mov    %dx,_0cf8a8_data
		call   _06bf60_func
		movswl %ax,%edx
		add    %edx,%edx
		mov    _095e10_data(%edx),%cx
		mov    %ax,_0cf76a_data
		cmp    $0x000005,%cx
		jne    _05a69d_jump
		cmpw   $0x00000a,_095e1c_data(%edx)
		jne    _05a69d_jump
		inc    %eax
		mov    %ax,_0cf76a_data
		cmp    $0x000006,%ax
		jne    _05a69d_jump
		xor    %eax,%eax
		mov    %ax,_0cf76a_data

	_05a69d_jump:
		mov    $0x000001,%ch
		mov    $0xfffffffe,%edx
		xor    %ah,%ah
		mov    %ch,_0cfa41_data
		mov    %ch,_0cfa42_data
		mov    %edx,_0cd8c4_data
		mov    %ah,_0cfa99_data
		mov    $0x000708,%edx
		mov    %ah,_0cfa43_data
		mov    %dx,_0cf768_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a6d8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cf892_data
		mov    %bx,_0cf880_data
		pop    %edx
		pop    %ebx
		ret    



_05a6f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cd09c_data,%eax
		mov    %eax,_0cd064_data
		mov    _0cd098_data,%eax
		mov    %eax,_0cd060_data
		mov    _0cd0a4_data,%eax
		mov    %eax,_0cd088_data
		mov    _0cd0a0_data,%eax
		mov    %eax,_0cd084_data
		cmpb   $0x000000,_0cfa7a_data
		jne    _05a7d7_jump
		call   _023a00_func
		cwtl   
		cmp    $0xfffffffe,%eax
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0cf806_data
		test   %ax,%ax
		jne    _05a75e_jump
		cmpw   $0x000000,_0cf8a0_data
		je     _05a75e_jump
		cmpb   $0x000000,_0cfa5c_data
		jne    _05a75e_jump
		mov    $0x000001,%al
		jmp    _05a760_jump

	_05a75e_jump:
		xor    %al,%al

	_05a760_jump:
		mov    %al,%bl
		test   %al,%al
		je     _05a774_jump
		xor    %ecx,%ecx
		call   _073b80_func
		mov    %cx,_0cf802_data

	_05a774_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _05a1e0_func
		test   %bl,%bl
		je     _05a78d_jump
		mov    $_0ce88c_data,%edx
		xor    %eax,%eax
		call   _073b8c_func

	_05a78d_jump:
		cmpw   $0x000000,_0cf8a0_data
		jne    _05a7a7_jump
		movw   $0x000001,_0cf8a0_data
		call   _01d15c_func
		jmp    _05a7af_jump

	_05a7a7_jump:
		xor    %bh,%bh
		mov    %bh,_0cfa55_data

	_05a7af_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    $0x000010,%cl
		call   _0596c0_func
		mov    %dx,_0cf868_data
		xor    %eax,%eax
		mov    %cl,_0cfa73_data
		mov    %ax,_0cf880_data
		call   _058388_func

	_05a7d7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a7dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0ccdf0_data,%esi
		xor    %edx,%edx
		mov    _0ccdf4_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _05a8da_jump

	_05a802_jump:
		cmpw   $0x0000a4,0x000060(%esi)
		jne    _05a8c0_jump
		testb  $0x000004,0x000081(%esi)
		je     _05a863_jump
		mov    _0cee58_data,%ebx
		mov    0x000052(%esi),%ax

	_05a821_jump:
		mov    %eax,%edx
		cwtl   
		mov    0x000052(%esi),%cx
		mov    (%ebx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _05a821_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%eax
		mov    0x000034(%esi),%dx
		mov    %dx,(%ebx,%eax,2)
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%ebx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ebx,%eax,1)
		jmp    _05a8c0_jump

	_05a863_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%eax
		mov    _0ce8d4_data(,%eax,2),%ax
		cmp    %ax,%dx
		je     _05a8c0_jump

	_05a877_jump:
		movswl %dx,%ebx
		mov    _0cee58_data,%edi
		mov    _0ce8d4_data(,%ebx,2),%ax
		mov    %ax,(%edi,%ebx,2)
		imul   $0x000084,%ebx,%ebx
		cmp    %ax,%dx
		je     _05a8a7_jump
		mov    _0ccdf0_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _05a8b5_jump

	_05a8a7_jump:
		mov    _0ccdf0_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_05a8b5_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _05a877_jump

	_05a8c0_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000084,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jl     _05a802_jump

	_05a8da_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a8e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05a7dc_func
		cmpw   $0x000000,_0cf806_data
		jne    _05a921_jump
		cmpw   $0x000000,_0cf8a0_data
		je     _05a921_jump
		xor    %eax,%eax
		mov    _0cf87c_data,%al
		call   _0614b4_func
		test   %ax,%ax
		jne    _05a921_jump
		cmpb   $0x000000,_0cfa5c_data
		jne    _05a921_jump
		call   _073b80_func

	_05a921_jump:
		mov    _0cf892_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05a9a3_jump
		cmpw   $0x000000,_0cf880_data
		jne    _05a942_jump
		cmpw   $0x000000,_0cf892_data
		je     _05a9a3_jump

	_05a942_jump:
		mov    $0x000021,%ecx
		mov    $_0cee5c_data,%edi
		mov    $_0ce650_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce650_data,%edi
		mov    $_0cedd4_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _059948_func
		mov    _0ceed2_data,%al
		mov    %al,_0ce6c6_data
		mov    _0ceed3_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce6c7_data
		mov    _0ceed5_data,%al
		xor    %edx,%edx
		mov    %al,_0ce6c9_data
		mov    $_0ce650_data,%eax
		xor    %edi,%edi
		call   _01d818_func
		mov    %di,_0cf868_data

	_05a9a3_jump:
		cmpb   $0x000000,_0cfa71_data
		je     _05a9b1_jump
		call   _01f8a4_func

	_05a9b1_jump:
		mov    _0cf886_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05a9c6_jump
		xor    %dh,%dh
		mov    %dh,_0caf65_data

	_05a9c6_jump:
		mov    $_0cd84c_data,%eax
		call   _07fba4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a9d8_func:
		push   %edx
		cmpb   $0x000000,_0cfa7e_data
		jne    _05a9f5_jump
		call   _05a7dc_func
		xor    %eax,%eax
		call   _05a1e0_func
		xor    %eax,%eax
		call   _0596c0_func

	_05a9f5_jump:
		cmpw   $0x000000,_0cf806_data
		jne    _05aa1d_jump
		cmpw   $0x000000,_0cf8a0_data
		je     _05aa1d_jump
		mov    $_0ceae8_data,%edx
		xor    %eax,%eax
		call   _073b8c_func
		xor    %dl,%dl
		mov    %dl,_0cfa99_data

	_05aa1d_jump:
		pop    %edx
		ret    



_05aa20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa86_data
		je     _05aae0_jump
		mov    _0cf892_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05aac5_jump
		mov    $0x000021,%ecx
		mov    $_0cedd4_data,%edi
		mov    $_0ce650_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		mov    $_0ce650_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _059948_func
		mov    _0cee4a_data,%al
		mov    %al,_0ce6c6_data
		mov    _0cee4b_data,%al
		mov    $0x000006,%edx
		mov    %al,_0ce6c7_data
		mov    _0cee4d_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce6c9_data
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0cf868_data
		mov    %bl,_0cfa86_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05aac5_jump:
		cmpb   $0x000000,_0cfa49_data
		je     _05aae0_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _059948_func
		mov    %dh,_0cfa86_data

	_05aae0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05aae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_0cfa36_data
		je     _05ab36_jump
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _05ab1d_jump
		test   $0x000020,%al
		je     _05ab1d_jump
		test   $0x000040,%al
		je     _05ab1d_jump
		test   $0x000080,%al
		je     _05ab1d_jump
		mov    _0cfa36_data,%dl
		cmp    $0x000003,%dl
		je     _05ab1d_jump
		cmp    $0x000004,%dl
		jne    _05ab36_jump

	_05ab1d_jump:
		mov    $0x000001,%edx
		mov    $0x000002,%bl
		mov    %dx,_0cf892_data
		call   _03cadc_func
		mov    %bl,_0cfa36_data

	_05ab36_jump:
		call   _03784c_func
		mov    $0x000001,%eax
		call   _055498_func
		call   _023a28_func
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    %ax,_0cf8c4_data
		xor    %eax,%eax
		mov    _0ce6bc_data,%al
		mov    %ax,_0cf8d4_data
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf8b0_data
		mov    _0cf8a6_data,%ax
		mov    _095e2c_data,%bh
		mov    %ax,_0cf8ac_data
		cmp    $0x000001,%bh
		jne    _05abbc_jump
		xor    %eax,%eax
		mov    _0cf89e_data,%dx
		mov    _0ce6b8_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0cf75a_data
		mov    _0cf89e_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0cf756_data
		jmp    _05abfa_jump

	_05abbc_jump:
		mov    _0cf89e_data,%ax
		xor    %edx,%edx
		mov    _0cd098_data,%bx
		mov    _0ce6b8_data,%dl
		add    %ebx,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0cd09c_data,%cx
		mov    %ax,_0cf75a_data
		mov    _0cf89e_data,%ax
		add    %ecx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0cf756_data

	_05abfa_jump:
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05ac21_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0e4da6_data,%dl
		mov    %dl,0x00007e(%eax)

	_05ac21_jump:
		testb  $0x000004,_0cf81b_data
		je     _05ac2f_jump
		call   _048ae0_func

	_05ac2f_jump:
		cmpw   $0x000003,_0cf88c_data
		je     _05ac47_jump
		mov    _0cf874_data,%ax
		mov    %ax,_0cf870_data
		jmp    _05ac50_jump

	_05ac47_jump:
		xor    %edi,%edi
		mov    %di,_0cf870_data

	_05ac50_jump:
		call   _0587c8_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05ac5c_switch:
		.long   _05acbd_case
		.long   _05acc4_case
		.long   _05ace5_case
		.long   _05ace5_case
		.long   _05acec_case




_05ac70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _023b28_func
		call   _023df0_func
		call   _058754_func
		testb  $0x000004,_0ce6d1_data
		je     _05af42_jump
		cmpb   $0x000040,_0cfa7e_data
		je     _05aca3_jump
		movw   $0x00ffff,_0ce69a_data

	_05aca3_jump:
		mov    _0cf868_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _05acf3_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_05ac5c_switch(,%eax,4)

	_05acbd_case:
		call   _07133c_func
		jmp    _05acf8_jump

	_05acc4_case:
		cmpb   $0x000006,_0ce6bd_data
		je     _05acde_jump
		mov    $0x000006,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		call   _01d818_func

	_05acde_jump:
		call   _070ff8_func
		jmp    _05acf8_jump

	_05ace5_case:
		call   _070ae8_func
		jmp    _05acf8_jump

	_05acec_case:
		call   _028888_func
		jmp    _05acf8_jump

	_05acf3_jump:
		call   _059e9c_func

	_05acf8_jump:
		cmpw   $0x000000,_0cf87a_data
		jle    _05ad13_jump
		cmpw   $0x000000,_0cf868_data
		jle    _05ad13_jump
		call   _059fb8_func
		jmp    _05ad26_jump

	_05ad13_jump:
		mov    $0xffffffff,%edi
		mov    %di,_0cf8d2_data
		mov    %di,_0cf8ba_data

	_05ad26_jump:
		call   _058908_func
		mov    $_0ce650_data,%eax
		call   _01e030_func
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05ad56_jump
		cmpw   $0x0000ff,_0cf8b4_data
		jne    _05ad56_jump
		xor    %ebx,%ebx
		mov    %bx,_0cf8b4_data

	_05ad56_jump:
		cmpw   $0x000000,_0cf868_data
		jle    _05ad65_jump
		call   _058f70_func

	_05ad65_jump:
		cmpw   $0x000002,_0cf868_data
		jne    _05aef5_jump
		mov    _0cf8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05adb7_jump
		mov    _0ce690_data,%ax
		mov    %ax,_0cf8d2_data
		mov    _0cf8b2_data,%ax
		mov    %ax,_0ce690_data
		test   %ax,%ax
		jle    _05ada4_jump
		call   _059418_func
		jmp    _05adab_jump

	_05ada4_jump:
		jge    _05adab_jump
		call   _05949c_func

	_05adab_jump:
		mov    _0cf8d2_data,%ax
		mov    %ax,_0ce690_data

	_05adb7_jump:
		mov    _0ce6bc_data,%cl
		cmp    $0x00000e,%cl
		je     _05aece_jump
		mov    %cl,%al
		cmp    $0x000001,%cl
		jb     _05addd_jump
		jbe    _05ae23_jump
		cmp    $0x000005,%cl
		je     _05ae9b_jump
		jmp    _05aec2_jump

	_05addd_jump:
		test   %cl,%cl
		jne    _05aec2_jump
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05adf3_jump
		neg    %eax

	_05adf3_jump:
		cmp    $0x000001,%eax
		jg     _05ae0f_jump
		mov    _0cf8b0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ae06_jump
		neg    %eax

	_05ae06_jump:
		cmp    $0x000001,%eax
		jle    _05aec2_jump

	_05ae0f_jump:
		mov    $0x000006,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		jmp    _05aec2_jump

	_05ae23_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ae31_jump
		neg    %eax

	_05ae31_jump:
		cmp    $0x000001,%eax
		jg     _05ae5a_jump
		mov    _0cf8b0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ae44_jump
		neg    %eax

	_05ae44_jump:
		cmp    $0x000001,%eax
		jg     _05ae5a_jump
		mov    $0x000007,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		jmp    _05aec2_jump

	_05ae5a_jump:
		mov    _0cf8b0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ae68_jump
		neg    %eax

	_05ae68_jump:
		cmp    $0x000004,%eax
		jle    _05aec2_jump
		mov    _0cf88e_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000064,%edx
		cmp    %edx,%eax
		jge    _05aec2_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		call   _01cf7c_func
		jmp    _05aec2_jump

	_05ae9b_jump:
		mov    _0cf8b0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05aea9_jump
		neg    %eax

	_05aea9_jump:
		cmp    $0x000004,%eax
		jg     _05aec2_jump
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		call   _01cf7c_func

	_05aec2_jump:
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf86e_data

	_05aece_jump:
		mov    _0cf8b0_data,%edx
		mov    _0ce6dc_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0cf8b2_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_05aef5_jump:
		mov    $_0cf8b4_data,%edx
		mov    $_0cf8b2_data,%eax
		call   _055c08_func
		call   _058388_func
		call   _058964_func
		mov    _0ce698_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05af6c_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00007e(%eax),%dl
		mov    %dl,_0e4da6_data
		cmp    $0x000003,%dl
		jbe    _05af6c_jump
		movb   $0x000003,0x00007e(%eax)
		jmp    _05af6c_jump

	_05af42_jump:
		mov    $0xffffffff,%edx
		call   _058908_func
		mov    %dx,_0cf8ba_data
		call   _058388_func
		mov    _0cfa7e_data,%dl
		test   %dl,%dl
		je     _05af6c_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cfa7e_data

	_05af6c_jump:
		call   _059518_func
		cmpw   $0x000000,_0cf802_data
		je     _05afa8_jump
		mov    _0cf8aa_data,%ecx
		mov    _0cf8ae_data,%ebx
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05bb78_func
		call   _05c278_func

	_05afa8_jump:
		call   _07be44_func
		testb  $0x000002,_0cf81b_data
		je     _05b09d_jump
		xor    %eax,%eax
		call   _01d650_func
		testb  $0x000080,_0cf81b_data
		je     _05afea_jump
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05b000_jump
		mov    _0ce6aa_data,%bx
		cmp    $0x000100,%bx
		je     _05afea_jump
		test   %bx,%bx
		jne    _05b000_jump

	_05afea_jump:
		mov    $0x000100,%esi
		mov    $0x0000c8,%cl
		mov    %si,_0ce6aa_data
		mov    %cl,_0cfa97_data
		jmp    _05b04a_jump

	_05b000_jump:
		testb  $0x000080,_0cf81b_data
		je     _05b04a_jump
		cmpb   $0x000005,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _05b04a_jump
		mov    _0cfa97_data,%bl
		test   %bl,%bl
		jne    _05b040_jump
		mov    _0ce6a8_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _05b038_jump
		mov    %ebx,%eax

	_05b038_jump:
		mov    %ax,_0ce6aa_data
		jmp    _05b04a_jump

	_05b040_jump:
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0cfa97_data

	_05b04a_jump:
		testb  $0x000008,_0ce6d1_data
		je     _05b074_jump
		xor    %eax,%eax
		mov    _0ce688_data,%cx
		mov    _0ce6b9_data,%al
		add    %ecx,%eax
		mov    _0ce686_data,%bx
		movswl %ax,%edx
		xor    %eax,%eax
		sub    $0x000008,%ebx
		jmp    _05b090_jump

	_05b074_jump:
		xor    %eax,%eax
		mov    _0ce688_data,%di
		mov    _0ce6b9_data,%al
		add    %edi,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce686_data,%bx

	_05b090_jump:
		mov    _0ce6b8_data,%al
		add    %ebx,%eax
		cwtl   
		call   _01d560_func

	_05b09d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b0a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce6d4_data,%edx
		mov    _0ce6d8_data,%ebx
		mov    _0cf81b_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0cf81b_data
		jne    _05b102_jump
		or     $0x000020,%al
		mov    %al,_0cf81b_data
		test   %ebx,%ebx
		je     _05b0e8_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%ebx)

	_05b0e8_jump:
		test   %edx,%edx
		je     _05b143_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000001,0x00007e(%edx)
		or     $0x000004,%ch
		jmp    _05b13d_jump

	_05b102_jump:
		mov    %al,_0cf81b_data
		test   %ebx,%ebx
		je     _05b125_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)

	_05b125_jump:
		test   %edx,%edx
		je     _05b143_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000003,0x00007e(%edx)
		and    $0x0000fb,%ch

	_05b13d_jump:
		mov    %ch,0x000081(%edx)

	_05b143_jump:
		mov    %ebx,_0ce6d8_data
		mov    %edx,_0ce6d4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b154_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf81b_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0cf81b_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0cf81b_data
		test   $0x000002,%dh
		je     _05b1d1_jump
		mov    $0x000021,%ecx
		mov    $_0cedd4_data,%edi
		mov    $_0ce650_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cf884_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		mov    $_0ce650_data,%edi
		add    %eax,%esi
		mov    _0cedd8_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0ce654_data
		mov    $0x0000ce,%eax
		jmp    _05b20e_jump

	_05b1d1_jump:
		mov    $0x000021,%ecx
		mov    $_0cee5c_data,%edi
		mov    $_0cedd4_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0cedd4_data,%edi
		mov    $_0ce650_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce650_data,%edi
		mov    $_0cee5c_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_05b20e_jump:
		call   _07228c_func
		mov    _0cee0a_data,%ax
		mov    %ax,_0ce686_data
		mov    _0cee0c_data,%ax
		mov    %ax,_0ce688_data
		mov    _0cee14_data,%ax
		mov    %ax,_0ce690_data
		mov    _0cee16_data,%ax
		mov    %ax,_0ce692_data
		mov    _0cedfc_data,%eax
		mov    %eax,_0ce678_data
		mov    _0cee00_data,%eax
		mov    %eax,_0ce67c_data
		mov    _0cee3c_data,%al
		mov    %al,_0ce6b8_data
		mov    _0cee3d_data,%al
		mov    %al,_0ce6b9_data
		mov    _0cee48_data,%al
		mov    %al,_0ce6c4_data
		mov    _0cee3e_data,%al
		mov    _0ce6d1_data,%bh
		mov    %al,_0ce6ba_data
		mov    _0cee3f_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0ce6bb_data
		mov    _0cee55_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0cee24_data,%ax
		mov    %ax,_0ce6a0_data
		mov    _0cee41_data,%al
		mov    %al,_0ce6bd_data
		mov    _0cee40_data,%al
		mov    $0x000017,%edx
		mov    %al,_0ce6bc_data
		mov    _0cee1e_data,%ax
		mov    %dx,_0ce6b0_data
		mov    %ax,_0ce69a_data
		mov    _0cee26_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0ce6a2_data
		mov    _0cee2a_data,%ax
		mov    %bh,_0ce6d1_data
		mov    %ax,_0ce6a6_data
		mov    _0cee51_data,%al
		mov    %edx,_0ce674_data
		mov    %al,_0ce6cd_data
		mov    _0cee53_data,%al
		mov    $0x000002,%edx
		mov    %al,_0ce6cf_data
		mov    _0cee4a_data,%al
		mov    %cl,_0ce6d1_data
		mov    %al,_0ce6c6_data
		mov    _0cee4b_data,%al
		mov    %cl,%ch
		mov    %al,_0ce6c7_data
		mov    _0cee4d_data,%al
		or     $0x000004,%ch
		mov    %al,_0ce6c9_data
		mov    $_0ce650_data,%eax
		mov    %ch,_0ce6d1_data
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _05b36f_jump
		mov    $0x00000f,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func

	_05b36f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b378_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf81b_data,%dl
		mov    _0cf81b_data,%al
		shl    $0x000006,%dl
		mov    %al,%ah
		shr    $0x000007,%dl
		shr    $0x000007,%ah
		cmp    %ah,%dl
		jne    _05b662_jump
		test   $0x000080,%al
		sete   %al
		and    $0x000001,%al
		mov    _0cf81b_data,%ah
		and    $0x00007f,%ah
		mov    %ah,_0cf81b_data
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		mov    %dl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		mov    %dl,_0cf81b_data
		and    $0x0000fd,%al
		mov    %al,_0cf81b_data
		mov    %ah,%al
		mov    _0cf81b_data,%dh
		add    %ah,%al
		or     %al,%dh
		mov    %dh,_0cf81b_data
		test   $0x000080,%dh
		je     _05b495_jump
		mov    $0x000021,%ecx
		mov    _0cf884_data,%edx
		mov    $_0cedd4_data,%edi
		sar    $0x000010,%edx
		mov    $_0ce650_data,%esi
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		mov    $_0ce650_data,%edi
		add    %eax,%esi
		mov    _0cedd8_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,_0ce654_data
		mov    _0ceddc_data,%eax
		mov    %eax,_0ce658_data
		mov    _0cedd4_data,%eax
		mov    %eax,_0ce650_data
		mov    _0cf81a_data,%ax
		mov    %ax,_0cf818_data
		mov    _0cf81b_data,%al
		and    $0x000006,%al
		mov    %al,_0cf81b_data
		mov    %al,%ah
		or     $0x000080,%ah
		mov    %ah,_0cf81b_data
		mov    %ah,%al
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    _0cf81a_data,%ch
		mov    %al,_0cf81b_data
		mov    %ah,%al
		mov    _0cf81b_data,%dl
		add    %ah,%al
		and    $0x000041,%ch
		or     %al,%dl
		mov    %ch,_0cf81a_data
		mov    %dl,_0cf81b_data
		jmp    _05b506_jump

	_05b495_jump:
		mov    $0x000021,%ecx
		mov    $_0cee5c_data,%edi
		mov    $_0cedd4_data,%esi
		mov    _0cf818_data,%ax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ax,_0cf81a_data
		mov    $0x000021,%ecx
		mov    $_0cedd4_data,%edi
		mov    _0cf81b_data,%bh
		mov    $_0ce650_data,%esi
		and    $0x00007f,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,%al
		mov    $0x000021,%ecx
		mov    %bh,%ah
		mov    $_0ce650_data,%edi
		shr    $0x000007,%ah
		mov    $_0cee5c_data,%esi
		and    $0x000001,%ah
		mov    %bh,_0cf81b_data
		and    $0x0000fd,%al
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %al,_0cf81b_data
		mov    %ah,%al
		mov    _0cf81b_data,%cl
		add    %ah,%al
		or     %al,%cl
		mov    %cl,_0cf81b_data

	_05b506_jump:
		mov    _0cee0a_data,%ax
		mov    %ax,_0ce686_data
		mov    _0cee0c_data,%ax
		mov    %ax,_0ce688_data
		mov    _0cee14_data,%ax
		mov    %ax,_0ce690_data
		mov    _0cee16_data,%ax
		mov    %ax,_0ce692_data
		mov    _0cedfc_data,%eax
		mov    %eax,_0ce678_data
		mov    _0cee00_data,%eax
		mov    %eax,_0ce67c_data
		mov    _0cee3c_data,%al
		mov    %al,_0ce6b8_data
		mov    _0cee3d_data,%al
		mov    $0x000017,%edx
		mov    %al,_0ce6b9_data
		mov    _0cee48_data,%al
		mov    %dx,_0ce6b0_data
		mov    %al,_0ce6c4_data
		mov    _0cee3e_data,%al
		mov    _0ce6d1_data,%dh
		mov    %al,_0ce6ba_data
		mov    _0cee3f_data,%al
		and    $0x0000f7,%dh
		mov    %al,_0ce6bb_data
		mov    _0cee55_data,%al
		mov    %dh,%bl
		and    $0x000008,%al
		or     %al,%bl
		mov    _0cee24_data,%ax
		mov    %ax,_0ce6a0_data
		mov    _0cee41_data,%al
		mov    %al,_0ce6bd_data
		mov    _0cee40_data,%al
		mov    %al,_0ce6bc_data
		mov    _0cee1e_data,%ax
		mov    %ax,_0ce69a_data
		mov    _0cee26_data,%ax
		mov    %dh,_0ce6d1_data
		mov    %ax,_0ce6a2_data
		mov    _0cee2a_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0ce6a6_data
		mov    _0cee51_data,%al
		mov    %edx,_0ce674_data
		mov    %al,_0ce6cd_data
		mov    _0cee53_data,%al
		mov    $0x000002,%edx
		mov    %al,_0ce6cf_data
		mov    _0cee4a_data,%al
		mov    %bl,_0ce6d1_data
		mov    %al,_0ce6c6_data
		mov    _0cee4b_data,%al
		mov    %bl,%bh
		mov    %al,_0ce6c7_data
		mov    _0cee4d_data,%al
		or     $0x000004,%bh
		mov    %al,_0ce6c9_data
		mov    $_0ce650_data,%eax
		mov    %bh,_0ce6d1_data
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _05b662_jump
		mov    $0x00000f,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func

	_05b662_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b668_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cfa62_data,%ah
		cmp    $0x000003,%ah
		je     _05b795_jump
		cmp    $0x000002,%ah
		jne    _05b6ac_jump
		mov    $0x000001,%eax
		call   _055498_func
		call   _062150_func
		xor    %edx,%edx
		mov    $_0ce650_data,%eax
		mov    %dx,_0cf8b2_data
		mov    %dx,_0cf8b4_data
		call   _0567ac_func
		jmp    _05b6b1_jump

	_05b6ac_jump:
		call   _028ca0_func

	_05b6b1_jump:
		cmpw   $0x000000,_0cf802_data
		je     _05b6fd_jump
		mov    $0x000001,%esi
		mov    _0cf8aa_data,%ecx
		mov    _0cf8ae_data,%ebx
		mov    _0cf8a4_data,%edx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _05bb78_func
		call   _05c278_func
		mov    %si,_0cf742_data
		mov    %di,_0cf740_data

	_05b6fd_jump:
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cf024_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _05b795_jump

	_05b729_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000008,_09257f_data(,%eax,4)
		jne    _05b75f_jump
		cmp    $0x0000a1,%ax
		jne    _05b745_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _05b75f_jump

	_05b745_jump:
		cmpw   $0x000053,0x000060(%edx)
		jne    _05b752_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _05b75f_jump

	_05b752_jump:
		cmpw   $0x000021,0x000060(%edx)
		jne    _05b76d_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _05b76d_jump

	_05b75f_jump:
		mov    %edx,%eax
		call   _0567ac_func
		mov    %edx,%eax
		call   _01eb18_func

	_05b76d_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		mov    _0cf024_data,%cx
		add    %eax,%edx
		cmp    %cx,%bx
		jl     _05b729_jump

	_05b795_jump:
		call   _058388_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b7a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cf802_data
		je     _05b840_jump
		cmpb   $0x000000,_0ceae5_data
		je     _05b840_jump
		mov    _0ce8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05b840_jump
		cmpb   $0x000000,_0cfa5c_data
		jne    _05b840_jump
		xor    %esi,%esi

	_05b7d8_jump:
		movswl %si,%edx
		mov    _0cf8aa_data,%ecx
		mov    %edx,%eax
		mov    _0cf8ae_data,%ebx
		call   _06bf60_func
		add    _0cf8a6_data,%ax
		movswl %ax,%edi
		mov    %edx,%eax
		call   _06bf60_func
		mov    _0cf89e_data,%dx
		sar    $0x000010,%ecx
		add    %edx,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %edi,%edx
		call   _05bb78_func
		call   _05c278_func
		xor    %eax,%eax
		call   _055498_func
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf8b0_data
		mov    _0cf8a6_data,%ax
		inc    %esi
		mov    %ax,_0cf8ac_data
		cmp    $0x000064,%esi
		jl     _05b7d8_jump

	_05b840_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b848_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _06bf60_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_05b85e_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0caf78_data(%eax),%cx
		jle    _05b878_jump
		mov    $0x000001,%ebx
		add    %bx,_0caeb0_data(%eax)

	_05b878_jump:
		dec    %edx
		test   %bx,%bx
		je     _05b85e_jump
		movswl %dx,%eax
		add    %eax,%eax
		mov    _0caeb2_data(%eax),%dx
		cmp    _0caf6a_data(%eax),%dx
		jle    _05b89d_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0caeb2_data(%eax)

	_05b89d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b8a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%edx
		mov    $0x00000f,%ebx
		mov    $0x000019,%ecx
		mov    $0x00001e,%esi
		mov    $0x000023,%edi
		mov    $0x000028,%eax
		mov    %dx,_0caeb0_data
		mov    %bx,_0caeb2_data
		mov    %cx,_0caeb4_data
		mov    %si,_0caeb6_data
		mov    %di,_0caeb8_data
		mov    %ax,_0caeba_data
		mov    $0x00002b,%edx
		mov    $0x000035,%ebx
		mov    %dx,_0caebc_data
		mov    %bx,_0caebe_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b910_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _06bf60_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_05b928_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0caf78_data(%eax),%cx
		jl     _05b952_jump
		mov    _0caeb0_data(%eax),%di
		test   %di,%di
		jle    _05b952_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0caeb0_data(%eax)

	_05b952_jump:
		dec    %edx
		test   %bx,%bx
		jne    _05b95d_jump
		test   %dx,%dx
		jge    _05b928_jump

	_05b95d_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _05b99a_jump
		mov    $0x000007,%eax
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_05b96e_jump:
		movswl %ax,%edx
		add    %edx,%edx
		mov    _0caeb0_data(%edx),%di
		cmp    %di,%cx
		jge    _05b98f_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0caeb0_data(%edx)

	_05b98f_jump:
		dec    %eax
		test   %bx,%bx
		jne    _05b99a_jump
		test   %ax,%ax
		jge    _05b96e_jump

	_05b99a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b9a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000014,%edx
		mov    $0x00001e,%ebx
		mov    $0x000032,%ecx
		mov    $0x00003c,%esi
		mov    $0x000046,%edi
		mov    $0x000050,%eax
		mov    %dx,_0caf68_data
		mov    %bx,_0caf6a_data
		mov    %cx,_0caf6c_data
		mov    %si,_0caf6e_data
		mov    %di,_0caf70_data
		mov    %ax,_0caf72_data
		mov    $0x000060,%edx
		mov    $0x00006a,%ebx
		mov    $0xffffffc0,%edi
		xor    %ecx,%ecx
		mov    %dx,_0caf74_data
		mov    %bx,_0caf76_data
		mov    %cx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		mov    %di,(%esp)
		mov    $0x000190,%ebp

	_05ba22_jump:
		mov    0x000002(%esp),%ecx
		mov    0x00000c(%esp),%eax
		mov    -0x000002(%esp),%ebx
		xor    %esi,%esi
		sar    $0x000010,%ecx
		xor    %edx,%edx
		mov    %ax,_0caf78_data(,%ecx,2)
		mov    (%esp),%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000010(%esp)
		mov    %ebx,%eax
		mov    %si,_0caeb0_data(,%ecx,2)
		call   _01d690_func
		mov    $0x0000c8,%edx
		mov    %ax,_0c9a70_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d690_func
		xor    %edx,%edx
		mov    %ax,_0caea0_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d658_func
		mov    $0x000140,%edx
		mov    %ax,_0cae90_data(,%ecx,2)
		mov    %ebx,%eax
		mov    %esi,0x000008(%esp)
		call   _01d658_func
		mov    %ax,_0caec0_data(,%ecx,2)
		jmp    _05bb22_jump

	_05baa1_jump:
		mov    $0x0002bc,%eax
		mov    0x00000e(%esp),%ebx
		call   _06bf60_func
		mov    %eax,%esi
		mov    %ebp,%eax
		sar    $0x000010,%ebx
		call   _06bf60_func
		movswl %si,%edx
		mov    %eax,%edi
		mov    %ebx,%eax
		sub    $0x000096,%edi
		call   _01d5d8_func
		mov    %eax,%ecx
		movswl %di,%edx
		mov    %ebx,%eax
		call   _01d614_func
		cmp    $0x000140,%cx
		jge    _05baa1_jump
		test   %cx,%cx
		jle    _05baa1_jump
		cmp    $0x0000c8,%ax
		jge    _05baa1_jump
		test   %ax,%ax
		jle    _05baa1_jump
		mov    0x00000a(%esp),%edx
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ecx
		mov    _0cd8bc_data,%ebx
		inc    %ecx
		sar    $0x000010,%edx
		mov    %cx,0x00000c(%esp)
		mov    %si,(%ebx,%edx,8)
		mov    0x000008(%esp),%esi
		mov    %di,0x000002(%ebx,%edx,8)
		inc    %esi
		mov    %ax,0x000004(%ebx,%edx,8)
		mov    %esi,0x000008(%esp)

	_05bb22_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		cmp    _0caf68_data(,%edx,2),%ax
		jl     _05baa1_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		cmp    $0x000008,%dx
		jl     _05ba22_jump
		xor    %edi,%edi
		mov    %di,_0cf82a_data
		mov    %di,_0cf828_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bb78_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000038(%esp)
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0cf828_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0cf82a_data,%ax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,_0cf828_data
		mov    _0cf826_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%ebp
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %edx,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05bc06_jump
		neg    %eax

	_05bc06_jump:
		cmp    $0x000001,%eax
		jne    _05bc2c_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _05bc2c_jump
		mov    _0cf828_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05bc2a_jump
		mov    $0x000001,%eax
		jg     _05bc2a_jump
		neg    %eax

	_05bc2a_jump:
		add    %eax,%edi

	_05bc2c_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05bc35_jump
		neg    %eax

	_05bc35_jump:
		cmp    $0x000002,%eax
		jne    _05bc5b_jump
		cmpb   $0x000000,_0cf9f7_data
		jne    _05bc5b_jump
		mov    _0cf828_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05bc59_jump
		mov    $0x000001,%eax
		jg     _05bc59_jump
		neg    %eax

	_05bc59_jump:
		add    %eax,%edi

	_05bc5b_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _05bc64_jump
		neg    %eax

	_05bc64_jump:
		cmp    $0x000003,%eax
		jne    _05bc8a_jump
		cmpb   $0x000003,_0cf9f9_data
		jae    _05bc8a_jump
		mov    _0cf828_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05bc88_jump
		mov    $0x000001,%eax
		jg     _05bc88_jump
		neg    %eax

	_05bc88_jump:
		add    %eax,%edi

	_05bc8a_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05bc93_jump
		neg    %eax

	_05bc93_jump:
		cmp    $0x000001,%eax
		jne    _05bcb9_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _05bcb9_jump
		mov    _0cf826_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05bcb7_jump
		mov    $0x000001,%eax
		jg     _05bcb7_jump
		neg    %eax

	_05bcb7_jump:
		add    %eax,%esi

	_05bcb9_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05bcc2_jump
		neg    %eax

	_05bcc2_jump:
		cmp    $0x000002,%eax
		jne    _05bce8_jump
		cmpb   $0x000000,_0cf9f7_data
		jne    _05bce8_jump
		mov    _0cf826_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05bce6_jump
		mov    $0x000001,%eax
		jg     _05bce6_jump
		neg    %eax

	_05bce6_jump:
		add    %eax,%esi

	_05bce8_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05bcf1_jump
		neg    %eax

	_05bcf1_jump:
		cmp    $0x000003,%eax
		jne    _05bd17_jump
		cmpb   $0x000003,_0cf9f9_data
		jae    _05bd17_jump
		mov    _0cf826_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05bd15_jump
		mov    $0x000001,%eax
		jg     _05bd15_jump
		neg    %eax

	_05bd15_jump:
		add    %eax,%esi

	_05bd17_jump:
		mov    $0x0000aa,%edx
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		mov    0x000038(%esp),%ecx
		call   _01d560_func
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00001c(%esp)
		xor    %edx,%edx
		mov    0x000034(%esp),%ebx
		mov    %dx,0x000020(%esp)
		mov    0x000004(%esp),%edx
		sub    %ecx,%eax
		sub    %ebx,%edx
		add    %esi,%eax
		add    %edi,%edx
		mov    %eax,0x000018(%esp)
		mov    %edx,0x000014(%esp)

	_05bd56_jump:
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    _0caf76_data(,%edx,2),%ebx
		mov    _0cd8bc_data,%eax
		sar    $0x000010,%ebx
		mov    _0c9a70_data(,%edx,2),%si
		shl    $0x000003,%ebx
		mov    _0cae90_data(,%edx,2),%cx
		add    %ebx,%eax
		mov    0x000018(%esp),%ebx
		mov    _0caf78_data(,%edx,2),%di
		mov    %ebx,0x000028(%esp)
		mov    0x000014(%esp),%ebx
		mov    %edi,(%esp)
		mov    %ebx,0x000024(%esp)
		mov    _0caea0_data(,%edx,2),%bx
		add    _0caeb0_data(,%edx,2),%di
		mov    %ebx,0x000030(%esp)
		mov    _0caec0_data(,%edx,2),%bx
		mov    (%esp),%edx
		mov    %edi,0x00002c(%esp)
		cmp    %di,%dx
		jge    _05be13_jump

	_05bdc4_jump:
		mov    0x000024(%esp),%edi
		add    %di,(%eax)
		mov    0x000028(%esp),%edi
		add    %di,0x000002(%eax)
		mov    (%eax),%di
		cmp    %di,%bx
		jge    _05bde0_jump
		mov    %cx,(%eax)
		jmp    _05bde8_jump

	_05bde0_jump:
		cmp    %di,%cx
		jle    _05bde8_jump
		mov    %bx,(%eax)

	_05bde8_jump:
		mov    0x000002(%eax),%di
		cmp    0x000030(%esp),%di
		jle    _05bdf9_jump
		mov    %si,0x000002(%eax)
		jmp    _05be06_jump

	_05bdf9_jump:
		cmp    %di,%si
		jle    _05be06_jump
		mov    0x000030(%esp),%edi
		mov    %di,0x000002(%eax)

	_05be06_jump:
		mov    0x00002c(%esp),%edi
		inc    %edx
		add    $0x000008,%eax
		cmp    %di,%dx
		jl     _05bdc4_jump

	_05be13_jump:
		mov    0x000020(%esp),%ecx
		mov    0x00001c(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,0x000020(%esp)
		mov    %esi,0x00001c(%esp)
		cmp    $0x0000c0,%si
		jl     _05bd56_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cf828_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0cf82a_data
		cmpw   $0x000001,_0cf88c_data
		je     _05be6b_jump
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %ax,_0cf874_data

	_05be6b_jump:
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_05be74_func:
		push   %ebx
		mov    %ax,_0cf800_data
		xor    %ebx,%ebx
		cwtl   
		mov    %bx,_0cf7fe_data
		mov    %dx,_0caed0_data(,%eax,2)
		pop    %ebx
		ret    

	_05be8f_jump:
		cmp    %si,%dx
		jne    _05beb1_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _05c1ec_jump

	_05beb1_jump:
		cmp    $0x000002,%dx
		jne    _05bed4_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000200,(%eax)
		add    $0x000002,%eax
		jmp    _05c1ec_jump

	_05bed4_jump:
		cmp    $0x000003,%dx
		jne    _05bf2d_jump
		cmp    $0x000008,%cx
		je     _05bee7_jump
		movw   $0x000004,(%eax)
		jmp    _05beec_jump

	_05bee7_jump:
		movw   $0x000002,(%eax)

	_05beec_jump:
		add    $0x000002,%eax
		lea    0x000002(%eax),%esi
		mov    %ecx,%edx
		lea    0x000004(%eax),%edi
		add    %ecx,%edx
		cmp    $0x000008,%cx
		jle    _05bf11_jump
		sub    $0x000010,%edx
		movw   $0x000008,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _05c1ec_jump

	_05bf11_jump:
		jge    _05c1ec_jump
		movw   $0x000009,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05c1ec_jump

	_05bf2d_jump:
		cmp    $0x000004,%dx
		jne    _05bf7a_jump
		test   %cx,%cx
		je     _05bf41_jump
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _05bf49_jump

	_05bf41_jump:
		movw   $0x000002,(%eax)
		add    $0x000002,%eax

	_05bf49_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		test   %cx,%cx
		jle    _05bf5f_jump
		movw   $0x000008,(%eax)
		mov    %ecx,%eax
		add    %ecx,%eax
		jmp    _05bf70_jump

	_05bf5f_jump:
		jge    _05c1ec_jump
		movw   $0x000009,(%eax)
		mov    %ecx,%eax
		neg    %eax
		add    %eax,%eax

	_05bf70_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _05c1ec_jump

	_05bf7a_jump:
		add    $0x000002,%eax
		cmp    $0x000005,%dx
		jne    _05bfe2_jump
		movswl %bx,%edx
		cmp    $0xfffffff8,%edx
		je     _05bf96_jump
		movw   $0x000004,_0c97f8_data
		jmp    _05bf9f_jump

	_05bf96_jump:
		movw   $0x000002,_0c97f8_data

	_05bf9f_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0xfffffff8,%edx
		jle    _05bfc3_jump
		movw   $0x000006,(%eax)
		mov    (%esp),%eax
		add    $0x000010,%eax
		jmp    _05bfd8_jump

	_05bfc3_jump:
		jge    _05c1ec_jump
		mov    (%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xfffffff0,%eax
		sub    %edx,%eax

	_05bfd8_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _05c1ec_jump

	_05bfe2_jump:
		cmp    $0x000006,%dx
		jne    _05c040_jump
		cmp    $0x000008,%bx
		je     _05bff9_jump
		movw   $0x000004,_0c97f8_data
		jmp    _05c002_jump

	_05bff9_jump:
		movw   $0x000002,_0c97f8_data

	_05c002_jump:
		lea    0x000002(%eax),%esi
		mov    %ebx,%edx
		lea    0x000004(%eax),%edi
		add    %ebx,%edx
		cmp    $0x000008,%bx
		jle    _05c024_jump
		sub    $0x000010,%edx
		movw   $0x000006,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _05c1ec_jump

	_05c024_jump:
		jge    _05c1ec_jump
		movw   $0x000007,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05c1ec_jump

	_05c040_jump:
		cmp    $0x000007,%dx
		jne    _05c0a8_jump
		movswl %bx,%edx
		cmp    $0xfffffff0,%edx
		je     _05c059_jump
		movw   $0x000004,_0c97f8_data
		jmp    _05c062_jump

	_05c059_jump:
		movw   $0x000002,_0c97f8_data

	_05c062_jump:
		mov    %ebx,%edi
		movswl %bx,%edx
		add    %ebx,%edi
		lea    0x000002(%eax),%esi
		mov    %edi,0x000004(%esp)
		lea    0x000004(%eax),%edi
		cmp    $0xfffffff0,%edx
		jle    _05c088_jump
		movw   $0x000006,(%eax)
		mov    0x000004(%esp),%eax
		add    $0x000020,%eax
		jmp    _05c09e_jump

	_05c088_jump:
		jge    _05c1ec_jump
		mov    0x000004(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax

	_05c09e_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _05c1ec_jump

	_05c0a8_jump:
		cmp    $0x000008,%dx
		jne    _05c106_jump
		cmp    $0x000010,%bx
		je     _05c0bf_jump
		movw   $0x000004,_0c97f8_data
		jmp    _05c0c8_jump

	_05c0bf_jump:
		movw   $0x000002,_0c97f8_data

	_05c0c8_jump:
		lea    0x000002(%eax),%edi
		mov    %ebx,%esi
		lea    0x000004(%eax),%edx
		add    %ebx,%esi
		cmp    $0x000010,%bx
		jle    _05c0ea_jump
		sub    $0x000020,%esi
		movw   $0x000006,(%eax)
		mov    %edx,%eax
		mov    %si,(%edi)
		jmp    _05c1ec_jump

	_05c0ea_jump:
		jge    _05c1ec_jump
		movw   $0x000007,(%eax)
		mov    $0x000020,%eax
		sub    %esi,%eax
		mov    %ax,(%edi)
		mov    %edx,%eax
		jmp    _05c1ec_jump

	_05c106_jump:
		cmp    $0x000009,%dx
		jne    _05c153_jump
		test   %bx,%bx
		je     _05c11c_jump
		movw   $0x000004,_0c97f8_data
		jmp    _05c125_jump

	_05c11c_jump:
		movw   $0x000002,_0c97f8_data

	_05c125_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		jle    _05c138_jump
		movw   $0x000006,(%eax)
		mov    %ebx,%eax
		add    %ebx,%eax
		jmp    _05c149_jump

	_05c138_jump:
		jge    _05c1ec_jump
		movw   $0x000007,(%eax)
		mov    %ebx,%eax
		neg    %eax
		add    %eax,%eax

	_05c149_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _05c1ec_jump

	_05c153_jump:
		cmp    $0x00000a,%dx
		jne    _05c1ce_jump
		movswl %cx,%edx
		cmp    $0xfffffff0,%edx
		je     _05c170_jump
		movw   $0x000006,_0c97f8_data
		jmp    _05c179_jump

	_05c170_jump:
		movw   $0x000004,_0c97f8_data

	_05c179_jump:
		movswl %cx,%edx
		lea    0x000002(%eax),%ebp
		mov    %ecx,%edi
		lea    0x000004(%eax),%esi
		add    %ecx,%edi
		cmp    $0xfffffff0,%edx
		jle    _05c19b_jump
		add    $0x000020,%edi
		movw   $0x000008,(%eax)
		mov    %esi,%eax
		mov    %di,0x000000(%ebp)
		jmp    _05c1af_jump

	_05c19b_jump:
		jge    _05c1af_jump
		movw   $0x000009,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edi,%eax
		mov    %ax,0x000000(%ebp)
		mov    %esi,%eax

	_05c1af_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		movw   $0x000009,(%eax)
		add    $0x000002,%eax
		movw   $0x000020,(%eax)
		jmp    _05c1f9_jump

	_05c1ce_jump:
		cmp    $0x00000b,%dx
		jne    _05c1f9_jump
		movw   $0x000004,_0c97f8_data
		movw   $0x00000a,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %si,-0x000002(%eax)

	_05c1ec_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax

	_05c1f4_jump:
		movw   $0x007fff,(%eax)

	_05c1f9_jump:
		mov    $0x000001,%esi
		mov    _0c97fa_data,%edx
		mov    _0c97f8_data,%eax
		mov    %bx,_0cf82a_data
		mov    %cx,_0cf828_data
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %si,_0cf7fa_data
		call   _05be74_func
		mov    _0cf7fa_data,%di
		add    $0x000002,%edi
		mov    _0cf82a_data,%bx
		mov    %di,_0cf7fa_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05c24c_switch:
		.long   _05c32f_case
		.long   _05c2a1_case
		.long   _05c2b6_case
		.long   _05c2c0_case
		.long   _05c2d3_case
		.long   _05c2e5_case
		.long   _05c2ca_case
		.long   _05c2dc_case
		.long   _05c2ee_case
		.long   _05c300_case
		.long   _05c312_case




_05c278_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf7fa_data,%cx
		mov    _0cf800_data,%ax
		cmp    $0x00000a,%ax
		ja     _05c32f_case
		and    $0x00ffff,%eax
		jmp    *%cs:_05c24c_switch(,%eax,4)

	_05c2a1_case:
		xor    %edi,%edi
		mov    %di,_0cf82a_data
		mov    %di,_0cf828_data
		jmp    _05c32f_case

	_05c2b6_case:
		call   _05b848_func
		jmp    _05c32f_case

	_05c2c0_case:
		call   _05b910_func
		jmp    _05c32f_case

	_05c2ca_case:
		cmpb   $0x000000,_0cf9f7_data
		jne    _05c32f_case

	_05c2d3_case:
		decw   _0cf82a_data
		jmp    _05c32f_case

	_05c2dc_case:
		cmpb   $0x000000,_0cf9f7_data
		jne    _05c32f_case

	_05c2e5_case:
		incw   _0cf82a_data
		jmp    _05c32f_case

	_05c2ee_case:
		cmpb   $0x000000,_0cf9f7_data
		jne    _05c32f_case
		decw   _0cf828_data
		jmp    _05c32f_case

	_05c300_case:
		cmpb   $0x000000,_0cf9f7_data
		jne    _05c32f_case
		incw   _0cf828_data
		jmp    _05c32f_case

	_05c312_case:
		mov    $0xfffffff8,%edx
		mov    $0x000008,%ebx
		mov    %dx,_0cf82a_data
		mov    %bx,_0cf828_data
		call   _05b8a4_func

	_05c32f_case:
		mov    _0cf7fe_data,%eax
		sar    $0x000010,%eax
		mov    _0cf7fe_data,%bx
		lea    0x000000(,%eax,2),%edx
		mov    _0cf7fa_data,%cx
		inc    %ebx
		mov    _0caed0_data(%edx),%si
		mov    %bx,_0cf7fe_data
		cmp    %si,%bx
		jne    _05c39f_jump
		movswl %cx,%eax
		inc    %ecx
		mov    _0c97f8_data(,%eax,2),%bx
		movswl %cx,%eax
		mov    _0c97f8_data(,%eax,2),%ax
		inc    %ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    %cx,_0cf7fa_data
		call   _05be74_func
		mov    _0cf7fa_data,%cx
		mov    _0c97f8_data,%di
		cmp    %di,%cx
		jne    _05c39f_jump
		xor    %edi,%ecx

	_05c39f_jump:
		mov    %cx,_0cf7fa_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05c3ab_jump:
		ret    

_05c3ac_switch:
		.long   _05c3fd_case
		.long   _05c404_case
		.long   _05c40b_case
		.long   _05c412_case
		.long   _05c419_case
		.long   _05c420_case
		.long   _05c427_case
		.long   _05c42e_case
		.long   _05c435_case
		.long   _05c493_case
		.long   _05c3ab_jump
		.long   _05c3f9_case




_05c3dc_func:
		andb   $0x0000fb,0x000081(%eax)
		mov    0x00006c(%eax),%al
		sub    $0x000015,%al
		cmp    $0x00000b,%al
		ja     _05c3ab_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05c3ac_switch(,%eax,4)

	_05c3f9_case:
		xor    %eax,%eax
		jmp    _05c43c_jump

	_05c3fd_case:
		mov    $0x000001,%eax
		jmp    _05c43c_jump

	_05c404_case:
		mov    $0x000002,%eax
		jmp    _05c43c_jump

	_05c40b_case:
		mov    $0x000003,%eax
		jmp    _05c43c_jump

	_05c412_case:
		mov    $0x000004,%eax
		jmp    _05c43c_jump

	_05c419_case:
		mov    $0x000005,%eax
		jmp    _05c43c_jump

	_05c420_case:
		mov    $0x000006,%eax
		jmp    _05c43c_jump

	_05c427_case:
		mov    $0x000007,%eax
		jmp    _05c43c_jump

	_05c42e_case:
		mov    $0x000008,%eax
		jmp    _05c43c_jump

	_05c435_case:
		mov    $0x000009,%eax
		mov    %eax,%eax

	_05c43c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cf82a_data,%bx
		mov    _0cf828_data,%cx
		mov    %eax,%edx
		mov    $0x000001,%esi
		mov    $_0c97f8_data,%eax
		mov    %si,_0cf802_data
		test   %dx,%dx
		jne    _05be8f_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000002,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _05c1f4_jump

	_05c493_case:
		mov    $0x00000a,%eax
		jmp    _05c43c_jump



_05c82c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0ce640_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0ce63c_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07f5b0_func
		mov    $0x000008,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _07f5b0_func
		mov    _0ce63c_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jle    _05c8f4_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_05c877_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		and    $0x00ffff,%ebx
		mov    0x00000c(%ecx),%edi
		mov    _0c4268_data(,%ebx,4),%ebx
		add    %ebx,%edi
		mov    %edi,(%esp)
		mov    0x000004(%ecx),%edi
		mov    (%esp),%ebp
		mov    %ebp,(%edi,%eax,1)
		imul   $0x000120,_0cd054_data,%edi
		cmp    %edi,%ebx
		ja     _05c8b7_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _05c8c3_jump

	_05c8b7_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_05c8c3_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _05c8cf_jump
		mov    $0x000001,%bl
		jmp    _05c8dd_jump

	_05c8cf_jump:
		cmp    $0x55555555,%ebx
		jne    _05c8db_jump
		xor    %bl,%bl
		jmp    _05c8dd_jump

	_05c8db_jump:
		mov    $0x000002,%bl

	_05c8dd_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0ce63c_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jl     _05c877_jump

	_05c8f4_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05c8fc_func:
		mov    _0ce638_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0ce63a_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_05c914_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cf89c_data,%ecx
		mov    _0cd09c_data,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0cf8a4_data,%ebx
		mov    _0cd0a4_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %edx,%esi
		sub    $0x000008,%ecx
		mov    %ecx,%edx
		mov    0x000008(%eax),%eax
		sar    $0x000004,%edx
		xor    %ch,%ch
		add    %esi,%edx
		and    $0x00000f,%cl
		mov    %dx,0x000006(%eax)
		mov    _0cd09c_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0cd0a4_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0cd098_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0cd0a0_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $0x0000ff,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $0x0000ff,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%ebx
		cwtl   
		mov    _0cd128_data,%edx
		sub    %eax,%ebx
		add    %ebx,%edx
		mov    %ebx,_0cd0fc_data
		mov    %edx,_0cd138_data
		mov    %edx,_0cd7b8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c9f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0cd0a4_data
		mov    %ebx,_0cd0a0_data
		mov    %ecx,_0cd09c_data
		mov    %esi,_0cd098_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ca24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce638_data,%cx
		shl    $0x000004,%ecx
		mov    _0cd098_data,%dx
		mov    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce63a_data,%ax
		mov    _0cd0a0_data,%bx
		shl    $0x000004,%eax
		sub    $0x000140,%ecx
		mov    %eax,%esi
		mov    %cx,_0cf758_data
		sub    %ebx,%esi
		sub    $0x0000c8,%eax
		mov    %esi,%ebx
		mov    %ax,_0cf75c_data
		test   %dx,%dx
		jge    _05ca75_jump
		xor    %edx,%edx

	_05ca75_jump:
		test   %bx,%bx
		jge    _05ca7c_jump
		xor    %ebx,%ebx

	_05ca7c_jump:
		mov    _0cd09c_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0cf86e_data
		mov    %edx,%eax
		add    $0x000008,%eax
		mov    %ax,_0cf872_data
		mov    _0cd0a4_data,%ax
		mov    %eax,%ecx
		mov    %ax,_0cf854_data
		neg    %ecx
		mov    %bx,_0cf85e_data
		mov    %cx,_0cf854_data
		mov    %bx,_0cf884_data
		mov    %dx,_0cf890_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf89e_data,%bx
		mov    _0cf8a6_data,%cx
		mov    _0cd09c_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05caf9_jump
		mov    _0cd09c_data,%bx
		neg    %ebx

	_05caf9_jump:
		mov    _0cf890_data,%dx
		cmp    %dx,%bx
		jle    _05cb07_jump
		mov    %edx,%ebx

	_05cb07_jump:
		mov    _0cd0a4_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05cb1e_jump
		mov    _0cd0a4_data,%cx
		neg    %ecx

	_05cb1e_jump:
		mov    _0cf884_data,%si
		cmp    %si,%cx
		jle    _05cb2c_jump
		mov    %esi,%ecx

	_05cb2c_jump:
		mov    %cx,_0cf8a6_data
		mov    %bx,_0cf89e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cd64_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce678_data,%ecx
		mov    _0cf89c_data,%eax
		mov    _0cd09c_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0ce6b8_data,%dl
		add    %eax,%ebx
		add    %edx,%ecx
		add    $0x000010,%ebx
		cmp    %ebx,%ecx
		jg     _05cdb9_jump
		mov    _0cd09c_data,%ebx
		sub    %edx,%ebx
		lea    0x000010(%ebx),%edx
		add    %eax,%edx
		mov    %edx,_0ce678_data
		mov    _0ce678_data,%ax
		sub    _0cf86e_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0ce686_data

	_05cdb9_jump:
		mov    _0ce678_data,%ebx
		mov    _0cf89c_data,%eax
		mov    _0cd098_data,%ecx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0ce6b8_data,%dl
		add    %ecx,%eax
		add    %edx,%ebx
		sub    $0x000018,%eax
		cmp    %eax,%ebx
		jle    _05ce04_jump
		sub    %edx,%eax
		sub    $0x000008,%eax
		mov    %eax,_0ce678_data
		mov    _0cf89e_data,%bx
		mov    _0ce678_data,%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0ce686_data

	_05ce04_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ce08_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    _0cd09c_data,%di
		sub    %edi,%eax
		mov    %eax,0x000004(%esp)
		mov    _0cd098_data,%ax
		sub    %edx,%eax
		mov    _0cd0a4_data,%di
		mov    %eax,(%esp)
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    %eax,_0cd0a4_data
		movswl %cx,%eax
		mov    _0cd0a0_data,%di
		mov    %eax,_0cd0a0_data
		movswl %si,%eax
		sub    %ecx,%edi
		mov    %eax,_0cd09c_data
		movswl %dx,%eax
		mov    _0cd0a0_data,%edx
		mov    %eax,_0cd098_data
		cmp    $0x0000c8,%edx
		jle    _05ce77_jump
		movl   $0x0000c8,_0cd0a0_data

	_05ce77_jump:
		cmpl   $0x000000,_0cd0a4_data
		jge    _05ce88_jump
		xor    %esi,%esi
		mov    %esi,_0cd0a4_data

	_05ce88_jump:
		cmpl   $0x000140,_0cd098_data
		jle    _05ce9e_jump
		movl   $0x000140,_0cd098_data

	_05ce9e_jump:
		cmpl   $0x000004,_0cd09c_data
		jge    _05ceb1_jump
		movl   $0x000004,_0cd09c_data

	_05ceb1_jump:
		cmpl   $0x000004,_0cd09c_data
		jl     _05cf5a_jump
		mov    0x000004(%esp),%eax
		mov    _0cf86e_data,%dx
		mov    _0cf872_data,%bx
		sub    %eax,%edx
		add    (%esp),%ebx
		mov    %dx,_0cf86e_data
		mov    %bx,_0cf872_data
		cmp    $0x00000c,%dx
		jle    _05cef2_jump
		movw   $0x00000c,_0cf86e_data

	_05cef2_jump:
		mov    _0cf756_data,%eax
		mov    _0cf870_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    $0x000008,%eax
		cmp    %eax,%ebx
		jge    _05cf1b_jump
		mov    _0cf758_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0cf872_data

	_05cf1b_jump:
		mov    (%esp),%eax
		mov    _0cf890_data,%dx
		add    %eax,%edx
		mov    _0cf758_data,%bx
		mov    %dx,_0cf890_data
		cmp    %bx,%dx
		jge    _05cf41_jump
		mov    %bx,_0cf890_data

	_05cf41_jump:
		mov    _0cf890_data,%ax
		mov    _0cf89e_data,%cx
		cmp    %cx,%ax
		jge    _05cf5a_jump
		mov    %cx,_0cf890_data

	_05cf5a_jump:
		cmpl   $0x000000,_0cd0a4_data
		jl     _05cfec_jump
		mov    0x000008(%esp),%eax
		mov    _0cf854_data,%si
		sub    %eax,%esi
		mov    _0cf85e_data,%ax
		add    %edi,%eax
		mov    %si,_0cf854_data
		mov    %ax,_0cf85e_data
		test   %si,%si
		jle    _05cf97_jump
		xor    %ebx,%ebx
		mov    %bx,_0cf854_data

	_05cf97_jump:
		mov    _0cf85e_data,%ax
		mov    _0cf75c_data,%cx
		cmp    %cx,%ax
		jge    _05cfb0_jump
		mov    %cx,_0cf85e_data

	_05cfb0_jump:
		mov    _0cf884_data,%si
		add    %edi,%esi
		mov    _0cf75c_data,%di
		mov    %si,_0cf884_data
		cmp    %di,%si
		jge    _05cfd3_jump
		mov    %di,_0cf884_data

	_05cfd3_jump:
		mov    _0cf884_data,%ax
		mov    _0cf8a6_data,%dx
		cmp    %dx,%ax
		jge    _05cfec_jump
		mov    %dx,_0cf884_data

	_05cfec_jump:
		cmpw   $0x000000,_0cf858_data
		je     _05d00e_jump
		mov    _0cf86e_data,%ax
		mov    %ax,_0cf858_data
		mov    _0cf872_data,%ax
		mov    %ax,_0cf85a_data

	_05d00e_jump:
		cmpw   $0x000014,_0ce638_data
		jg     _05d033_jump
		cmpl   $0x000004,_0cd09c_data
		jne    _05d033_jump
		mov    _0cf872_data,%ax
		mov    %ax,_0cf86e_data
		mov    %ax,_0cf89e_data

	_05d033_jump:
		call   _05cad0_func
		cmpb   $0x000000,_0cfa68_data
		je     _05d095_jump
		cmpw   $0x000003,_0cf88c_data
		jne    _05d055_jump
		cmpw   $0x00000a,_0cf87c_data
		je     _05d05c_jump

	_05d055_jump:
		mov    $0x000001,%eax
		jmp    _05d05e_jump

	_05d05c_jump:
		xor    %eax,%eax

	_05d05e_jump:
		test   %eax,%eax
		je     _05d095_jump
		cmpw   $0x000002,_0cf88c_data
		jne    _05d076_jump
		cmpw   $0x00000f,_0cf87c_data
		je     _05d07d_jump

	_05d076_jump:
		mov    $0x000001,%eax
		jmp    _05d07f_jump

	_05d07d_jump:
		xor    %eax,%eax

	_05d07f_jump:
		test   %eax,%eax
		je     _05d095_jump
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf86e_data

	_05d095_jump:
		mov    _0cd098_data,%ax
		mov    _0cf88e_data,%ebx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    %ax,%cx
		add    %ebx,%ecx
		mov    _0ce636_data,%ebx
		sar    $0x000010,%ebx
		shl    $0x000004,%ebx
		mov    _0cd0a0_data,%dx
		cmp    %ebx,%ecx
		jle    _05d0d5_jump
		mov    _0ce638_data,%bx
		shl    $0x000004,%ebx
		sub    %eax,%ebx
		mov    %bx,_0cf890_data

	_05d0d5_jump:
		mov    _0cf882_data,%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dx,%ax
		add    %eax,%ebx
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%ebx
		jle    _05d105_jump
		mov    _0ce63a_data,%ax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %ax,_0cf884_data

	_05d105_jump:
		mov    _0cd09c_data,%eax
		mov    %eax,_0cd064_data
		mov    _0cd098_data,%eax
		mov    %eax,_0cd060_data
		mov    _0cd0a4_data,%eax
		mov    %eax,_0cd088_data
		mov    _0cd0a0_data,%eax
		mov    _095e63_data,%dl
		mov    %eax,_0cd084_data
		test   %dl,%dl
		je     _05d13c_jump
		call   _05cd64_func

	_05d13c_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_05d144_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0ce634_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _05d210_jump

	_05d17a_jump:
		mov    _0ce634_data,%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x000010(%esp)
		test   $0x000001,%al
		je     _05d1a0_jump
		and    $0x010000,%eax

	_05d1a0_jump:
		mov    0x00000e(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    (%esp),%eax
		call   _07f5b0_func
		mov    %eax,_0c21f8_data(%ebp)
		mov    _0ce634_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0c21f8_data(%ebp),%eax
		jmp    _05d1ee_jump

	_05d1cf_jump:
		xor    %edx,%edx
		jmp    _05d1e4_jump

	_05d1d3_jump:
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _05d1de_jump
		movb   $0x0000ff,(%eax)
		jmp    _05d1e1_jump

	_05d1de_jump:
		movb   $0x000000,(%eax)

	_05d1e1_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_05d1e4_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jb     _05d1d3_jump
		inc    %edi

	_05d1ee_jump:
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jb     _05d1cf_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_05d210_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _05d17a_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d230_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    0x000005(%eax),%dl
		mov    %eax,0x000028(%esp)
		cmp    $0x000001,%dl
		jbe    _05d5a4_jump
		cmpb   $0x000001,0x000004(%eax)
		jbe    _05d5a4_jump
		mov    (%eax),%eax
		mov    0x000028(%esp),%ebx
		sar    $0x000010,%eax
		movswl (%ebx),%ebx
		mov    %eax,%edx
		add    %ebx,%ebp
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%ebp
		mov    0x000028(%esp),%edx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,0x000008(%esp)
		mov    (%edx),%ax
		mov    %ax,0x000040(%esp)
		mov    %eax,%edx
		mov    0x000028(%esp),%eax
		mov    0x000002(%eax),%ax
		xor    %ebx,%ebx
		mov    %eax,0x000038(%esp)
		mov    %ax,0x00003c(%esp)
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00002c(%esp)
		mov    %eax,(%esp)
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		shl    $0x000002,%eax
		mov    %ebp,0x000010(%esp)
		mov    %eax,0x000024(%esp)
		jmp    _05d344_jump

	_05d2c8_jump:
		mov    0x00001c(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05d316_jump
		cmp    $0x000001,%bl
		jne    _05d2fa_jump
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _01555e_func
		jmp    _05d316_jump

	_05d2fa_jump:
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _0153c6_func

	_05d316_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000024(%esp),%ebx
		mov    0x000008(%esp),%esi
		mov    0x00002c(%esp),%edi
		add    $0x000010,%ebp
		add    $0x000010,%edx
		add    $0x000006,%eax
		add    $0x000004,%ebx
		inc    %esi
		inc    %edi
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x00002c(%esp)

	_05d344_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000004(%ebx),%al
		cmp    %esi,%eax
		jg     _05d2c8_jump
		mov    0x000010(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %edi,0x000014(%esp)
		jmp    _05d4bc_jump

	_05d37c_jump:
		mov    0x000018(%esp),%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000006,%eax,%esi
		mov    (%ecx),%eax
		add    %eax,%esi
		mov    0x000004(%esi),%al
		mov    %edx,0x000004(%esp)
		test   %al,%al
		je     _05d3ca_jump
		cmp    $0x000001,%al
		jne    _05d3b3_jump
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _01555e_func
		jmp    _05d3ca_jump

	_05d3b3_jump:
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0153c6_func

	_05d3ca_jump:
		mov    $0x000001,%ebx
		mov    0x000018(%esp),%esi
		add    %ebx,%esi
		mov    %ebx,0x00002c(%esp)
		mov    %esi,0x000018(%esp)
		lea    0x000000(,%esi,4),%ebx
		add    $0x000010,%edx
		imul   $0x000006,%esi,%ebp
		jmp    _05d432_jump

	_05d3ec_jump:
		mov    (%ecx),%esi
		add    %ebp,%esi
		mov    0x000004(%esi),%al
		test   %al,%al
		je     _05d417_jump
		cmp    $0x000001,%al
		jne    _05d40a_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _015041_func
		jmp    _05d417_jump

	_05d40a_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014e64_func

	_05d417_jump:
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000018(%esp)
		mov    %esi,0x00002c(%esp)

	_05d432_jump:
		mov    0x000028(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x00002c(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jg     _05d3ec_jump
		mov    (%ecx),%eax
		add    %eax,%ebp
		cmpb   $0x000000,0x000004(%ebp)
		je     _05d49d_jump
		mov    0x000014(%esp),%esi
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esp),%edi
		shl    $0x000004,%esi
		shl    $0x000004,%edi
		add    %eax,%esi
		add    0x000040(%esp),%edi
		cmpb   $0x000001,0x000004(%ebp)
		jne    _05d486_jump
		movswl %si,%eax
		mov    0x000004(%ecx),%ebp
		movswl %di,%esi
		mov    (%ebx,%ebp,1),%ebp
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    %esi,%eax
		mov    %ebp,%esi
		call   _01555e_func
		jmp    _05d49d_jump

	_05d486_jump:
		movswl %si,%eax
		mov    0x000004(%ecx),%esi
		movswl %di,%ebp
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _0153c6_func

	_05d49d_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x000014(%esp)

	_05d4bc_jump:
		mov    %ebx,0x000018(%esp)
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000038(%esp),%esi
		mov    0x000005(%ebx),%al
		mov    0x000014(%esp),%ebx
		mov    0x000018(%esp),%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		mov    0x000014(%esp),%esi
		shl    $0x000002,%ebp
		cmp    %esi,%eax
		jg     _05d37c_jump
		mov    0x000040(%esp),%eax
		mov    %bx,0x000034(%esp)
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000030(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %edi,%edi
		add    %eax,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000020(%esp)
		jmp    _05d591_jump

	_05d516_jump:
		mov    0x000020(%esp),%esi
		mov    (%ecx),%eax
		add    %esi,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05d562_jump
		cmp    $0x000001,%bl
		jne    _05d547_jump
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _01555e_func
		jmp    _05d562_jump

	_05d547_jump:
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0153c6_func

	_05d562_jump:
		mov    0x000030(%esp),%edi
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%ebx
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		inc    %eax
		inc    %ebx
		mov    %di,0x000030(%esp)
		mov    0x000020(%esp),%edi
		mov    %eax,0x000018(%esp)
		add    $0x000006,%edi
		mov    %ebx,0x00002c(%esp)
		mov    %edi,0x000020(%esp)

	_05d591_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x00002c(%esp),%eax
		jg     _05d516_jump

	_05d5a4_jump:
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05d5b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cd0a0_data,%edx
		mov    _0cd0a4_data,%ecx
		mov    _0cd098_data,%ebx
		mov    _0cd09c_data,%eax
		call   _0161fa_func
		mov    _0cd138_data,%eax
		mov    $_014cfa_func,%edx
		mov    %eax,_0cd128_data
		mov    %edx,_0cd124_data
		lea    0x000004(%eax),%ebx
		mov    _0cd830_data,%edx
		mov    $_0c21d8_data,%eax
		mov    %ebx,_0cd138_data
		call   _05c8fc_func
		mov    $0x00fa00,%ebx
		mov    _095e28_data,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    _0cd138_data,%edi
		call   _014c8e_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d620_func:
		mov    _0cd128_data,%eax
		mov    %eax,_0cd138_data
		mov    %eax,_0cd7b8_data
		ret    



_05d630_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cf806_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05d669_jump
		mov    %edx,%eax
		push   $0xffffffcd
		shl    $0x000005,%eax
		mov    $0x000015,%ecx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01d204_func

	_05d669_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d670_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    _0cf806_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05d70c_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		lea    0x00000c(%esp),%ebx
		push   %ebx
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000008(%esp),%ebx
		call   _01dbb4_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000015,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000004(%esp),%eax
		sub    $0x000043,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000040(%esi),%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00002c(%esi),%eax
		cmp    %ebx,%eax
		jl     _05d6f8_jump
		cmp    %ecx,%eax
		jg     _05d6f8_jump
		mov    $0x000001,%eax
		jmp    _05d6fa_jump

	_05d6f8_jump:
		xor    %eax,%eax

	_05d6fa_jump:
		test   %eax,%eax
		je     _05d70c_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d818_func

	_05d70c_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d714_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _05d8c2_jump

	_05d739_jump:
		cmpw   $0x000049,0x000060(%esi)
		jne    _05d8b2_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05d8b2_jump
		test   %bl,%bl
		je     _05d775_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _05d79a_jump

	_05d775_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_05d79a_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _05d7e7_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebp
		mov    %ebp,0x000028(%esi)

	_05d7e7_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x00002c(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f8e8_func
		mov    0x000081(%esi),%dl
		xor    %eax,%eax
		and    $0x0000bf,%dl
		mov    _0ce6b8_data,%al
		mov    %dl,0x000081(%esi)
		mov    _0ce678_data,%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _05d875_jump
		mov    $0x000001,%edx
		jmp    _05d87a_jump

	_05d875_jump:
		mov    $0xffffffff,%edx

	_05d87a_jump:
		cwtl   
		imul   %edx,%eax
		xor    %ebx,%ebx
		cwtl   
		cmp    %ebx,%eax
		jge    _05d887_jump
		mov    %ebx,%eax

	_05d887_jump:
		mov    0x000081(%esi),%bl
		add    $0x00000f,%eax
		and    $0x0000fc,%bl
		mov    %ax,0x000052(%esi)
		mov    %bl,0x000081(%esi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000050(%esi)
		decb   0x00007d(%edi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05d8b2_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _05d739_jump

	_05d8c2_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05d8cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x00001a,0x00006b(%eax)
		jae    _05d8dd_jump
		movw   $0x000000,0x000052(%ecx)

	_05d8dd_jump:
		cmpw   $0x000000,0x000052(%ecx)
		jne    _05d92d_jump
		cmpb   $0x00001a,0x00006b(%ecx)
		jne    _05d92d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _05d92d_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05d714_func
		movw   $0x000001,0x000052(%ecx)

	_05d92d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d934_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _05d942_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _05d94e_jump

	_05d942_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _05d960_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _05d960_jump

	_05d94e_jump:
		cmpb   $0x000000,0x00007d(%eax)
		jbe    _05d960_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _01d818_func

	_05d960_jump:
		pop    %edx
		pop    %ebx
		ret    



_05d964_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000081(%eax),%bl
		call   _01dfb8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		shl    $0x000004,%bl
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		shr    $0x000007,%bl
		add    %edx,%eax
		mov    %bl,%dl
		and    $0x000001,%dl
		shl    $0x000003,%dl
		cmp    $0x000006,%eax
		jb     _05d9f0_jump
		jbe    _05dbd5_jump
		cmp    $0x000100,%eax
		jb     _05d9d9_jump
		jbe    _05dae9_jump
		cmp    $0x000205,%eax
		jb     _05d9c9_jump
		jbe    _05dc74_jump
		cmp    $0x000207,%eax
		je     _05dbbd_jump
		jmp    _05dc7a_jump

	_05d9c9_jump:
		cmp    $0x000202,%eax
		jb     _05dc7a_jump
		jmp    _05dbc9_jump

	_05d9d9_jump:
		cmp    $0x000007,%eax
		jbe    _05dc50_jump
		cmp    $0x000008,%eax
		je     _05dc19_jump
		jmp    _05dc7a_jump

	_05d9f0_jump:
		cmp    $0x000002,%eax
		jb     _05da0b_jump
		jbe    _05daa1_jump
		cmp    $0x000004,%eax
		jb     _05da14_jump
		jbe    _05dbd5_jump
		jmp    _05dc74_jump

	_05da0b_jump:
		test   %eax,%eax
		jbe    _05da1f_jump
		jmp    _05dc70_jump

	_05da14_jump:
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _05dc74_jump

	_05da1f_jump:
		mov    _0ce77e_data,%dl
		movw   $0x000000,0x000040(%ecx)
		test   %dl,%dl
		je     _05da42_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _05dc7a_jump

	_05da42_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05da7c_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05da69_jump
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _01d808_func
		jmp    _05dc7a_jump

	_05da69_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		jmp    _05dc7a_jump

	_05da7c_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05dc7a_jump

	_05daa1_jump:
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %bh,%al
		mov    %bh,0x000081(%ecx)
		or     %dl,%al
		mov    %al,0x000081(%ecx)
		mov    _0ce77e_data,%ah
		movw   $0x000000,0x000040(%ecx)
		test   %ah,%ah
		je     _05dadd_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _05dc7a_jump

	_05dadd_jump:
		mov    %ecx,%eax
		call   _05d8cc_func
		jmp    _05dc7a_jump

	_05dae9_jump:
		cmpb   $0x000000,_0ce77e_data
		je     _05db05_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _05dc7a_jump

	_05db05_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05dbad_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		jne    _05db62_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%esi
		mov    0x000068(%ecx),%al
		add    %eax,%esi
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _05db7c_jump

	_05db62_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%bl
		jne    _05db7c_jump
		testb  $0x000008,0x000081(%ecx)
		sete   %bl

	_05db7c_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05db9a_jump
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func

	_05db9a_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func
		jmp    _05dc7a_jump

	_05dbad_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		jmp    _05dc7a_jump

	_05dbbd_jump:
		mov    %ecx,%eax
		call   _05d670_func
		jmp    _05dc7a_jump

	_05dbc9_jump:
		mov    %ecx,%eax
		call   _05d630_func
		jmp    _05dc7a_jump

	_05dbd5_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000040(%ecx)
		or     %al,%dh
		mov    _0ce77e_data,%bl
		mov    %dh,0x000081(%ecx)
		test   %bl,%bl
		je     _05dc7a_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _05dc7a_jump

	_05dc19_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0ce77e_data,%bh
		movw   $0x000000,0x000040(%ecx)
		test   %bh,%bh
		jne    _05dc7a_jump
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _01d808_func
		jmp    _05dc7a_jump

	_05dc50_jump:
		mov    0x000081(%ecx),%al
		and    $0x0000f7,%al
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		movw   $0x000000,0x000040(%ecx)
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05dc7a_jump

	_05dc70_jump:
		movb   $0x000064,0x00007f(%ecx)

	_05dc74_jump:
		movw   $0x000000,0x000040(%ecx)

	_05dc7a_jump:
		mov    0x00007f(%ecx),%al
		test   %al,%al
		je     _05dc88_jump
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)

	_05dc88_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05dc90_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _05dd55_jump
		mov    $0x000001,%dl
		mov    %ecx,%eax
		mov    %dl,_0ce77f_data
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05dd06_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05dd55_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ecx
		add    %ecx,%eax
		call   _061180_func
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		movw   $0x000000,0x000048(%eax,%ecx,4)
		pop    %ecx
		pop    %ebx
		ret    

	_05dd06_jump:
		mov    _0ce6dc_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _05dd1d_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _05dd47_jump

	_05dd1d_jump:
		jl     _05dd40_jump
		testb  $0x000008,0x000081(%eax)
		je     _05dd40_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_05dd40_jump:
		orb    $0x000008,0x000081(%ecx)

	_05dd47_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func

	_05dd55_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05dd58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _05dd98_jump
		mov    0x000081(%ebx),%dh
		and    $0x0000fb,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _07b628_func
		jmp    _05dedd_jump

	_05dd98_jump:
		cmpw   $0x000000,0x000052(%ebx)
		jg     _05de06_jump
		mov    0x000081(%ebx),%dh
		test   $0x000001,%dh
		je     _05ddc9_jump
		mov    0x000081(%ebx),%ch
		movl   $0x000000,0x000024(%ebx)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%ebx)
		incb   0x00007d(%eax)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ddc9_jump:
		mov    %dh,%cl
		or     $0x000003,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebx)
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    0x000028(%eax),%si
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		sub    %esi,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %dx,0x000052(%ebx)
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ddfc_jump
		neg    %eax

	_05ddfc_jump:
		mov    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05de06_jump:
		andb   $0x0000fd,0x000081(%ebx)
		mov    0x000070(%ebx),%al
		cmp    $0x000014,%al
		jne    _05dedd_jump
		mov    0x000056(%ebx),%ax
		mov    0x00004a(%ebx),%si
		mov    %ax,0x000040(%ebx)
		test   %si,%si
		je     _05de33_jump
		mov    %si,0x000042(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05de33_jump:
		testb  $0x000001,0x000081(%ebx)
		je     _05dec7_jump
		mov    0x00004e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%di
		mov    0x000028(%ebx),%cx
		add    %edi,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000068(%ebx),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %cx,0x000052(%ebx)
		xor    %ecx,%ecx
		mov    0x000074(%eax),%dl
		mov    0x000069(%eax),%cl
		add    %ecx,%edx
		sar    %edx
		mov    0x00002c(%eax),%ecx
		add    %edx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%ebx),%al
		mov    0x000069(%ebx),%dl
		add    %edx,%eax
		mov    0x00002c(%ebx),%esi
		sar    %eax
		add    %esi,%eax
		sub    %eax,%ecx
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		imul   %ecx,%eax
		mov    0x000052(%ebx),%si
		mov    %ax,0x000042(%ebx)
		test   %si,%si
		je     _05deb7_jump
		cwtd   
		idiv   %si
		mov    %ax,0x000042(%ebx)

	_05deb7_jump:
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05dec3_jump
		neg    %eax

	_05dec3_jump:
		mov    %ax,0x000052(%ebx)

	_05dec7_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ded3_jump
		neg    %eax

	_05ded3_jump:
		cwtl   
		call   _055e60_func
		sub    %ax,0x000052(%ebx)

	_05dedd_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05def0_func:
		push   %ecx
		push   %esi
		mov    $0x00000f,%esi
		and    $0x0000ff,%edx
		sub    %edx,%esi
		lea    (%esi,%esi,1),%edx
		mov    $0x000003,%esi
		mov    %dl,%cl
		mov    $0xffffffff,%edx
		shl    %cl,%esi
		shl    %cl,%ebx
		mov    (%eax),%ecx
		sub    %esi,%edx
		and    %edx,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		or     %ebx,%esi
		mov    %esi,(%eax)
		pop    %esi
		pop    %ecx
		ret    



_05df24_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $0x0000ff,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_05df58_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_05df98_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_05dfc0_func:
		add    $0x000080,%eax
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05dfe5_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05dfdb_jump
		neg    %eax

	_05dfdb_jump:
		cwtl   
		mov    _096fe0_data(,%eax,2),%ax
		ret    

	_05dfe5_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05dff2_jump
		neg    %eax

	_05dff2_jump:
		cwtl   
		mov    _096fe0_data(,%eax,2),%ax
		neg    %eax
		ret    



_05e000_func:
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05e020_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05e016_jump
		neg    %eax

	_05e016_jump:
		cwtl   
		mov    _096fe0_data(,%eax,2),%ax
		ret    

	_05e020_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05e02d_jump
		neg    %eax

	_05e02d_jump:
		cwtl   
		mov    _096fe0_data(,%eax,2),%ax
		neg    %eax
		ret    



_05e03c_func:
		push   %ecx
		push   %esi
		push   %edi
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05e09a_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05e06c_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096fe0_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		jmp    _05e088_jump

	_05e06c_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096fe0_data(,%esi,2),%cx
		mov    %ecx,%edi
		mov    %cx,(%ebx)
		neg    %edi
		mov    %di,(%ebx)

	_05e088_jump:
		movswl %ax,%ebx
		mov    _096fe0_data(,%ebx,2),%ax
		mov    %ax,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05e09a_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05e0c0_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096fe0_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		neg    %ecx
		jmp    _05e0d2_jump

	_05e0c0_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096fe0_data(,%esi,2),%cx

	_05e0d2_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _096fe0_data(,%ebx,2),%ax
		mov    %eax,%esi
		mov    %ax,(%edx)
		neg    %esi
		mov    %si,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05e10c_func:
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05e120_jump
		neg    %eax

	_05e120_jump:
		cwtl   
		mov    _096fe0_data(,%eax,2),%ax
		ret    



_05e12c_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05e13c_jump
		neg    %eax

	_05e13c_jump:
		cwtl   
		mov    _096fe0_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _096fe0_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_05e160_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008d,%ax
		jb     _05e3b8_jump
		jbe    _05e5ea_jump
		cmp    $0x0000c4,%ax
		jb     _05e29e_jump
		jbe    _05e639_jump
		cmp    $0x0000ea,%ax
		jb     _05e224_jump
		jbe    _05e3b4_jump
		cmp    $0x0000f6,%ax
		jb     _05e1e5_jump
		jbe    _05e62d_jump
		cmp    $0x0000fb,%ax
		jb     _05e1c7_jump
		jbe    _05e62d_jump
		cmp    $0x0000fc,%ax
		jbe    _05e635_jump
		cmp    $0x0000fd,%ax
		je     _05e612_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e1c7_jump:
		cmp    $0x0000f8,%ax
		jb     _05e639_jump
		jbe    _05e3b4_jump
		cmp    $0x0000f9,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e1e5_jump:
		cmp    $0x0000ef,%ax
		jb     _05e206_jump
		jbe    _05e60e_jump
		cmp    $0x0000f4,%ax
		jb     _05e639_jump
		jbe    _05e639_jump
		jmp    _05e5ea_jump

	_05e206_jump:
		cmp    $0x0000ec,%ax
		jb     _05e639_jump
		jbe    _05e5ea_jump
		cmp    $0x0000ee,%ax
		je     _05e5ea_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e224_jump:
		cmp    $0x0000cb,%ax
		jb     _05e276_jump
		jbe    _05e60e_jump
		cmp    $0x0000d5,%ax
		jb     _05e25e_jump
		jbe    _05e5ea_jump
		cmp    $0x0000dc,%ax
		jb     _05e639_jump
		cmp    $0x0000dd,%ax
		jbe    _05e3b4_jump
		cmp    $0x0000e0,%ax
		je     _05e3b4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e25e_jump:
		cmp    $0x0000cc,%ax
		jbe    _05e5ea_jump
		cmp    $0x0000d3,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e276_jump:
		cmp    $0x0000c6,%ax
		jb     _05e5ee_jump
		jbe    _05e60e_jump
		cmp    $0x0000c7,%ax
		jbe    _05e5ea_jump
		cmp    $0x0000c9,%ax
		jbe    _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e29e_jump:
		cmp    $0x0000a1,%ax
		jb     _05e338_jump
		jbe    _05e3b4_jump
		cmp    $0x0000b4,%ax
		jb     _05e300_jump
		jbe    _05e60e_jump
		cmp    $0x0000bb,%ax
		jb     _05e2e8_jump
		jbe    _05e60e_jump
		cmp    $0x0000be,%ax
		jb     _05e639_jump
		jbe    _05e60e_jump
		cmp    $0x0000c0,%ax
		jb     _05e639_jump
		cmp    $0x0000c2,%ax
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e2e8_jump:
		cmp    $0x0000b5,%ax
		jbe    _05e5ea_jump
		cmp    $0x0000b7,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e300_jump:
		cmp    $0x0000a8,%ax
		jb     _05e32a_jump
		jbe    _05e3b4_jump
		cmp    $0x0000aa,%ax
		jb     _05e639_jump
		jbe    _05e3b4_jump
		cmp    $0x0000ad,%ax
		je     _05e631_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e32a_jump:
		cmp    $0x0000a4,%ax
		je     _05e5ea_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e338_jump:
		cmp    $0x000094,%ax
		jb     _05e38a_jump
		jbe    _05e631_jump
		cmp    $0x00009a,%ax
		jb     _05e372_jump
		cmp    $0x00009b,%ax
		jbe    _05e60e_jump
		cmp    $0x00009d,%ax
		jb     _05e639_jump
		jbe    _05e5ee_jump
		cmp    $0x00009e,%ax
		je     _05e5ea_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e372_jump:
		cmp    $0x000095,%ax
		jbe    _05e5ee_jump
		cmp    $0x000096,%ax
		je     _05e3b4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e38a_jump:
		cmp    $0x00008f,%ax
		jb     _05e631_jump
		jbe    _05e3b4_jump
		cmp    $0x000092,%ax
		jb     _05e639_jump
		jbe    _05e3b4_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _05e5ea_jump

	_05e3b4_jump:
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05e3b8_jump:
		cmp    $0x00004b,%ax
		jb     _05e4de_jump
		jbe    _05e3b4_jump
		cmp    $0x000062,%ax
		jb     _05e45e_jump
		jbe    _05e5ea_jump
		cmp    $0x000079,%ax
		jb     _05e420_jump
		jbe    _05e3b4_jump
		cmp    $0x000087,%ax
		jb     _05e402_jump
		jbe    _05e3b4_jump
		cmp    $0x000089,%ax
		jb     _05e639_jump
		jbe    _05e631_jump
		cmp    $0x00008a,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e402_jump:
		cmp    $0x00007b,%ax
		jb     _05e639_jump
		jbe    _05e5f2_jump
		cmp    $0x000085,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e420_jump:
		cmp    $0x00006e,%ax
		jb     _05e440_jump
		jbe    _05e3b4_jump
		cmp    $0x000070,%ax
		jbe    _05e62d_jump
		cmp    $0x000077,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e440_jump:
		cmp    $0x000066,%ax
		jb     _05e639_jump
		jbe    _05e3b4_jump
		cmp    $0x00006d,%ax
		je     _05e62d_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e45e_jump:
		cmp    $0x000056,%ax
		jb     _05e4a2_jump
		jbe    _05e60e_jump
		cmp    $0x00005f,%ax
		jb     _05e484_jump
		jbe    _05e631_jump
		cmp    $0x000060,%ax
		jbe    _05e62d_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05e484_jump:
		cmp    $0x000058,%ax
		jb     _05e639_jump
		jbe    _05e635_jump
		cmp    $0x00005a,%ax
		jb     _05e639_jump
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05e4a2_jump:
		cmp    $0x00004e,%ax
		jb     _05e4d0_jump
		cmp    $0x00004f,%ax
		jbe    _05e3b4_jump
		cmp    $0x000052,%ax
		jb     _05e639_jump
		jbe    _05e631_jump
		cmp    $0x000053,%ax
		je     _05e3b4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e4d0_jump:
		cmp    $0x00004d,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e4de_jump:
		cmp    $0x000029,%ax
		jb     _05e578_jump
		jbe    _05e3b4_jump
		cmp    $0x000030,%ax
		jb     _05e546_jump
		jbe    _05e3b4_jump
		cmp    $0x00003a,%ax
		jb     _05e528_jump
		cmp    $0x00003b,%ax
		jbe    _05e60e_jump
		cmp    $0x000042,%ax
		jb     _05e639_jump
		jbe    _05e60e_jump
		cmp    $0x000048,%ax
		jb     _05e639_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05e528_jump:
		cmp    $0x000037,%ax
		jb     _05e639_jump
		jbe    _05e631_jump
		cmp    $0x000039,%ax
		je     _05e3b4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e546_jump:
		cmp    $0x00002c,%ax
		jb     _05e56a_jump
		jbe    _05e60e_jump
		cmp    $0x00002d,%ax
		jbe    _05e3b4_jump
		cmp    $0x00002e,%ax
		je     _05e60e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e56a_jump:
		cmp    $0x00002a,%ax
		je     _05e635_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e578_jump:
		cmp    $0x000013,%ax
		jb     _05e5c2_jump
		jbe    _05e3b4_jump
		cmp    $0x00001c,%ax
		jb     _05e5aa_jump
		jbe    _05e60e_jump
		cmp    $0x00001e,%ax
		jb     _05e639_jump
		jbe    _05e5ea_jump
		cmp    $0x00001f,%ax
		je     _05e631_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e5aa_jump:
		cmp    $0x000014,%ax
		jbe    _05e62d_jump
		cmp    $0x000015,%ax
		je     _05e3b4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e5c2_jump:
		cmp    $0x000004,%ax
		jb     _05e5e0_jump
		jbe    _05e635_jump
		cmp    $0x000007,%ax
		jb     _05e639_jump
		jbe    _05e62d_jump
		cmp    $0x00000b,%ax
		je     _05e3b4_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e5e0_jump:
		cmp    $0x000002,%ax
		je     _05e631_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05e5ea_jump:
		xor    %al,%al
		pop    %edx
		ret    

	_05e5ee_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_05e5f2_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _05e3b4_jump
		cmpw   $0x00000e,_0cf87c_data
		jne    _05e3b4_jump

	_05e60e_jump:
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05e612_jump:
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05e626_jump
		mov    $0x000004,%eax
		pop    %edx
		ret    

	_05e626_jump:
		mov    $0x000007,%eax
		pop    %edx
		ret    

	_05e62d_jump:
		mov    $0x000005,%al
		pop    %edx
		ret    

	_05e631_jump:
		mov    $0x000006,%al
		pop    %edx
		ret    

	_05e635_jump:
		mov    $0x000007,%al
		pop    %edx
		ret    

	_05e639_jump:
		mov    $0x000004,%al
		pop    %edx
		ret    



_05e640_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000001,_09257c_data(,%eax,4)
		jne    _05e664_jump
		test   %ax,%ax
		je     _05e65e_jump
		cmp    $0x000009,%ax
		jne    _05e672_jump

	_05e65e_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _05e672_jump

	_05e664_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_05e672_jump:
		movw   $0x000000,0x00005a(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x00006d(%edx),%al
		mov    %al,0x00006f(%edx)
		mov    0x00006c(%edx),%al
		mov    %al,0x00006e(%edx)
		mov    0x000076(%edx),%al
		mov    %al,0x000077(%edx)
		mov    0x000060(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		cmp    $0x000062,%ax
		jb     _05e7ed_jump
		jbe    _05e913_jump
		cmp    $0x0000ae,%ax
		jb     _05e74d_jump
		jbe    _05e953_jump
		cmp    $0x0000d5,%ax
		jb     _05e705_jump
		jbe    _05e913_jump
		cmp    $0x0000e1,%ax
		jb     _05e6f6_jump
		jbe    _05e953_jump
		cmp    $0x0000e2,%ax
		jbe    _05e95f_jump
		cmp    $0x0000e3,%ax
		je     _05e929_jump
		jmp    _05e991_jump

	_05e6f6_jump:
		cmp    $0x0000d9,%ax
		je     _05e923_jump
		jmp    _05e991_jump

	_05e705_jump:
		cmp    $0x0000b8,%ax
		jb     _05e737_jump
		jbe    _05e95f_jump
		cmp    $0x0000bb,%ax
		jb     _05e991_jump
		jbe    _05e953_jump
		cmp    $0x0000d4,%ax
		je     _05e953_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e737_jump:
		cmp    $0x0000b7,%ax
		je     _05e92f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e74d_jump:
		cmp    $0x00007a,%ax
		jb     _05e7a5_jump
		jbe    _05e947_jump
		cmp    $0x000099,%ax
		jb     _05e78f_jump
		jbe    _05e91d_jump
		cmp    $0x0000a8,%ax
		jb     _05e991_jump
		cmp    $0x0000a9,%ax
		jbe    _05e977_jump
		cmp    $0x0000ac,%ax
		je     _05e93b_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e78f_jump:
		cmp    $0x000096,%ax
		je     _05e923_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e7a5_jump:
		cmp    $0x000071,%ax
		jb     _05e7d7_jump
		jbe    _05e983_jump
		cmp    $0x000074,%ax
		jb     _05e991_jump
		jbe    _05e91d_jump
		cmp    $0x000078,%ax
		je     _05e947_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e7d7_jump:
		cmp    $0x000064,%ax
		je     _05e93b_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e7ed_jump:
		cmp    $0x000032,%ax
		jb     _05e893_jump
		jbe    _05e929_jump
		cmp    $0x00003d,%ax
		jb     _05e851_jump
		jbe    _05e953_jump
		cmp    $0x000046,%ax
		jb     _05e83b_jump
		jbe    _05e923_jump
		cmp    $0x000048,%ax
		jb     _05e991_jump
		jbe    _05e947_jump
		cmp    $0x000051,%ax
		je     _05e977_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e83b_jump:
		cmp    $0x000041,%ax
		je     _05e929_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e851_jump:
		cmp    $0x000038,%ax
		jb     _05e87d_jump
		jbe    _05e93b_jump
		cmp    $0x000039,%ax
		jbe    _05e96b_jump
		cmp    $0x00003c,%ax
		je     _05e93b_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e87d_jump:
		cmp    $0x000037,%ax
		je     _05e947_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e893_jump:
		cmp    $0x000014,%ax
		jb     _05e8e7_jump
		jbe    _05e92f_jump
		cmp    $0x000023,%ax
		jb     _05e8d1_jump
		jbe    _05e947_jump
		cmp    $0x000028,%ax
		jb     _05e991_jump
		jbe    _05e947_jump
		cmp    $0x00002b,%ax
		je     _05e947_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e8d1_jump:
		cmp    $0x000020,%ax
		je     _05e953_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e8e7_jump:
		cmp    $0x00000c,%ax
		jb     _05e901_jump
		jbe    _05e92f_jump
		cmp    $0x00000e,%ax
		je     _05e92f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e901_jump:
		cmp    $0x000005,%ax
		je     _05e929_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e913_jump:
		call   _050b60_func
		jmp    _05e995_jump

	_05e91d_jump:
		movb   $0x0000c8,0x00007a(%edx)
		jmp    _05e995_jump

	_05e923_jump:
		movb   $0x0000a0,0x00007a(%edx)
		jmp    _05e995_jump

	_05e929_jump:
		movb   $0x00003c,0x00007a(%edx)
		jmp    _05e995_jump

	_05e92f_jump:
		movb   $0x0000b4,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e93b_jump:
		movb   $0x0000dc,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e947_jump:
		movb   $0x000064,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e953_jump:
		movb   $0x000096,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e95f_jump:
		movb   $0x000032,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e96b_jump:
		movb   $0x0000fa,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e977_jump:
		movb   $0x000000,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e983_jump:
		movw   $0x000000,0x000050(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05e991_jump:
		movb   $0x000028,0x00007a(%edx)

	_05e995_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

_05e9a0_switch:
		.long   _05efd0_case
		.long   _05efdf_case
		.long   _05efee_case
		.long   _05effd_case
		.long   _05f00c_case
		.long   _05f021_case
		.long   _05f030_case




_05e9bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _05e160_func
		mov    %al,0x00007e(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		mov    _0933ee_data(,%eax,2),%ax
		mov    0x000060(%ecx),%dx
		mov    %ax,0x00005c(%ecx)
		cmp    $0x0000a3,%dx
		je     _05ea02_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05ea02_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		movw   $0x000000,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%edx,%eax,8),%al
		movb   $0x000000,0x000073(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000000,0x000072(%ecx)
		movw   $0x00ffff,0x000056(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007b(%ecx)
		mov    %al,0x00006a(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000081(%ecx)
		lea    0x000081(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000062(%ecx),%eax
		call   _080420_func
		mov    %ecx,%eax
		call   _0611ac_func
		movw   $0x000000,0x000058(%ecx)
		movb   $0x0000ff,0x00007c(%ecx)
		movl   $0x000001,0x000030(%ecx)
		mov    0x000077(%ecx),%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,0x000076(%ecx)
		mov    0x000082(%ecx),%al
		movb   $0x000000,0x00007d(%ecx)
		and    $0x0000fe,%al
		mov    0x000081(%ecx),%bh
		mov    %al,0x000082(%ecx)
		and    $0x00003f,%bh
		mov    0x000060(%ecx),%ax
		mov    %bh,0x000081(%ecx)
		cmp    $0x0000af,%ax
		jb     _05ec54_jump
		cmp    $0x0000af,%ax
		jbe    _05ee99_jump
		cmp    $0x0000df,%ax
		jb     _05eba5_jump
		jbe    _05f1e1_jump
		cmp    $0x0000ed,%ax
		jb     _05eb62_jump
		jbe    _05f113_jump
		cmp    $0x0000f1,%ax
		jb     _05eb4d_jump
		jbe    _05f133_jump
		cmp    $0x0000fa,%ax
		jb     _05eb3e_jump
		jbe    _05ee99_jump
		cmp    $0x0000fc,%ax
		jbe    _05ee10_jump
		jmp    _05f1e1_jump

	_05eb3e_jump:
		cmp    $0x0000f3,%ax
		je     _05f113_jump
		jmp    _05f1e1_jump

	_05eb4d_jump:
		cmp    $0x0000ef,%ax
		jb     _05f1e1_jump
		jbe    _05f05d_jump
		jmp    _05ee65_jump

	_05eb62_jump:
		cmp    $0x0000e4,%ax
		jb     _05eb89_jump
		jbe    _05edd0_jump
		cmp    $0x0000e6,%ax
		jbe    _05ee99_jump
		cmp    $0x0000eb,%ax
		je     _05ee8c_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eb89_jump:
		cmp    $0x0000e2,%ax
		jb     _05f1e1_jump
		jbe    _05f171_jump
		movb   $0x000002,_0cfa6e_data
		jmp    _05ef3f_jump

	_05eba5_jump:
		cmp    $0x0000bf,%ax
		jb     _05ec0c_jump
		jbe    _05ee8c_jump
		cmp    $0x0000d4,%ax
		jb     _05ebeb_jump
		jbe    _05f17f_jump
		cmp    $0x0000d9,%ax
		jb     _05ebda_jump
		jbe    _05f18c_jump
		cmp    $0x0000da,%ax
		je     _05ee25_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ebda_jump:
		cmp    $0x0000d5,%ax
		je     _05eedd_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ebeb_jump:
		cmp    $0x0000c5,%ax
		jb     _05f1e1_jump
		jbe    _05f154_jump
		cmp    $0x0000ca,%ax
		je     _05f1ad_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ec0c_jump:
		cmp    $0x0000b4,%ax
		jb     _05ec39_jump
		jbe    _05edc2_jump
		cmp    $0x0000b7,%ax
		jb     _05f1e1_jump
		jbe    _05edc2_jump
		cmp    $0x0000b8,%ax
		je     _05f171_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ec39_jump:
		cmp    $0x0000b0,%ax
		jbe    _05ee65_jump
		cmp    $0x0000b2,%ax
		je     _05f133_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ec54_jump:
		cmp    $0x000048,%ax
		jb     _05ed27_jump
		jbe    _05f052_jump
		cmp    $0x00007b,%ax
		jb     _05eccf_jump
		jbe    _05efb6_jump
		cmp    $0x000096,%ax
		jb     _05ecae_jump
		jbe    _05f140_jump
		cmp    $0x0000a8,%ax
		jb     _05ec9d_jump
		cmp    $0x0000a9,%ax
		jbe    _05f133_jump
		cmp    $0x0000aa,%ax
		je     _05f154_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ec9d_jump:
		cmp    $0x000098,%ax
		je     _05f113_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ecae_jump:
		cmp    $0x000090,%ax
		jb     _05f1e1_jump
		jbe    _05efa9_jump
		cmp    $0x000091,%ax
		je     _05f03f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eccf_jump:
		cmp    $0x00004d,%ax
		jb     _05ed06_jump
		jbe    _05f05d_jump
		cmp    $0x000062,%ax
		jb     _05f1e1_jump
		jbe    _05eed7_jump
		cmp    $0x000074,%ax
		jb     _05f1e1_jump
		cmp    $0x000076,%ax
		jbe    _05f12f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ed06_jump:
		cmp    $0x00004a,%ax
		jb     _05f1e1_jump
		jbe    _05edc2_jump
		cmp    $0x00004b,%ax
		je     _05f154_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ed27_jump:
		cmp    $0x00001c,%ax
		jb     _05ed7b_jump
		jbe    _05f080_jump
		cmp    $0x000032,%ax
		jb     _05ed60_jump
		jbe    _05ef37_jump
		cmp    $0x000034,%ax
		jb     _05eec1_jump
		jbe    _05eecc_jump
		cmp    $0x000035,%ax
		je     _05eec1_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ed60_jump:
		cmp    $0x00001d,%ax
		jbe    _05f113_jump
		cmp    $0x000022,%ax
		je     _05f113_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ed7b_jump:
		cmp    $0x000015,%ax
		jb     _05eda8_jump
		jbe    _05f121_jump
		cmp    $0x000019,%ax
		jb     _05f1e1_jump
		jbe    _05f0ef_jump
		cmp    $0x00001a,%ax
		je     _05f0a4_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eda8_jump:
		test   %ax,%ax
		jbe    _05ef90_jump
		cmp    $0x000007,%ax
		je     _05f121_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edc2_jump:
		mov    %ecx,%eax
		call   _075928_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edd0_jump:
		testb  $0x000004,_0cf81f_data
		je     _05f1e1_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cf796_data
		mov    $0x000002,%ebx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		movb   $0x000002,0x00006e(%ecx)
		call   _061220_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee10_jump:
		movw   $0x00fff1,0x00003c(%ecx)
		mov    0x00003c(%ecx),%ax
		cwtl   
		mov    %eax,0x000028(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee25_jump:
		mov    0x000028(%ecx),%ax
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %ax,_0cf850_data
		mov    0x000069(%ecx),%dl
		mov    $_0ce650_data,%eax
		mov    $0x004000,%ecx
		call   _018ad0_func
		sub    %edx,%eax
		mov    %ecx,_0ce5b0_data
		add    $0x000010,%eax
		mov    %esi,_0ce5b4_data
		mov    %ax,_0cf84a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee65_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _06bf60_func
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee8c_jump:
		mov    0x000076(%ecx),%al
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee99_jump:
		mov    0x000076(%ecx),%al
		mov    0x000081(%ecx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %al,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eec1_jump:
		movb   $0x000005,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eecc_jump:
		movb   $0x00000a,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eed7_jump:
		movw   $0x0000d5,0x000060(%ecx)

	_05eedd_jump:
		mov    $0x000001,%edx
		mov    $0x004000,%edi
		mov    %ecx,%eax
		mov    $0x0000ff,%bh
		call   _05149c_func
		mov    %ecx,%eax
		xor    %ebp,%ebp
		call   _018c8c_func
		mov    %edi,_0ce5b0_data
		mov    %ebp,_0ce5b4_data
		mov    %bh,_0cfa6d_data
		mov    %bh,_0cfa69_data
		xor    %al,%al
		movb   $0x0000b4,0x00007f(%ecx)
		mov    %al,_0cfa8e_data
		mov    %al,_0cfa68_data
		mov    %al,_0cfa6f_data
		mov    %al,_0cfa6c_data
		mov    %al,_0cfa6e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ef37_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa6e_data

	_05ef3f_jump:
		mov    %ecx,%eax
		movw   $0x0000ff,0x00005a(%ecx)
		call   _018c8c_func
		xor    %edx,%edx
		xor    %bl,%bl
		mov    $0x004000,%eax
		mov    %edx,_0ce5b4_data
		mov    %bl,_0cfa8e_data
		movb   $0x000064,0x00007f(%ecx)
		mov    $0x0000ff,%cl
		xor    %bh,%bh
		mov    %eax,_0ce5b0_data
		mov    %bh,_0cfa68_data
		mov    %cl,_0cfa69_data
		xor    %al,%al
		xor    %ch,%ch
		mov    %al,_0cfa6c_data
		mov    %ch,_0cfa6f_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ef90_jump:
		mov    0x000081(%ecx),%al
		movb   $0x00001e,0x000074(%ecx)
		and    $0x0000df,%al
		mov    %al,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05efa9_jump:
		movw   $0x000000,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05efb6_jump:
		mov    0x000075(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _05f1e1_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05e9a0_switch(,%eax,4)

	_05efd0_case:
		movb   $0x000002,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05efdf_case:
		movb   $0x000008,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05efee_case:
		movb   $0x000018,0x00007d(%ecx)
		movb   $0x0000aa,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05effd_case:
		movb   $0x00000a,0x00007d(%ecx)
		movb   $0x000064,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f00c_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f021_case:
		movb   $0x000004,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f030_case:
		movb   $0x000024,0x00007d(%ecx)
		movb   $0x000078,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f03f_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f052_jump:
		movb   $0x000001,0x00007d(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f05d_jump:
		mov    0x00006e(%ecx),%ah
		xor    %edx,%edx
		cmp    $0x00000e,%ah
		sete   %dl
		mov    %ecx,%eax
		call   _03db40_func
		movw   $0x000000,0x000056(%ecx)
		movb   $0x000050,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f080_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x000081(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x000056(%ecx)
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f0a4_jump:
		cmpw   $0x000001,_0cf88c_data
		je     _05f0c7_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d6c8_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x000056(%ecx)
		jmp    _05f0d3_jump

	_05f0c7_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x000056(%ecx)

	_05f0d3_jump:
		mov    0x000081(%ecx),%dh
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f0ef_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f113_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000056(%ecx)

	_05f121_jump:
		orb    $0x000004,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f12f_jump:
		movb   $0x000000,0x00007d(%ecx)

	_05f133_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f140_jump:
		movb   $0x0000a0,0x00007a(%ecx)
		xor    %ecx,%ecx
		mov    %cx,_0cf816_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f154_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f171_jump:
		orb    $0x000008,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f17f_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f18c_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f1ad_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05f1c1_jump
		cmpb   $0x000039,0x00006c(%ecx)
		jne    _05f1c1_jump
		mov    %ecx,_0ce6d8_data
		jmp    _05f1c7_jump

	_05f1c1_jump:
		mov    %ecx,_0ce6d4_data

	_05f1c7_jump:
		movb   $0x000003,0x00007e(%ecx)
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_05f1e1_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f1e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0ccdf4_data,%cx
		mov    %dx,_0ccdec_data
		mov    %dx,_0ccdfc_data
		test   %cx,%cx
		jle    _05f231_jump
		xor    %ecx,%ecx

	_05f20d_jump:
		mov    _0ccde8_data,%ebx
		movswl %dx,%eax
		mov    %cx,(%ebx,%eax,2)
		mov    _0ccdf8_data,%ebx
		mov    _0ccdf4_data,%si
		inc    %edx
		mov    %cx,(%ebx,%eax,2)
		cmp    %si,%dx
		jl     _05f20d_jump

	_05f231_jump:
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _05f2c9_jump

	_05f24b_jump:
		cmpw   $0x000000,_0cf806_data
		jne    _05f274_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_09257d_data(,%eax,4)
		je     _05f274_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _0742a8_func
		test   %al,%al
		jne    _05f2ba_jump

	_05f274_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000001,_09257c_data(,%eax,4)
		je     _05f2a0_jump
		mov    _0ccdec_data,%ax
		movswl %ax,%ecx
		inc    %eax
		mov    _0ccde8_data,%esi
		mov    %ax,_0ccdec_data
		mov    %dx,(%esi,%ecx,2)
		jmp    _05f2ba_jump

	_05f2a0_jump:
		mov    _0ccdfc_data,%ax
		mov    _0ccdf8_data,%ecx
		movswl %ax,%esi
		inc    %eax
		mov    %dx,(%ecx,%esi,2)
		mov    %ax,_0ccdfc_data

	_05f2ba_jump:
		mov    (%esp),%eax
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _05f24b_jump

	_05f2c9_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f2d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,0x00000c(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %dx,0x000004(%esp)
		mov    %edx,%ebx
		mov    %dx,0x000008(%esp)
		mov    %ah,_0cfa54_data
		mov    %ah,_0cfa81_data
		mov    %ah,_0cfa8e_data
		mov    %dx,_0cf896_data
		mov    %si,_0cf87a_data
		mov    %dx,_0cf894_data
		mov    %dx,_0cf886_data
		mov    %dx,_0cf82c_data
		mov    %dx,_0cf846_data
		mov    %dx,_0cf888_data
		mov    %dx,_0cf882_data
		mov    %dx,_0cf878_data
		mov    %dx,_0cf808_data
		mov    %dx,_0cf80c_data
		mov    %dx,_0cf8bc_data
		mov    %dx,_0cf88e_data
		mov    %dx,_0cf8cc_data
		mov    %dx,_0cf814_data
		mov    %dx,_0cf8d0_data
		mov    %dx,_0cf8d8_data
		mov    %dx,_0cf8c8_data
		mov    %dx,_0cf8d6_data
		mov    %dx,_0cf8ce_data
		mov    _0ccdf0_data,%eax
		xor    %dl,%bl
		mov    %edx,%esi
		mov    %bl,_0cfa56_data
		xor    %edx,%esi
		mov    _0ccdf4_data,%dx
		mov    %eax,%ecx
		mov    %edx,(%esp)
		test   %dx,%dx
		jle    _060219_jump
		lea    0x000081(%eax),%edi

	_05f3c0_jump:
		mov    0x00000c(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _05f3d3_jump
		mov    %ecx,%eax
		call   _05e640_func

	_05f3d3_jump:
		mov    0x000060(%ecx),%bx
		movw   $0x000000,0x00005e(%ecx)
		cmp    $0x0000a3,%bx
		jne    _05f3f0_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05f3f0_jump:
		mov    %ecx,%eax
		call   _05e9bc_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_09257c_data(,%eax,4)
		je     _05f426_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05f42d_jump

	_05f426_jump:
		orb    $0x000004,0x000081(%ecx)

	_05f42d_jump:
		mov    0x000060(%ecx),%ax
		cmp    $0x000077,%ax
		jb     _05f6b9_jump
		jbe    _05ffd1_jump
		cmp    $0x0000c4,%ax
		jb     _05f57f_jump
		cmp    $0x0000c5,%ax
		jbe    _05ffd1_jump
		cmp    $0x0000dc,%ax
		jb     _05f4ff_jump
		jbe    _05fa66_jump
		cmp    $0x0000ee,%ax
		jb     _05f4bb_jump
		jbe    _05ffba_jump
		cmp    $0x0000f6,%ax
		jb     _05f49c_jump
		jbe    _05f98f_jump
		cmp    $0x0000f9,%ax
		jb     _060176_jump
		jbe    _05f91b_jump
		cmp    $0x000101,%ax
		je     _05f96f_jump
		jmp    _060176_jump

	_05f49c_jump:
		cmp    $0x0000f2,%ax
		jb     _060176_jump
		jbe    _05faf8_jump
		cmp    $0x0000f4,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f4bb_jump:
		cmp    $0x0000e7,%ax
		jb     _05f4e0_jump
		jbe    _05f9f3_jump
		cmp    $0x0000e8,%ax
		jbe    _05fa27_jump
		cmp    $0x0000e9,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f4e0_jump:
		cmp    $0x0000df,%ax
		jb     _060176_jump
		jbe    _05f99e_jump
		cmp    $0x0000e0,%ax
		je     _05ffba_jump
		jmp    _060176_jump

	_05f4ff_jump:
		cmp    $0x0000cd,%ax
		jb     _05f54f_jump
		jbe    _05ff2e_jump
		cmp    $0x0000d7,%ax
		jb     _05f52c_jump
		jbe    _05ffd1_jump
		cmp    $0x0000da,%ax
		jb     _060176_jump
		jbe    _05f9c9_jump
		jmp    _05fa78_jump

	_05f52c_jump:
		cmp    $0x0000ce,%ax
		jbe    _05ffd1_jump
		cmp    $0x0000d1,%ax
		jb     _060176_jump
		cmp    $0x0000d2,%ax
		jbe    _05ffd1_jump
		jmp    _060176_jump

	_05f54f_jump:
		cmp    $0x0000c8,%ax
		jb     _05f570_jump
		jbe    _0600af_jump
		cmp    $0x0000cb,%ax
		jb     _060176_jump
		jbe    _05ffba_jump
		jmp    _05fffd_jump

	_05f570_jump:
		cmp    $0x0000c6,%ax
		je     _0600af_jump
		jmp    _060176_jump

	_05f57f_jump:
		cmp    $0x000093,%ax
		jb     _05f629_jump
		jbe    _05fdb3_jump
		cmp    $0x0000ad,%ax
		jb     _05f5ef_jump
		jbe    _060123_jump
		cmp    $0x0000bb,%ax
		jb     _05f5d0_jump
		jbe    _06013c_jump
		cmp    $0x0000be,%ax
		jb     _060176_jump
		jbe    _06002e_jump
		cmp    $0x0000c0,%ax
		jb     _060176_jump
		cmp    $0x0000c2,%ax
		jbe    _05ffd1_jump
		jmp    _060176_jump

	_05f5d0_jump:
		cmp    $0x0000b3,%ax
		jb     _060176_jump
		jbe    _05faf8_jump
		cmp    $0x0000ba,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f5ef_jump:
		cmp    $0x000099,%ax
		jb     _05f61a_jump
		jbe    _05fda7_jump
		cmp    $0x00009d,%ax
		jb     _060176_jump
		jbe    _05fb1a_jump
		cmp    $0x0000a5,%ax
		je     _05fedf_jump
		jmp    _060176_jump

	_05f61a_jump:
		cmp    $0x000094,%ax
		je     _0600d4_jump
		jmp    _060176_jump

	_05f629_jump:
		cmp    $0x000088,%ax
		jb     _05f675_jump
		jbe    _05fe2d_jump
		cmp    $0x00008f,%ax
		jb     _05f656_jump
		jbe    _05ffd1_jump
		cmp    $0x000091,%ax
		jb     _060176_jump
		jbe    _05ffa9_jump
		jmp    _05ffd1_jump

	_05f656_jump:
		cmp    $0x00008b,%ax
		jb     _060176_jump
		jbe    _05ffd1_jump
		cmp    $0x00008e,%ax
		je     _0600d4_jump
		jmp    _060176_jump

	_05f675_jump:
		cmp    $0x000082,%ax
		jb     _05f6a0_jump
		jbe    _05ffd1_jump
		cmp    $0x000085,%ax
		jb     _060176_jump
		jbe    _05f934_jump
		cmp    $0x000087,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f6a0_jump:
		cmp    $0x000079,%ax
		jb     _060176_jump
		cmp    $0x00007a,%ax
		jbe    _05ffd1_jump
		jmp    _060176_jump

	_05f6b9_jump:
		cmp    $0x00003b,%ax
		jb     _05f7ef_jump
		jbe    _05ffd1_jump
		cmp    $0x00005a,%ax
		jb     _05f761_jump
		cmp    $0x00005d,%ax
		jbe    _05ffd1_jump
		cmp    $0x00006c,%ax
		jb     _05f71d_jump
		jbe    _05ffd1_jump
		cmp    $0x00006f,%ax
		jb     _05f70e_jump
		jbe    _0600bb_jump
		cmp    $0x000070,%ax
		jbe    _05ffd1_jump
		cmp    $0x000073,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f70e_jump:
		cmp    $0x00006d,%ax
		jbe    _0600d4_jump
		jmp    _05ffd1_jump

	_05f71d_jump:
		cmp    $0x000061,%ax
		jb     _05f748_jump
		jbe    _05ffd1_jump
		cmp    $0x000063,%ax
		jb     _060176_jump
		jbe    _05fe4f_jump
		cmp    $0x000066,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f748_jump:
		cmp    $0x00005e,%ax
		jbe    _05ff44_jump
		cmp    $0x000060,%ax
		je     _05f97e_jump
		jmp    _060176_jump

	_05f761_jump:
		cmp    $0x000047,%ax
		jb     _05f7bb_jump
		jbe    _05ffd1_jump
		cmp    $0x000051,%ax
		jb     _05f792_jump
		jbe    _05feee_jump
		cmp    $0x000052,%ax
		jbe    _0600d4_jump
		cmp    $0x000053,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f792_jump:
		cmp    $0x000049,%ax
		jb     _060176_jump
		jbe    _05ffd1_jump
		cmp    $0x00004e,%ax
		jb     _060176_jump
		cmp    $0x00004f,%ax
		jbe    _05ffd1_jump
		jmp    _060176_jump

	_05f7bb_jump:
		cmp    $0x000040,%ax
		jb     _05f7e0_jump
		jbe    _05fe92_jump
		cmp    $0x000041,%ax
		jbe    _05ffc6_jump
		cmp    $0x000042,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f7e0_jump:
		cmp    $0x00003e,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f7ef_jump:
		cmp    $0x00001f,%ax
		jb     _05f897_jump
		jbe    _06010e_jump
		cmp    $0x000026,%ax
		jb     _05f853_jump
		jbe    _05ffba_jump
		cmp    $0x00002e,%ax
		jb     _05f83a_jump
		jbe    _0600af_jump
		cmp    $0x000033,%ax
		jb     _060176_jump
		cmp    $0x000034,%ax
		jbe    _05ffd1_jump
		cmp    $0x000037,%ax
		je     _0600dd_jump
		jmp    _060176_jump

	_05f83a_jump:
		cmp    $0x000027,%ax
		jbe    _05ffb4_jump
		cmp    $0x00002c,%ax
		je     _05ffd1_jump
		jmp    _060176_jump

	_05f853_jump:
		cmp    $0x000021,%ax
		jb     _060145_jump
		jbe    _05ffd1_jump
		cmp    $0x000024,%ax
		jb     _060176_jump
		jbe    _05ffd1_jump
		mov    _0cf81a_data,%dh
		mov    (%edi),%bl
		test   $0x000040,%dh
		sete   %dl
		and    $0x0000fb,%bl
		and    $0x000001,%dl
		mov    %bl,(%edi)
		shl    $0x000002,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%edi)
		jmp    _060176_jump

	_05f897_jump:
		cmp    $0x00000d,%ax
		jb     _05f8e7_jump
		jbe    _05ffd1_jump
		cmp    $0x000014,%ax
		jb     _05f8c8_jump
		jbe    _05fff0_jump
		cmp    $0x000015,%ax
		jbe    _060136_jump
		cmp    $0x000017,%ax
		je     _05ff13_jump
		jmp    _060176_jump

	_05f8c8_jump:
		cmp    $0x00000f,%ax
		jb     _060176_jump
		jbe    _05ffd1_jump
		cmp    $0x000013,%ax
		je     _05fed3_jump
		jmp    _060176_jump

	_05f8e7_jump:
		cmp    $0x000009,%ax
		jb     _05f90c_jump
		jbe    _05fedf_jump
		cmp    $0x00000a,%ax
		jbe    _06005b_jump
		cmp    $0x00000b,%ax
		je     _05ff8a_jump
		jmp    _060176_jump

	_05f90c_jump:
		cmp    $0x000003,%ax
		je     _05ffd8_jump
		jmp    _060176_jump

	_05f91b_jump:
		cmpb   $0x000002,0x00006e(%ecx)
		jne    _060176_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf8cc_data
		jmp    _060176_jump

	_05f934_jump:
		testb  $0x000008,_0cf81a_data
		jne    _05ffba_jump
		mov    _0cf81f_data,%al
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%al
		and    $0x0000fb,%dl
		shr    $0x000007,%al
		mov    %dl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000002,%al
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _060176_jump

	_05f96f_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf814_data
		jmp    _060176_jump

	_05f97e_jump:
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000056(%ecx)
		jmp    _060176_jump

	_05f98f_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf8ce_data
		jmp    _060176_jump

	_05f99e_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %ax,_0cf8d0_data
		mov    %bh,0x000081(%ecx)
		jmp    _060176_jump

	_05f9c9_jump:
		mov    0x000034(%ecx),%ax
		movw   $0x000000,0x000050(%ecx)
		mov    %ax,_0cf8d6_data
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _060176_jump

	_05f9f3_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		mov    %ax,_0cf8d8_data
		and    $0x0000fb,%dh
		mov    0x000034(%ecx),%ax
		mov    %dh,0x000081(%ecx)
		mov    %ax,0x000004(%esp)
		jmp    _060176_jump

	_05fa27_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf8c8_data
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000008(%esp)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000050(%ecx)
		or     $0x000008,%ah
		movl   $0x000000,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _060176_jump

	_05fa66_jump:
		mov    %si,_0cf88e_data
		movw   $0x000000,0x000056(%ecx)
		jmp    _060176_jump

	_05fa78_jump:
		xor    %eax,%eax
		mov    0x000077(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x000076(%ecx)
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _060176_jump
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		add    %eax,%edx
		mov    0x000028(%ecx),%eax
		cmp    0x000028(%edx),%eax
		jge    _05facf_jump
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000070,%eax
		jmp    _05faea_jump

	_05facf_jump:
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000078,%eax

	_05faea_jump:
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		jmp    _060173_jump

	_05faf8_jump:
		mov    0x00001c(%ecx),%ebp
		test   %ebp,%ebp
		jne    _060176_jump
		mov    0x000081(%ecx),%bh
		mov    %ebp,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _060176_jump

	_05fb1a_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _05fc40_jump
		mov    _0cf89c_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    _0cf88c_data,%bx
		mov    %edx,0x000028(%ecx)
		cmp    $0x000001,%bx
		jne    _05fb66_jump
		testb  $0x000040,_0cf81a_data
		je     _05fb51_jump
		movb   $0x000001,0x000076(%ecx)

	_05fb51_jump:
		mov    _0cf882_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _05fc11_jump

	_05fb66_jump:
		mov    0x000028(%ecx),%ax
		movb   $0x000000,0x000076(%ecx)
		mov    %ax,0x000050(%ecx)
		cmp    $0x000003,%bx
		jne    _05fb86_jump
		cmpw   $0x000007,_0cf87c_data
		je     _05fc0b_jump

	_05fb86_jump:
		mov    _0cf882_data,%edx
		sar    $0x000010,%edx
		lea    0x000078(%edx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cf884_data,%ax
		add    $0x000078,%eax
		mov    _0cf88c_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000005,%bx
		jne    _05fbe0_jump
		cmpw   $0x000008,_0cf87c_data
		jne    _05fbe0_jump
		mov    _0cd0a0_data,%eax
		mov    _0cd0a0_data,%bx
		add    %eax,%edx
		mov    _0cf884_data,%ax
		sub    $0x000050,%edx
		add    %ebx,%eax
		mov    %edx,0x00002c(%ecx)
		sub    $0x000050,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _05fc11_jump

	_05fbe0_jump:
		cmpw   $0x000004,_0cf88c_data
		jne    _05fc11_jump
		mov    _0cf882_data,%eax
		sar    $0x000010,%eax
		add    $0x000082,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cf884_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _05fc11_jump

	_05fc0b_jump:
		movw   $0x000000,0x00003a(%ecx)

	_05fc11_jump:
		movl   $0x000001,0x000024(%ecx)
		mov    %si,_0cf882_data
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000056(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01e030_func
		jmp    _060176_jump

	_05fc40_jump:
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fd8c_jump
		cmpw   $0x000001,_0cf88c_data
		je     _05fd8c_jump
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ecx)
		mov    _0ccdf0_data,%edx
		movw   $0x000000,0x000040(%ecx)
		addw   $0x000065,0x000050(%edx,%eax,1)
		mov    0x00004e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		mov    %eax,0x00002c(%ecx)
		cmpw   $0x000003,_0cf88c_data
		jne    _05fcc7_jump
		cmpw   $0x000007,_0cf87c_data
		je     _05fd31_jump

	_05fcc7_jump:
		mov    _0cf884_data,%ax
		add    $0x000078,%eax
		mov    _0cf88c_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000004,%bx
		jne    _05fcf2_jump
		mov    _0cf884_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)

	_05fcf2_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _05fd3f_jump
		cmpw   $0x000008,_0cf87c_data
		jne    _05fd3f_jump
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0ccdf0_data,%ebx
		mov    0x00002c(%edx,%ebx,1),%ebp
		mov    0x000032(%ecx),%edx
		add    %ebp,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		jmp    _05fd3b_jump

	_05fd31_jump:
		mov    0x00002c(%ecx),%ax
		movw   $0x000000,0x00003a(%ecx)

	_05fd3b_jump:
		mov    %ax,0x00003e(%ecx)

	_05fd3f_jump:
		mov    %ecx,%eax
		call   _01e030_func
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		orb    $0x000004,0x000081(%ecx)
		mov    _0ccdf0_data,%edx
		movl   $0x000001,0x000024(%ecx)
		mov    0x000076(%edx,%eax,1),%bl
		inc    %bl
		mov    %bl,0x000076(%edx,%eax,1)
		mov    %bl,0x00006c(%ecx)
		cmp    $0x000003,%bl
		jbe    _05fd81_jump
		mov    %bl,%al
		sub    $0x000004,%al
		mov    %al,0x00006c(%ecx)

	_05fd81_jump:
		movw   $0x000000,0x000056(%ecx)
		jmp    _060176_jump

	_05fd8c_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _060176_jump

	_05fda7_jump:
		mov    %si,_0cf888_data
		jmp    _060176_jump

	_05fdb3_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _060176_jump
		mov    _0ce678_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0ce67c_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d818_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000008,%bl
		mov    %si,_0cf878_data
		mov    %bl,0x000081(%ecx)
		jmp    _060176_jump

	_05fe2d_jump:
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0cf886_data
		mov    %bh,0x000081(%ecx)
		jmp    _060176_jump

	_05fe4f_jump:
		cmpb   $0x000000,_0ceae5_data
		je     _05fe69_jump
		cmpw   $0x000000,_0cf806_data
		jne    _05fe69_jump
		andb   $0x0000fb,0x000081(%ecx)

	_05fe69_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _05fe79_jump
		cmp    $0x000005,%al
		je     _05fe89_jump
		jmp    _060176_jump

	_05fe79_jump:
		movb   $0x000000,0x00007f(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _060176_jump

	_05fe89_jump:
		movb   $0x00001e,0x00007f(%ecx)
		jmp    _060176_jump

	_05fe92_jump:
		mov    _0cf878_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0ce5d0_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cf87a_data,%dx
		mov    0x00003a(%ecx),%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %dx,_0cf87a_data
		mov    %eax,0x000028(%ecx)
		cmp    $0x000032,%dx
		jl     _05fed3_jump
		mov    $_0c1238_data,%eax
		call   _01f988_func

	_05fed3_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _060176_jump

	_05fedf_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _060176_jump

	_05feee_jump:
		mov    _0cfa81_data,%al
		mov    _0cfa81_data,%dh
		and    $0x0000ff,%eax
		inc    %dh
		mov    %si,_0ce5cc_data(,%eax,2)
		mov    %dh,_0cfa81_data
		jmp    _060176_jump

	_05ff13_jump:
		mov    0x000081(%ecx),%dl
		and    $0x0000fb,%dl
		mov    %si,_0cf894_data
		mov    %dl,0x000081(%ecx)
		jmp    _060176_jump

	_05ff2e_jump:
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cf8be_data
		jmp    _060176_jump

	_05ff44_jump:
		mov    _0ce77c_data,%al
		mov    %al,0x00006e(%ecx)
		mov    %si,_0cf88a_data
		mov    %al,0x00006c(%ecx)
		mov    _0cf888_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%edx
		add    %eax,%edx
		mov    %edx,_0ce6dc_data
		mov    0x000081(%ecx),%dl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _060176_jump

	_05ff8a_jump:
		mov    0x000081(%ecx),%bh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0cf87e_data
		mov    %bh,0x000081(%ecx)
		jmp    _060176_jump

	_05ffa9_jump:
		movw   $0x000028,0x000056(%ecx)
		jmp    _060176_jump

	_05ffb4_jump:
		movw   $0x000000,0x000056(%ecx)

	_05ffba_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _060176_jump

	_05ffc6_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _060176_jump

	_05ffd1_jump:
		movl   $0x000000,0x000024(%ecx)

	_05ffd8_jump:
		mov    0x000081(%ecx),%bl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _060176_jump

	_05fff0_jump:
		movb   $0x000007,0x000078(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		jmp    _060176_jump

	_05fffd_jump:
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    _0ce654_data,%eax
		mov    0x000081(%ecx),%dl
		mov    %eax,0x000004(%ecx)
		and    $0x0000fb,%dl
		mov    0x000034(%ecx),%ax
		mov    %dl,0x000081(%ecx)
		mov    %ax,_0cf8bc_data
		jmp    _060176_jump

	_06002e_jump:
		movw   $0x000001,0x00004a(%ecx)
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		and    $0x0000fb,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		jmp    _060176_jump

	_06005b_jump:
		cmp    $0x000001,%si
		jl     _060176_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000084,%eax,%edx
		mov    _0ccdf0_data,%eax
		add    %edx,%eax
		orb    $0x000004,0x000081(%ecx)
		cmpw   $0x00000a,0x000060(%eax)
		jne    _060176_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _060176_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _060176_jump

	_0600af_jump:
		mov    %ecx,%eax
		call   _020c4c_func
		jmp    _060176_jump

	_0600bb_jump:
		testb  $0x000008,_0cf81f_data
		je     _0600d4_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d808_func
		movb   $0x00000a,0x00006e(%ecx)

	_0600d4_jump:
		movb   $0x000007,0x000078(%ecx)
		jmp    _060176_jump

	_0600dd_jump:
		mov    _0cf81f_data,%bh
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0cf896_data
		test   $0x000008,%bh
		je     _060176_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x00006e(%ecx)
		call   _01d818_func
		jmp    _060176_jump

	_06010e_jump:
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _060176_jump

	_060123_jump:
		movw   $0x00ffff,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    %si,_0cf808_data

	_060136_jump:
		movb   $0x000000,0x00007f(%ecx)
		jmp    _060176_jump

	_06013c_jump:
		mov    %si,_0cf80c_data
		jmp    _060176_jump

	_060145_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x00003c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		mov    0x00003c(%ecx),%ax
		movw   $0x000000,0x00003e(%ecx)
		cwtl   
		mov    %eax,0x000028(%ecx)
		mov    0x00003e(%ecx),%ax
		movl   $0x000000,0x000024(%ecx)
		cwtl   

	_060173_jump:
		mov    %eax,0x00002c(%ecx)

	_060176_jump:
		xor    %eax,%eax
		mov    _0cfa60_data,%al
		imul   $0x000014,%eax,%eax
		cmpb   $0x000006,_094d65_data(%eax)
		jne    _0601a9_jump
		cmpw   $0x00003a,0x000060(%ecx)
		jne    _0601a9_jump
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _074270_func

	_0601a9_jump:
		cmpw   $0x000000,_0cf806_data
		jne    _0601e8_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000002,_09257d_data(,%eax,4)
		je     _0601e8_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _0742a8_func
		test   %al,%al
		je     _0601e8_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_0601e8_jump:
		cmpw   $0x000000,_0cf806_data
		je     _060200_jump
		cmpw   $0x0000a1,0x000060(%ecx)
		jne    _060200_jump
		incb   _0cfa56_data

	_060200_jump:
		mov    (%esp),%eax
		add    $0x000084,%edi
		inc    %esi
		add    $0x000084,%ecx
		cmp    %ax,%si
		jl     _05f3c0_jump

	_060219_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06025b_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _06025b_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		mov    0x000008(%esp),%ecx
		mov    %cx,0x000052(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000004(%esp),%edx
		mov    %dx,0x000052(%eax)

	_06025b_jump:
		cmpw   $0x000000,_0cf806_data
		je     _060279_jump
		xor    %eax,%eax
		mov    _0cef58_data,%al
		xor    %bh,%bh
		mov    %eax,_0cd8ac_data
		mov    %bh,_0cef58_data

	_060279_jump:
		call   _05f1e8_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060288_func:
		push   %edx
		mov    %eax,%edx
		call   _05e9bc_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01e030_func
		cmpl   $0x000000,0x000020(%edx)
		je     _0602af_jump
		xor    %eax,%eax
		jmp    _0602b4_jump

	_0602af_jump:
		mov    $0x000078,%eax

	_0602b4_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x00005e(%edx)
		pop    %edx
		ret    



_0602c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf87c_data,%si
		mov    _0cf88c_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx

	_0602dd_jump:
		test   %eax,%eax
		jne    _0602fb_jump
		cmp    $0x000003,%si
		jne    _0602f2_jump
		movw   $0x00ff88,_092996_data(%ebx)
		jmp    _0602fb_jump

	_0602f2_jump:
		xor    %ecx,%ecx
		mov    %cx,_092996_data(%ebx)

	_0602fb_jump:
		cmp    $0x000011,%eax
		je     _06030a_jump
		cmp    $0x000010,%eax
		je     _06030a_jump
		cmp    $0x000018,%eax
		jne    _060320_jump

	_06030a_jump:
		cmp    $0x000001,%di
		jne    _060319_jump
		orb    $0x000008,_09257d_data(%edx)
		jmp    _060320_jump

	_060319_jump:
		andb   $0x0000f7,_09257d_data(%edx)

	_060320_jump:
		add    $0x000002,%ebx
		inc    %eax
		add    $0x000004,%edx
		cmp    $0x000106,%eax
		jl     _0602dd_jump
		mov    %di,_0cf88c_data
		mov    %si,_0cf87c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_060350_switch:
		.long   _06056f_case
		.long   _06054a_case
		.long   _06052c_case
		.long   _060535_case
		.long   _060544_case
		.long   _060553_case
		.long   _060562_case
		.long   _060578_case
		.long   _0605b0_case
		.long   _0605da_case
		.long   _060604_case
		.long   _06063c_case
		.long   _060660_case
		.long   _06068f_case
		.long   _0606c0_case




_06038c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0e4da8_data,%edx
		mov    0x000034(%edx),%ecx
		call   _010010_func
		test   %bx,%bx
		jl     _0603bd_jump
		mov    $0x000001,%eax
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jge    _0603b9_jump
		mov    %ebx,%eax

	_0603b9_jump:
		neg    %eax
		jmp    _0603cd_jump

	_0603bd_jump:
		movswl %bx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0603cd_jump
		mov    %ebx,%eax

	_0603cd_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0603e1_jump
		mov    %ebx,%eax

	_0603e1_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _0603ec_jump
		mov    %ebx,%eax

	_0603ec_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		add    $0x00002c,%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _06050e_jump
		neg    %eax

	_06050e_jump:
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _0606e1_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_060350_switch(,%eax,4)

	_06052c_case:
		mov    %cx,0x000016(%edx)
		jmp    _0606e1_jump

	_060535_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _0606e1_jump

	_060544_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_06054a_case:
		mov    %cx,0x000014(%edx)
		jmp    _0606e1_jump

	_060553_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _0606e1_jump

	_060562_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_06056f_case:
		mov    %cx,0x000012(%edx)
		jmp    _0606e1_jump

	_060578_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x0000c9,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _0606e1_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _0606e1_jump

	_0605b0_case:
		movw   $0x0000c9,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000012(%edx)
		test   %si,%si
		jg     _0606e1_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _0606e1_jump

	_0605da_case:
		movw   $0x00fffe,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000012(%edx)
		test   %cx,%cx
		jg     _0606e1_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _0606e1_jump

	_060604_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x00fffe,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _0606e1_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _0606e1_jump

	_06063c_case:
		movw   $0x00fffe,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000014(%edx)
		test   %si,%si
		jg     _0606e1_jump
		jmp    _0606db_jump

	_060660_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x00fffe,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %ax,0x000014(%edx)
		neg    %eax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _0606e1_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _0606e1_jump

	_06068f_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x000141,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%esi
		mov    %ax,0x000014(%edx)
		neg    %esi
		mov    0x000004(%edx),%di
		mov    %si,0x000014(%edx)
		test   %di,%di
		jg     _0606e1_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _0606e1_jump

	_0606c0_case:
		movw   $0x000141,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _0606e1_jump

	_0606db_jump:
		movw   $0x000080,0x000008(%edx)

	_0606e1_jump:
		cmpb   $0x000001,0x00001c(%edx)
		jne    _0606f1_jump
		add    $0x000080,%ebx
		mov    %bx,0x000002(%edx)

	_0606f1_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0606fc_case:
		push   %edx
		mov    _0e4da8_data,%edx
		test   %edx,%edx
		je     _060736_jump
		cmpl   $0x000000,0x000030(%edx)
		je     _060715_jump
		lea    0x000030(%edx),%eax
		call   _07fbcc_func

	_060715_jump:
		cmpl   $0x000000,0x000034(%edx)
		je     _060723_jump
		lea    0x000034(%edx),%eax
		call   _07fbcc_func

	_060723_jump:
		cmpl   $0x000000,_0e4da8_data
		je     _060736_jump
		mov    $_0e4da8_data,%eax
		call   _07fbcc_func

	_060736_jump:
		pop    %edx
		ret    



_060738_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%edi
		xor    %cl,%cl
		test   %ebx,%ebx
		je     _0607a3_jump
		test   %edi,%edi
		je     _0607a3_jump
		mov    $0x000038,%eax
		call   _07fbb4_func
		mov    %eax,%edx
		mov    %eax,_0e4da8_data
		test   %eax,%eax
		je     _0607a3_jump
		mov    %ebx,0x000020(%eax)
		mov    %eax,%esi
		mov    %edi,0x000024(%eax)
		mov    $0x000058,%eax
		call   _07fbb4_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _0607a3_jump
		mov    $0x000078,%eax
		call   _07fbb4_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _0607a3_jump
		mov    _0cd130_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_0607a3_jump:
		test   %cl,%cl
		je     _0607e0_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _07e380_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _07e380_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _06038c_func
		jmp    _0607e5_jump

	_0607e0_jump:
		call   _0606fc_case

	_0607e5_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_0607f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0e4da8_data,%ecx
		mov    0x00001c(%ecx),%ah
		mov    0x000034(%ecx),%edi
		test   %ah,%ah
		jne    _060834_jump
		cmpw   $0x000000,0x000004(%ecx)
		jl     _060815_jump
		mov    (%ecx),%ax
		jmp    _06081e_jump

	_060815_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%si
		sub    %esi,%eax

	_06081e_jump:
		mov    %ax,0x00002c(%esp)
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x00002c(%esp)
		jmp    _06083b_jump

	_060834_jump:
		movw   $0x000200,0x00002c(%esp)

	_06083b_jump:
		lea    0x000028(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05e03c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%ebp
		call   _05e03c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05e03c_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		mov    %eax,0x000020(%esp)
		mov    0x000026(%esp),%eax
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000030(%esp)
		mov    %eax,0x000010(%esp)

	_0608b8_jump:
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x00000a(%ecx),%dx
		mov    0x000008(%edi),%ebx
		test   %dx,%dx
		je     _060913_jump
		mov    0x000010(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000020(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000020(%esp),%eax
		imul   0x000010(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_060913_jump:
		cmpw   $0x000000,0x000008(%ecx)
		je     _060950_jump
		mov    0x00001c(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%ebx
		imul   0x00001c(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_060950_jump:
		cmpw   $0x000000,0x000006(%ecx)
		je     _060995_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %ebx,0x00000c(%esp)
		mov    0x000014(%esp),%ebx
		imul   %esi,%ebx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		mov    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    (%esp),%esi
		mov    %edx,%ebx
		sar    $0x000009,%esi
		sar    $0x000009,%ebx

	_060995_jump:
		mov    0x00002a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000030(%esp),%dh
		add    $0x000014,%edi
		inc    %dh
		mov    %eax,-0x000004(%edi)
		mov    %dh,0x000030(%esp)
		cmp    $0x000006,%dh
		jb     _0608b8_jump
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%di
		mov    0x000008(%ecx),%dx
		mov    0x00000a(%ecx),%bx
		add    %eax,%edi
		mov    0x000014(%ecx),%ax
		mov    %di,0x000006(%ecx)
		add    %eax,%edx
		mov    0x000016(%ecx),%ax
		mov    %dx,0x000008(%ecx)
		add    %eax,%ebx
		mov    %bx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _060a82_jump
		neg    %eax

	_060a82_jump:
		mov    (%ecx),%si
		add    %eax,%esi
		mov    0x000002(%ecx),%di
		mov    %si,(%ecx)
		cmp    %di,%si
		jbe    _060a98_jump
		movw   $0x000000,(%ecx)

	_060a98_jump:
		mov    (%ecx),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060aa8_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0e4da8_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _010045_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _010045_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_060ad0_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x00007c(%eax)
		pop    %edx
		ret    



_060ae4_func:
		push   %edx
		cmp    $0x00007f,%al
		jbe    _060af8_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_060af8_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_060afc_jump:
		xor    %al,%al
		ret    



_060b00_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_060b20_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		ja     _060b54_jump
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)

	_060b54_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_060b5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _060ae4_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _060ae4_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060ba8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _060ae4_func
		mov    0x000046(%edx),%si
		mov    %ax,0x000056(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _060ae4_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060c14_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _061154_func
		mov    $0x000001,%al
		ret    

	_060c24_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_060c2c_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		ja     _060c47_jump
		incw   0x000046(%eax)

	_060c47_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_060c4c_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_060c54_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_060c5c_jump:
		xor    %al,%al
		ret    



_060c60_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _061180_func
		nop



_060c6c_func:
		mov    $0x000001,%al
		ret    



_060c70_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000073(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000070(%eax)
		call   _01d6c8_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_060c90_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _0611f4_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060cbc_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060cdc_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _060cff_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_060cff_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060d04_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _060d27_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_060d27_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060d2c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _060d4f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_060d4f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060d54_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _060d77_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_060d77_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060d7c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060da8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060dd4_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _061220_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_060dec_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d810_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_060e0c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d808_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_060e2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _060e49_jump

	_060e3c_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _061180_func
		cmp    %cx,%dx
		jl     _060e3c_jump

	_060e49_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060e50_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _0611f4_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_060e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _0611f4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _061220_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060e88_func:
		call   _060ad0_func
		mov    $0x000001,%al
		ret    



_060e90_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x00001a(%eax,%edx,4),%bx
		dec    %ebx
		mov    %bx,0x00001a(%eax,%edx,4)
		test   %bx,%bx
		jle    _060eba_jump
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_060eba_jump:
		decb   0x00007c(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060ec4_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_060ed0_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _060eef_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _061220_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_060eef_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060ef4_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _060f13_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _061220_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_060f13_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060f18_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		je     _060f3e_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _060f3e_jump

	_060f31_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _061180_func
		cmp    %cx,%dx
		jl     _060f31_jump

	_060f3e_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060f44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		jne    _060f6a_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _060f6a_jump

	_060f5d_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _061180_func
		cmp    %cx,%dx
		jl     _060f5d_jump

	_060f6a_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060f70_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fd,%dh
		mov    %dh,0x000081(%eax)
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_060f98_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _060fd9_jump
		jbe    _06110e_jump
		cmp    $0x000046,%ax
		jb     _060fca_jump
		jbe    _060ff8_jump
		cmp    $0x000047,%ax
		jbe    _061014_jump
		cmp    $0x000048,%ax
		je     _061040_jump
		jmp    _06114b_jump

	_060fca_jump:
		cmp    $0x000004,%ax
		je     _061129_jump
		jmp    _06114b_jump

	_060fd9_jump:
		cmp    $0x000001,%ax
		jb     _060fea_jump
		jbe    _061091_jump
		jmp    _0610b2_jump

	_060fea_jump:
		test   %ax,%ax
		je     _06106d_jump
		jmp    _06114b_jump

	_060ff8_jump:
		mov    %edx,%eax
		call   _01dff4_func
		test   %ax,%ax
		je     _061144_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _06114b_jump

	_061014_jump:
		mov    0x000081(%edx),%cl
		test   $0x000001,%cl
		je     _06102f_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06102f_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061040_jump:
		mov    0x000081(%edx),%ah
		test   $0x000010,%ah
		jne    _06105c_jump
		mov    %ah,%bh
		or     $0x000002,%bh
		mov    %bh,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06105c_jump:
		mov    %ah,%bl
		and    $0x0000fd,%bl
		mov    %bl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06106d_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000050(%edx),%cl
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _061144_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061091_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _06bf60_func
		test   %ax,%ax
		jne    _061144_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0610b2_jump:
		mov    %edx,%eax
		mov    0x000081(%edx),%bl
		call   _01dfb8_func
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		shl    $0x000004,%bl
		mov    0x000050(%edx),%ah
		shr    $0x000007,%bl
		cmp    %ah,%al
		jne    _0610e1_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _0610e8_jump

	_0610e1_jump:
		andb   $0x0000fd,0x000081(%edx)

	_0610e8_jump:
		mov    %bl,%al
		mov    0x000081(%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,0x000081(%edx)
		or     %al,%ah
		mov    %ah,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06110e_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%cx
		mov    0x00006d(%edx),%al
		cmp    %cx,%ax
		jne    _061144_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061129_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%bx
		mov    0x00006c(%edx),%al
		cmp    %bx,%ax
		jne    _061144_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061144_jump:
		andb   $0x0000fd,0x000081(%edx)

	_06114b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061154_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_0970e4_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_061180_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_0970e8_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_0611ac_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _0611ed_jump
		testb  $0x000010,0x000081(%eax)
		je     _0611f1_jump
		mov    0x000048(%edx),%ax
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %ax,%ax
		jne    _0611f1_jump

	_0611cf_jump:
		mov    %edx,%eax
		call   _061154_func
		xor    %eax,%eax
		mov    0x000070(%edx),%al
		imul   $0x00000c,%eax,%ebx
		mov    %edx,%eax
		call   *_0970ec_data(%ebx)
		test   %al,%al
		jne    _0611cf_jump
		pop    %edx
		pop    %ebx
		ret    

	_0611ed_jump:
		movb   $0x00001e,0x000070(%eax)

	_0611f1_jump:
		pop    %edx
		pop    %ebx
		ret    



_0611f4_func:
		push   %ebx
		push   %ecx
		mov    0x00007c(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x00007c(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x00007c(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_061220_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000081(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_061241_jump:
		mov    %ecx,%eax
		call   _061180_func
		cmp    0x000046(%ecx),%bx
		je     _061266_jump
		cmpb   $0x00000b,0x000070(%ecx)
		jne    _061241_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _061241_jump

	_061266_jump:
		cmpb   $0x000000,(%esp)
		je     _0612b5_jump
		cmp    0x000046(%ecx),%bx
		je     _0612b9_jump
		mov    0x000081(%ecx),%bl
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _0611ac_func
		mov    0x000004(%esp),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000ef,%bh
		shl    $0x000004,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_0612b5_jump:
		movb   $0x00001e,0x000070(%ecx)

	_0612b9_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_0612c0_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _0611f4_func
		and    $0x0000ff,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _061220_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_0612f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000081(%edx),%bl
		add    $0x000081,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061320_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		jb     _06133a_jump
		jbe    _061391_jump
		cmp    $0x000005,%al
		je     _0613d9_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06133a_jump:
		cmp    $0x000001,%al
		jne    _06146a_jump
		cmpb   $0x00000a,_0cef58_data
		jb     _06137a_jump
		xor    %eax,%eax
		mov    _0cef58_data,%al
		mov    $0x000002,%edx
		mov    %ax,0x000052(%ecx)
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _01d808_func
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06137a_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d808_func
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061391_jump:
		mov    $0x00000a,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		cmpb   $0x000000,_0cf9f7_data
		jne    _06146a_jump
		xor    %edx,%edx
		mov    0x000050(%ecx),%eax
		mov    _0cef58_data,%dl
		sar    $0x000010,%eax
		sub    %edx,%eax
		cmp    $0x00000a,%eax
		jge    _06146a_jump
		mov    %dl,%cl
		dec    %cl
		mov    %cl,_0cef58_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0613d9_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _061401_jump
		mov    _0ce6bc_data,%dl
		cmp    $0x00000b,%dl
		je     _061401_jump
		cmp    $0x00000c,%dl
		je     _061401_jump
		mov    $0x00000b,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_061401_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _06146a_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d808_func
		mov    %ecx,%eax
		call   _07a474_func
		call   _01d0ec_func
		mov    _0ce6d1_data,%bl
		mov    _0ceae5_data,%al
		or     $0x000001,%bl
		mov    %al,_0cfa85_data
		mov    _0cfa82_data,%al
		mov    %bl,_0ce6d1_data
		mov    %al,_0cfa84_data
		call   _03cadc_func

	_06146a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_061470_switch:
		.long   _0614da_case
		.long   _061514_case
		.long   _061549_case
		.long   _06152b_case
		.long   _06153f_case
		.long   _061549_case

_061488_switch:
		.long   _0614f4_case
		.long   _061549_case
		.long   _0614fc_case
		.long   _061549_case
		.long   _061549_case
		.long   _061549_case
		.long   _061549_case
		.long   _061549_case
		.long   _061549_case
		.long   _061504_case
		.long   _06150c_case




_0614b4_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    _0cf88c_data,%bx
		dec    %ebx
		xor    %eax,%eax
		cmp    $0x000005,%bx
		ja     _061549_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_061470_switch(,%ebx,4)

	_0614da_case:
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _061549_case
		and    $0x0000ff,%edx
		jmp    *%cs:_061488_switch(,%edx,4)

	_0614f4_case:
		mov    $0x000015,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0614fc_case:
		mov    $0x000014,%eax
		pop    %edx
		pop    %ebx
		ret    

	_061504_case:
		mov    $0x000012,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06150c_case:
		mov    $0x000013,%eax
		pop    %edx
		pop    %ebx
		ret    

	_061514_case:
		cmp    $0x000004,%dl
		jb     _061549_case
		jbe    _061523_jump
		cmp    $0x000009,%dl
		je     _061504_case
		pop    %edx
		pop    %ebx
		ret    

	_061523_jump:
		mov    $0x000011,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06152b_case:
		cmp    $0x000003,%dl
		jb     _061549_case
		jbe    _061544_jump
		cmp    $0x000009,%dl
		jne    _061549_case
		mov    $0x00000d,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06153f_case:
		cmp    $0x000002,%dl
		jne    _061549_case

	_061544_jump:
		mov    $0x00000c,%eax

	_061549_case:
		pop    %edx
		pop    %ebx
		ret    



_06154c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0cf81b_data
		jne    _06158c_jump
		testb  $0x000001,_0ce6d1_data
		jne    _061590_jump
		mov    _0ce6bd_data,%dh
		test   %dh,%dh
		je     _06157d_jump
		cmp    $0x000003,%dh
		je     _06157d_jump
		mov    $0x000001,%eax
		jmp    _06157f_jump

	_06157d_jump:
		xor    %eax,%eax

	_06157f_jump:
		test   %eax,%eax
		jne    _06158c_jump
		cmpb   $0x000000,_0cfa55_data
		je     _061590_jump

	_06158c_jump:
		movb   $0x000000,0x00007b(%esi)

	_061590_jump:
		mov    _0ce6d1_data,%al
		mov    0x00006c(%esi),%cl
		and    $0x0000fe,%al
		test   %cl,%cl
		jne    _061663_jump
		testb  $0x000001,_0ce6d1_data
		je     _0615ed_jump
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0cef58_data,%dl
		mov    _0cfa55_data,%bl
		add    %ebx,%edx
		cmp    $0x00000a,%edx
		jl     _0615e3_jump
		mov    $0x00012c,%edx
		mov    %esi,%eax
		mov    %dx,_095e68_data
		mov    $0x00000b,%edx
		call   _01d808_func
		movb   $0x0000c8,0x00007f(%esi)
		jmp    _06188a_jump

	_0615e3_jump:
		mov    %al,_0ce6d1_data
		jmp    _06188a_jump

	_0615ed_jump:
		cmpb   $0x000001,0x00007b(%esi)
		jb     _061634_jump
		cmpb   $0x000014,0x00006b(%esi)
		jae    _061634_jump
		cmpb   $0x00000a,_0cef58_data
		jb     _06160e_jump
		movb   $0x000014,0x00006b(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06160e_jump:
		mov    $0x000096,%eax
		mov    $0x00000a,%edx
		mov    %ax,_095e68_data
		mov    %esi,%eax
		call   _01d808_func
		andb   $0x0000f7,0x000081(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061634_jump:
		mov    0x00007b(%esi),%ah
		test   %ah,%ah
		jne    _06188a_jump
		cmpb   $0x000013,0x00006b(%esi)
		jne    _06188a_jump
		mov    %ah,0x00006b(%esi)
		test   %ah,%ah
		jne    _06188a_jump
		andb   $0x0000fe,_0ce6d1_data
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061663_jump:
		mov    0x00007b(%esi),%ch
		test   %ch,%ch
		je     _061867_jump
		testb  $0x000001,_0ce6d1_data
		je     _061699_jump
		cmp    $0x00000b,%cl
		jne    _061699_jump
		mov    0x00007f(%esi),%bl
		dec    %bl
		mov    %bl,0x00007f(%esi)
		jne    _06188a_jump
		mov    $0x000001,%edx
		mov    %al,_0ce6d1_data
		jmp    _061883_jump

	_061699_jump:
		mov    0x00006c(%esi),%cl
		cmp    $0x000001,%cl
		jne    _061858_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _0616bf_jump
		mov    _0ce6bc_data,%al
		test   %al,%al
		je     _0616cc_jump
		cmp    %cl,%al
		je     _0616cc_jump
		cmp    $0x000002,%al
		je     _0616cc_jump

	_0616bf_jump:
		cmpb   $0x000001,_0ce6bd_data
		jne    _06188a_jump

	_0616cc_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    _0ce678_data,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0ce6b8_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %edx,%ebx
		sar    %eax
		sub    %eax,%ebx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce67c_data,%ecx
		mov    _0ce6b9_data,%al
		add    %eax,%ecx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _06173a_jump
		neg    %eax

	_06173a_jump:
		cmp    $0x000008,%eax
		jg     _06188a_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06174c_jump
		neg    %eax

	_06174c_jump:
		cmp    $0x000010,%eax
		jg     _06175a_jump
		testb  $0x000008,_0ce6d1_data
		jne    _061779_jump

	_06175a_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _061763_jump
		neg    %eax

	_061763_jump:
		cmp    $0x000010,%eax
		jg     _06188a_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06188a_jump

	_061779_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _061782_jump
		neg    %eax

	_061782_jump:
		cmp    $0x000010,%eax
		jg     _0617c2_jump
		testb  $0x000008,_0ce6d1_data
		je     _0617c2_jump
		mov    0x000081(%esi),%dh
		and    $0x0000f7,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%esi)
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce6b8_data,%al
		sub    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		sub    %eax,%edx
		lea    -0x00000c(%edx),%eax
		jmp    _061809_jump

	_0617c2_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _0617cb_jump
		neg    %eax

	_0617cb_jump:
		cmp    $0x000010,%eax
		jg     _06180e_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06180e_jump
		mov    0x000081(%esi),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%esi)
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0ce6b8_data,%al
		sub    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %edx,%eax
		add    $0x00000c,%eax

	_061809_jump:
		mov    %eax,_0ce678_data

	_06180e_jump:
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		add    %eax,%edx
		sar    $0x000004,%edx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %edx,_0ce67c_data
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %dx,_0ce690_data
		mov    %dx,_0cf866_data
		mov    %dx,_0ce692_data
		mov    %dx,_0ce6a2_data
		call   _061320_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061858_jump:
		mov    %esi,%eax
		call   _061320_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061867_jump:
		cmp    $0x00000a,%cl
		je     _06188a_jump
		test   %ch,%ch
		jne    _06188a_jump
		cmpb   $0x000003,_0ce6bd_data
		je     _06188a_jump
		cmp    $0x000001,%cl
		je     _06188a_jump
		mov    $0x000001,%edx

	_061883_jump:
		mov    %esi,%eax
		call   _01d808_func

	_06188a_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061894_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02f658_func
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _061963_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _061963_jump
		mov    $0x000001,%dh
		mov    _0ccdf0_data,%ecx
		mov    %dh,_0cfa44_data
		mov    _0ccdf4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _061963_jump

	_0618d4_jump:
		cmpw   $0x000026,0x000060(%ecx)
		jne    _061953_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _061953_jump
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f8e8_func
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d818_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000032,%eax
		movw   $0x00fffe,0x000042(%ecx)
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01e030_func
		mov    %esi,%eax
		call   _01d808_func
		movw   $0x00fff8,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061953_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0618d4_jump

	_061963_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061968_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_061980_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _061a88_jump

	_0619a5_jump:
		cmpw   $0x000000,0x000060(%ecx)
		jne    _0619b2_jump
		cmp    $0x000001,%dx
		je     _0619c7_jump

	_0619b2_jump:
		cmpw   $0x000009,0x000060(%ecx)
		jne    _061a78_jump
		cmp    $0x000002,%dx
		jne    _061a78_jump

	_0619c7_jump:
		cmpw   $0x000000,0x00003c(%ecx)
		jg     _061a78_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _061a78_jump
		andb   $0x0000bb,0x000081(%ecx)
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x00005e(%ecx)
		call   _01d818_func
		movl   $0x000001,0x000030(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%esi),%esi
		sar    $0x000002,%eax
		sub    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x00002c(%ecx)
		call   _01dfb8_func
		mov    (%esp),%eax
		mov    0x000081(%ecx),%dh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dh
		je     _061a57_jump
		mov    0x000004(%esp),%eax
		jmp    _061a61_jump

	_061a57_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000040(%ecx)
		neg    %eax

	_061a61_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01e030_func
		andb   $0x0000ef,0x000081(%ecx)
		add    $0x000008,%esp
		pop    %esi
		ret    

	_061a78_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _0619a5_jump

	_061a88_jump:
		add    $0x000008,%esp
		pop    %esi
		ret    



_061a90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02f658_func
		cmpb   $0x000000,_0ce77e_data
		jne    _061ab4_jump
		cmpb   $0x000000,_0ce780_data
		je     _061b8f_jump

	_061ab4_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _07bc60_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _061ad2_jump
		neg    %eax

	_061ad2_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _061b81_jump
		cmpw   $0x00000f,0x000008(%esp)
		jge    _061b81_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061af9_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _061b0f_jump

	_061af9_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061b05_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _061b0f_jump

	_061b05_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _061ba7_jump

	_061b0f_jump:
		mov    _0ce6dc_data,%eax
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _061ba7_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01d818_func
		andb   $0x0000ef,0x000081(%esi)
		mov    0x000081(%esi),%cl
		mov    $0x000001,%ebx
		test   $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061b81_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061ba7_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _061ba7_jump
		jmp    _061b9b_jump

	_061b8f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061ba7_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _061ba7_jump

	_061b9b_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01d808_func

	_061ba7_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061bb0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0ce6dc_data,%eax
		mov    0x000034(%eax),%eax
		mov    0x000034(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jle    _061c05_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _061c05_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _061c05_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		movw   $0x000001,_0cf796_data
		mov    _0cf81f_data,%dh
		or     $0x000004,%dh
		movb   $0x000002,0x00006e(%ecx)
		mov    %dh,_0cf81f_data

	_061c05_jump:
		pop    %ecx
		pop    %ebx
		ret    



_061c08_func:
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		ja     _061c18_jump
		dec    %dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    

	_061c18_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    



_061c20_func:
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		je     _061c2d_jump
		cmp    $0x000004,%dl
		jne    _061c30_jump

	_061c2d_jump:
		decb   0x000076(%eax)

	_061c30_jump:
		ret    



_061c34_func:
		push   %edx
		mov    %eax,%edx
		call   _02f658_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_061c4c_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0cf81a_data
		je     _061c7f_jump
		cmpw   $0x000003,_0cf868_data
		je     _061c7f_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    _0ce6dc_data,%eax
		mov    0x000034(%ebx),%dx
		mov    %dx,0x00004a(%eax)

	_061c7f_jump:
		pop    %ebx
		ret    



_061c84_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _07b628_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _061cd0_jump
		call   _058644_func
		mov    _0cf82a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_061cd0_jump:
		movw   $0x00012c,_095e68_data
		call   _07b838_func
		mov    %ax,_0cf82c_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _061cef_jump
		call   _058644_func

	_061cef_jump:
		mov    0x000081(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%ebx)
		call   _074270_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061d10_func:
		push   %ebx
		cmp    $0x000004,%dx
		jne    _061d4f_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _061d4f_jump
		mov    _0ce6dc_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _061d45_jump
		jle    _061d35_jump
		mov    $0x000009,%edx
		jmp    _061d4a_jump

	_061d35_jump:
		testb  $0x000008,0x000081(%edx)
		je     _061d45_jump
		mov    $0x000009,%edx
		jmp    _061d4a_jump

	_061d45_jump:
		mov    $0x000006,%edx

	_061d4a_jump:
		call   _01d808_func

	_061d4f_jump:
		pop    %ebx
		ret    



_061d54_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _07b628_func
		mov    _0cf81a_data,%ah
		mov    0x000081(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0cf81a_data
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

_061d80_switch:
		.long   _061e3b_case
		.long   _061e51_case
		.long   _061e41_case
		.long   _061e51_case
		.long   _061e41_case
		.long   _061e51_case
		.long   _061e51_case
		.long   _061e47_case
		.long   _061e51_case
		.long   _061e4d_case
		.long   _061e51_case
		.long   _061e4d_case




_061db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _061e04_jump
		testb  $0x000001,_0cf81a_data
		jne    _061dd2_jump
		mov    _0ce6dc_data,%eax
		movb   $0x000008,0x00006e(%eax)
		jmp    _061e51_case

	_061dd2_jump:
		mov    _0ce6dc_data,%ebx
		mov    0x00006e(%ebx),%al
		cmp    $0x000003,%al
		jb     _061dea_jump
		jbe    _061df8_jump
		cmp    $0x000005,%al
		je     _061dfe_jump
		jmp    _061e51_case

	_061dea_jump:
		cmp    $0x000001,%al
		jne    _061e51_case
		movb   $0x000008,0x00006e(%ebx)
		jmp    _061e51_case

	_061df8_jump:
		movb   $0x00000a,0x00006e(%ebx)
		jmp    _061e51_case

	_061dfe_jump:
		movb   $0x00000c,0x00006e(%ebx)
		jmp    _061e51_case

	_061e04_jump:
		cmpb   $0x00000e,0x00006c(%edx)
		jne    _061e51_case
		testb  $0x000001,_0cf81a_data
		jne    _061e1e_jump
		mov    _0ce6dc_data,%eax
		movb   $0x000001,0x00006e(%eax)
		jmp    _061e51_case

	_061e1e_jump:
		mov    _0ce6dc_data,%eax
		mov    0x00006e(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _061e51_case
		and    $0x0000ff,%ebx
		jmp    *%cs:_061d80_switch(,%ebx,4)

	_061e3b_case:
		movb   $0x000003,0x00006e(%eax)
		jmp    _061e51_case

	_061e41_case:
		movb   $0x000005,0x00006e(%eax)
		jmp    _061e51_case

	_061e47_case:
		movb   $0x00000a,0x00006e(%eax)
		jmp    _061e51_case

	_061e4d_case:
		movb   $0x00000c,0x00006e(%eax)

	_061e51_case:
		mov    %edx,%eax
		call   _07b628_func
		mov    _0cf81a_data,%al
		mov    0x000081(%edx),%ch
		or     $0x000001,%al
		and    $0x0000fb,%ch
		mov    %al,_0cf81a_data
		mov    _0ce6dc_data,%eax
		mov    %ch,0x000081(%edx)
		mov    0x00006e(%eax),%bl
		mov    %bl,0x00006c(%eax)
		mov    %bl,_0ce77c_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0ceadf_data
		call   _07228c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061ea0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _07b628_func
		mov    0x000076(%edx),%al
		mov    _0ce6c6_data,%ah
		add    %al,%ah
		mov    _0cef5b_data,%bl
		mov    %ah,_0ce6c6_data
		cmp    %bl,%ah
		jbe    _061eca_jump
		mov    %bl,_0ce6c6_data

	_061eca_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		pop    %edx
		pop    %ebx
		ret    



_061ee4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    %ebx,%eax
		call   _07b628_func
		mov    _0cf81a_data,%ah
		mov    0x000081(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0cf81a_data
		mov    %dl,0x000081(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_061f20_func:
		push   %edx
		orb    $0x000040,_0cf81a_data
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		pop    %edx
		ret    



_061f50_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _01d808_func
		cmpw   $0x000000,_0cf806_data
		je     _061fb0_jump
		mov    _0cfa56_data,%dl
		dec    %dl
		mov    %dl,_0cfa56_data
		mov    _0cfa55_data,%dh
		inc    %dh
		mov    %dh,_0cfa55_data
		mov    %dh,_0cef58_data
		test   %dl,%dl
		jne    _061fb6_jump
		movw   $0x00ffe0,_0cf810_data
		call   _03cab4_func
		jmp    _061fb6_jump

	_061fb0_jump:
		incb   _0cef58_data

	_061fb6_jump:
		cmpb   $0x000063,_0cef58_data
		jbe    _062006_jump
		mov    %ebx,%eax
		call   _07b628_func
		cmpw   $0x000000,_0cf806_data
		je     _061fdb_jump
		movw   $0x00ffff,_0cf82c_data
		jmp    _061fe6_jump

	_061fdb_jump:
		call   _07b838_func
		mov    %ax,_0cf82c_data

	_061fe6_jump:
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _061ff8_jump
		call   _058644_func

	_061ff8_jump:
		movb   $0x000001,_0cfa99_data
		subb   $0x000064,_0cef58_data

	_062006_jump:
		mov    0x000038(%ebx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebx),%ax
		add    $0x00000a,%eax
		cwtl   
		call   _07bd40_func
		pop    %edx
		pop    %ebx
		ret    



_062024_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _07b628_func
		mov    _0cf844_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _062061_jump
		mov    $0x000004,%ah
		mov    %ah,_0ce6c6_data
		mov    %ah,_0cef5b_data
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ebx
		andb   $0x0000fb,0x000081(%ebx,%eax,1)

	_062061_jump:
		movw   $0x00012c,_095e68_data
		call   _07b838_func
		mov    %ax,_0cf846_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _062087_jump
		mov    $0x000004,%al
		mov    %al,_0ce6c6_data
		mov    %al,_0cef5b_data

	_062087_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    _0cf868_data,%cx
		cmp    $0x000003,%cx
		je     _0620bf_jump
		cmp    $0x000004,%cx
		je     _0620bf_jump
		mov    $0x000004,%bh
		mov    %bh,_0ce6c6_data
		mov    %bh,_0cef5b_data

	_0620bf_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0620c4_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		call   _02e998_func
		pop    %edx
		ret    



_0620e4_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    0x000077(%eax),%dl
		jae    _062100_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		cmp    $0x000001,%bl
		jae    _062100_jump
		mov    0x000077(%eax),%dl
		mov    %dl,0x000076(%eax)

	_062100_jump:
		pop    %edx
		pop    %ebx
		ret    



_062104_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cf884_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06213d_jump
		mov    0x000076(%edx),%al
		cmp    0x000077(%edx),%al
		jne    _06213d_jump
		mov    %edx,%eax
		call   _07b628_func
		movw   $0x000000,0x000040(%edx)
		mov    0x000076(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x000076(%edx)
		call   _05b154_func

	_06213d_jump:
		pop    %edx
		pop    %ebx
		ret    



_062140_func:
		call   _062150_func
		xor    %ah,%ah
		mov    %ah,_0cfa99_data
		ret    



_062150_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0ce6bd_data
		jne    _0621c9_jump
		cmpb   $0x000008,_0ce6bc_data
		setne  %al
		and    $0x0000ff,%eax
		je     _0621c9_jump
		cmpw   $0x000000,_0ce690_data
		je     _062198_jump
		cmpw   $0x000000,_0cf866_data
		jne    _062198_jump
		mov    _0ce68e_data,%eax
		mov    _0ce678_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0ce678_data

	_062198_jump:
		mov    $0x000001,%cl
		mov    _0ce692_data,%bx
		xor    %eax,%eax
		mov    %cl,_0cfa79_data
		mov    %ax,_0ce690_data
		mov    %ax,_0cf866_data
		test   %bx,%bx
		jge    _0624f6_jump
		mov    %ax,_0ce692_data
		jmp    _0624f6_jump

	_0621c9_jump:
		mov    _0ce6bd_data,%dh
		test   %dh,%dh
		je     _0621dc_jump
		cmp    $0x000001,%dh
		jne    _062359_jump

	_0621dc_jump:
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _062359_jump
		cmpb   $0x000000,_0cfa62_data
		jne    _062359_jump
		call   _071c10_func
		cmpb   $0x000000,_0cfa76_data
		je     _06221e_jump
		mov    $0x000007,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _06223a_jump

	_06221e_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %bh,%bh
		mov    %bh,_0ce6bb_data

	_06223a_jump:
		cmpb   $0x000000,_0ce77e_data
		je     _06226b_jump
		mov    _0ce6dc_data,%eax
		mov    0x000081(%eax),%ch
		xor    %dl,%dl
		and    $0x0000fb,%ch
		mov    %dl,_0ce77e_data
		mov    %ch,0x000081(%eax)
		call   _07b628_func
		xor    %eax,%eax
		call   _066bf4_func

	_06226b_jump:
		call   _07c328_func
		cmpb   $0x000001,_0cfa54_data
		jne    _0622a7_jump
		mov    _0cf818_data,%ax
		xor    %esi,%esi
		mov    %ax,_0cf81a_data
		xor    %eax,%eax
		mov    %si,_0cf866_data
		call   _06caf8_func
		mov    $0x000001,%eax
		xor    %bl,%bl
		call   _06caf8_func
		mov    %bl,_0cfa54_data

	_0622a7_jump:
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0622e0_jump
		movw   $0x00ffff,_0cf82c_data
		call   _058644_func
		mov    _0cf82a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_0622e0_jump:
		mov    _0cf844_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06231c_jump
		mov    $0xffffffff,%eax
		mov    $0x000004,%cl
		mov    %ax,_0cf846_data
		mov    _0ccdf0_data,%eax
		mov    %cl,_0ce6c6_data
		mov    -0x000003(%eax),%dl
		sub    $0x000084,%eax
		and    $0x0000fb,%dl
		mov    %cl,_0cef5b_data
		mov    %dl,0x000081(%eax)

	_06231c_jump:
		xor    %edx,%edx
		mov    %dx,_0cf866_data
		mov    %dx,_0ce690_data
		cmpb   $0x000000,_0cfa76_data
		jne    _06234f_jump
		cmpb   $0x000000,_0cfa54_data
		jne    _06234f_jump
		cmpw   $0x000006,_0cf88c_data
		je     _06234f_jump
		movb   $0x000002,_0cfa62_data

	_06234f_jump:
		call   _01cf7c_func
		jmp    _0624f6_jump

	_062359_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _06236b_jump
		cmpb   $0x000017,_0ce6bc_data
		je     _062385_jump

	_06236b_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _062483_jump
		cmpb   $0x000007,_0ce6bc_data
		jne    _062483_jump

	_062385_jump:
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _0623b3_jump
		cmpb   $0x000000,_0cfa76_data
		je     _0623a6_jump
		cmpw   $0x000006,_0cf88c_data
		je     _0623ad_jump

	_0623a6_jump:
		mov    $0x000001,%eax
		jmp    _0623af_jump

	_0623ad_jump:
		xor    %eax,%eax

	_0623af_jump:
		test   %eax,%eax
		jne    _0623e6_jump

	_0623b3_jump:
		cmpb   $0x000000,_0cfa76_data
		je     _0623fd_jump
		cmpw   $0x000006,_0cf88c_data
		jne    _0623fd_jump
		call   _037280_func
		test   %al,%al
		jne    _0623e6_jump
		cmpb   $0x000000,_0cfa3d_data
		je     _0623fd_jump
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _0623fd_jump

	_0623e6_jump:
		call   _03cadc_func
		xor    %dh,%dh
		call   _07bfb0_func
		mov    %dh,_0cfa62_data
		jmp    _0624f6_jump

	_0623fd_jump:
		xor    %eax,%eax
		mov    _0ce698_data,%edx
		mov    %ax,_0ce690_data
		mov    %ax,_0ce692_data
		mov    %ax,_0cf866_data
		sar    $0x000010,%edx
		mov    %ax,_0cf87a_data
		cmp    $0xffffffff,%edx
		je     _0624f6_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce698_data,%ebx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000042(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ce698_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ce698_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000071(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000072(%edx,%eax,4)
		jmp    _0624f6_jump

	_062483_jump:
		cmpb   $0x000006,_0ce6bd_data
		jne    _0624f6_jump
		cmpb   $0x00000e,_0ce6bc_data
		je     _0624b1_jump
		mov    $0x00000e,%edx
		mov    $_0ce650_data,%eax
		xor    %bl,%bl
		call   _01d808_func
		mov    %bl,_0ce6bb_data
		call   _01cf7c_func

	_0624b1_jump:
		mov    $0x000002,%bh
		mov    _0ce6bc_data,%cl
		xor    %edx,%edx
		mov    %bh,_0cfa62_data
		mov    %dx,_0cf866_data
		mov    %dx,_0ce690_data
		mov    %dx,_0ce692_data
		cmp    $0x00000e,%cl
		jne    _0624f6_jump
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _0624f6_jump
		xor    %ch,%ch
		call   _07bfb0_func
		mov    %ch,_0cfa62_data

	_0624f6_jump:
		cmpb   $0x000000,_0cfa62_data
		je     _062527_jump
		xor    %esi,%esi
		mov    _0cf8b0_data,%ax
		mov    %si,_0cf8b2_data
		mov    %ax,_0cf89e_data
		mov    _0cf8ac_data,%ax
		mov    %si,_0cf8b4_data
		mov    %ax,_0cf8a6_data

	_062527_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06252c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cf806_data
		je     _06256f_jump
		mov    _0cd8ac_data,%al
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %al,_0cef58_data
		mov    %edx,_0cd8ac_data
		mov    $_0ce650_data,%eax
		mov    %di,_0cf8a0_data
		call   _07a474_func
		call   _071c10_func
		call   _03cadc_func
		jmp    _0625e1_jump

	_06256f_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _062581_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _0625e1_jump

	_062581_jump:
		cmpb   $0x0000ff,_0ce6c6_data
		je     _0625e1_jump
		cmpb   $0x000000,_0cfa62_data
		jne    _0625e1_jump
		call   _071c10_func
		call   _03cadc_func
		mov    $_0ceae8_data,%eax
		mov    $0x000001,%ebx
		call   _073dc4_func
		mov    %bx,_0cf892_data
		cmpb   $0x000000,_0cfa99_data
		je     _0625e1_jump
		decw   _0cef52_data
		mov    _0cef50_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0625d9_jump
		xor    %esi,%esi
		mov    %si,_0cef52_data

	_0625d9_jump:
		xor    %cl,%cl
		mov    %cl,_0cfa99_data

	_0625e1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0625e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _06263e_jump
		cmpb   $0x000004,0x00006c(%eax)
		jne    _06263e_jump
		call   _01d074_func
		test   %al,%al
		je     _06263e_jump
		mov    _0cf81f_data,%bl
		test   $0x000008,%bl
		jne    _06263e_jump
		mov    _0cf894_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $0x000001,%cl
		shl    $0x000005,%eax
		mov    %bl,%bh
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		or     $0x000008,%bh
		add    %edx,%eax
		mov    %bh,_0cf81f_data
		call   _07c1c4_func
		mov    %cl,_0cfa44_data

	_06263e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062644_func:
		push   %edx
		cmpb   $0x000001,0x00006c(%eax)
		jne    _062655_jump
		mov    $0x000005,%edx
		call   _01d808_func

	_062655_jump:
		pop    %edx
		ret    



_062658_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000070(%eax)
		jne    _062671_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _06267e_jump

	_062671_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _06267e_jump
		orb    $0x000008,0x000081(%esi)

	_06267e_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _062720_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _062720_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _062709_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _062709_jump
		mov    0x00007f(%esi),%dh
		mov    0x00007d(%esi),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x00007f(%esi)
		mov    %bl,0x00007d(%esi)
		cmp    $0x000002,%bl
		jbe    _0626b7_jump
		movb   $0x000001,0x00007d(%esi)

	_0626b7_jump:
		cmpb   $0x000001,0x000076(%esi)
		je     _0626d8_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x00007d(%esi),%dl
		call   _061980_func
		jmp    _06284a_jump

	_0626d8_jump:
		mov    $0xfffffffe,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _061980_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _061980_func
		jmp    _06284a_jump

	_062709_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _06284a_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062720_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _0627b8_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _0627b8_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _0627a1_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _0627a1_jump
		mov    %ch,(%esp)
		mov    0x00007f(%esi),%ch
		inc    %ch
		mov    $0xfffffffc,%edi
		mov    %ch,0x00007f(%esi)

	_062751_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %esi,%eax
		movswl %di,%ebx
		inc    %edi
		call   _061980_func
		movswl %di,%edx
		cmp    $0xfffffffe,%edx
		jne    _06278e_jump
		mov    $0x000003,%edi

	_06278e_jump:
		mov    (%esp),%ch
		inc    %ch
		mov    %ch,(%esp)
		cmp    $0x000004,%ch
		jae    _06284a_jump
		jmp    _062751_jump

	_0627a1_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _06284a_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0627b8_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _062815_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _062815_jump
		mov    0x00007f(%esi),%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		cmp    0x00007d(%esi),%dl
		je     _0627e2_jump
		cmp    $0x0000fd,%cl
		jb     _0627e2_jump
		mov    %esi,%eax
		call   _07b060_func
		mov    %dl,0x00007d(%esi)

	_0627e2_jump:
		movw   $0x000000,0x000040(%esi)
		mov    0x00006b(%esi),%ah
		movw   $0x000000,0x000042(%esi)
		cmp    $0x00000c,%ah
		jbe    _062803_jump
		movb   $0x000003,0x00006b(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062803_jump:
		cmp    $0x000001,%ah
		ja     _06284a_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062815_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _06284a_jump
		cmpw   $0x000000,0x000052(%esi)
		je     _062825_jump
		incb   0x00007f(%esi)

	_062825_jump:
		cmpb   $0x0000fe,0x00007f(%esi)
		jb     _06283c_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _061220_func

	_06283c_jump:
		mov    %esi,%eax
		call   _055ee4_func
		mov    %esi,%eax
		call   _025820_func

	_06284a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062854_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		test   %dx,%dx
		jne    _0628a3_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062869_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _062870_jump

	_062869_jump:
		mov    $0x000001,%eax
		jmp    _062872_jump

	_062870_jump:
		xor    %eax,%eax

	_062872_jump:
		test   %eax,%eax
		je     _0628a3_jump
		mov    $0x000001,%dh
		mov    %ecx,%eax
		mov    %dh,_0ce77f_data
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _062897_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0628ad_jump

	_062897_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _0628ad_jump

	_0628a3_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0628ad_jump:
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    



_0628b8_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_0628c0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _062925_jump
		mov    %ecx,%eax
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _062903_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _06290c_jump

	_062903_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_06290c_jump:
		call   _01d818_func
		testb  $0x000008,0x000081(%ecx)
		jne    _062921_jump
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_062921_jump:
		movb   $0x000001,0x000070(%ecx)

	_062925_jump:
		pop    %ecx
		pop    %ebx
		ret    



_062928_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062984_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _06293f_jump
		cmp    $0x000002,%dl
		jne    _062984_jump

	_06293f_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d818_func
		mov    0x000081(%ecx),%bl
		and    $0x0000ef,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01dfb8_func
		testb  $0x000008,0x000081(%ecx)
		je     _062980_jump
		movb   $0x000001,0x000070(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062980_jump:
		movb   $0x000000,0x000070(%ecx)

	_062984_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0629d8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x0000ff,%dx
		je     _062a02_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _062ace_jump

	_062a02_jump:
		mov    %ecx,%eax
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _062a49_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		mov    0x00002c(%ecx),%ebx
		mov    0x000081(%ecx),%dh
		sub    $0x000002,%ebx
		and    $0x0000ef,%dh
		mov    %ebx,0x00002c(%ecx)
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_062a49_jump:
		mov    _0ce6dc_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _062a72_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _062a6e_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _062a94_jump

	_062a6e_jump:
		jge    _062a9b_jump
		jmp    _062a8a_jump

	_062a72_jump:
		mov    0x000040(%eax),%dx
		cmp    $0x000001,%dx
		jle    _062a88_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _062a94_jump

	_062a88_jump:
		jge    _062a9b_jump

	_062a8a_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_062a94_jump:
		mov    %ecx,%eax
		call   _061220_func

	_062a9b_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01d818_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_062ace_jump:
		pop    %ecx
		pop    %ebx
		ret    



_062ad4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _062af5_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _062af5_jump
		mov    $0x00000e,%edx
		mov    %ecx,%eax
		call   _01d808_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062af5_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062b01_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _062b0d_jump

	_062b01_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _062b4e_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _062b4e_jump

	_062b0d_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    0x000081(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000081(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _061220_func

	_062b4e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062b54_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		mov    _0ce6dc_data,%ebx
		mov    0x000040(%ebx),%dx
		test   %dx,%dx
		jle    _062b78_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _062b84_jump

	_062b78_jump:
		jge    _062b8b_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_062b84_jump:
		mov    %ecx,%eax
		call   _061220_func

	_062b8b_jump:
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    0x000076(%ecx),%ah
		mov    %edx,0x00002c(%ecx)
		test   %ah,%ah
		je     _062bf7_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		add    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _062bcd_jump
		mov    $0x00000a,%ebx
		jmp    _062bd2_jump

	_062bcd_jump:
		mov    $0x000002,%ebx

	_062bd2_jump:
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01d818_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		pop    %ecx
		pop    %ebx
		ret    

	_062bf7_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _062c26_jump
		mov    $0x000006,%ebx
		jmp    _062c2b_jump

	_062c26_jump:
		mov    $0x000003,%ebx

	_062c2b_jump:
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    



_062c40_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _062cce_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _062c70_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _062c7c_jump

	_062c70_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062cce_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _062cce_jump

	_062c7c_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _062cce_jump
		cmpb   $0x000012,_0ce6bc_data
		jne    _062cce_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d818_func
		testb  $0x000008,0x000081(%ecx)
		je     _062cbd_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _062cc7_jump

	_062cbd_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_062cc7_jump:
		mov    %ecx,%eax
		call   _061220_func

	_062cce_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062cd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		cmp    $0x000002,%al
		jb     _062d40_jump
		jbe    _062cea_jump
		cmp    $0x00001e,%al
		jne    _062d62_jump

	_062cea_jump:
		mov    %edx,%eax
		call   _055ee4_func
		mov    %edx,%eax
		call   _025820_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _062d62_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _062d62_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000076(%edx),%bh
		shr    $0x000007,%al
		cmp    %bh,%al
		je     _062d62_jump
		lea    0x000081(%edx),%eax
		test   $0x000001,%bh
		setne  %dl
		and    $0x0000ff,%edx
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    %dh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062d40_jump:
		test   %al,%al
		jne    _062d4d_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _062d54_jump

	_062d4d_jump:
		orb    $0x000008,0x000081(%edx)

	_062d54_jump:
		mov    %edx,%eax
		call   _055ee4_func
		mov    %edx,%eax
		call   _025820_func

	_062d62_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062d68_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062d78_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _062dc1_jump

	_062d78_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _062da5_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _062db7_jump

	_062da5_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		and    $0x0000f7,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%ecx)

	_062db7_jump:
		mov    $0x000001,%ebx
		call   _061220_func

	_062dc1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_062dc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _062e09_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _062e09_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%ecx)
		je     _062df8_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _062e02_jump

	_062df8_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_062e02_jump:
		mov    %ecx,%eax
		call   _061220_func

	_062e09_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062e10_func:
		push   %ebx
		push   %edx
		cmpb   $0x000004,0x00006c(%eax)
		jne    _062e27_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _061220_func

	_062e27_jump:
		pop    %edx
		pop    %ebx
		ret    



_062e2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f658_func
		cmpw   $0x000000,_0cf796_data
		je     _062ebe_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062e5e_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _062e5e_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func

	_062e5e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062e91_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _062e91_jump
		mov    0x000004(%ecx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _062e91_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func

	_062e91_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062ecc_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _062ecc_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _062ecc_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _062ec7_jump

	_062ebe_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_062ec7_jump:
		call   _061220_func

	_062ecc_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062ed0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpw   $0x000003,_0cf87c_data
		jne    _062f0f_jump
		mov    _0cf884_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		mov    %ax,_0cf8a6_data
		mov    %bx,_0cf872_data
		mov    %bx,_0cf86e_data
		mov    %bx,_0cf89e_data

	_062f0f_jump:
		cmpw   $0x000000,_0cf786_data
		je     _062f87_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062f32_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _062f32_jump
		movw   $0x000001,_0cf780_data

	_062f32_jump:
		mov    0x00006d(%ecx),%dh
		test   %dh,%dh
		jne    _062f87_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _062f87_jump
		cmpw   $0x000000,_0cf780_data
		je     _062f64_jump
		mov    _0cf81f_data,%bh
		xor    %esi,%esi
		mov    %dh,0x00007f(%ecx)
		or     $0x000002,%bh
		mov    %si,_0cf780_data
		mov    %bh,_0cf81f_data

	_062f64_jump:
		mov    0x00007f(%ecx),%al
		inc    %al
		mov    %al,0x00007f(%ecx)
		cmp    $0x000064,%al
		jne    _062f77_jump
		call   _0354a4_func
		jmp    _062f87_jump

	_062f77_jump:
		cmp    $0x000065,%al
		jne    _062f87_jump
		call   _07bfb0_func
		orb    $0x000004,_0cf81b_data

	_062f87_jump:
		cmpw   $0x000008,_0cf87c_data
		jne    _062fc4_jump
		cmpw   $0x000000,_0cf796_data
		je     _062fbd_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _062fc4_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _062fc4_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062fbd_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_062fc4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062fcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _06300e_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _06300e_jump
		cmpw   $0x000000,_0cf786_data
		jne    _06300e_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cf780_data
		mov    $0x000001,%ebx
		mov    $0x000001,%esi
		call   _061220_func
		mov    %si,_0cf786_data

	_06300e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _06302b_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _06302b_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func

	_06302b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _07c10c_func
		mov    0x000054(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0ce69a_data,%cx
		jne    _06306e_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _063074_jump

	_06306e_jump:
		movw   $0x000000,0x000050(%edx)

	_063074_jump:
		mov    0x000056(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _06308d_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x000056(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06308d_jump:
		jle    _063094_jump
		dec    %eax
		mov    %ax,0x000056(%edx)

	_063094_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06309c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		call   _02f658_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		cmpb   $0x000004,0x00006a(%esi)
		jne    _0630f0_jump
		cmpb   $0x00000a,0x00006b(%esi)
		jne    _0630f0_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _0630f0_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_0630f0_jump:
		mov    0x00006c(%esi),%bl
		cmp    $0x000001,%bl
		jne    _06310e_jump
		mov    0x00007f(%esi),%dh
		add    %bl,%dh
		mov    %dh,0x00007f(%esi)
		jne    _063235_jump
		mov    %bl,0x00007f(%esi)
		jmp    _063235_jump

	_06310e_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _063156_jump
		mov    $0x000001,%ecx
		mov    $0x000001,%ebx
		mov    $_0ce88c_data,%edx
		xor    %edi,%edi
		mov    %cx,_0cf742_data
		mov    %di,_0cf740_data
		mov    %ebx,_0ce674_data
		call   _05a7dc_func
		mov    %esi,%eax
		call   _073b8c_func
		mov    %ebx,%eax
		call   _0596c0_func
		movb   $0x000000,0x00007f(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063156_jump:
		testb  $0x000002,_0cf81b_data
		jne    _063235_jump
		testb  $0x000001,0x000081(%esi)
		jne    _063235_jump
		mov    %esi,%eax
		call   _01dff4_func
		test   %ax,%ax
		je     _063235_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _063235_jump
		cmpw   $0x000000,_0cf866_data
		jne    _063235_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _063235_jump
		cmpb   $0x000000,_0ce6bc_data
		jne    _063235_jump
		mov    _0cf874_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cf862_data,%edx
		mov    $0x00000f,%ecx
		sar    $0x000010,%edx
		mov    0x000028(%esi),%ax
		push   %edx
		mov    _0cf860_data,%edx
		mov    0x00002c(%esi),%bx
		sar    $0x000010,%edx
		add    $0x00002a,%eax
		push   %edx
		mov    _0cf85e_data,%edx
		add    $0x000030,%ebx
		sar    $0x000010,%edx
		cwtl   
		push   %edx
		movswl %bx,%edx
		mov    $0x000005,%ebx
		call   _02b430_func
		test   %ax,%ax
		je     _063235_jump
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		or     $0x000001,%dl
		mov    %bx,_0ce690_data
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce674_data
		call   _061220_func

	_063235_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06323c_func:
		jmp    _071c00_jump



_063244_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000073(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _063261_jump
		mov    $0x000001,%eax
		jg     _063261_jump
		neg    %eax

	_063261_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0ce69a_data,%dx
		je     _06329b_jump
		cmpb   $0x000000,_0cf9ff_data
		jne    _06332e_jump
		mov    0x000076(%esi),%bl
		test   %bl,%bl
		je     _06332e_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x000076(%esi)
		jmp    _06332e_jump

	_06329b_jump:
		cmpb   $0x000000,_0cf9fd_data
		jne    _06332e_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000074(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0ce6b8_data,%dl
		mov    %ebx,0x00000c(%esp)
		add    _0ce678_data,%edx
		mov    0x00000e(%esp),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,(%esp)
		test   %ax,%ax
		js     _063306_jump
		sar    %cl,%ax
		jmp    _06330f_jump

	_063306_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06330f_jump:
		sub    %al,0x000076(%esi)
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _06331e_jump
		neg    %eax

	_06331e_jump:
		cmp    $0x000010,%eax
		jl     _06332e_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x000076(%esi)

	_06332e_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		call   _01d824_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    %edi,%eax
		call   _01d954_func
		movswl %dx,%edx
		mov    %eax,%ecx
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _063436_jump
		mov    0x00006c(%edi),%ah
		cmp    $0x00000d,%ah
		je     _063390_jump
		cmp    $0x00001c,%ah
		je     _063390_jump
		cmp    $0x00000e,%ah
		je     _063390_jump
		cmp    $0x00001d,%ah
		je     _063390_jump
		mov    $0x000001,%edx
		jmp    _063392_jump

	_063390_jump:
		xor    %edx,%edx

	_063392_jump:
		test   %edx,%edx
		je     _063436_jump
		mov    0x000042(%edi),%dx
		test   %dx,%dx
		jle    _0633d9_jump
		mov    %edx,%eax
		dec    %eax
		mov    0x000060(%edi),%dx
		mov    %ax,0x000042(%edi)
		cmp    $0x0000ae,%dx
		je     _0633bc_jump
		cmp    $0x0000e1,%dx
		jne    _0633c4_jump

	_0633bc_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _0633ca_jump

	_0633c4_jump:
		movw   $0x000024,0x000040(%edi)

	_0633ca_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02f1e0_func
		jmp    _063436_jump

	_0633d9_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _063436_jump
		mov    0x000060(%edi),%bx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%bx
		je     _063403_jump
		cmp    $0x0000e1,%bx
		jne    _06340b_jump

	_063403_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _063411_jump

	_06340b_jump:
		movw   $0x000010,0x000040(%edi)

	_063411_jump:
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _063420_jump
		mov    $0x000007,%ebx
		jmp    _06342a_jump

	_063420_jump:
		cmp    $0x000015,%bh
		jne    _063436_jump
		mov    $0x000016,%ebx

	_06342a_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d818_func

	_063436_jump:
		mov    0x00006c(%edi),%ch
		cmp    $0x00000d,%ch
		je     _063447_jump
		cmp    $0x00001c,%ch
		jne    _063580_jump

	_063447_jump:
		cmpb   $0x000006,0x00006b(%edi)
		jne    _063580_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _063580_jump
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _063606_jump

	_063476_jump:
		cmpw   $0x0000ba,0x000060(%esi)
		jne    _063567_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _063567_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01dbb4_func
		testb  $0x000008,0x000081(%edi)
		je     _0634ea_jump
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%edx
		mov    0x000081(%esi),%bh
		mov    %edx,0x000028(%esi)
		or     $0x000008,%bh
		mov    %dx,0x00003c(%esi)
		mov    %bh,0x000081(%esi)
		jmp    _063513_jump

	_0634ea_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    %dx,0x00003c(%esi)

	_063513_jump:
		mov    0x00000a(%esp),%ebx
		mov    0x000081(%esi),%cl
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%esi),%dl
		or     $0x000004,%cl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		movw   $0x000002,0x000042(%esi)
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %ebx,%edx
		mov    %cl,0x000081(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %dx,0x00003e(%esi)
		call   _01f8e8_func
		andb   $0x0000ef,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063567_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _063476_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063580_jump:
		mov    0x00006c(%edi),%dh
		cmp    $0x00000e,%dh
		je     _06358d_jump
		cmp    $0x00001d,%dh
		jne    _0635b1_jump

	_06358d_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000081(%edi),%dh
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0635b1_jump:
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _063606_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _0635cb_jump
		mov    $0x000007,%ebx
		jmp    _0635fa_jump

	_0635cb_jump:
		cmp    $0x000015,%bh
		jne    _0635d7_jump
		mov    $0x000016,%ebx
		jmp    _0635fa_jump

	_0635d7_jump:
		cmp    $0x00000b,%bh
		jne    _0635e9_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _0635e9_jump
		mov    $0x000002,%ebx
		jmp    _0635fa_jump

	_0635e9_jump:
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _063606_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _063606_jump
		mov    $0x000013,%ebx

	_0635fa_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d818_func

	_063606_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063610_func:
		push   %ebx
		push   %ecx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		je     _06361e_jump
		cmp    $0x000001,%dl
		jne    _06363c_jump

	_06361e_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _063632_jump
		mov    $0x00000d,%ebx
		jmp    _063740_jump

	_063632_jump:
		mov    $0x00000a,%ebx
		jmp    _063740_jump

	_06363c_jump:
		cmp    $0x000007,%dl
		je     _063650_jump
		cmp    $0x000002,%dl
		je     _063650_jump
		cmp    $0x000003,%dl
		je     _063650_jump
		cmp    $0x000004,%dl
		jne    _063678_jump

	_063650_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _063669_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_063669_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_063678_jump:
		cmp    $0x000005,%dl
		je     _063682_jump
		cmp    $0x000006,%dl
		jne    _0636aa_jump

	_063682_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06369b_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_06369b_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_0636aa_jump:
		cmp    $0x00000f,%dl
		je     _0636b4_jump
		cmp    $0x000010,%dl
		jne    _0636dc_jump

	_0636b4_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _0636cd_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_0636cd_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_0636dc_jump:
		cmp    $0x000016,%dl
		je     _0636f0_jump
		cmp    $0x000011,%dl
		je     _0636f0_jump
		cmp    $0x000012,%dl
		je     _0636f0_jump
		cmp    $0x000013,%dl
		jne    _063718_jump

	_0636f0_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _063709_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_063709_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_063718_jump:
		cmp    $0x000014,%dl
		je     _063722_jump
		cmp    $0x000015,%dl
		jne    _063747_jump

	_063722_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06373b_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d818_func
		pop    %ecx
		pop    %ebx
		ret    

	_06373b_jump:
		mov    $0x00001a,%ebx

	_063740_jump:
		xor    %edx,%edx
		call   _01d818_func

	_063747_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06374c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0637f8_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _063777_jump
		cmp    $0x000001,%dl
		je     _063777_jump
		cmp    $0x00000f,%dl
		je     _063777_jump
		cmp    $0x000010,%dl
		jne    _0637f8_jump

	_063777_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _063782_jump
		cmp    $0x000001,%al
		jne    _063789_jump

	_063782_jump:
		mov    $0x000005,%ebx
		jmp    _063796_jump

	_063789_jump:
		cmp    $0x00000f,%al
		je     _063791_jump
		cmp    $0x000010,%al
		jne    _0637a2_jump

	_063791_jump:
		mov    $0x000014,%ebx

	_063796_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d818_func

	_0637a2_jump:
		mov    0x000060(%ecx),%dx
		cmp    $0x0000ae,%dx
		je     _0637b4_jump
		cmp    $0x0000b8,%dx
		jne    _0637d5_jump

	_0637b4_jump:
		mov    0x000060(%ecx),%di
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%di
		jne    _0637cd_jump
		movw   $0x00ffe8,0x000040(%ecx)
		jmp    _0637f8_jump

	_0637cd_jump:
		movw   $0x000018,0x000040(%ecx)
		jmp    _0637f8_jump

	_0637d5_jump:
		mov    0x000060(%ecx),%si
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%si
		jne    _0637f2_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0637f2_jump:
		movw   $0x000024,0x000040(%ecx)

	_0637f8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063800_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0cf81b_data
		je     _06381b_jump
		mov    $0x000100,%edx
		jmp    _063820_jump

	_06381b_jump:
		mov    $0x000200,%edx

	_063820_jump:
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _063831_jump
		neg    %eax

	_063831_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000060(%esi),%ax
		cmp    $0x000022,%ax
		jb     _063897_jump
		cmp    $0x000022,%ax
		jbe    _0638cd_jump
		cmp    $0x000098,%ax
		jb     _063878_jump
		jbe    _0638cd_jump
		cmp    $0x0000ed,%ax
		jb     _063869_jump
		jbe    _0638cd_jump
		cmp    $0x0000f3,%ax
		je     _0638cd_jump
		jmp    _0643af_jump

	_063869_jump:
		cmp    $0x0000be,%ax
		je     _063ae0_jump
		jmp    _0643af_jump

	_063878_jump:
		cmp    $0x000044,%ax
		jb     _0643af_jump
		jbe    _063ddc_jump
		cmp    $0x000073,%ax
		je     _0642a0_jump
		jmp    _0643af_jump

	_063897_jump:
		cmp    $0x00001b,%ax
		jb     _0638b8_jump
		jbe    _063fd1_jump
		cmp    $0x00001c,%ax
		jbe    _0641cf_jump
		cmp    $0x00001d,%ax
		je     _0638cd_jump
		jmp    _0643af_jump

	_0638b8_jump:
		cmp    $0x000019,%ax
		jb     _0643af_jump
		jbe    _063a4d_jump
		jmp    _063be6_jump

	_0638cd_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _063a3b_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		je     _0638ed_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_0638ed_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _0643af_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce6bc_data,%al
		mov    $0x000001,%cl
		add    %edx,%eax
		mov    %cl,_0cfa7d_data
		cmp    $0x00000b,%eax
		jb     _063924_jump
		cmp    $0x00000c,%eax
		ja     _063924_jump
		call   _06676c_func

	_063924_jump:
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		call   _06cd40_func
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000c,%ebx
		mov    _0ce692_data,%cx
		mov    0x000060(%esi),%di
		sub    $0x000003,%ecx
		mov    %bx,_0cf8a4_data
		mov    %cx,_0ce692_data
		cmp    $0x0000f3,%di
		jne    _063975_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _0639d3_jump

	_063975_jump:
		cmp    $0x000098,%di
		jne    _0639a8_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _063988_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _063998_jump

	_063988_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _0639d3_jump

	_063998_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _0639d3_jump

	_0639a8_jump:
		cmp    $0x0000ed,%di
		jne    _0639d3_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0639d3_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0639d3_jump
		mov    $_0ce650_data,%eax
		mov    $0x000001,%ebx
		call   _07c274_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _061220_func

	_0639d3_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%dl
		sar    $0x000010,%eax
		add    %ecx,%edx
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _063a28_jump
		movw   $0x00fe00,_0cf866_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a28_jump:
		movw   $0x000200,_0cf866_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a3b_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a4d_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _063a3b_jump
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _063a69_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)

	_063a69_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _0643af_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02dbdc_func
		xor    %eax,%eax
		mov    _0ce678_data,%edx
		mov    _0ce6b8_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _063acf_jump
		orb    $0x000008,_0ce6d1_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063acf_jump:
		andb   $0x0000f7,_0ce6d1_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ae0_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _063a3b_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _063a3b_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _063a3b_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _063b14_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_063b14_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _0643af_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce6bc_data,%al
		mov    $0x000001,%bl
		add    %edx,%eax
		mov    %bl,_0cfa7d_data
		cmp    $0x00000b,%eax
		jb     _063b4b_jump
		cmp    $0x00000c,%eax
		ja     _063b4b_jump
		call   _06676c_func

	_063b4b_jump:
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		call   _06cd40_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000a,%ebx
		mov    _0ce692_data,%dx
		mov    %ax,_0cf8a4_data
		sub    $0x000004,%edx
		mov    %esi,%eax
		mov    %dx,_0ce692_data
		xor    %edx,%edx
		mov    %esp,%ecx
		call   _01d818_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		xor    %eax,%eax
		mov    _0ce678_data,%edx
		mov    _0ce6b8_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _063a28_jump
		movw   $0x00fe00,_0cf866_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063be6_jump:
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _063c2b_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		je     _063c05_jump
		cmp    $0x000014,%di
		je     _0643af_jump

	_063c05_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _0643af_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d808_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063c2b_jump:
		mov    0x000050(%esi),%ax
		test   %ax,%ax
		je     _063ccc_jump
		mov    %eax,%edi
		dec    %edi
		mov    _0cf88c_data,%ax
		mov    %di,0x000050(%esi)
		cmp    $0x000001,%ax
		jne    _063c5e_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _063c5a_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _063c5e_jump

	_063c5a_jump:
		movb   $0x000004,0x00007e(%esi)

	_063c5e_jump:
		mov    0x000050(%esi),%ax
		cmp    0x000056(%esi),%ax
		jg     _0643af_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _063cbb_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		mov    %di,_0ce69a_data
		call   _01d818_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _06caf8_func
		xor    %eax,%eax
		mov    %ax,_0ce6a2_data
		movw   $0x002710,0x000054(%esi)
		mov    %ax,_0cf8a4_data
		mov    %ax,_0ce692_data

	_063cbb_jump:
		andb   $0x0000df,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ccc_jump:
		cmpw   $0x000001,_0cf88c_data
		je     _063d5e_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _063d2b_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0ce69a_data
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _06caf8_func
		mov    %dx,_0cf8a4_data
		mov    %dx,_0ce6a2_data
		mov    %dx,_0ce692_data
		movw   $0x002710,0x000054(%esi)

	_063d2b_jump:
		cmpb   $0x000006,0x00006c(%esi)
		jne    _063d43_jump
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _063d43_jump
		mov    %esi,%eax
		call   _05e9bc_func

	_063d43_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0643af_jump
		orb    $0x000020,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063d5e_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000004,0x00007e(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0643af_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		mov    %di,_0ce69a_data
		call   _01d818_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _06caf8_func
		xor    %eax,%eax
		mov    %ax,_0cf8a4_data
		mov    %ax,_0ce6a2_data
		mov    %ax,_0ce692_data
		movw   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ddc_jump:
		mov    _0ce69a_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _063e4b_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _063e38_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _063e38_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _063e4b_jump

	_063e38_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _063e4b_jump
		mov    $0x000001,%cl

	_063e4b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0643af_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _063f12_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000056(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0ce69a_data,%dx
		jne    _0643af_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0ce67c_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce6bc_data,%al
		add    %edx,%eax
		mov    %ebx,_0ce67c_data
		cmp    $0x00000b,%eax
		jb     _063edc_jump
		cmp    $0x00000c,%eax
		ja     _063edc_jump
		call   _06676c_func

	_063edc_jump:
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000001,_0cfa7d_data
		call   _06cd40_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cf8a4_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063f12_jump:
		test   %cl,%cl
		jne    _0643af_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0643af_jump
		xor    %edx,%edx
		mov    _0cfa7d_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _0643af_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _0643af_jump
		call   _06cd40_func
		cmpb   $0x000002,_0ce6bd_data
		jne    _063f6a_jump
		movw   $0x002710,0x000054(%esi)

	_063f6a_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _063f89_jump
		cmp    %ecx,%eax
		jg     _063f89_jump
		mov    $0x000001,%eax
		jmp    _063f8b_jump

	_063f89_jump:
		xor    %eax,%eax

	_063f8b_jump:
		test   %eax,%eax
		je     _063fa1_jump
		subw   $0x000002,_0ce692_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063fa1_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _0643af_jump
		mov    0x000042(%esi),%ax
		mov    _0ce692_data,%si
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    %si,_0ce692_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063fd1_jump:
		mov    _0ce69a_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _064040_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _06402d_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _06402d_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _064040_jump

	_06402d_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _064040_jump
		mov    $0x000001,%cl

	_064040_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0643af_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _064102_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000056(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0ce69a_data,%dx
		jne    _0640ef_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edi
		sar    $0x000010,%eax
		mov    _0ce67c_data,%ebp
		sub    %edi,%eax
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce6bd_data,%al
		mov    _0ce6bc_data,%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		mov    %ebp,_0ce67c_data
		cmp    $0x00000b,%eax
		jb     _0640c3_jump
		cmp    $0x00000c,%eax
		ja     _0640c3_jump
		call   _06676c_func

	_0640c3_jump:
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000001,_0cfa7d_data
		call   _06cd40_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cf8a4_data

	_0640ef_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064102_jump:
		test   %cl,%cl
		jne    _0643af_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0643af_jump
		xor    %edx,%edx
		mov    _0cfa7d_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _0643af_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _0643af_jump
		call   _06cd40_func
		cmpb   $0x000002,_0ce6bd_data
		jne    _06415a_jump
		movw   $0x002710,0x000054(%esi)

	_06415a_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _064179_jump
		cmp    %ecx,%eax
		jg     _064179_jump
		mov    $0x000001,%eax
		jmp    _06417b_jump

	_064179_jump:
		xor    %eax,%eax

	_06417b_jump:
		test   %eax,%eax
		je     _064191_jump
		subw   $0x000002,_0ce692_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064191_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _0643af_jump
		mov    0x000042(%esi),%ax
		add    %ax,_0ce692_data
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _0643af_jump
		movw   $0x00fff9,_0ce692_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0641cf_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _06421a_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _064213_jump
		mov    0x00004a(%esi),%ax
		mov    _0cf88c_data,%dx
		mov    %ax,0x000056(%esi)
		cmp    $0x000001,%dx
		je     _064201_jump
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _06421a_jump

	_064201_jump:
		cmpb   $0x000000,0x00007e(%esi)
		je     _06420d_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _06421a_jump

	_06420d_jump:
		movb   $0x000003,0x00007e(%esi)
		jmp    _06421a_jump

	_064213_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_06421a_jump:
		cmpw   $0x000001,_0cf88c_data
		jne    _06422a_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _06424a_jump

	_06422a_jump:
		cmpw   $0x000001,_0cf88c_data
		je     _0643af_jump
		cmpb   $0x000014,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _0643af_jump

	_06424a_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _064290_jump
		movw   $0x00ffff,_0ce69a_data
		mov    $0x000002,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,%edx
		call   _01d818_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _06caf8_func
		mov    %cx,_0cf8a4_data
		mov    %cx,_0ce6a2_data
		mov    %cx,_0ce692_data

	_064290_jump:
		movw   $0x0003e8,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0642a0_jump:
		mov    0x00006c(%esi),%bh
		cmp    $0x000007,%bh
		jne    _064362_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _064314_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %bh,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _064314_jump
		mov    0x000081(%esi),%al
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%al
		mov    %al,0x000081(%esi)

	_064314_jump:
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06435c_jump
		mov    $0xffffffff,%eax
		mov    $0x000002,%ebx
		mov    %ax,_0ce69a_data
		mov    %ebx,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _06caf8_func
		mov    %dx,_0cf8a4_data
		mov    %dx,_0ce6a2_data
		mov    %dx,_0ce692_data

	_06435c_jump:
		movw   $0x0003e8,0x000054(%esi)

	_064362_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _0643af_jump
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		je     _06437e_jump
		mov    0x000052(%esi),%ax
		cmp    0x000050(%esi),%ax
		je     _064382_jump

	_06437e_jump:
		decw   0x000052(%esi)

	_064382_jump:
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _064392_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _0643a8_jump

	_064392_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d808_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0643a8_jump:
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_0643af_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0643bc_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x000079(%eax),%bl
		cmp    %bx,%dx
		jne    _0643e9_jump
		mov    _0ce6dc_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jle    _0643dd_jump
		mov    $0x000019,%edx
		jmp    _0643e4_jump

	_0643dd_jump:
		jge    _0643e9_jump
		mov    $0x00001a,%edx

	_0643e4_jump:
		call   _01d808_func

	_0643e9_jump:
		pop    %ebx
		ret    



_0643f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cf806_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06442d_jump
		push   $0xffffffa2
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffff5b,%ecx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000006,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01d204_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06442d_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064440_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%si
		xor    %bl,%bl
		xor    %ecx,%ecx
		test   %si,%si
		jle    _0644f8_jump

	_06445f_jump:
		cmp    $0x000005,%bl
		jae    _0644f8_jump
		cmpw   $0x0000be,0x000060(%edx)
		jne    _0644e8_jump
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x000014,%eax,%eax
		xor    %edi,%edi
		mov    %di,_0e4dac_data(%eax)
		xor    %bh,%bh
		mov    %di,_0e4dae_data(%eax)
		mov    %bh,_0e4dbc_data(%eax)
		mov    %bh,_0e4dbd_data(%eax)
		mov    %cx,_0e4dba_data(%eax)
		mov    $0x000001,%edi
		mov    %di,_0e4db0_data(%eax)
		mov    $0x000005,%bh
		mov    %di,_0e4db2_data(%eax)
		mov    %bh,_0e4dbe_data(%eax)
		movw   $0x00000f,_0e4db4_data(%eax)
		xor    %edi,%edi
		mov    %di,_0e4db6_data(%eax)
		mov    %di,_0e4db8_data(%eax)
		andb   $0x0000fb,0x000081(%edx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%edx)
		mov    %bl,%al
		inc    %bl
		mov    %ax,0x000050(%edx)

	_0644e8_jump:
		inc    %ecx
		add    $0x000084,%edx
		cmp    %si,%cx
		jl     _06445f_jump

	_0644f8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064500_func:
		push   %edx
		xor    %al,%al

	_064503_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		xor    %ah,%ah
		mov    %ah,_0e4dbd_data(%edx)
		inc    %al
		cmp    $0x000005,%al
		jb     _064503_jump
		pop    %edx
		ret    



_06451c_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		xor    %al,%al

	_064522_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		mov    _0e4dbd_data(%edx),%bl
		cmp    $0x000001,%bl
		jne    _064536_jump
		add    %bl,%ah

	_064536_jump:
		inc    %al
		cmp    $0x000005,%al
		jb     _064522_jump
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0e4e19_data,%dl
		mov    _0e4e17_data,%bl
		mov    _097282_data(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    _09727c_data(%edx),%ah
		sete   %al
		pop    %edx
		pop    %ebx
		ret    



_064568_func:
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jb     _064571_jump
		mov    $0x0000ff,%al

	_064571_jump:
		ret    



_064574_func:
		push   %ebx
		push   %ecx
		mov    %al,%bl
		test   %dl,%dl
		jne    _064583_jump
		xor    %dh,%dh
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_064583_jump:
		xor    %ecx,%ecx
		mov    $0x0000f0,%eax
		mov    %dl,%cl
		mov    %eax,%edx
		add    %ecx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		and    $0x0000ff,%ebx
		add    %ebx,%ebx
		inc    %ebx
		imul   %ebx,%eax
		mov    _0cf80a_data,%ebx
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		testb  $0x000008,0x000081(%ebx,%eax,4)
		je     _0645c6_jump
		add    $0x000050,%edx

	_0645c6_jump:
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_0645cc_func:
		test   %dx,%dx
		jne    _0645d7_jump
		mov    $0x00002c,%eax
		ret    

	_0645d7_jump:
		shl    $0x000004,%eax
		add    $0x00002c,%eax
		ret    



_0645e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx

	_0645f4_jump:
		cwtl   
		call   _01e588_func
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _06461c_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %cx,%eax
		sar    $0x000004,%eax
		jmp    _0645f4_jump

	_06461c_jump:
		xor    %ch,%ch
		and    $0x0000f0,%bl
		and    $0x00000f,%cl
		mov    %ebx,%esi
		movswl %cx,%edx
		xor    %ebx,%ebx
		call   _024eac_func
		mov    %esi,%ebx
		add    %ebx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_064638_switch:
		.long   _0646d9_case
		.long   _0646d9_case
		.long   _0646d9_case
		.long   _064721_case
		.long   _064721_case
		.long   _0646d9_case




_064650_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		call   _064568_func
		mov    %al,%bl
		cmp    $0x0000ff,%al
		je     _0647bf_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		shl    $0x000002,%ebp
		mov    _0e4db8_data(%ebp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x000068(%esp),%al
		mov    0x000028(%esp),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00002c(%esp),%ecx
		mov    0x000069(%esp),%al
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %ah,_0e4dbd_data(%ebp)
		mov    _0e4e1a_data,%al
		cmp    $0x000005,%al
		ja     _0647bf_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_064638_switch(,%eax,4)

	_0646d9_case:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %si,_0e4dac_data(,%eax,4)
		mov    $0x000002,%bl
		mov    %cx,_0e4dae_data(,%eax,4)
		mov    $0x000001,%edi
		mov    %bl,_0e4dbe_data(,%eax,4)
		mov    %di,_0e4db0_data(,%eax,4)
		mov    %di,_0e4db2_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064721_case:
		cmpb   $0x000003,_0e4e1a_data
		jne    _06472e_jump
		mov    $0x000004,%al
		jmp    _064730_jump

	_06472e_jump:
		xor    %al,%al

	_064730_jump:
		cmp    $0x000001,%bl
		je     _06473b_jump
		mov    $0x000004,%ah
		sub    %al,%ah
		mov    %ah,%al

	_06473b_jump:
		mov    $0x000006,%edx
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		call   _064574_func
		mov    %bl,%cl
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		mov    %dx,_0e4dac_data(,%eax,4)
		xor    %eax,%eax
		mov    $0x000009,%edx
		mov    %bl,%al
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000001,%edx
		call   _0645cc_func
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		add    $0x000008,%ecx
		shl    $0x000002,%eax
		xor    %dh,%dh
		mov    %cx,_0e4dae_data(%eax)
		mov    %dh,_0e4dbe_data(%eax)
		test   %bl,%bl
		movw   $0x000032,_0e4db0_data(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		movw   $0x000046,_0e4db2_data(,%eax,4)

	_0647bf_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0647cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,%cl
		cmp    _0e4e15_data,%al
		jae    _064a74_jump
		cmp    $0x000005,%al
		jae    _064a74_jump
		movzbl %al,%ebp
		lea    0x000000(,%ebp,4),%edi
		add    %ebp,%edi
		shl    $0x000002,%edi
		mov    _0e4db8_data(%edi),%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		jne    _064a74_jump
		movb   $0x000000,0x00007e(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f8e8_func
		xor    %dh,%dh
		mov    _0e4e1a_data,%bl
		mov    %dh,_0e4dbd_data(%edi)
		test   %bl,%bl
		je     _06485f_jump
		cmp    $0x000003,%bl
		je     _06485f_jump
		cmp    $0x000004,%bl
		jne    _0648ea_jump

	_06485f_jump:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    %cl,%al
		mov    %eax,%edx
		lea    0x000000(,%eax,4),%ebp
		mov    $0x000004,%bl
		add    %eax,%ebp
		xor    %eax,%edx
		shl    $0x000002,%ebp
		mov    _0e4e15_data,%dl
		mov    %bl,_0e4dbe_data(%ebp)
		call   _064574_func
		mov    %ax,_0e4dac_data(%ebp)
		mov    _0cf80a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0ccdf0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax,%edi,4),%dl
		mov    0x000038(%eax,%edi,4),%cx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000069(%esi),%al
		mov    $0x000001,%edi
		sub    %eax,%edx
		mov    %di,_0e4db0_data(%ebp)
		mov    %dx,_0e4dae_data(%ebp)
		jmp    _0649e3_jump

	_0648ea_jump:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x00005a(%eax),%al
		mov    %al,0x00006a(%esi)
		cmpb   $0x000005,_0e4e1a_data
		jne    _064950_jump
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    _0e4e15_data,%dl
		call   _064574_func
		xor    %edx,%edx
		mov    %ax,_0e4dac_data(%edi)
		xor    %eax,%eax
		call   _0645cc_func
		mov    $0x000001,%dh
		mov    %ax,_0e4dae_data(%edi)
		mov    _0e4e10_data,%ax
		mov    %dh,_0e4dbe_data(%edi)
		mov    %ax,_0e4db0_data(%edi)
		jmp    _0649e3_jump

	_064950_jump:
		xor    %edx,%edx
		mov    _0e4e15_data,%al
		mov    _0e4e18_data,%dl
		inc    %al
		cmp    _09728a_data(%edx),%cl
		jb     _064976_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %cl,%al
		inc    %al
		and    $0x0000ff,%eax
		jmp    _06497c_jump

	_064976_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax

	_06497c_jump:
		call   _064574_func
		mov    %ax,_0e4dac_data(%edi)
		xor    %eax,%eax
		mov    %cl,%al
		lea    0x000000(,%eax,4),%edi
		add    %eax,%edi
		xor    %eax,%eax
		shl    $0x000002,%edi
		mov    %cl,%al
		mov    _0e4dac_data(%edi),%dx
		shl    $0x000002,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0e4dac_data(%edi)
		xor    %edx,%edx
		call   _0645cc_func
		mov    $0x000003,%dl
		mov    %ax,_0e4dae_data(%edi)
		mov    %dl,_0e4dbe_data(%edi)
		test   %cl,%cl
		jne    _0649da_jump
		mov    _0e4e10_data,%ax
		mov    %ax,_0e4db0_data(%edi)
		jmp    _0649e3_jump

	_0649da_jump:
		movw   $0x000001,_0e4db0_data(%edi)

	_0649e3_jump:
		lea    0x000004(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		push   %eax
		mov    _0cf80a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		lea    0x000014(%esp),%ecx
		shl    $0x000005,%edi
		lea    0x000008(%esp),%ebx
		add    %eax,%edi
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edi
		mov    $0x000006,%edx
		add    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01dbb4_func
		mov    _0cf80a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0ccdf0_data,%eax
		testb  $0x000008,0x000081(%eax,%edi,4)
		je     _064a42_jump
		mov    0x000008(%esp),%eax
		add    %ax,(%esp)

	_064a42_jump:
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000069(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)

	_064a74_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064a80_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		test   %ax,%ax
		jne    _064a9b_jump
		test   %dx,%dx
		jl     _064a93_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_064a93_jump:
		mov    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_064a9b_jump:
		test   %dx,%dx
		jne    _064abc_jump
		test   %ax,%ax
		jne    _064aaa_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_064aaa_jump:
		jle    _064ab4_jump
		mov    $0x000004,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_064ab4_jump:
		mov    $0x00000c,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_064abc_jump:
		cwtl   
		test   %eax,%eax
		jge    _064ac3_jump
		neg    %eax

	_064ac3_jump:
		mov    %eax,%ecx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _064ace_jump
		neg    %eax

	_064ace_jump:
		sub    %ax,%cx
		jne    _064ada_jump
		mov    $0x000006,%eax
		jmp    _064aeb_jump

	_064ada_jump:
		test   %cx,%cx
		jl     _064ae6_jump
		mov    $0x000005,%eax
		jmp    _064aeb_jump

	_064ae6_jump:
		mov    $0x000007,%eax

	_064aeb_jump:
		test   %bx,%bx
		jle    _064afe_jump
		test   %dx,%dx
		jle    _064b0e_jump
		mov    $0x000008,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_064afe_jump:
		test   %dx,%dx
		jge    _064b0c_jump
		mov    $0x000010,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_064b0c_jump:
		add    $0x000008,%al

	_064b0e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_064b14_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _064a80_func
		mov    %al,0x00006b(%ebx)
		pop    %edx
		pop    %ebx
		ret    

_064b30_switch:
		.long   _064bd8_case
		.long   _064c13_case
		.long   _064c13_case
		.long   _064c13_case
		.long   _064c48_case
		.long   _064c87_case
		.long   _064c87_case
		.long   _064c87_case
		.long   _064d98_case
		.long   _064cad_case
		.long   _064cad_case
		.long   _064cad_case
		.long   _064cc8_case
		.long   _064d01_case
		.long   _064d01_case
		.long   _064d01_case




_064b70_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		lea    0x000004(%esp),%ebx
		push   %ebx
		lea    0x000010(%esp),%ebx
		lea    0x00000c(%esp),%ecx
		push   %ebx
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		call   _01dbb4_func
		mov    0x000024(%esp),%eax
		movw   $0x000006,(%edi)
		movw   $0x000006,(%eax)
		cmpb   $0x000002,0x00006d(%esi)
		jne    _064d66_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		je     _064bc1_jump
		cmp    $0x00000b,%dl
		jne    _064d66_jump

	_064bc1_jump:
		mov    0x00006b(%esi),%al
		cmp    $0x00000f,%al
		ja     _064d29_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_064b30_switch(,%ebx,4)

	_064bd8_case:
		mov    0x00000a(%esp),%ebx
		movswl (%edi),%ecx
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    0x00000e(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064c13_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%esi
		mov    (%edi),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064c48_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000002(%esp),%ecx
		mov    0x000024(%esp),%ebx
		sar    $0x000010,%ecx
		movswl (%ebx),%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064c87_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%edx
		mov    (%edi),%ax
		add    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064cad_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064cc8_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x000002(%esp),%ecx
		movswl (%ebx),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064d01_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064d29_jump:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064d66_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _064dc6_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _064dc6_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		jne    _064dc6_jump
		mov    0x000024(%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)

	_064d98_case:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064dc6_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _064dd2_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _064dfa_jump

	_064dd2_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000002,%dh
		jne    _064e2e_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _064e2e_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		je     _064e2e_jump

	_064dfa_jump:
		mov    0x000028(%esi),%ecx
		movswl (%edi),%ebx
		add    $0x000080,%ecx
		sar    %ebx
		sub    %ebx,%ecx
		mov    %cx,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x00002c(%esi),%ecx
		movswl (%ebx),%ebx
		add    $0x000060,%ecx
		sar    %ebx
		mov    (%esp),%eax
		sub    %ebx,%ecx
		mov    %cx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064e2e_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _064e77_jump
		cmpb   $0x00000c,0x00006c(%esi)
		jne    _064e77_jump
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_064e77_jump:
		mov    (%edi),%ax
		mov    %eax,%edx
		mov    %ax,0x000000(%ebp)
		neg    %edx
		mov    0x000024(%esp),%eax
		mov    %dx,0x000000(%ebp)
		mov    (%eax),%ax
		mov    (%esp),%ebx
		mov    %eax,%ecx
		mov    %ax,(%ebx)
		neg    %ecx
		mov    %cx,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_064ea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e4e12_data,%si
		mov    _0e4e10_data,%di
		mov    _0e4e1a_data,%ah
		cmp    $0x000001,%ah
		je     _064ec7_jump
		cmp    $0x000002,%ah
		jne    _064ee2_jump

	_064ec7_jump:
		mov    _0e4e18_data,%dh
		inc    %dh
		mov    %dh,_0e4e18_data
		cmp    $0x000005,%dh
		jb     _064ee2_jump
		xor    %bh,%bh
		mov    %bh,_0e4e18_data

	_064ee2_jump:
		mov    _0e4e19_data,%al
		mov    _0e4e14_data,%cl
		mov    %edi,%edx
		mov    %esi,%ebx
		sub    $0x00000a,%edx
		sub    $0x00000a,%ebx
		inc    %al
		test   %cl,%cl
		jne    _064f27_jump
		mov    _0e4e17_data,%ah
		inc    %ah
		mov    %ah,_0e4e17_data
		cmp    $0x000002,%ah
		jne    _064f42_jump
		mov    %cl,_0e4e17_data
		mov    %al,_0e4e19_data
		cmp    $0x000004,%al
		jne    _064f42_jump
		mov    %cl,_0e4e19_data
		jmp    _064f3e_jump

	_064f27_jump:
		xor    %ch,%ch
		mov    %al,_0e4e19_data
		mov    %ch,_0e4e17_data
		cmp    $0x000004,%al
		jne    _064f42_jump
		mov    %ch,_0e4e19_data

	_064f3e_jump:
		mov    %ebx,%esi
		mov    %edx,%edi

	_064f42_jump:
		cmp    $0x000064,%si
		jge    _064f4d_jump
		mov    $0x000064,%esi

	_064f4d_jump:
		cmp    $0x000032,%di
		jge    _064f58_jump
		mov    $0x000032,%edi

	_064f58_jump:
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_0e4e16_data
		xor    %eax,%eax
		mov    _0e4e19_data,%dl
		mov    _0e4e17_data,%al
		mov    _097282_data(%eax,%edx,2),%al
		mov    %al,_0e4e1a_data
		xor    %eax,%eax
		mov    _0e4e1a_data,%al
		xor    %dl,%dl
		mov    _09727c_data(%eax),%al
		mov    %dl,_0e4e14_data
		mov    %al,_0e4e15_data
		xor    %al,%al

	_064f97_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		imul   $0x000014,%ebx,%ebx
		mov    _0e4db8_data(%ebx),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%edx
		movl   $0x000000,0x000024(%ecx,%edx,1)
		mov    _0e4db8_data(%ebx),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    0x000081(%edx,%ebx,1),%cl
		and    $0x0000fb,%cl
		inc    %al
		mov    %cl,0x000081(%edx,%ebx,1)
		cmp    $0x000005,%al
		jb     _064f97_jump
		mov    %di,_0e4e10_data
		mov    %si,_0e4e12_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064ff8_func:
		push   %ecx
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		pop    %ecx
		ret    



_065000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _064568_func
		cmp    $0x0000ff,%al
		je     _065117_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0cf89e_data,%dx
		add    _0e4dac_data(%eax),%dx
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%si
		mov    0x000068(%ebx),%cl
		mov    _0e4dae_data(%eax),%di
		add    %esi,%ecx
		mov    _0cf8a6_data,%si
		sub    %ecx,%edx
		xor    %ecx,%ecx
		add    %edi,%esi
		mov    0x000069(%ebx),%cl
		add    0x00002c(%ebx),%cx
		sub    %ecx,%esi
		cmpw   $0x000000,_0e4db0_data(%eax)
		je     _0650f5_jump
		xor    %edi,%edi
		mov    %di,_0e4db0_data(%eax)
		test   %dx,%dx
		jne    _065091_jump
		xor    %eax,%eax
		call   _064ff8_func
		mov    %ax,0x000040(%ebx)
		mov    $0xffffffff,%eax
		call   _064ff8_func
		mov    %ax,0x000042(%ebx)
		jmp    _0650e4_jump

	_065091_jump:
		jl     _06509a_jump
		mov    $0x000002,%eax
		jmp    _06509f_jump

	_06509a_jump:
		mov    $0xfffffffe,%eax

	_06509f_jump:
		movswl %si,%esi
		movswl %ax,%ecx
		shl    $0x000004,%esi
		imul   %ecx,%esi
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		imul   %eax,%edx
		imul   %ecx,%eax
		shl    $0x000003,%esi
		add    %esi,%edx
		neg    %edx
		lea    0x000000(,%eax,8),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _064ff8_func
		sub    $0x00000a,%eax
		mov    %dx,0x000042(%ebx)
		mov    %ax,0x000040(%ebx)

	_0650e4_jump:
		mov    %ebx,%eax
		call   _064b14_func
		movb   $0x000003,0x00007e(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0650f5_jump:
		mov    0x00003e(%ebx),%ecx
		movswl %dx,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		addw   $0x000004,0x000042(%ebx)
		test   %eax,%eax
		jge    _065110_jump
		movw   $0x000000,0x000040(%ebx)

	_065110_jump:
		mov    %ebx,%eax
		call   _064b14_func

	_065117_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065120_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _064568_func
		mov    %al,%bl
		cmp    $0x0000ff,%al
		je     _0652e0_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    _0cf89e_data,%di
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _0e4dac_data(%edx),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%edi
		add    0x000028(%esi),%ax
		sub    %eax,%edi
		mov    _0cf8a6_data,%ax
		mov    %di,(%esp)
		mov    _0e4dae_data(%edx),%di
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _065191_jump
		neg    %eax

	_065191_jump:
		cmp    $0x000004,%eax
		jge    _0651a8_jump
		movswl %di,%eax
		test   %eax,%eax
		jge    _06519f_jump
		neg    %eax

	_06519f_jump:
		cmp    $0x000004,%eax
		jl     _065238_jump

	_0651a8_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %bl,%dl
		mov    %dl,_0e4dbd_data(,%eax,4)
		movswl %di,%eax
		test   %eax,%eax
		jge    _0651c7_jump
		neg    %eax

	_0651c7_jump:
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _0651d8_jump
		neg    %eax

	_0651d8_jump:
		cmp    %ebx,%eax
		jge    _0651de_jump
		mov    %ebx,%eax

	_0651de_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _064ff8_func
		mov    %ax,0x000040(%esi)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _064ff8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _064b14_func
		movb   $0x000003,0x00007e(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065238_jump:
		mov    $0x000001,%ah
		mov    %ah,_0e4dbd_data(%edx)
		mov    _0e4e1a_data,%dl
		cmp    %ah,%dl
		je     _065265_jump
		cmp    $0x000002,%dl
		je     _065265_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _06525b_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _065274_jump

	_06525b_jump:
		movb   $0x000002,0x00006d(%esi)
		movb   $0x00000d,0x00006c(%esi)
		jmp    _065274_jump

	_065265_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		call   _064a80_func
		mov    %al,0x00006b(%esi)

	_065274_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		movw   $0x000000,0x000040(%esi)
		add    %edx,%eax
		movw   $0x000000,0x000042(%esi)
		mov    _0e4daa_data(,%eax,4),%ebx
		mov    _0cf89c_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    _0e4dac_data(,%eax,4),%eax
		mov    _0cf8a4_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		call   _06451c_func
		test   %al,%al
		je     _0652e0_jump
		movb   $0x000003,_0e4e16_data
		call   _064500_func

	_0652e0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0652ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _064568_func
		mov    %al,%dl
		cmp    $0x0000ff,%al
		je     _0654dd_jump
		test   %al,%al
		je     _06532f_jump
		je     _0654dd_jump
		and    $0x0000ff,%eax
		lea    -0x000001(%eax),%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0e4db2_data(,%eax,4)
		jne    _0654dd_jump

	_06532f_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0e4db2_data(%eax),%cx
		test   %cx,%cx
		jne    _0654d3_jump
		mov    %cx,(%esp)
		mov    _0e4dbe_data(%eax),%dh
		xor    %edi,%edi
		cmp    $0x000002,%dh
		je     _06539a_jump
		mov    _0cf89e_data,%di
		xor    %ebx,%ebx
		mov    _0e4dac_data(%eax),%cx
		mov    0x000068(%esi),%bl
		add    %ecx,%edi
		add    0x000028(%esi),%bx
		mov    _0e4dae_data(%eax),%cx
		sub    %ebx,%edi
		xor    %eax,%eax
		mov    _0cf8a6_data,%bx
		mov    0x000069(%esi),%al
		add    %ecx,%ebx
		add    0x00002c(%esi),%ax
		sub    %eax,%ebx
		mov    %bx,(%esp)

	_06539a_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0653a3_jump
		neg    %eax

	_0653a3_jump:
		cmp    $0x000002,%eax
		jge    _0653be_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0653b5_jump
		neg    %eax

	_0653b5_jump:
		cmp    $0x000002,%eax
		jl     _065441_jump

	_0653be_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %ch,%ch
		mov    %ch,_0e4dbd_data(,%eax,4)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0653e3_jump
		neg    %eax

	_0653e3_jump:
		mov    %eax,%ebx
		movswl %di,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _0653f0_jump
		neg    %eax

	_0653f0_jump:
		cmp    %ebx,%eax
		jge    _0653f6_jump
		mov    %ebx,%eax

	_0653f6_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _064ff8_func
		mov    %ax,0x000040(%esi)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _064ff8_func
		mov    %ax,0x000042(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065441_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    $0x000001,%bl
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    %bl,_0e4dbd_data(%edx)
		call   _064ff8_func
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		call   _064ff8_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e4dbe_data(%edx)
		je     _0654b5_jump
		mov    _0e4daa_data(%edx),%eax
		mov    _0cf89c_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0cf8a4_data,%eax
		mov    _0e4dac_data(%edx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)

	_0654b5_jump:
		call   _06451c_func
		test   %al,%al
		je     _0654dd_jump
		movb   $0x000003,_0e4e16_data
		call   _064500_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0654d3_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0e4db2_data(%eax)

	_0654dd_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0654e8_switch:
		.long   _0657db_case
		.long   _065733_case
		.long   _065817_case
		.long   _0657b3_case




_0654f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		call   _064568_func
		mov    %al,0x000010(%esp)
		cmp    $0x0000ff,%al
		je     _065af2_jump
		test   %al,%al
		je     _06553e_jump
		je     _065af2_jump
		and    $0x0000ff,%eax
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		cmpw   $0x000000,_0e4db0_data(,%eax,4)
		jne    _065af2_jump

	_06553e_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e4db0_data(%eax),%di
		test   %di,%di
		jne    _065683_jump
		cmpb   $0x000000,_0e4dbd_data(%eax)
		jne    _065af2_jump
		mov    _0e4db8_data(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		xor    %edx,%edx
		mov    0x000028(%eax),%cx
		mov    0x000069(%eax),%dl
		add    %ecx,%ebx
		mov    0x00002c(%eax),%cx
		movswl %bx,%eax
		add    %edx,%ecx
		cmp    $0xffffffec,%eax
		jl     _0655d6_jump
		mov    _0cf88e_data,%edx
		sar    $0x000010,%edx
		add    $0x000154,%edx
		cmp    %edx,%eax
		jg     _0655d6_jump
		movswl %cx,%eax
		cmp    $0xffffffec,%eax
		jl     _0655d6_jump
		mov    _0cf882_data,%edx
		sar    $0x000010,%edx
		add    $0x0000dc,%edx
		cmp    %edx,%eax
		jle    _065af2_jump

	_0655d6_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		movb   $0x000001,_0e4dbd_data(%edx)
		mov    _0e4db8_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		movl   $0x000000,0x000024(%ebx,%eax,4)
		mov    _0e4db8_data(%edx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ebx,%eax,4)
		call   _06451c_func
		test   %al,%al
		je     _065af2_jump
		mov    _0cf80a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		mov    $0x000004,%ch
		mov    0x000076(%edx,%eax,4),%bl
		mov    %ch,_0e4e16_data
		test   %bl,%bl
		jne    _065af2_jump
		mov    $0x000001,%bh
		mov    _0cf81e_data,%cl
		mov    %bh,_0cfa76_data
		or     $0x000010,%cl
		mov    %bh,_0cfa78_data
		mov    %cl,_0cf81e_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065683_jump:
		cmp    $0x000001,%di
		jne    _065ac1_jump
		mov    _0e4db4_data(%eax),%di
		cmp    $0x00000f,%di
		jne    _0659d2_jump
		movzbw _0ce6b8_data,%di
		mov    %edi,(%esp)
		mov    _0ce678_data,%di
		add    (%esp),%edi
		mov    %di,_0e4dac_data(%eax)
		movzbw _0ce6b9_data,%di
		mov    %edi,(%esp)
		mov    _0ce67c_data,%di
		add    (%esp),%edi
		mov    %di,_0e4dae_data(%eax)
		movzbw 0x000068(%esi),%di
		mov    %edi,(%esp)
		mov    0x000028(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e4dac_data(%eax),%di
		sub    (%esp),%edi
		mov    %di,0x00000c(%esp)
		movzbw 0x000069(%esi),%di
		mov    %edi,(%esp)
		mov    0x00002c(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e4dae_data(%eax),%di
		sub    (%esp),%edi
		mov    _0e4dbe_data(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x000003,%al
		ja     _065847_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0654e8_switch(,%eax,4)

	_065733_case:
		mov    0x000006(%esp),%eax
		mov    $0x00000b,%ebx
		sar    $0x000010,%eax
		mov    %bx,0x000004(%esp)
		test   %eax,%eax
		jge    _06574a_jump
		neg    %eax

	_06574a_jump:
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _06575b_jump
		neg    %eax

	_06575b_jump:
		cmp    %ebx,%eax
		jge    _065761_jump
		mov    %ebx,%eax

	_065761_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		mov    $0x000004,%cl
		call   _064ff8_func
		mov    %eax,%edi
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		call   _064ff8_func
		mov    %eax,%ecx
		movswl %ax,%edx
		movswl %di,%eax
		jmp    _065840_jump

	_0657b3_case:
		movw   $0x00000b,0x000004(%esp)
		xor    %eax,%eax
		call   _064ff8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000003,%eax
		call   _064ff8_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		jmp    _065840_jump

	_0657db_case:
		mov    $0x00000b,%ecx
		mov    0x00000c(%esp),%edi
		mov    %cx,0x000004(%esp)
		test   %di,%di
		jl     _0657f5_jump
		mov    $0x000003,%eax
		jmp    _0657fa_jump

	_0657f5_jump:
		mov    $0xfffffffd,%eax

	_0657fa_jump:
		cwtl   
		call   _064ff8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		call   _064ff8_func
		mov    %eax,%ecx
		cwtl   
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		jmp    _065840_jump

	_065817_case:
		mov    $0xffffffff,%eax
		mov    $0x00000e,%edx
		call   _064ff8_func
		mov    %dx,0x000004(%esp)
		mov    %eax,%ebx
		mov    $0x000005,%eax
		mov    $0x000001,%edx
		call   _064ff8_func
		mov    %eax,%ecx
		xor    %eax,%eax

	_065840_jump:
		call   _064a80_func
		mov    %al,%dl

	_065847_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e4dbe_data(%eax),%dh
		cmp    $0x000002,%dh
		jne    _065923_jump
		mov    0x000004(%esp),%dh
		movzbl 0x00006d(%esi),%edi
		mov    0x00000c(%esi),%ebp
		shl    $0x000002,%edi
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		add    %ebp,%edi
		movzbl 0x00006c(%esi),%ebp
		mov    (%edi),%edi
		shl    $0x000003,%ebp
		add    %ebp,%edi
		andb   $0x0000f0,0x000005(%edi)
		mov    %dl,_0e4dbc_data(%eax)
		mov    %bx,_0e4db6_data(%eax)
		mov    _0e4db4_data(%eax),%di
		mov    %cx,_0e4db8_data(%eax)
		dec    %edi
		mov    _0e4db6_data(%eax),%dx
		mov    %di,_0e4db4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e4db8_data(%eax),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000042(%esi)
		mov    $0x00000f,%edx
		mov    %bx,_0e4db0_data(%eax)
		xor    %bl,%bl
		mov    %dx,_0e4db4_data(%eax)
		xor    %edx,%edx
		mov    %bl,_0e4dbd_data(%eax)
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%cl
		and    $0x0000f0,%cl
		mov    %cl,0x000005(%ebx,%eax,1)
		mov    %cl,%ch
		or     $0x000002,%ch
		mov    %ch,0x000005(%ebx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065923_jump:
		cmp    $0x000003,%dh
		jne    _065992_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e4dbc_data(%eax)
		mov    %bx,_0e4db6_data(%eax)
		mov    _0e4db4_data(%eax),%bx
		mov    %cx,_0e4db8_data(%eax)
		dec    %ebx
		mov    _0e4db6_data(%eax),%dx
		mov    %bx,_0e4db4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e4db8_data(%eax),%dx
		mov    $0x00000f,%ecx
		mov    %dx,0x000042(%esi)
		xor    %bl,%bl
		mov    %cx,_0e4db4_data(%eax)
		xor    %esi,%esi
		mov    %bl,_0e4dbd_data(%eax)
		mov    %si,_0e4db0_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065992_jump:
		cmp    0x00006b(%esi),%dl
		jne    _065af2_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e4dbc_data(%eax)
		mov    %bx,_0e4db6_data(%eax)
		mov    _0e4db4_data(%eax),%dx
		mov    %cx,_0e4db8_data(%eax)
		dec    %edx
		mov    %dx,_0e4db4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0659d2_jump:
		test   %di,%di
		jne    _065a67_jump
		mov    _0e4db6_data(%eax),%dx
		mov    %dx,0x000040(%esi)
		mov    _0e4db8_data(%eax),%dx
		mov    %dx,0x000042(%esi)
		cmpb   $0x000002,_0e4dbe_data(%eax)
		jne    _065a2e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)

	_065a2e_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x00000f,%esi
		xor    %edi,%edi
		mov    %si,_0e4db4_data(,%eax,4)
		xor    %cl,%cl
		mov    %di,_0e4db0_data(,%eax,4)
		mov    %cl,_0e4dbd_data(,%eax,4)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065a67_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    _0e4dbc_data(%eax),%dl
		mov    %dl,0x00006b(%esi)
		testb  $0x000001,_0e4db4_data(%eax)
		je     _065a8b_jump
		addl   $0x000002,0x00002c(%esi)
		jmp    _065a8f_jump

	_065a8b_jump:
		subl   $0x000002,0x00002c(%esi)

	_065a8f_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0e4db4_data(%eax),%bx
		test   %bx,%bx
		jle    _065af2_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0e4db4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065ac1_jump:
		jle    _065acd_jump
		mov    %edi,%ebx
		dec    %ebx
		mov    %bx,_0e4db0_data(%eax)

	_065acd_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x000001,_0e4db0_data(%eax)
		jne    _065af2_jump
		movw   $0x00000f,_0e4db4_data(%eax)

	_065af2_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_065afc_switch:
		.long   _065bd4_case
		.long   _065bed_case
		.long   _065c98_case
		.long   _065c70_case
		.long   _065c18_case




_065b10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x00006d(%eax),%al
		test   %al,%al
		jbe    _065b2a_jump
		cmp    $0x000002,%al
		je     _065bb3_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065b2a_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%al
		jne    _065cfb_jump
		mov    0x000081(%esi),%bl
		mov    $0x000001,%cl
		or     $0x000020,%bl
		mov    0x000040(%esi),%ax
		mov    %bl,0x000081(%esi)
		test   %ax,%ax
		js     _065b54_jump
		sar    %cl,%ax
		jmp    _065b5d_jump

	_065b54_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_065b5d_jump:
		mov    %ax,0x000040(%esi)
		mov    %esi,%eax
		call   _025820_func
		cmpw   $0x000001,_0cf852_data
		je     _065b7f_jump
		cmpb   $0x000002,_0e4e16_data
		jne    _065cfb_jump

	_065b7f_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf852_data
		cmpb   $0x000002,_0e4e16_data
		je     _065b9d_jump
		movb   $0x000002,_0e4e16_data
		call   _064500_func

	_065b9d_jump:
		mov    $0x00000c,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065bb3_jump:
		andb   $0x0000df,0x000081(%esi)
		mov    0x00006c(%esi),%al
		sub    $0x00000a,%al
		cmp    $0x000004,%al
		ja     _065cfb_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_065afc_switch(,%eax,4)

	_065bd4_case:
		cmpb   $0x000000,_0e4e16_data
		jne    _065cfb_jump
		mov    %esi,%eax
		call   _065000_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065bed_case:
		mov    _0e4e16_data,%ah
		cmp    $0x000003,%ah
		jne    _065c04_jump
		mov    %esi,%eax
		call   _0654f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065c04_jump:
		test   %ah,%ah
		jne    _065cfb_jump
		mov    %esi,%eax
		call   _065120_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065c18_case:
		mov    _0e4e16_data,%dl
		cmp    $0x000003,%dl
		jne    _065c2c_jump
		mov    %esi,%eax
		call   _0654f8_func
		jmp    _065c37_jump

	_065c2c_jump:
		test   %dl,%dl
		jne    _065c37_jump
		mov    %esi,%eax
		call   _065120_func

	_065c37_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _065cfb_jump
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		call   _064a80_func
		cmp    0x00006b(%esi),%al
		jne    _065cfb_jump
		xor    %eax,%eax
		mov    0x00000c(%esi),%edx
		mov    0x00006d(%esi),%al
		movzbl 0x00006c(%esi),%esi
		mov    (%edx,%eax,4),%eax
		andb   $0x0000f0,0x000005(%eax,%esi,8)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065c70_case:
		mov    _0e4e16_data,%cl
		cmp    $0x000002,%cl
		jne    _065c87_jump
		mov    %esi,%eax
		call   _0652ec_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065c87_jump:
		cmp    $0x000003,%cl
		jne    _065cfb_jump
		mov    %esi,%eax
		call   _0654f8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065c98_case:
		xor    %eax,%eax
		call   _064ff8_func
		mov    %ax,0x000040(%esi)
		mov    $0xffffffff,%eax
		call   _064ff8_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d074_func
		test   %al,%al
		je     _065cfb_jump
		xor    %eax,%eax
		call   _064ff8_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e4e16_data
		jne    _065ced_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _064650_func
		mov    %esi,%eax
		call   _01d818_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065ced_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_065cfb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0ce678_data,%cx
		mov    _0ce6b8_data,%bl
		add    %ecx,%ebx
		sub    %dx,%bx
		mov    %ebx,%edx
		je     _065d4a_jump
		add    $0x000081,%eax
		test   %bx,%bx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_065d4a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_065d50_switch:
		.long   _065e7f_case
		.long   _065e3d_case
		.long   _066169_case
		.long   _066169_case
		.long   _065eb6_case
		.long   _065def_case
		.long   _065f47_case

_065d6c_switch:
		.long   _066063_case
		.long   _06607c_case
		.long   _06609c_case
		.long   _066100_case
		.long   _066150_case
		.long   _066035_case
		.long   _066169_case
		.long   _06606a_case
		.long   _065fd2_case




_065d90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ah,_0cfa68_data
		mov    0x00006d(%ecx),%bl
		mov    _0cf884_data,%ax
		mov    0x00006c(%ecx),%dl
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		mov    %ax,_0cf8a6_data
		mov    %edx,%eax
		dec    %eax
		test   %bx,%bx
		jbe    _065dd8_jump
		cmp    $0x000002,%bx
		je     _065fbb_jump
		jmp    _066169_case

	_065dd8_jump:
		cmp    $0x000006,%ax
		ja     _066169_case
		and    $0x00ffff,%eax
		jmp    *%cs:_065d50_switch(,%eax,4)

	_065def_case:
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _025820_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		mov    _0cf89c_data,%edx
		sar    $0x000010,%edx
		add    $0x000100,%edx
		cmp    %edx,%eax
		jle    _066169_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065e3d_case:
		mov    %ecx,%eax
		call   _065d00_func
		mov    %ecx,%eax
		call   _025820_func
		cmpb   $0x000004,_0e4e16_data
		jne    _065e5e_jump
		call   _064500_func
		call   _064ea4_func

	_065e5e_jump:
		cmpb   $0x000000,_0e4e16_data
		jne    _066169_case
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065e7f_case:
		mov    %ecx,%eax
		call   _025820_func
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _066169_case
		mov    _0e4e16_data,%al
		test   %al,%al
		jne    _066169_case
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065eb6_case:
		mov    %ecx,%eax
		call   _025820_func
		cmpb   $0x000023,0x00006b(%ecx)
		jne    _065f21_jump
		movswl %bx,%eax
		shl    $0x000002,%eax
		mov    0x00000c(%ecx),%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    (%ebx),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _065f21_jump
		mov    0x000032(%ecx),%edx
		mov    $0x000099,%eax
		sar    $0x000010,%edx
		xor    %ebx,%ebx
		call   _07228c_func
		jmp    _065f05_jump

	_065efb_jump:
		xor    %eax,%eax
		mov    %bl,%al
		call   _0647cc_func
		inc    %ebx

	_065f05_jump:
		xor    %eax,%eax
		mov    _0e4e15_data,%al
		cmp    %ax,%bx
		jge    _066169_case
		cmp    $0x000005,%bx
		jl     _065efb_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065f21_jump:
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _066169_case
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065f47_case:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		call   _01d074_func
		test   %al,%al
		je     _066169_case
		mov    $0x000001,%edx
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		xor    %ebx,%ebx
		mov    %al,0x000081(%ecx)

	_065f7e_jump:
		movswl %bx,%eax
		imul   $0x000014,%eax,%eax
		movb   $0x000002,_0e4dbe_data(%eax)
		mov    %dx,_0e4db0_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e4dbd_data(%eax)
		mov    $0x00000f,%ecx
		add    %edx,%ebx
		mov    %cx,_0e4db4_data(%eax)
		cmp    $0x000005,%bx
		jl     _065f7e_jump
		movb   $0x000002,_0e4e16_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065fbb_jump:
		cmp    $0x000008,%ax
		ja     _066169_case
		and    $0x00ffff,%eax
		jmp    *%cs:_065d6c_switch(,%eax,4)

	_065fd2_case:
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _01d074_func
		test   %al,%al
		jne    _065ff8_jump
		cmpb   $0x000001,0x000076(%ecx)
		jne    _066169_case
		cmpw   $0x000000,0x000042(%ecx)
		jl     _066169_case

	_065ff8_jump:
		mov    $0x000001,%dh
		mov    0x000076(%ecx),%bl
		mov    %dh,_0e4e14_data
		sub    %dh,%bl
		mov    %bl,0x000076(%ecx)
		jne    _06601e_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06601e_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066035_case:
		andb   $0x0000f7,0x000081(%ecx)
		mov    0x00006b(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000006,%ah
		jae    _066057_jump
		mov    %ecx,%eax
		call   _0643f0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066057_jump:
		movw   $0x00fffe,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066063_case:
		mov    %ecx,%eax
		call   _065d00_func

	_06606a_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06607c_case:
		mov    0x00006b(%ecx),%bh
		movw   $0x00fffe,0x000042(%ecx)
		cmp    $0x00000f,%bh
		jb     _066090_jump
		movw   $0x000000,0x000042(%ecx)

	_066090_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06609c_case:
		movw   $0x000000,0x000042(%ecx)
		call   _06451c_func
		test   %al,%al
		je     _066169_case
		cmpb   $0x000000,_0e4e16_data
		jne    _0660bf_jump
		movb   $0x000001,_0e4e16_data

	_0660bf_jump:
		mov    0x000050(%ecx),%si
		inc    %esi
		mov    _0e4e12_data,%di
		mov    %si,0x000050(%ecx)
		cmp    %di,%si
		je     _0660e1_jump
		cmpb   $0x000005,_0e4e1a_data
		jne    _066169_case

	_0660e1_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x000000,0x000071(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x000072(%ecx)
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066100_case:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		mov    _0cf89e_data,%dx
		add    %ebx,%eax
		add    $0x0000a0,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _0645e0_func
		cwtl   
		sub    %ebx,%eax
		cmp    $0x000005,%eax
		jge    _066169_case
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066150_case:
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _066169_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func

	_066169_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066170_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _064440_func
		mov    $0x000096,%edx
		mov    $0x000046,%ebx
		movb   $0x000006,0x000076(%ecx)
		xor    %ah,%ah
		movb   $0x000006,0x000077(%ecx)
		mov    %ah,_0e4e19_data
		mov    %ah,_0e4e17_data
		mov    %ah,_0e4e16_data
		mov    %ah,_0e4e18_data
		mov    _097282_data,%al
		mov    %dx,_0e4e12_data
		mov    %al,_0e4e1a_data
		xor    %eax,%eax
		mov    %bx,_0e4e10_data
		mov    _0e4e1a_data,%al
		mov    $0x000002,%edx
		xor    %bh,%bh
		mov    _09727c_data(%eax),%al
		mov    %bh,_0e4e14_data
		mov    %al,_0e4e15_data
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%al
		mov    $0x000006,%ebx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d818_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000032(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066218_func:
		call   _066170_func
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf86e_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf85e_data
		mov    %ax,_0cf854_data
		ret    



_066244_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000005,%dx
		jne    _066288_jump
		cmpb   $0x000000,_0e4e14_data
		jne    _066288_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _066288_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _066288_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000008,0x000072(%ecx)

	_066288_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06628c_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0ce6a6_data
		pop    %edx
		ret    



_0662a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _0662ee_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _0662ee_jump
		mov    %ecx,%eax
		call   _025b30_func
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0e4dbd_data(,%eax,4)
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0662ee_jump:
		mov    0x00006d(%ecx),%dh
		cmp    $0x000002,%dh
		jne    _066359_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _066359_jump
		mov    _0e4e1a_data,%al
		cmp    $0x000001,%al
		je     _06630d_jump
		cmp    %dh,%al
		jne    _0663a9_jump

	_06630d_jump:
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%dl
		mov    %dl,_0e4dbd_data(,%eax,4)
		call   _06451c_func
		test   %al,%al
		je     _066334_jump
		mov    %dl,_0e4e16_data

	_066334_jump:
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _025b30_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066359_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0663a9_jump
		cmpb   $0x00000e,0x00006c(%ecx)
		jne    _0663a9_jump
		mov    0x000072(%ecx),%al
		mov    0x000042(%ecx),%dx
		mov    0x000071(%ecx),%ah
		neg    %edx
		sub    %ah,%al
		mov    %dx,0x000042(%ecx)
		xor    %edx,%edx
		mov    %al,0x000071(%ecx)
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %ecx,%eax
		call   _025b30_func

	_0663a9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0663b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _0663e9_jump
		cmpb   $0x000007,0x00006c(%ecx)
		jne    _0663e9_jump
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _025b30_func
		mov    %ecx,%eax
		call   _01d818_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0663e9_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _066456_jump
		cmpb   $0x000005,0x00006c(%ecx)
		jne    _066456_jump
		movw   $0x000000,0x000040(%ecx)
		mov    _0cf852_data,%dx
		movw   $0x000000,0x000042(%ecx)
		test   %dx,%dx
		jne    _066441_jump
		cmpw   $0x000000,0x000050(%ecx)
		jne    _066438_jump
		mov    %ecx,%eax
		call   _025b30_func
		mov    %ecx,%eax
		call   _055d78_func
		mov    0x000032(%ecx),%edx
		mov    $0x00003e,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		movw   $0x000001,0x000050(%ecx)

	_066438_jump:
		movw   $0x000001,_0cf852_data

	_066441_jump:
		cmpb   $0x000001,_0e4e16_data
		jne    _066456_jump
		movb   $0x000002,_0e4e16_data
		call   _064500_func

	_066456_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066460_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		movl   $0x000100,_0e4e1c_data
		xor    %edx,%edx
		mov    %ax,%dx
		add    $0x00000f,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $_0e4e1c_data,%ebx
		mov    %eax,_0e4e20_data
		mov    %ebx,%edx
		mov    $0x000031,%eax
		call   _0813ca_func
		testb  $0x000001,_0e4e34_data
		je     _0664ad_jump
		movl   $0x000000,(%ecx)
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_0664ad_jump:
		xor    %edx,%edx
		mov    _0e4e1c_data,%dx
		shl    $0x000010,%edx
		mov    %edx,(%ecx)
		mov    _0e4e28_data,%ax
		pop    %ecx
		pop    %ebx
		ret    



_0664c4_func:
		push   %ebx
		push   %edx
		mov    $0x000101,%edx
		mov    $_0e4e1c_data,%ebx
		mov    %ax,_0e4e28_data
		mov    $0x000031,%eax
		mov    %dx,_0e4e1c_data
		mov    %ebx,%edx
		call   _0813ca_func
		testb  $0x000001,_0e4e34_data
		setne  %al
		pop    %edx
		pop    %ebx
		ret    



_0664f8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %al,%cl
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		mov    $_0e4e1c_data,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    $0x00000c,%ebx
		mov    $_0e4e6c_data,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    $0x000034,%ebx
		mov    $_0e4e38_data,%eax
		xor    %edx,%edx
		call   _080420_func
		xor    %eax,%eax
		mov    (%esi),%ax
		mov    %eax,_0e4e54_data
		xor    %eax,%eax
		mov    0x000002(%esi),%ax
		mov    %eax,_0e4e48_data
		xor    %eax,%eax
		mov    0x000004(%esi),%ax
		mov    %eax,_0e4e50_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,_0e4e4c_data
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,_0e4e3c_data
		xor    %eax,%eax
		mov    0x00000a(%esi),%ax
		mov    $0x000300,%edx
		mov    %eax,_0e4e38_data
		mov    0x00000c(%esi),%ax
		mov    %cl,_0e4e20_data
		mov    %ax,_0e4e58_data
		mov    0x00000e(%esi),%ax
		xor    %ebx,%ebx
		mov    %ax,_0e4e64_data
		mov    0x000010(%esi),%ax
		mov    $_0e4e6c_data,%ecx
		mov    %ax,_0e4e5c_data
		mov    0x000012(%esi),%ax
		mov    %dx,_0e4e1c_data
		mov    %ax,_0e4e5a_data
		mov    0x000014(%esi),%ax
		mov    %bx,_0e4e24_data
		mov    %ax,_0e4e68_data
		xor    %ah,%ah
		mov    %ds,%edx
		mov    %ah,_0e4e21_data
		mov    $_0e4e38_data,%eax
		mov    $_0e4e1c_data,%ebx
		mov    %dx,_0e4e6c_data
		mov    $_0e4e38_data,%edx
		mov    $0x000031,%eax
		mov    %edx,_0e4e30_data
		mov    %ebx,%edx
		call   _085aa3_func
		mov    _0e4e54_data,%ax
		mov    %ax,(%esi)
		mov    _0e4e48_data,%ax
		mov    %ax,0x000002(%esi)
		mov    _0e4e50_data,%ax
		mov    %ax,0x000004(%esi)
		mov    _0e4e4c_data,%ax
		mov    %ax,0x000006(%esi)
		mov    _0e4e3c_data,%ax
		mov    %ax,0x000008(%esi)
		mov    _0e4e38_data,%ax
		mov    %ax,0x00000a(%esi)
		mov    _0e4e58_data,%ax
		mov    %ax,0x00000c(%esi)
		mov    _0e4e64_data,%ax
		mov    %ax,0x00000e(%esi)
		mov    _0e4e5c_data,%ax
		mov    %ax,0x000010(%esi)
		mov    _0e4e5a_data,%ax
		mov    %ax,0x000012(%esi)
		mov    _0e4e68_data,%ax
		mov    %ax,0x000014(%esi)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_066670_switch:
		.long   _0666c1_case
		.long   _0666ee_case
		.long   _0666c8_case
		.long   _0666ee_case
		.long   _0666cf_case
		.long   _0666ee_case
		.long   _0666ee_case
		.long   _0666d6_case
		.long   _0666ee_case
		.long   _0666dd_case
		.long   _0666ee_case
		.long   _0666e4_case




_0666a0_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0ce6dc_data,%eax
		mov    0x00006c(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _0666ee_case
		and    $0x0000ff,%edx
		jmp    *%cs:_066670_switch(,%edx,4)

	_0666c1_case:
		mov    $0x000002,%edx
		jmp    _0666e9_jump

	_0666c8_case:
		mov    $0x000004,%edx
		jmp    _0666e9_jump

	_0666cf_case:
		mov    $0x000006,%edx
		jmp    _0666e9_jump

	_0666d6_case:
		mov    $0x000009,%edx
		jmp    _0666e9_jump

	_0666dd_case:
		mov    $0x00000b,%edx
		jmp    _0666e9_jump

	_0666e4_case:
		mov    $0x00000d,%edx

	_0666e9_jump:
		call   _01d808_func

	_0666ee_case:
		test   %bl,%bl
		je     _0666fb_jump
		mov    _0ce6dc_data,%eax
		movb   $0x000007,0x00006b(%eax)

	_0666fb_jump:
		pop    %edx
		pop    %ebx
		ret    



_066700_func:
		push   %ebx
		push   %edx
		mov    _0ce770_data,%eax
		mov    _0cf8a4_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0ce6dc_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0cf89e_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_06673c_switch:
		.long   _06699a_case
		.long   _0669a3_case
		.long   _066988_case
		.long   _0669a3_case
		.long   _066976_case
		.long   _0669a3_case
		.long   _0669a3_case
		.long   _066993_case
		.long   _0669a3_case
		.long   _066981_case
		.long   _0669a3_case
		.long   _06696f_case




_06676c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0ce6bd_data
		jne    _066790_jump
		mov    _0ce6bc_data,%dl
		cmp    $0x000019,%dl
		je     _066789_jump
		cmp    $0x00001a,%dl
		jne    _066790_jump

	_066789_jump:
		mov    $0x00001d,%edx
		jmp    _0667cf_jump

	_066790_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _0667b0_jump
		mov    _0ce6bc_data,%bh
		cmp    $0x00001b,%bh
		je     _0667a9_jump
		cmp    $0x00001c,%bh
		jne    _0667b0_jump

	_0667a9_jump:
		mov    $0x00001e,%edx
		jmp    _0667cf_jump

	_0667b0_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _0667ca_jump
		mov    _0ce6bc_data,%al
		cmp    $0x000011,%al
		je     _0667d9_jump
		cmp    $0x000012,%al
		je     _0667d9_jump
		cmp    $0x000013,%al
		je     _0667d9_jump

	_0667ca_jump:
		mov    $0x00000d,%edx

	_0667cf_jump:
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_0667d9_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _06683d_jump
		testb  $0x000008,_0ce6d1_data
		je     _066812_jump
		mov    _0ce776_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _066837_jump

	_066812_jump:
		mov    _0ce776_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_066837_jump:
		mov    %ax,_0cf866_data

	_06683d_jump:
		mov    _0ce6dc_data,%eax
		mov    _0ce6d1_data,%dl
		xor    %bh,%bh
		and    $0x000008,%dl
		mov    %bh,_0ce780_data
		mov    0x000081(%eax),%dh
		mov    %bh,_0ce781_data
		and    $0x0000f7,%dh
		mov    %bh,_0ce77d_data
		mov    %dh,%bl
		mov    %dh,0x000081(%eax)
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    0x000081(%eax),%bh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%bh
		mov    %bh,0x000081(%eax)
		mov    _0cf888_data,%eax
		mov    $0x000001,%cl
		sar    $0x000010,%eax
		mov    %cl,_0ce77e_data
		call   _01f918_func
		mov    _0ce6dc_data,%eax
		call   _01f8e8_func
		mov    _0ce6dc_data,%eax
		xor    %ch,%ch
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		movw   $0x00ffff,0x00004a(%eax)
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		mov    %ch,0x00006b(%eax)
		call   _01d818_func
		mov    _0ce6dc_data,%eax
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000002(%ebx,%edx,8),%dl
		mov    %dl,0x00006a(%eax)
		mov    _0cf862_data,%edx
		mov    _0cf85e_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0ce6d1_data,%cl
		lea    0x000028(%eax),%edx
		test   $0x000008,%cl
		je     _066927_jump
		mov    $0xfffffffb,%eax
		jmp    _06692c_jump

	_066927_jump:
		mov    $0x000005,%eax

	_06692c_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0ce778_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _066944_jump
		sar    %cl,%ax
		jmp    _06694d_jump

	_066944_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06694d_jump:
		inc    %al
		mov    %al,_0ce77f_data
		mov    _0ce6dc_data,%eax
		mov    0x00006e(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _0669a3_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06673c_switch(,%eax,4)

	_06696f_case:
		addb   $0x000002,_0ce77f_data

	_066976_case:
		movw   $0x00000b,_0ce776_data
		jmp    _0669a3_case

	_066981_case:
		addb   $0x000002,_0ce77f_data

	_066988_case:
		movw   $0x000008,_0ce776_data
		jmp    _0669a3_case

	_066993_case:
		addb   $0x000002,_0ce77f_data

	_06699a_case:
		movw   $0x000005,_0ce776_data

	_0669a3_case:
		testb  $0x000008,_0ce6d1_data
		je     _0669b6_jump
		cmpw   $0x000000,_0cf866_data
		jg     _0669c9_jump

	_0669b6_jump:
		testb  $0x000008,_0ce6d1_data
		jne    _0669e9_jump
		cmpw   $0x000000,_0cf866_data
		jge    _0669e9_jump

	_0669c9_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _0669d9_jump
		neg    %eax

	_0669d9_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _0669e2_jump
		mov    %ebx,%eax

	_0669e2_jump:
		add    %ax,_0ce776_data

	_0669e9_jump:
		mov    _0ce774_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0669fc_jump
		mov    %ebx,%eax

	_0669fc_jump:
		mov    %eax,%edx
		mov    %ax,_0ce776_data
		mov    _0ce6dc_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _066a21_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _066a30_jump

	_066a21_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_066a30_jump:
		mov    _0ce776_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0ce774_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0ce778_data,%ax
		mov    %bx,_0ce77a_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0ce774_data
		mov    %ax,_0ce778_data
		mov    _0ce774_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0ce778_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0ce77a_data
		mov    _0ce6dc_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0cf874_data,%edx
		mov    _0cf860_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0ce770_data
		call   _066700_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066af0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce65c_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce6bc_data,%dl
		testb  $0x000002,0x000007(%ebx,%edx,8)
		je     _066bc8_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _066b98_jump
		cmpw   $0x000000,_0ce692_data
		jle    _066b4e_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		mov    %bh,0x00006d(%eax)
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _066b67_jump

	_066b4e_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		mov    %dh,0x00006d(%eax)
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_066b67_jump:
		mov    $0x000020,%esi
		mov    $0xffffffff,%edi
		mov    %si,_0ce778_data
		call   _06676c_func
		mov    _0cf81a_data,%ch
		mov    %di,_0cf898_data
		test   $0x000008,%ch
		je     _066bc8_jump
		xor    %al,%al
		mov    %al,_0cfa7d_data
		jmp    _066bc8_jump

	_066b98_jump:
		call   _06d724_func
		mov    $0x00000b,%edx
		mov    $_0ce650_data,%eax
		mov    $0x000005,%ebx
		call   _01d808_func
		mov    $0x000001,%al
		mov    %bx,_0ce778_data
		xor    %edx,%edx
		mov    %al,_0ce780_data
		mov    %dx,_0cf774_data

	_066bc8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066bd0_func:
		push   %edx
		mov    _0ce778_data,%dx
		inc    %edx
		mov    %dx,_0ce778_data
		cmp    $0x000040,%dx
		jl     _066bef_jump
		movw   $0x00003f,_0ce778_data

	_066bef_jump:
		pop    %edx
		ret    



_066bf4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0ce6dc_data,%ebx
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _066c9b_jump
		mov    %eax,%ecx
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%ebx)
		test   %dl,%dl
		jne    _066c3f_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _066c85_jump

	_066c3f_jump:
		mov    _0ce678_data,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0ce6b8_data,%bl
		mov    0x000068(%eax),%cl
		add    %edx,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x000028(%eax)
		xor    %ebx,%ebx
		mov    0x000069(%eax),%cl
		mov    0x000074(%eax),%bl
		lea    (%ebx,%ecx,1),%edx
		mov    _0cf874_data,%ebx
		mov    _0cf860_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    %ecx,%ebx
		sar    %edx
		sub    $0x000005,%ebx
		sub    %edx,%ebx
		jmp    _066c98_jump

	_066c85_jump:
		test   %dl,%dl
		jne    _066c9b_jump
		mov    0x00003a(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x00003c(%eax),%ebx
		sar    $0x000010,%ebx

	_066c98_jump:
		mov    %ebx,0x00002c(%eax)

	_066c9b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066ca0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0ce6a4_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _066ce0_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _066ce7_jump

	_066ce0_jump:
		xor    %eax,%eax
		call   _066bf4_func

	_066ce7_jump:
		pop    %edx
		pop    %ebx
		ret    



_066cec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066cfd_jump
		neg    %eax

	_066cfd_jump:
		cmp    $0x00000b,%eax
		jl     _066d06_jump
		mov    $0x000002,%al
		jmp    _066d2a_jump

	_066d06_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066d12_jump
		neg    %eax

	_066d12_jump:
		cmp    $0x000008,%eax
		jl     _066d1b_jump
		mov    $0x000001,%al
		jmp    _066d2a_jump

	_066d1b_jump:
		cmpb   $0x000000,_0cf9f7_data
		je     _066d28_jump
		mov    $0x000001,%al
		jmp    _066d2a_jump

	_066d28_jump:
		xor    %al,%al

	_066d2a_jump:
		testb  $0x000008,0x000081(%edx)
		je     _066d43_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066d43_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066d54_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0ce77e_data
		mov    %ah,_0ce781_data
		mov    %ah,_0ce77d_data
		mov    _0ce6dc_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0ce778_data
		mov    0x000081(%eax),%bl
		mov    0x00006e(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x00006c(%eax)
		mov    %bl,0x000081(%eax)
		xor    %eax,%eax
		call   _066bf4_func
		pop    %edx
		pop    %ebx
		ret    



_066da4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0ce77e_data
		je     _066fee_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _066f8b_jump
		call   _066700_func
		mov    _0ce770_data,%eax
		sar    $0x000004,%eax
		mov    _0ce778_data,%di
		mov    %eax,0x00002c(%esi)
		test   %di,%di
		jle    _066e19_jump
		mov    _0ce77a_data,%cx
		cmp    %cx,%di
		jge    _066df6_jump
		xor    %eax,%eax
		mov    %ax,_0ce778_data
		jmp    _066dff_jump

	_066df6_jump:
		sub    %ecx,%edi
		mov    %di,_0ce778_data

	_066dff_jump:
		cmpw   $0x000000,_0ce778_data
		jne    _066f72_jump
		xor    %eax,%eax
		call   _0666a0_func
		jmp    _066f72_jump

	_066e19_jump:
		mov    _0ce77d_data,%cl
		test   %cl,%cl
		jne    _066e2f_jump
		mov    %esi,%eax
		call   _066cec_func
		jmp    _066f72_jump

	_066e2f_jump:
		cmp    $0x000001,%cl
		jne    _066f72_jump
		mov    0x00003e(%esi),%eax
		mov    _0ce774_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _066e4d_jump
		neg    %eax

	_066e4d_jump:
		cmp    %edx,%eax
		jge    _066e58_jump
		mov    %esi,%eax
		call   _066cec_func

	_066e58_jump:
		mov    _0cf862_data,%eax
		mov    _0cf85e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _066e84_jump
		add    $0x00000b,%eax
		jmp    _066e87_jump

	_066e84_jump:
		sub    $0x00000b,%eax

	_066e87_jump:
		cmpb   $0x000004,_0ce6bd_data
		jne    _066ea1_jump
		testb  $0x000008,0x000081(%esi)
		je     _066e9e_jump
		add    $0x00000b,%eax
		jmp    _066ea1_jump

	_066e9e_jump:
		sub    $0x00000b,%eax

	_066ea1_jump:
		mov    _0cf874_data,%ecx
		mov    _0cf860_data,%edi
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%dl
		sar    $0x000010,%edi
		add    %edx,%ebx
		sar    %ecx
		sar    %ebx
		add    %ecx,%edi
		sub    %ebx,%edi
		mov    0x000081(%esi),%bh
		shl    $0x000004,%edi
		test   $0x000008,%bh
		je     _066eda_jump
		cmp    0x000028(%esi),%eax
		jge    _066ee8_jump

	_066eda_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _066ef2_jump
		cmp    0x000028(%esi),%eax
		jg     _066ef2_jump

	_066ee8_jump:
		call   _066d54_func
		jmp    _066f72_jump

	_066ef2_jump:
		mov    _0ce770_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _066f13_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_066f13_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0ce770_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _066f31_jump
		mov    %ebx,%eax

	_066f31_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0ce770_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _066f43_jump
		mov    %ebx,%eax

	_066f43_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _066f58_jump
		cmp    %ecx,%eax
		jg     _066f58_jump
		mov    $0x000001,%eax
		jmp    _066f5a_jump

	_066f58_jump:
		xor    %eax,%eax

	_066f5a_jump:
		test   %eax,%eax
		je     _066f65_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _066f72_jump

	_066f65_jump:
		sub    _0ce770_data,%edi
		sar    $0x000004,%edi
		mov    %di,0x000042(%esi)

	_066f72_jump:
		cmpb   $0x000000,_0ce781_data
		jne    _066fdc_jump
		cmpb   $0x000000,_0ce77e_data
		je     _066fdc_jump
		call   _02d5fc_func
		jmp    _066fdc_jump

	_066f8b_jump:
		cmpb   $0x000000,_0ce781_data
		je     _066fc2_jump
		cmpb   $0x000000,_0ce77d_data
		jne    _066fc2_jump
		mov    $0x000001,%eax
		call   _0666a0_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006a(%esi)

	_066fc2_jump:
		movb   $0x000001,_0ce77d_data
		testb  $0x000008,0x000081(%esi)
		je     _066fd8_jump
		decw   0x000040(%esi)
		jmp    _066fdc_jump

	_066fd8_jump:
		incw   0x000040(%esi)

	_066fdc_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _066fee_jump
		mov    %esi,%eax
		call   _066ca0_func

	_066fee_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066ff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0670ef_jump

	_067017_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _0670df_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0670df_jump
		mov    %esi,%eax
		call   _01f8e8_func
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0ce6dc_data,%eax
		call   _01dbb4_func
		lea    0x000018(%esp),%eax
		lea    0x00001c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0ce6dc_data,%eax
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%eax)
		jle    _067095_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,0x000028(%esi)

	_067095_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000074(%esi),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %eax
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		call   _01e030_func
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0670df_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _067017_jump

	_0670ef_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067100_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f658_func
		testb  $0x000008,0x000081(%ecx)
		jne    _067157_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _067157_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		jne    _0671ac_jump

	_067157_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0671e7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _0671e7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _0671e7_jump

	_0671ac_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _0671cb_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x000007,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _0671dd_jump

	_0671cb_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x000008,%edx
		mov    %bl,0x000081(%ecx)

	_0671dd_jump:
		mov    $0x000001,%ebx
		call   _061220_func

	_0671e7_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02ee20_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0671f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f658_func
		testb  $0x000008,0x000081(%ecx)
		jne    _06724f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _06724f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		jne    _0672a4_jump

	_06724f_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _0672e8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _0672e8_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _0672e8_jump

	_0672a4_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _0672c3_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x00000d,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _0672d5_jump

	_0672c3_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x00000e,%edx
		mov    %bl,0x000081(%ecx)

	_0672d5_jump:
		mov    $0x000001,%ebx
		call   _061220_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_0672e8_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _067330_jump
		cmpb   $0x000011,0x00006c(%ecx)
		jne    _067330_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jg     _067330_jump
		testb  $0x000008,0x000081(%ecx)
		je     _067316_jump
		mov    $0x000001,%ebx
		mov    $0x00000a,%edx
		jmp    _067320_jump

	_067316_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_067320_jump:
		mov    %ecx,%eax
		call   _061220_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_067330_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _06737a_jump
		cmpb   $0x000012,0x00006c(%ecx)
		jne    _06737a_jump
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _06737a_jump
		cmpw   $0x000005,0x000042(%ecx)
		jne    _06735d_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06735d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _061220_func

	_06737a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067380_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _067390_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _0673b1_jump

	_067390_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _061220_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x000076(%ecx)

	_0673b1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0673b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0ccdf4_data,%cx
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0ccdf0_data,%eax
		test   %cx,%cx
		jle    _067404_jump

	_0673d5_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _0673f9_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%esi),%bx
		jne    _0673f9_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _0673f9_jump
		cmpb   $0x000064,0x00007f(%eax)
		jae    _0673f9_jump
		xor    %bh,%bh
		mov    %bh,(%esp)
		jmp    _067404_jump

	_0673f9_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _0673d5_jump

	_067404_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0cee58_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _06746b_jump
		mov    _0cf8a4_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)

	_06746b_jump:
		mov    0x000032(%eax),%eax
		mov    _0cee58_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _0674c0_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0cf8a4_data,%edx
		mov    0x000081(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000081(%eax)
		mov    %edx,0x00002c(%eax)

	_0674c0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0674c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _02f658_func
		xor    %al,%al
		cmpb   $0x000000,0x00006d(%edx)
		jne    _0675ee_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0cf8a4_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _067503_jump
		incb   0x00007f(%edx)

	_067503_jump:
		mov    0x00006c(%edx),%bh
		cmp    $0x000003,%bh
		jne    _067516_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _0675ee_jump

	_067516_jump:
		cmp    $0x000009,%bh
		jne    _0675b1_jump
		mov    _0cf8a4_data,%ecx
		mov    0x00002c(%edx),%edi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%edx),%bl
		add    $0x0000c8,%ecx
		add    %edi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _067560_jump
		xor    %ebx,%ebx
		mov    _0ce638_data,%ecx
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %edi,%ebx
		shl    $0x000004,%ecx
		add    $0x00000e,%ebx
		cmp    %ecx,%ebx
		jle    _0675ee_jump

	_067560_jump:
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebx
		mov    0x000069(%edx),%al
		add    %ebx,%eax
		mov    _0ce638_data,%ebx
		sar    $0x000010,%ebx
		add    $0x00000e,%eax
		shl    $0x000004,%ebx
		cmp    %ebx,%eax
		jle    _067584_jump
		mov    %edx,%eax
		call   _07ad20_func

	_067584_jump:
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		mov    %edx,%eax
		movb   $0x000000,0x00007f(%edx)
		jmp    _0675e9_jump

	_0675b1_jump:
		mov    _0cf8a4_data,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%esi
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %esi,%ebx
		cmp    %ecx,%ebx
		jge    _0675ee_jump
		add    $0x0000c8,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)

	_0675e9_jump:
		call   _0673b4_func

	_0675ee_jump:
		cmpb   $0x000064,0x00007f(%edx)
		jne    _0675fb_jump
		mov    %edx,%eax
		call   _0673b4_func

	_0675fb_jump:
		test   %al,%al
		je     _0676e6_jump
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _0676e6_jump

	_06761b_jump:
		cmpw   $0x00000a,0x000060(%ecx)
		jne    _0676d6_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _0676d6_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0676d6_jump
		movl   $0x000001,0x000024(%ecx)
		mov    _0cf8a4_data,%eax
		mov    0x000081(%ecx),%bl
		sar    $0x000010,%eax
		or     $0x000004,%bl
		add    $0x0000c8,%eax
		mov    %bl,0x000081(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    _0ce638_data,%ebx
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%ebx
		add    %eax,%esi
		cmp    %ebx,%esi
		jle    _067696_jump
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _07ad20_func

	_067696_jump:
		mov    0x00006f(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x000081(%ecx),%bh
		mov    0x000077(%edx),%al
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000010,%bh
		mov    %al,0x000076(%ecx)
		mov    %bh,0x000081(%ecx)
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01e030_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0676d6_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jl     _06761b_jump

	_0676e6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0676ec_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _067712_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _06771b_jump

	_067712_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_06771b_jump:
		call   _01d818_func
		mov    %ecx,%eax
		call   _067410_func
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		setne  %al
		mov    %al,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_06773c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _06774f_jump
		cmpb   $0x000010,0x00006c(%ecx)
		je     _067756_jump

	_06774f_jump:
		mov    $0x000001,%eax
		jmp    _067758_jump

	_067756_jump:
		xor    %eax,%eax

	_067758_jump:
		test   %eax,%eax
		je     _06784c_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _06776c_jump
		cmpb   $0x000011,0x00006c(%ecx)
		je     _067773_jump

	_06776c_jump:
		mov    $0x000001,%eax
		jmp    _067775_jump

	_067773_jump:
		xor    %eax,%eax

	_067775_jump:
		test   %eax,%eax
		je     _06784c_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _067789_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _067790_jump

	_067789_jump:
		mov    $0x000001,%eax
		jmp    _067792_jump

	_067790_jump:
		xor    %eax,%eax

	_067792_jump:
		test   %eax,%eax
		je     _06784c_jump
		xor    %eax,%eax
		mov    _0ce678_data,%edx
		mov    _0ce6b8_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0677c3_jump
		mov    $0x000001,%eax
		jg     _0677c3_jump
		neg    %eax

	_0677c3_jump:
		test   %eax,%eax
		jl     _0677d0_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _067806_jump

	_0677d0_jump:
		mov    _0ce678_data,%esi
		xor    %eax,%eax
		mov    0x000028(%ecx),%edi
		mov    _0ce6b8_data,%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    0x000068(%ecx),%dl
		sub    %edi,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0677f9_jump
		mov    $0x000001,%eax
		jg     _0677f9_jump
		neg    %eax

	_0677f9_jump:
		test   %eax,%eax
		jge    _06784c_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _06784c_jump

	_067806_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _067817_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _06781d_jump

	_067817_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_06781d_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01d810_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _061220_func

	_06784c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067860_func:
		push   %esi
		push   %edi
		cmp    %ax,%dx
		je     _0678e4_jump
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _094d64_data(%eax),%dl
		test   $0x000002,%dl
		jne    _0678e4_jump
		test   $0x000001,%dl
		je     _0678b1_jump
		push   $0x000080
		movswl %bx,%esi
		mov    _094d5c_data(%eax),%edx
		mov    _094d5a_data(%eax),%edi
		sar    $0x000010,%edx
		sar    $0x000010,%edi
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %edi,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		jmp    _0678df_jump

	_0678b1_jump:
		test   $0x000004,%dl
		je     _0678e4_jump
		movswl %bx,%edi
		xor    %edx,%edx
		mov    _094d5a_data(%eax),%esi
		mov    _0cfa45_data,%dl
		sar    $0x000010,%esi
		push   %edx
		mov    _094d5c_data(%eax),%edx
		mov    %esi,%ebx
		sar    $0x000010,%edx
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %edi,%eax

	_0678df_jump:
		call   _0198c4_func

	_0678e4_jump:
		pop    %edi
		pop    %esi
		ret    



_0678e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $_094d5c_data,%esi
		xor    %edi,%edi

	_0678f8_jump:
		mov    0x000008(%esi),%ah
		add    $0x000014,%esi
		and    $0x0000fd,%ah
		inc    %edi
		mov    %ah,-0x00000c(%esi)
		cmp    $0x000018,%di
		jl     _0678f8_jump
		xor    %edx,%edx
		mov    $_094d5c_data,%esi
		mov    %dx,0x000004(%esp)

	_067917_jump:
		mov    (%esi),%dx
		mov    0x000008(%esi),%bl
		mov    0x000002(%esi),%di
		test   $0x000001,%bl
		je     _06797e_jump
		movswl %di,%edi
		mov    0x000002(%esp),%ebp
		mov    %edi,(%esp)
		sar    $0x000010,%ebp
		mov    (%esp),%ecx
		movswl %dx,%edi
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    %edi,%ebx
		mov    0x000004(%esi),%dl
		call   _067860_func
		mov    (%esp),%ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000005(%esi),%dl
		call   _067860_func
		mov    (%esp),%ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000007(%esi),%dl
		call   _067860_func
		mov    (%esp),%ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    0x000006(%esi),%dl
		call   _067860_func
		orb    $0x000002,0x000008(%esi)

	_06797e_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		add    $0x000014,%esi
		mov    %bx,0x000004(%esp)
		cmp    $0x000018,%bx
		jl     _067917_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06799c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $_094d5c_data,%esi
		xor    %edx,%edx
		mov    $_0cd8cc_data,%edi
		mov    %edx,(%esp)

	_0679b3_jump:
		testb  $0x000001,0x000008(%esi)
		jne    _0679c4_jump
		cmpw   $0x000011,(%esp)
		jne    _067b08_jump

	_0679c4_jump:
		mov    0x000034(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		cmp    $0xfffffff8,%eax
		jle    _067a0c_jump
		mov    _0cd0b0_data,%edx
		add    $0x00000e,%edx
		cmp    %edx,%eax
		jge    _067a0c_jump
		mov    0x000036(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xfffffff6,%eax
		jle    _067a0c_jump
		mov    _0cd0ac_data,%edx
		add    $0x00000c,%edx
		cmp    %edx,%eax
		jge    _067a0c_jump
		mov    %edi,%eax

	_067a0c_jump:
		cmpb   $0x000000,_0cfa45_data
		je     _067b08_jump
		cmpw   $0x000011,(%esp)
		je     _067b08_jump
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d64_data(%eax)
		je     _067a5d_jump
		mov    _094d5c_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d5a_data(%eax),%ebx
		mov    _0cfa45_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0198c4_func

	_067a5d_jump:
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d64_data(%eax)
		je     _067a96_jump
		mov    _094d5c_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d5a_data(%eax),%ebx
		mov    _0cfa45_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0198c4_func

	_067a96_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d64_data(%eax)
		je     _067acf_jump
		mov    _094d5c_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d5a_data(%eax),%ebx
		mov    _0cfa45_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0198c4_func

	_067acf_jump:
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094d64_data(%eax)
		je     _067b08_jump
		mov    _094d5c_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094d5a_data(%eax),%ebx
		mov    _0cfa45_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0198c4_func

	_067b08_jump:
		mov    (%esp),%ebx
		add    $0x000014,%esi
		inc    %ebx
		add    $0x000084,%edi
		mov    %ebx,(%esp)
		cmp    $0x000018,%bx
		jl     _0679b3_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067b2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    _0cfa45_data,%dl
		mov    %ah,(%esp)
		cmp    $0x000080,%dl
		jae    _067b5b_jump
		cmpb   $0x000000,_0cf9f7_data
		jne    _067b55_jump
		cmpb   $0x000000,_0cfa61_data
		je     _067b5b_jump

	_067b55_jump:
		incb   _0cfa45_data

	_067b5b_jump:
		mov    $_0cd8cc_data,%ebx
		mov    $_094d5c_data,%ecx
		xor    %esi,%esi

	_067b67_jump:
		mov    0x000008(%ecx),%al
		test   $0x000004,%al
		jne    _067b76_jump
		test   $0x000002,%al
		je     _067cfe_jump

	_067b76_jump:
		mov    %ebx,%eax
		call   _0444d4_func
		cmpb   $0x000080,_0cfa45_data
		jne    _067bf4_jump
		testb  $0x000004,0x000008(%ecx)
		je     _067bf4_jump
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d64_data(%eax)
		jne    _067bd4_jump
		xor    %eax,%eax
		mov    0x000007(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d64_data(%eax)
		jne    _067bd4_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d64_data(%eax)
		jne    _067bd4_jump
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094d64_data(%eax)
		je     _067bf4_jump

	_067bd4_jump:
		mov    0x000008(%ecx),%al
		or     $0x000001,%al
		mov    %al,0x000008(%ecx)
		mov    %al,%ah
		and    $0x0000f9,%ah
		mov    $0x00002e,%edx
		mov    %ah,0x000008(%ecx)
		mov    %ebx,%eax
		call   _01d808_func
		movb   $0x000001,(%esp)

	_067bf4_jump:
		cmp    $0x000011,%si
		jne    _067c17_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00003b,%dh
		je     _067c17_jump
		cmp    $0x00002e,%dh
		je     _067c17_jump
		testb  $0x000001,0x000008(%ecx)
		je     _067c17_jump
		mov    $0x00003b,%edx
		jmp    _067cf0_jump

	_067c17_jump:
		cmp    $0x000012,%si
		je     _067c3b_jump
		cmp    $0x000013,%si
		je     _067c3b_jump
		cmp    $0x000014,%si
		je     _067c3b_jump
		cmp    $0x000015,%si
		je     _067c3b_jump
		cmp    $0x000016,%si
		je     _067c3b_jump
		cmp    $0x000017,%si
		jne    _067c58_jump

	_067c3b_jump:
		mov    0x00006c(%ebx),%dl
		cmp    $0x00003a,%dl
		je     _067c58_jump
		cmp    $0x00002e,%dl
		je     _067c58_jump
		testb  $0x000001,0x000008(%ecx)
		je     _067c58_jump
		mov    $0x00003a,%edx
		jmp    _067cf0_jump

	_067c58_jump:
		mov    0x000009(%ecx),%dl
		cmp    $0x000005,%dl
		jbe    _067c7b_jump
		cmpb   $0x000033,0x00006c(%ebx)
		jne    _067c7b_jump
		mov    %ebx,%eax
		call   _01d074_func
		test   %al,%al
		je     _067c7b_jump
		mov    $0x000034,%edx
		jmp    _067cf0_jump

	_067c7b_jump:
		cmp    $0x000004,%dl
		jbe    _067c9b_jump
		cmpb   $0x000032,0x00006c(%ebx)
		jne    _067c9b_jump
		mov    %ebx,%eax
		call   _01d074_func
		test   %al,%al
		je     _067c9b_jump
		mov    $0x000033,%edx
		jmp    _067cf0_jump

	_067c9b_jump:
		cmp    $0x000003,%dl
		jbe    _067cb8_jump
		cmpb   $0x000031,0x00006c(%ebx)
		jne    _067cb8_jump
		mov    %ebx,%eax
		call   _01d074_func
		test   %al,%al
		je     _067cb8_jump
		mov    $0x000032,%edx
		jmp    _067cf0_jump

	_067cb8_jump:
		cmp    $0x000002,%dl
		jbe    _067cd5_jump
		cmpb   $0x000030,0x00006c(%ebx)
		jne    _067cd5_jump
		mov    %ebx,%eax
		call   _01d074_func
		test   %al,%al
		je     _067cd5_jump
		mov    $0x000031,%edx
		jmp    _067cf0_jump

	_067cd5_jump:
		cmp    $0x000001,%dl
		jbe    _067cf7_jump
		cmpb   $0x00002f,0x00006c(%ebx)
		jne    _067cf7_jump
		mov    %ebx,%eax
		call   _01d074_func
		test   %al,%al
		je     _067cf7_jump
		mov    $0x000030,%edx

	_067cf0_jump:
		mov    %ebx,%eax
		call   _01d808_func

	_067cf7_jump:
		mov    %ebx,%eax
		call   _0567ac_func

	_067cfe_jump:
		add    $0x000084,%ebx
		inc    %esi
		add    $0x000014,%ecx
		cmp    $0x000018,%si
		jl     _067b67_jump
		cmpb   $0x000000,(%esp)
		je     _067d46_jump
		mov    $_094d5c_data,%eax
		xor    %ch,%ch
		xor    %edx,%edx
		mov    %ch,_0cfa45_data
		mov    $0x000001,%cl
		mov    $0x000002,%bh

	_067d2b_jump:
		mov    0x000008(%eax),%bl
		test   %bl,%bh
		jne    _067d3c_jump
		and    %cl,%bl
		cmp    $0x000001,%bl
		jne    _067d3c_jump
		or     %bh,0x000008(%eax)

	_067d3c_jump:
		inc    %edx
		add    $0x000014,%eax
		cmp    $0x000018,%dx
		jl     _067d2b_jump

	_067d46_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067d50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000030,%ecx
		add    %edx,%eax
		mov    $_0cc578_data,%edi
		mov    $0x0000c1,%ebx
		mov    _094d6c_data(,%eax,4),%esi
		mov    $0x0001c2,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%ah
		mov    %dx,_0cc648_data
		mov    %bx,_0cc64a_data
		xor    %dl,%dl
		mov    %ah,_0cc64c_data
		mov    %dl,_0cc64e_data
		mov    %edi,%eax
		mov    %dl,_0cc64d_data
		call   _01f21c_func
		mov    _0cf838_data,%edx
		mov    _0cc642_data,%cx
		mov    _0cc644_data,%si
		mov    _0cc646_data,%di
		sar    $0x000010,%edx
		sub    $0x000006,%ecx
		add    $0x00000a,%esi
		lea    0x000000(,%edx,4),%eax
		add    $0x000006,%edi
		add    %edx,%eax
		mov    %cx,_0cc642_data
		mov    %si,_0cc644_data
		mov    _094d68_data(,%eax,4),%al
		mov    %di,_0cc646_data
		mov    %al,_0cc64f_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_067e14_switch:
		.long   _068027_case
		.long   _068036_case
		.long   _068045_case
		.long   _06806e_case
		.long   _06807d_case
		.long   _06808a_case
		.long   _067e86_case

_067e30_switch:
		.long   _067ea9_case
		.long   _067eb9_case
		.long   _067f33_case
		.long   _067fad_case




_067e40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x00004b,%eax
		call   _07f8d8_func
		mov    _0cf838_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		mov    %eax,%ebp
		lea    0x000000(,%esi,4),%eax
		add    %eax,%esi
		shl    $0x000002,%esi
		mov    _094d66_data(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _0680b1_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_067e14_switch(,%eax,4)

	_067e86_case:
		mov    _0cf7bc_data,%ax
		mov    _094d68_data(%esi),%bl
		cmp    $0x000003,%ax
		ja     _0680b1_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_067e30_switch(,%eax,4)

	_067ea9_case:
		mov    $_0cc728_data,%edi
		mov    _0c2dcc_data,%esi
		jmp    _068097_jump

	_067eb9_case:
		mov    $_0cd798_data,%esi
		mov    _0c1258_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067ed2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067eea_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067ed2_jump

	_067eea_jump:
		pop    %edi
		mov    $_0c1258_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067ef9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067f11_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067ef9_jump

	_067f11_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cc728_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0680b1_jump

	_067f33_case:
		mov    $_0cd79c_data,%esi
		mov    _0c1258_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067f4c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067f64_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067f4c_jump

	_067f64_jump:
		pop    %edi
		mov    $_0c1258_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067f73_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067f8b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067f73_jump

	_067f8b_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cc728_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0680b1_jump

	_067fad_case:
		mov    $_0cd7a0_data,%esi
		mov    _0c1258_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067fc6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _067fde_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067fc6_jump

	_067fde_jump:
		pop    %edi
		mov    $_0c1258_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_067fed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068005_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _067fed_jump

	_068005_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cc728_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0680b1_jump

	_068027_case:
		mov    $_0cc728_data,%edi
		mov    _0c2ba8_data,%esi
		mov    $0x000005,%bl
		jmp    _068097_jump

	_068036_case:
		mov    $_0cc728_data,%edi
		mov    _0c2bac_data,%esi
		mov    $0x000003,%bl
		jmp    _068097_jump

	_068045_case:
		mov    $_0cc728_data,%edi
		mov    _0c2bb0_data,%esi
		push   %edi

	_068051_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068069_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068051_jump

	_068069_jump:
		pop    %edi
		xor    %bl,%bl
		jmp    _0680b1_jump

	_06806e_case:
		mov    $_0cc728_data,%edi
		mov    _0c2bb4_data,%esi
		mov    $0x000002,%bl
		jmp    _068097_jump

	_06807d_case:
		mov    $_0cc728_data,%edi
		mov    _0c2bb8_data,%esi
		jmp    _068095_jump

	_06808a_case:
		mov    $_0cc728_data,%edi
		mov    _0c2bbc_data,%esi

	_068095_jump:
		mov    $0x000001,%bl

	_068097_jump:
		push   %edi

	_068098_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0680b0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068098_jump

	_0680b0_jump:
		pop    %edi

	_0680b1_jump:
		mov    $0x000001,%ah
		mov    $0x0001c2,%edx
		mov    $0x00001e,%ecx
		mov    %bl,_0cc7ff_data
		mov    %ah,_0cc7fc_data
		mov    %dx,_0cc7f8_data
		mov    %cx,_0cc7fa_data
		xor    %dl,%dl
		mov    $_0cc728_data,%eax
		mov    %dl,_0cc7fe_data
		mov    %dl,_0cc7fd_data
		call   _01f21c_func
		mov    _0cc7f4_data,%si
		mov    _0cc7f6_data,%di
		mov    %ebp,%eax
		add    $0x00000a,%esi
		add    $0x000002,%edi
		mov    %si,_0cc7f4_data
		mov    %di,_0cc7f6_data
		call   _07fa70_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068120_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01ef80_func
		call   _067d50_func
		call   _067e40_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0cc720_data
		mov    %bx,_0cc722_data
		mov    %ah,_0cc725_data
		mov    %ah,_0cc726_data
		mov    %dx,_0cc8d0_data
		mov    %si,_0cc8d2_data
		mov    %ah,_0cc8d5_data
		mov    %ah,_0cc8d6_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_06817c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000d8,%ecx
		mov    $_0cc578_data,%esi
		mov    $_0cc650_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _067d50_func
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0cfa5f_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%ebx
		shl    $0x000002,%edx
		mov    _094d66_data(%ebx),%al
		cmp    _094d66_data(%edx),%al
		je     _068200_jump
		mov    $0x0000d8,%ecx
		mov    $_0cc728_data,%esi
		mov    $_0cc800_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _067e40_func

	_068200_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		cmpb   $0x000000,_0cfa2e_data
		jne    _0682d5_jump
		mov    _0cc648_data,%dx
		cmp    $0x0000a0,%dx
		jle    _068249_jump
		mov    %edx,%ebx
		mov    _0cc640_data,%cx
		sub    $0x000006,%ebx
		sub    $0x000006,%ecx
		mov    %bx,_0cc648_data
		mov    %cx,_0cc640_data

	_068249_jump:
		mov    _0cc7f8_data,%si
		cmp    $0x0000a0,%si
		jle    _068272_jump
		mov    %esi,%edi
		mov    _0cc7f0_data,%ax
		sub    $0x000006,%edi
		sub    $0x000006,%eax
		mov    %di,_0cc7f8_data
		mov    %ax,_0cc7f0_data

	_068272_jump:
		mov    _0cc722_data,%dx
		cmp    $0x000125,%dx
		jge    _06829d_jump
		mov    %edx,%ebx
		mov    _0cc71a_data,%cx
		add    $0x000002,%ebx
		add    $0x000002,%ecx
		mov    %bx,_0cc722_data
		mov    %cx,_0cc71a_data

	_06829d_jump:
		mov    _0cc8d0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffba,%eax
		jle    _0686f0_jump
		mov    _0cc8d2_data,%si
		mov    _0cc8ca_data,%di
		sub    $0x000002,%esi
		sub    $0x000002,%edi
		mov    %si,_0cc8d2_data
		mov    %di,_0cc8ca_data
		jmp    _0686f0_jump

	_0682d5_jump:
		cmpb   $0x000000,_0cfa2d_data
		jne    _0686f0_jump
		mov    $_0cc578_data,%edx
		mov    $_0cef16_data,%edi
		mov    $0x000001,%ebx
		mov    %edx,%esi
		mov    %edx,0x000014(%esp)
		push   %edi

	_0682f8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068310_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0682f8_jump

	_068310_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x00002c(%esp)
		mov    _0cc64f_data,%al
		mov    $0x000008,%esi
		mov    %eax,_0cd090_data
		xor    %eax,%eax
		mov    %edx,%edi
		mov    _0cc64c_data,%al
		mov    %esi,0x00000c(%esp)
		mov    %eax,_0cd08c_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0cc646_data,%eax
		mov    %ecx,_0cd0d0_data
		sar    $0x000010,%eax
		xor    %edi,%edi
		mov    %eax,0x000004(%esp)
		test   %ecx,%ecx
		jle    _06849b_jump
		mov    %edx,0x000028(%esp)
		lea    (%edx,%ebx,1),%eax
		xor    %esi,%esi
		mov    %eax,0x000008(%esp)

	_06836b_jump:
		mov    0x000028(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		mov    0x000008(%esp),%edx
		call   _01efb4_func
		mov    %eax,%edx
		mov    0x000028(%esp),%eax
		mov    (%eax),%bl
		cmp    $0x00002f,%bl
		jne    _0683bd_jump
		mov    0x000014(%esp),%edx
		mov    0x00002a(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %edi,%edx
		mov    $_0cc578_data,%eax
		call   _01f1b0_func
		cwtl   
		mov    0x000004(%esp),%ebp
		sar    %eax
		xor    %edx,%edx
		sub    %eax,%ebp
		jmp    _0683c7_jump

	_0683bd_jump:
		cmp    $0x000020,%bl
		jne    _0683c7_jump
		add    $0x000008,%ebp
		xor    %edx,%edx

	_0683c7_jump:
		test   %edx,%edx
		je     _068477_jump
		imul   $0x00000c,%edx,%edx
		mov    _0ce6e0_data,%eax
		add    %edx,%eax
		mov    %eax,0x00001c(%esp)
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c24f0_data(%esi)
		mov    0x000014(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %esi,%ecx
		mov    %eax,_0c2680_data(%esi)
		xor    %edx,%edx
		mov    %edx,_0c2338_data(%esi)
		jne    _068444_jump

	_06840a_jump:
		mov    _0cd0d0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _06bf60_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %edx,%ebx
		mov    %ebx,_0c2338_data(%ecx)
		je     _06840a_jump

	_068444_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _06bf60_func
		cwtl   
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		mov    %edx,_0c2248_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00001c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		dec    %eax
		add    %eax,%ebp

	_068477_jump:
		mov    0x000028(%esp),%eax
		mov    0x000008(%esp),%edx
		mov    _0cd0d0_data,%ebx
		add    $0x000004,%esi
		inc    %edi
		inc    %eax
		inc    %edx
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000008(%esp)
		cmp    %ebx,%edi
		jl     _06836b_jump

	_06849b_jump:
		mov    $_0cc728_data,%ecx
		mov    $_0ceef8_data,%edi
		mov    %ecx,%esi
		push   %edi

	_0684a8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0684c0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0684a8_jump

	_0684c0_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ecx,0x000010(%esp)
		mov    _0cc7ff_data,%al
		mov    $0x000003,%esi
		mov    %eax,_0cd0a8_data
		xor    %eax,%eax
		mov    %ecx,%edi
		mov    _0cc7fc_data,%al
		mov    %esi,0x00002c(%esp)
		mov    %eax,_0cd094_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x00000a,%edi
		mov    _0cc7f6_data,%eax
		mov    %ecx,_0cd0cc_data
		sar    $0x000010,%eax
		mov    %edi,0x00000c(%esp)
		mov    %eax,(%esp)
		xor    %edi,%edi
		test   %ecx,%ecx
		jle    _06865d_jump
		mov    $_0cc728_data,%esi
		mov    %esi,0x000024(%esp)
		lea    0x000001(%esi),%eax
		mov    %eax,0x000020(%esp)
		xor    %esi,%esi

	_068528_jump:
		mov    0x000024(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		mov    0x000020(%esp),%edx
		call   _01efb4_func
		mov    %eax,%edx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ch
		cmp    $0x00002f,%ch
		jne    _068579_jump
		mov    0x000010(%esp),%edx
		mov    0x00002a(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %edi,%edx
		mov    $_0cc728_data,%eax
		call   _01f1b0_func
		cwtl   
		mov    (%esp),%ebp
		sar    %eax
		xor    %edx,%edx
		sub    %eax,%ebp
		jmp    _068583_jump

	_068579_jump:
		cmp    $0x000020,%ch
		jne    _068583_jump
		add    $0x00000a,%ebp
		xor    %edx,%edx

	_068583_jump:
		test   %edx,%edx
		je     _068639_jump
		add    $0x000029,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0cedc8_data,%eax
		add    %edx,%eax
		mov    %eax,0x000018(%esp)
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c25b8_data(%esi)
		mov    0x000010(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %esi,%ecx
		mov    %eax,_0c23b0_data(%esi)
		xor    %eax,%eax
		mov    %eax,_0c22c0_data(%esi)
		jne    _068603_jump

	_0685c9_jump:
		mov    _0cd0cc_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _06bf60_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c22c0_data(%ecx)
		je     _0685c9_jump

	_068603_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _06bf60_func
		cwtl   
		sub    %eax,%edx
		mov    0x000018(%esp),%eax
		mov    %edx,_0c2478_data(%ecx)
		mov    0x000009(%eax),%al
		and    $0x00000f,%al
		mov    0x000018(%esp),%ebx
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebx),%dl
		add    %edx,%eax
		sub    $0x000003,%eax
		add    %eax,%ebp

	_068639_jump:
		mov    0x000024(%esp),%edx
		mov    0x000020(%esp),%ebx
		mov    _0cd0cc_data,%ecx
		add    $0x000004,%esi
		inc    %edi
		inc    %edx
		inc    %ebx
		mov    %edx,0x000024(%esp)
		mov    %ebx,0x000020(%esp)
		cmp    %ecx,%edi
		jl     _068528_jump

	_06865d_jump:
		mov    $0x000001,%cl
		mov    $_0cc728_data,%esi
		mov    $_0cc800_data,%edi
		mov    $0x00001e,%edx
		mov    $0x0001c2,%ebx
		mov    %cl,_0cfa2d_data
		push   %edi

	_06867a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068692_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06867a_jump

	_068692_jump:
		pop    %edi
		mov    $_0cc578_data,%esi
		mov    $_0cc650_data,%edi
		mov    _0cc7ff_data,%al
		mov    $0x0000c1,%ecx
		mov    %al,_0cc8d7_data
		mov    $0x0001c2,%eax
		mov    %dx,_0cc7fa_data
		mov    %ax,_0cc7f8_data
		push   %edi

	_0686bf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0686d7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0686bf_jump

	_0686d7_jump:
		pop    %edi
		mov    _0cc64f_data,%al
		mov    %bx,_0cc648_data
		mov    %cx,_0cc64a_data
		mov    %al,_0cc727_data

	_0686f0_jump:
		mov    _0cfa2d_data,%bh
		cmp    $0x000001,%bh
		jne    _0688ff_jump
		mov    _0cd0cc_data,%edi
		mov    %bh,%cl
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _0687f4_jump
		xor    %edx,%edx

	_068713_jump:
		mov    _0ceef8_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _0687e2_jump
		cmp    $0x000020,%ah
		je     _0687e2_jump
		mov    _0c2478_data(%edx),%eax
		mov    _0c23b0_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0c23b0_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _068784_jump
		movl   $0x000c80,_0c23b0_data(%edx)
		test   %eax,%eax
		jge    _068757_jump
		neg    %eax

	_068757_jump:
		cmp    $0x000008,%eax
		jge    _068776_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _06bf60_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c2478_data(%edx)
		jmp    _068784_jump

	_068776_jump:
		mov    _0c2478_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c2478_data(%edx)

	_068784_jump:
		mov    _0c2478_data(%edx),%edi
		mov    _0c22c0_data(%edx),%eax
		mov    _0c25b8_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		mov    _0cfa2d_data,%al
		mov    %edi,_0c2478_data(%edx)
		mov    %ebp,_0c25b8_data(%edx)
		cmp    $0x000001,%al
		jne    _0687ca_jump
		test   %ebp,%ebp
		jle    _0687ba_jump
		cmp    $0x001310,%ebp
		jl     _0687ca_jump

	_0687ba_jump:
		mov    _0c22c0_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c22c0_data(%edx)
		jmp    _0687e2_jump

	_0687ca_jump:
		mov    _0c25b8_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _0687e2_jump
		cmp    $0x001400,%edi
		jge    _0687e2_jump
		xor    %cl,%cl

	_0687e2_jump:
		mov    _0cd0cc_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jl     _068713_jump

	_0687f4_jump:
		mov    _0cd0d0_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _0688e5_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_06880b_jump:
		mov    _0cef16_data(%ebx),%ch
		cmp    $0x00002f,%ch
		je     _0688d4_jump
		cmp    $0x000020,%ch
		je     _0688d4_jump
		mov    _0c2248_data(%edx),%eax
		mov    _0c2680_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0c2680_data(%edx)
		cmp    $0x000c80,%esi
		jl     _068878_jump
		mov    %ebp,_0c2680_data(%edx)
		test   %eax,%eax
		jge    _06884b_jump
		neg    %eax

	_06884b_jump:
		cmp    $0x000008,%eax
		jge    _06886a_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _06bf60_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c2248_data(%edx)
		jmp    _068878_jump

	_06886a_jump:
		mov    _0c2248_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c2248_data(%edx)

	_068878_jump:
		mov    _0c2248_data(%edx),%eax
		inc    %eax
		mov    _0c24f0_data(%edx),%esi
		mov    %eax,_0c2248_data(%edx)
		add    _0c2338_data(%edx),%esi
		mov    _0cfa2d_data,%ah
		mov    %esi,_0c24f0_data(%edx)
		cmp    $0x000001,%ah
		jne    _0688be_jump
		test   %esi,%esi
		jle    _0688ae_jump
		cmp    $0x001360,%esi
		jl     _0688be_jump

	_0688ae_jump:
		mov    _0c2338_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c2338_data(%edx)
		jmp    _0688d4_jump

	_0688be_jump:
		mov    _0c24f0_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _0688d4_jump
		cmp    $0x001400,%eax
		jge    _0688d4_jump
		xor    %cl,%cl

	_0688d4_jump:
		mov    _0cd0d0_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jl     _06880b_jump

	_0688e5_jump:
		test   %cl,%cl
		je     _068bb5_jump
		xor    %ah,%ah
		mov    %ah,_0cfa2d_data
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0688ff_jump:
		cmp    $0x000002,%bh
		jne    _068aae_jump
		mov    _0cd0cc_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _0689d2_jump
		xor    %ebx,%ebx

	_06891a_jump:
		mov    _0ceef8_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _0689c0_jump
		cmp    $0x000020,%al
		je     _0689c0_jump
		mov    _0c23b0_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _068941_jump
		neg    %eax

	_068941_jump:
		mov    %eax,%edx
		mov    _0c25b8_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _068954_jump
		neg    %eax

	_068954_jump:
		cmp    %eax,%edx
		jle    _068965_jump
		mov    _0c23b0_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _068970_jump

	_068965_jump:
		mov    _0c25b8_data(%ebx),%eax
		sub    $0x000a00,%eax

	_068970_jump:
		test   %eax,%eax
		jge    _068976_jump
		neg    %eax

	_068976_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _06bf60_func
		movswl %ax,%edi
		mov    _0c25b8_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c23b0_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c22c0_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c2478_data(%ebx)

	_0689c0_jump:
		mov    _0cd0cc_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jl     _06891a_jump

	_0689d2_jump:
		mov    _0cd0d0_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _068a9d_jump
		xor    %ebx,%ebx

	_0689e3_jump:
		mov    _0cef16_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _068a8b_jump
		cmp    $0x000020,%dh
		je     _068a8b_jump
		mov    _0c2680_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _068a0c_jump
		neg    %eax

	_068a0c_jump:
		mov    %eax,%edx
		mov    _0c24f0_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _068a1f_jump
		neg    %eax

	_068a1f_jump:
		cmp    %eax,%edx
		jle    _068a30_jump
		mov    _0c2680_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _068a3b_jump

	_068a30_jump:
		mov    _0c24f0_data(%ebx),%eax
		sub    $0x000a00,%eax

	_068a3b_jump:
		test   %eax,%eax
		jge    _068a41_jump
		neg    %eax

	_068a41_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _06bf60_func
		movswl %ax,%edi
		mov    _0c24f0_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c2680_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c2338_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c2248_data(%ebx)

	_068a8b_jump:
		mov    _0cd0d0_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jl     _0689e3_jump

	_068a9d_jump:
		movb   $0x000003,_0cfa2d_data
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068aae_jump:
		cmp    $0x000003,%bh
		jne    _068bb5_jump
		mov    $0x000001,%al
		mov    _0cd0cc_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _068b31_jump
		mov    _0cd0cc_data,%ebp
		xor    %edx,%edx

	_068ad1_jump:
		mov    _0ceef8_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _068b29_jump
		cmp    $0x000020,%ah
		je     _068b29_jump
		mov    _0c2478_data(%edx),%ecx
		mov    _0c23b0_data(%edx),%esi
		mov    _0c25b8_data(%edx),%edi
		add    %ecx,%esi
		add    _0c22c0_data(%edx),%edi
		mov    %esi,_0c23b0_data(%edx)
		mov    %edi,_0c25b8_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _068b29_jump
		cmp    $0x001400,%edi
		jge    _068b29_jump
		cmp    $0xfffffec0,%esi
		jle    _068b29_jump
		cmp    $0x000c80,%esi
		jge    _068b29_jump
		xor    %al,%al

	_068b29_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _068ad1_jump

	_068b31_jump:
		mov    _0cd0d0_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _068ba9_jump
		mov    _0cd0d0_data,%ebp
		xor    %edx,%edx

	_068b49_jump:
		mov    _0cef16_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _068ba1_jump
		cmp    $0x000020,%ah
		je     _068ba1_jump
		mov    _0c2248_data(%edx),%ecx
		mov    _0c2680_data(%edx),%esi
		mov    _0c24f0_data(%edx),%edi
		add    %ecx,%esi
		add    _0c2338_data(%edx),%edi
		mov    %esi,_0c2680_data(%edx)
		mov    %edi,_0c24f0_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _068ba1_jump
		cmp    $0x001400,%edi
		jge    _068ba1_jump
		cmp    $0xfffffec0,%esi
		jle    _068ba1_jump
		cmp    $0x000c80,%esi
		jge    _068ba1_jump
		xor    %al,%al

	_068ba1_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _068b49_jump

	_068ba9_jump:
		test   %al,%al
		je     _068bb5_jump
		xor    %ch,%ch
		mov    %ch,_0cfa2d_data

	_068bb5_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068bc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax

	_068bc5_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%ebx
		imul   $0x000014,%edx,%edx
		mov    _0c2b48_data(%ebx),%ebx
		inc    %eax
		mov    %ebx,_094d6c_data(%edx)
		cmp    $0x000018,%ax
		jl     _068bc5_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cf88c_data
		mov    %dx,_0cf87c_data
		mov    %cx,_0cf892_data
		mov    %cx,_0cf880_data
		mov    %ah,_0cfa60_data
		mov    %dx,_0cf834_data
		xor    %al,%al
		mov    $0x000001,%dl
		mov    %ax,_0cf832_data
		mov    %dl,_0cfa5a_data
		mov    %ah,_0cfa46_data
		mov    %ah,_0cfa7a_data
		xor    %dh,%dh
		call   _069518_func
		mov    %dh,_0cfa39_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068c44_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0ce650_data,%esi
		mov    $_0cee5c_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ce808_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0ce650_data
		mov    _0ce810_data,%eax
		mov    %dx,_0ce6aa_data
		mov    %eax,_0ce658_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_068c8c_func:
		push   %edx
		mov    _0cee5c_data,%eax
		mov    %eax,_0ce650_data
		mov    _0cee64_data,%eax
		xor    %edx,%edx
		mov    %eax,_0ce658_data
		mov    _0ceea0_data,%ax
		mov    %dx,_0ce6aa_data
		mov    %ax,_0ce694_data
		pop    %edx
		ret    



_068cb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0cfa36_data,%bl
		mov    %ah,_0cfa40_data
		mov    %dl,_0cfa53_data
		mov    %ah,_0cfa62_data
		test   %bl,%bl
		jne    _068cf1_jump
		xor    %edx,%edx
		mov    _0cfa60_data,%al
		mov    %dx,_0cf892_data
		mov    %ax,_0cf83a_data

	_068cf1_jump:
		mov    _0cf83a_data,%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,_0cfa5f_data
		call   _068c44_func
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094d5a_data(,%eax,4),%ebx
		mov    _0ce6b8_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _094d5c_data(,%eax,4),%edx
		mov    %ebx,_0ce678_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0ce6b9_data,%al
		mov    %bx,_0ce690_data
		sub    %eax,%edx
		mov    %bx,_0ce692_data
		add    $0x000008,%edx
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %edx,_0ce67c_data
		call   _01d650_func
		xor    %bl,%cl
		mov    %bh,_0cfa45_data
		mov    %bh,_0cfa5b_data
		mov    $_0cd8cc_data,%ebx

	_068d89_jump:
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x000014,%eax,%eax
		movw   $0x000036,0x000060(%ebx)
		mov    _094d5c_data(%eax),%dx
		sub    $0x00004e,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _094d5e_data(%eax),%dx
		sub    $0x000040,%edx
		movb   $0x000005,0x00006f(%ebx)
		mov    %dx,0x00003e(%ebx)
		testb  $0x000004,_094d64_data(%eax)
		je     _068dc5_jump
		movb   $0x00002e,0x00006e(%ebx)
		jmp    _068dfa_jump

	_068dc5_jump:
		mov    _094d65_data(%eax),%dh
		test   %dh,%dh
		je     _068de6_jump
		add    %dh,_0cfa5b_data
		cmp    $0x000006,%dh
		jne    _068de0_jump
		movb   $0x000034,0x00006e(%ebx)
		jmp    _068dfa_jump

	_068de0_jump:
		movb   $0x00002f,0x00006e(%ebx)
		jmp    _068dfa_jump

	_068de6_jump:
		cmp    $0x000011,%si
		jne    _068df6_jump
		movb   $0x00003b,0x00006c(%ebx)
		movb   $0x00003b,0x00006e(%ebx)
		jmp    _068dfa_jump

	_068df6_jump:
		movb   $0x000027,0x00006e(%ebx)

	_068dfa_jump:
		movw   $0x000000,0x00005a(%ebx)
		movb   $0x000050,0x000068(%ebx)
		mov    %ebx,%eax
		movb   $0x000040,0x000069(%ebx)
		call   _05e9bc_func
		mov    %ebx,%eax
		call   _0444d4_func
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000002(%eax,%edx,8),%al
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%ebx),%eax
		xor    %edi,%edi
		mov    0x00000a(%edx,%eax,1),%di
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		inc    %cl
		mov    %dl,0x00006b(%ebx)
		cmp    $0x000018,%cl
		jbe    _068e56_jump
		mov    $0x000018,%cl

	_068e56_jump:
		inc    %esi
		add    $0x000084,%ebx
		cmp    $0x000018,%si
		jl     _068d89_jump
		mov    _094eb8_data,%al
		test   $0x000001,%al
		jne    _068e84_jump
		cmpb   $0x000066,_0cfa5b_data
		jb     _068e84_jump
		mov    %al,%dl
		or     $0x000004,%dl
		mov    %dl,_094eb8_data

	_068e84_jump:
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf844_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf83e_data
		mov    _0cf834_data,%ax
		mov    %ax,_0cf89e_data
		mov    _0cf832_data,%ax
		mov    $0xffffffff,%esi
		mov    %ax,_0cf8a6_data
		call   _04368c_func
		mov    $0x00001e,%eax
		mov    _0ce6d1_data,%dh
		mov    %ax,_0cf8a8_data
		mov    %ax,_0cf8ae_data
		mov    _0cfa5a_data,%al
		and    $0x0000f7,%dh
		and    $0x000001,%al
		mov    %dh,%bl
		shl    $0x000003,%al
		mov    %dh,_0ce6d1_data
		or     %al,%bl
		mov    %si,_0cf8d2_data
		mov    %bl,_0ce6d1_data
		mov    _0cfa3f_data,%bh
		mov    %si,_0cf8ba_data
		test   %bh,%bh
		je     _068f27_jump
		cmpb   $0x000000,_0cfa3d_data
		je     _068f1f_jump
		xor    %eax,%eax
		mov    _0cf7bc_data,%al
		call   _074400_func

	_068f1f_jump:
		xor    %ch,%ch
		mov    %ch,_0cfa3f_data

	_068f27_jump:
		call   _069518_func
		call   _068120_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068f38_func:
		push   %edx
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d60_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf83a_data
		mov    _0cfa2f_data,%ah
		mov    %dl,_0cfa2e_data
		and    $0x0000fb,%ah
		mov    _0cfa2d_data,%dh
		mov    %ah,_0cfa2f_data
		cmp    $0x000001,%dh
		jne    _068f83_jump
		movb   $0x000002,_0cfa2d_data

	_068f83_jump:
		pop    %edx
		ret    



_068f88_func:
		push   %edx
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d61_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf83a_data
		mov    _0cfa2f_data,%ah
		mov    %dl,_0cfa2e_data
		and    $0x0000fb,%ah
		mov    _0cfa2d_data,%dh
		mov    %ah,_0cfa2f_data
		cmp    $0x000001,%dh
		jne    _068fd3_jump
		movb   $0x000002,_0cfa2d_data

	_068fd3_jump:
		pop    %edx
		ret    



_068fd8_func:
		push   %edx
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d63_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf83a_data
		mov    _0cfa2f_data,%ah
		mov    %dl,_0cfa2e_data
		and    $0x0000fb,%ah
		mov    _0cfa2d_data,%dh
		mov    %ah,_0cfa2f_data
		cmp    $0x000001,%dh
		jne    _069023_jump
		movb   $0x000002,_0cfa2d_data

	_069023_jump:
		pop    %edx
		ret    



_069028_func:
		push   %edx
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094d62_data(,%eax,4),%al
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ax,_0cf83a_data
		mov    _0cfa2f_data,%ah
		mov    %dl,_0cfa2e_data
		and    $0x0000fb,%ah
		mov    _0cfa2d_data,%dh
		mov    %ah,_0cfa2f_data
		cmp    $0x000001,%dh
		jne    _069073_jump
		movb   $0x000002,_0cfa2d_data

	_069073_jump:
		pop    %edx
		ret    



_069078_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		xor    %eax,%eax
		mov    _0cf83a_data,%dx
		mov    _0cfa5f_data,%al
		cmp    %dx,%ax
		jne    _069209_jump
		call   _03715c_func
		test   %al,%al
		je     _069160_jump
		xor    %bh,%bh
		mov    _0cf83a_data,%di
		mov    %bh,_0cfa2d_data
		mov    %bh,_0cfa2e_data
		cmp    $0x000012,%di
		je     _0690e2_jump
		cmp    $0x000013,%di
		je     _0690e2_jump
		cmp    $0x000014,%di
		je     _0690e2_jump
		cmp    $0x000015,%di
		je     _0690e2_jump
		cmp    $0x000016,%di
		je     _0690e2_jump
		cmp    $0x000017,%di
		jne    _06914e_jump

	_0690e2_jump:
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0c2da0_data,%edx
		cmp    _094d6c_data(,%eax,4),%edx
		jne    _069157_jump
		cmpb   $0x000000,_0cfa3d_data
		je     _069157_jump
		mov    $_0cc728_data,%eax
		mov    _0c2dcc_data,%edx
		call   _07fc40_func
		test   %eax,%eax
		je     _069157_jump
		mov    $0x000003,%eax
		call   _04fb94_func
		test   %al,%al
		je     _069157_jump
		xor    %eax,%eax
		mov    _0cf7bc_data,%al
		call   _074400_func
		mov    _0cf838_data,%eax
		sar    $0x000010,%eax
		call   _06954c_func
		call   _06817c_func
		jmp    _069157_jump

	_06914e_jump:
		movw   $0x000001,_0cf892_data

	_069157_jump:
		andb   $0x0000fb,_0cfa2f_data
		jmp    _0691a2_jump

	_069160_jump:
		call   _041d54_func
		test   %ax,%ax
		je     _069171_jump
		call   _068fd8_func
		jmp    _0691a2_jump

	_069171_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _069182_jump
		call   _069028_func
		jmp    _0691a2_jump

	_069182_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _069193_jump
		call   _068f88_func
		jmp    _0691a2_jump

	_069193_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _0691a2_jump
		call   _068f38_func

	_0691a2_jump:
		xor    %ebx,%ebx
		mov    _0cf83a_data,%ax
		mov    _0cfa5f_data,%bl
		cmp    %ax,%bx
		je     _069472_jump
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		testb  $0x000001,_094d64_data(,%eax,4)
		je     _0691f8_jump
		mov    $_0ce650_data,%eax
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dh,_0ce6cf_data
		mov    $0x000001,%edx
		call   _01d818_func
		call   _06817c_func
		jmp    _069472_jump

	_0691f8_jump:
		mov    %bx,_0cf83a_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069209_jump:
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%ecx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%edx
		mov    _094d5c_data(%ecx),%bx
		sub    _094d5c_data(%edx),%bx
		mov    _094d5e_data(%ecx),%ax
		mov    _094d5e_data(%edx),%cx
		sub    %ecx,%eax
		mov    %ax,0x00000c(%esp)
		test   %bx,%bx
		jge    _06925f_jump
		andb   $0x0000f7,_0ce6d1_data
		jmp    _069266_jump

	_06925f_jump:
		orb    $0x000008,_0ce6d1_data

	_069266_jump:
		test   %bx,%bx
		je     _0692df_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _0692df_jump
		mov    0x00000a(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		movswl %bx,%ecx
		test   %eax,%eax
		jge    _069289_jump
		neg    %eax

	_069289_jump:
		mov    %eax,%edx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _069293_jump
		neg    %eax

	_069293_jump:
		cmp    %eax,%edx
		jle    _0692bb_jump
		xor    %edx,%edx
		mov    _0ce6cf_data,%dl
		imul   %ecx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movzbw _0ce6cf_data,%si
		test   %eax,%eax
		jge    _0692b7_jump
		neg    %eax

	_0692b7_jump:
		mov    %eax,%edi
		jmp    _0692fe_jump

	_0692bb_jump:
		xor    %edx,%edx
		mov    _0ce6cf_data,%dl
		imul   %ebp,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		movzbw _0ce6cf_data,%di
		test   %eax,%eax
		jge    _0692db_jump
		neg    %eax

	_0692db_jump:
		mov    %eax,%esi
		jmp    _0692fe_jump

	_0692df_jump:
		test   %bx,%bx
		jne    _0692ee_jump
		movzbw _0ce6cf_data,%si
		jmp    _0692fe_jump

	_0692ee_jump:
		cmpw   $0x000000,0x00000c(%esp)
		jne    _0692fe_jump
		movzbw _0ce6cf_data,%di

	_0692fe_jump:
		mov    _0ce6cf_data,%dh
		movswl %bx,%ecx
		inc    %dh
		mov    %ecx,%eax
		mov    %dh,_0ce6cf_data
		mov    %edi,%edx
		cmp    $0x000000,%eax
		je     _069321_jump
		mov    $0x000001,%eax
		jg     _069321_jump
		neg    %eax

	_069321_jump:
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    %esi,%ebx
		cmp    $0x000000,%eax
		je     _069340_jump
		mov    $0x000001,%eax
		jg     _069340_jump
		neg    %eax

	_069340_jump:
		imul   %eax,%ebx
		movzbl _0cfa5f_data,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %ebp,%eax
		mov    %ebx,0x000008(%esp)
		mov    _094d5c_data(,%eax,4),%bx
		add    (%esp),%ebx
		mov    %ebx,0x000010(%esp)
		xor    %ebx,%ebx
		mov    _0ce6b8_data,%bl
		mov    %ebx,0x000004(%esp)
		mov    0x000010(%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    _0ce678_data,%bx
		mov    %ebx,0x000010(%esp)
		mov    0x000004(%esp),%ebx
		sub    0x000010(%esp),%ebx
		mov    _094d5e_data(,%eax,4),%ax
		mov    %bx,_0ce690_data
		add    0x000008(%esp),%eax
		xor    %ebx,%ebx
		mov    _0ce6b9_data,%bl
		sub    %ebx,%eax
		mov    _0ce67c_data,%bx
		add    $0x000008,%eax
		sub    %ebx,%eax
		mov    %ax,_0ce692_data
		movswl %di,%eax
		test   %eax,%eax
		jge    _0693cb_jump
		neg    %eax

	_0693cb_jump:
		mov    %eax,%ebp
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _0693d5_jump
		neg    %eax

	_0693d5_jump:
		cmp    %eax,%ebp
		jl     _069472_jump
		movswl %si,%eax
		test   %eax,%eax
		jge    _0693e6_jump
		neg    %eax

	_0693e6_jump:
		mov    %eax,%ecx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0693f0_jump
		neg    %eax

	_0693f0_jump:
		cmp    %eax,%ecx
		jl     _069472_jump
		mov    _0cf83a_data,%al
		mov    _0ce6bd_data,%bl
		mov    %al,_0cfa5f_data
		test   %bl,%bl
		je     _069472_jump
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %cx,_0ce690_data
		add    %edx,%eax
		mov    %cx,_0ce692_data
		xor    %edx,%edx
		mov    _094d5a_data(,%eax,4),%ecx
		mov    _0ce6b8_data,%dl
		sar    $0x000010,%ecx
		mov    _094d5c_data(,%eax,4),%eax
		sub    %edx,%ecx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0ce6b9_data,%dl
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ecx,_0ce678_data
		mov    %eax,_0ce67c_data

	_069472_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06947c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _055498_func
		call   _043a50_func
		mov    _0cf8b2_data,%edx
		mov    _0cf8b0_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _043e3c_func
		call   _044524_func
		testb  $0x000008,_0ce6d1_data
		je     _0694d8_jump
		xor    %eax,%eax
		mov    _0ce688_data,%cx
		mov    _0ce6b9_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce686_data,%si
		mov    _0ce6b8_data,%al
		add    %esi,%eax
		jmp    _0694fb_jump

	_0694d8_jump:
		xor    %eax,%eax
		mov    _0ce688_data,%dx
		mov    _0ce6b9_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce686_data,%bx
		mov    _0ce6b8_data,%al
		add    %ebx,%eax

	_0694fb_jump:
		cwtl   
		call   _01d560_func
		mov    $_0ce650_data,%eax
		call   _0567ac_func
		call   _067b2c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069518_func:
		cmpb   $0x000000,_0cfa3d_data
		je     _069528_jump
		mov    _0c2da0_data,%eax
		jmp    _06952d_jump

	_069528_jump:
		mov    _0c2da8_data,%eax

	_06952d_jump:
		mov    %eax,_094ed4_data
		mov    %eax,_094ee8_data
		mov    %eax,_094efc_data
		mov    %eax,_094f10_data
		mov    %eax,_094f24_data
		mov    %eax,_094f38_data
		ret    



_06954c_func:
		push   %edx
		mov    %eax,%edx
		movswl %dx,%edx
		call   _069518_func
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0c2da4_data,%edx
		mov    %edx,_094d6c_data(,%eax,4)
		pop    %edx
		ret    



_069570_func:
		push   %edx
		call   _03cadc_func
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf834_data
		mov    _0cf8a6_data,%ax
		mov    %ax,_0cf832_data
		mov    _0cf844_data,%ax
		mov    %ax,_0cf89e_data
		mov    _0cf83e_data,%ax
		mov    %ax,_0cf8a6_data
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0cfa5a_data
		call   _068c8c_func
		call   _069518_func
		xor    %ah,%ah
		mov    _0ce6c6_data,%dl
		mov    %ah,_0cfa40_data
		cmp    $0x0000ff,%dl
		jne    _0695d9_jump
		mov    %ah,_0ce6c6_data

	_0695d9_jump:
		pop    %edx
		ret    



_0695dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf83a_data,%al
		mov    %al,_0cfa60_data
		cmpb   $0x000000,_0cfa36_data
		jne    _069628_jump
		mov    _0cf838_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094d67_data(,%eax,4),%dl
		mov    %dx,_0cf82e_data
		mov    _094d66_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0cf83a_data
		call   _026a40_func

	_069628_jump:
		andb   $0x0000fb,_0cf81b_data
		cmpw   $0x000005,_0cf83a_data
		jne    _069664_jump
		mov    _0cf82e_data,%bx
		cmp    $0x000003,%bx
		jne    _069664_jump
		testb  $0x000002,_0cf81f_data
		je     _069664_jump
		orb    $0x000004,_0cf81b_data
		mov    %ebx,%edx
		inc    %edx
		mov    %dx,_0cf82e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069664_jump:
		cmpw   $0x000005,_0cf83a_data
		jne    _069695_jump
		cmpw   $0x000004,_0cf82e_data
		jne    _069695_jump
		testb  $0x000002,_0cf81f_data
		je     _069695_jump
		cmpb   $0x000000,_0cfa36_data
		je     _069695_jump
		orb    $0x000004,_0cf81b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_069695_jump:
		cmpw   $0x000006,_0cf83a_data
		jne    _0696c7_jump
		testb  $0x000080,_0cf81e_data
		je     _0696c7_jump
		mov    $0x000001,%ch
		mov    $0x000001,%eax
		mov    %ch,_0cfa46_data
		mov    %ch,_0cfa7a_data
		mov    %ax,_0cf892_data
		mov    %ch,_0cfa3c_data

	_0696c7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0696cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		xor    %bl,%bl
		mov    %dx,_0cf880_data
		mov    %edx,%esi
		mov    %dx,_0cf892_data
		mov    %cx,_0cef52_data
		mov    %ah,_0ce6c6_data
		mov    %bl,_0cfa7a_data
		mov    $0x000009,%bh
		mov    _0ce6d1_data,%dl
		mov    $_0caf88_data,%eax
		and    $0x0000fe,%dl
		mov    %bh,_0cfa3b_data
		mov    %dl,_0ce6d1_data
		mov    $0x000001,%dh
		mov    $0x000018,%ebx
		mov    %dh,_0ce77c_data
		xor    %edx,%edx
		mov    %si,_0cf8a0_data
		call   _080420_func
		mov    $0x000a20,%ebx
		mov    $_0cafa0_data,%eax
		xor    %edx,%edx
		call   _080420_func
		call   _059900_func
		mov    _094d64_data,%cl
		or     $0x000001,%cl
		xor    %al,%al
		mov    %cl,_094d64_data
		mov    %cl,%ch
		mov    %al,_094d65_data
		and    $0x0000f9,%ch
		mov    %esi,%eax
		mov    %ch,_094d64_data

	_069771_jump:
		movswl %ax,%edx
		imul   $0x000014,%edx,%edx
		andb   $0x0000f8,_094d64_data(%edx)
		xor    %bh,%bh
		inc    %eax
		mov    %bh,_094d65_data(%edx)
		cmp    $0x000018,%ax
		jl     _069771_jump
		mov    _0cf7bc_data,%edx
		sar    $0x000010,%edx
		movb   $0x000003,_0cd8ac_data(,%edx,4)
		xor    %al,%al
		mov    %bh,_0cd8ad_data(,%edx,4)
		mov    $0x000009,%ah
		mov    %bh,_0cd8ae_data(,%edx,4)
		mov    %ah,_0cd8af_data(,%edx,4)
		xor    %ah,%ah

	_0697b9_jump:
		movswl %ax,%edx
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0cbb40_data(%edx)
		cmp    $0x000017,%ax
		jl     _0697b9_jump
		call   _01f880_func
		call   _068bc0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06980c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cfa2c_data
		jne    _06981f_jump
		call   _06bc40_func

	_06981f_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x000064,%ecx
		mov    %dx,_0cf7dc_data
		mov    %bx,_0cf7d8_data
		mov    %bx,_0cf7da_data
		mov    %si,_0cf7cc_data
		mov    %di,_0cf7a4_data
		mov    %esi,%eax
		mov    %si,_0cf7be_data
		mov    %di,_0cf7aa_data
		mov    %cx,_0cf794_data
		mov    $0x000001,%dl
		mov    $0x000006,%edi
		xor    %esi,%eax
		xor    %ebx,%ebx
		mov    _0cfa3d_data,%al
		mov    %dl,_0cfa7d_data
		mov    %bx,_0cf78a_data
		mov    %di,_0cf77e_data
		mov    _0cfa3d_data,%bl
		add    %esi,%eax
		xor    %dh,%dh
		mov    $0x00000c,%esi
		mov    %ax,_0cf7a6_data
		mov    %dh,_0cfa3f_data
		mov    $0x000028,%eax
		mov    %si,_0cf79a_data
		xor    %dl,%dl
		mov    %ax,_0cf76e_data
		mov    %dx,_0cf776_data
		test   %bl,%bl
		je     _0698ea_jump
		jmp    _0698de_jump

	_0698cf_jump:
		mov    %dl,%al
		inc    %al
		and    $0x0000ff,%eax
		call   _0749c8_func
		inc    %edx

	_0698de_jump:
		xor    %eax,%eax
		mov    _0cfa3d_data,%al
		cmp    %ax,%dx
		jl     _0698cf_jump

	_0698ea_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0698f0_func:
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    $0x000001,%esi
		mov    %dx,_0cf77c_data
		mov    %dx,_0cf778_data
		mov    %dx,_0cf7bc_data
		mov    %dx,_0cf7c2_data
		mov    %dx,_0cf7a2_data
		mov    %dx,_0cf784_data
		mov    %dx,_0cf790_data
		mov    %dx,_0cf782_data
		mov    %dx,_0cf772_data
		mov    %si,_0cf7c0_data
		pop    %esi
		pop    %edx
		ret    



_069944_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _041d54_func
		test   %ax,%ax
		je     _0699e5_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _0699e5_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _0699e5_jump
		cmpw   $0x000000,_0cf7c2_data
		jne    _0699e5_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _0699b1_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _0699e5_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0699e5_jump

	_0699b1_jump:
		mov    _0cf7aa_data,%cx
		cmp    $0x000003,%cx
		jne    _0699c9_jump
		movw   $0x000001,_0cf7aa_data
		jmp    _0699d3_jump

	_0699c9_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cf7aa_data

	_0699d3_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0cd134_data
		call   _072960_func

	_0699e5_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _069a82_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _069a82_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _069a82_jump
		cmpw   $0x000000,_0cf7c2_data
		jne    _069a82_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069a4e_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _069a82_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069a82_jump

	_069a4e_jump:
		mov    _0cf7aa_data,%bx
		cmp    $0x000001,%bx
		jne    _069a66_jump
		movw   $0x000003,_0cf7aa_data
		jmp    _069a70_jump

	_069a66_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cf7aa_data

	_069a70_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0cd134_data
		call   _072960_func

	_069a82_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _069b18_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _069b18_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _069b18_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069ae1_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _069b18_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069b18_jump

	_069ae1_jump:
		mov    _0cf7be_data,%ax
		cmp    $0x000001,%ax
		jg     _069afc_jump
		xor    %eax,%eax
		mov    _0cfa3d_data,%al
		mov    %ax,_0cf7be_data
		jmp    _069b06_jump

	_069afc_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0cf7be_data

	_069b06_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0cd134_data
		call   _072960_func

	_069b18_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _069bb1_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _069bb1_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _069bb1_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069b77_jump
		mov    _0cf78a_data,%ax
		cmp    _0cf79a_data,%ax
		jle    _069bb1_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069bb1_jump

	_069b77_jump:
		xor    %eax,%eax
		mov    _0cf7be_data,%cx
		mov    _0cfa3d_data,%al
		cmp    %cx,%ax
		jne    _069b95_jump
		movw   $0x000001,_0cf7be_data
		jmp    _069b9f_jump

	_069b95_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cf7be_data

	_069b9f_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0cd134_data
		call   _072960_func

	_069bb1_jump:
		call   _041d54_func
		test   %ax,%ax
		jne    _069be9_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _069be9_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _069be9_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _069be9_jump
		mov    $0x000001,%cl
		mov    %ax,_0cf78a_data
		mov    %cl,_0cfa7d_data
		jmp    _069bf1_jump

	_069be9_jump:
		xor    %bh,%bh
		mov    %bh,_0cfa7d_data

	_069bf1_jump:
		call   _037280_func
		test   %al,%al
		je     _069c14_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _069c14_jump
		movb   $0x000001,_0cfa39_data
		mov    $0x00004d,%eax
		call   _072960_func

	_069c14_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069c1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _04f76c_func
		cmpw   $0x000001,_0cf7aa_data
		jne    _069c83_jump
		call   _03715c_func
		test   %al,%al
		je     _069c83_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069c6d_jump
		mov    _0cf78a_data,%dx
		cmp    _0cf79a_data,%dx
		jle    _069c83_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069c83_jump

	_069c6d_jump:
		mov    $0x000001,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cf7a2_data
		call   _072960_func

	_069c83_jump:
		cmpw   $0x000002,_0cf7aa_data
		jne    _069cdf_jump
		call   _03715c_func
		test   %al,%al
		je     _069cdf_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069ccc_jump
		mov    _0cf78a_data,%dx
		cmp    _0cf79a_data,%dx
		jle    _069cdf_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069cdf_jump

	_069ccc_jump:
		movw   $0x000002,_0cf7a2_data
		mov    $0x000045,%eax
		call   _072960_func

	_069cdf_jump:
		cmpw   $0x000003,_0cf7aa_data
		jne    _069d48_jump
		call   _03715c_func
		test   %al,%al
		je     _069d48_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069d28_jump
		mov    _0cf78a_data,%dx
		cmp    _0cf79a_data,%dx
		jle    _069d48_jump
		mov    _0cf788_data,%edx
		mov    _0cf77c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069d48_jump

	_069d28_jump:
		mov    $0x000003,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cf7a2_data
		call   _072960_func
		mov    $0x000014,%eax
		call   _03db24_func

	_069d48_jump:
		call   _04f7b0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069d54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000004,%edx
		mov    $0x000005,%ebx
		mov    $0x000014,%eax
		mov    %dx,_0cf7a4_data
		mov    $0x000041,%edx
		mov    $0x000015,%ecx
		call   _04f698_func
		mov    $0x000032,%ebx
		mov    $0x000001,%ah
		mov    %cx,_0cf7b6_data
		xor    %dh,%dh
		mov    %bx,_0cf76e_data
		mov    %ah,_0cbddc_data
		mov    %ah,_0cbdde_data
		mov    %dh,_0cbddd_data
		mov    _0cf7b8_data,%ax
		mov    $0x000005,%bl
		mov    %ax,_0cbdda_data
		mov    _0cf7ba_data,%ax
		mov    %bl,_0cbddf_data
		mov    %ax,_0cf7b4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069dcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04f76c_func
		cmpw   $0x000000,_0cf788_data
		jne    _069e10_jump
		cmpw   $0x000001,_0cf7a2_data
		je     _069e10_jump
		mov    _0cf7bc_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    $0x000001,%ecx
		mov    _0c125c_data,%eax
		mov    %cx,_0cf788_data
		mov    %eax,_0cd794_data(%edx)

	_069e10_jump:
		cmpw   $0x000000,_0cf790_data
		je     _069e23_jump
		movw   $0x000001,_0cf784_data

	_069e23_jump:
		call   _03715c_func
		test   %al,%al
		je     _069ee5_jump
		cmpb   $0x000000,_0cfa7d_data
		je     _069ee5_jump
		mov    _0cf7bc_data,%eax
		mov    _0cf7be_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x00007e,_0cd793_data(%eax)
		jne    _069e87_jump
		mov    _0cf7c0_data,%cx
		cmp    $0x000001,%cx
		je     _069ebf_jump
		mov    %ecx,%esi
		mov    $0x000061,%dh
		dec    %esi
		mov    %dh,_0cd793_data(%eax)
		mov    $0x000044,%eax
		mov    %si,_0cf7c0_data
		call   _072960_func
		jmp    _069ebf_jump

	_069e87_jump:
		mov    _0cf7c0_data,%ax
		cmp    $0x000003,%ax
		jge    _069ea9_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    $0x000044,%eax
		mov    %bx,_0cf7c0_data
		call   _072960_func
		jmp    _069ebf_jump

	_069ea9_jump:
		mov    $0x000044,%eax
		mov    $0x000001,%edx
		call   _072960_func
		mov    %dx,_0cf790_data

	_069ebf_jump:
		mov    $0x001000,%eax
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_0cf7dc_data
		mov    %ax,_0cf7d8_data
		mov    %ax,_0cf7da_data
		mov    %bx,_0cf7cc_data

	_069ee5_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _069fb6_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _069fb6_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _069fb6_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _069f35_jump
		mov    _0cf788_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _069fb6_jump

	_069f35_jump:
		mov    _0cf7bc_data,%eax
		mov    _0cf7be_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd793_data(%eax),%bh
		cmp    $0x00007a,%bh
		jne    _069f5f_jump
		movb   $0x000020,_0cd793_data(%eax)
		jmp    _069f85_jump

	_069f5f_jump:
		cmp    $0x000020,%bh
		jne    _069f6d_jump
		movb   $0x00007e,_0cd793_data(%eax)
		jmp    _069f85_jump

	_069f6d_jump:
		cmp    $0x00007e,%bh
		jne    _069f7b_jump
		movb   $0x000061,_0cd793_data(%eax)
		jmp    _069f85_jump

	_069f7b_jump:
		mov    %bh,%dl
		inc    %dl
		mov    %dl,_0cd793_data(%eax)

	_069f85_jump:
		mov    $0x001000,%esi
		xor    %ecx,%ecx
		mov    $0x000001,%eax
		mov    %cx,_0cf7dc_data
		mov    %si,_0cf7d8_data
		mov    %ax,_0cf7cc_data
		mov    $0x000044,%eax
		mov    %si,_0cf7da_data
		call   _072960_func

	_069fb6_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _06a088_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _06a088_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _06a088_jump
		cmpb   $0x000000,_0cfa7d_data
		jne    _06a006_jump
		mov    _0cf788_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06a088_jump

	_06a006_jump:
		mov    _0cf7bc_data,%eax
		mov    _0cf7be_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd793_data(%eax),%ch
		cmp    $0x000061,%ch
		jne    _06a030_jump
		movb   $0x00007e,_0cd793_data(%eax)
		jmp    _06a056_jump

	_06a030_jump:
		cmp    $0x00007e,%ch
		jne    _06a03e_jump
		movb   $0x000020,_0cd793_data(%eax)
		jmp    _06a056_jump

	_06a03e_jump:
		cmp    $0x000020,%ch
		jne    _06a04c_jump
		movb   $0x00007a,_0cd793_data(%eax)
		jmp    _06a056_jump

	_06a04c_jump:
		mov    %ch,%bl
		dec    %bl
		mov    %bl,_0cd793_data(%eax)

	_06a056_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %dx,_0cf7dc_data
		mov    %bx,_0cf7d8_data
		mov    %bx,_0cf7da_data
		mov    %si,_0cf7cc_data
		call   _072960_func

	_06a088_jump:
		call   _041e34_func
		test   %ax,%ax
		jne    _06a0cd_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _06a0cd_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _06a0cd_jump
		call   _041ce4_func
		test   %ax,%ax
		jne    _06a0cd_jump
		cmpw   $0x000000,_0cf790_data
		jne    _06a0cd_jump
		cmpw   $0x000000,_0cf784_data
		jne    _06a0cd_jump
		movw   $0x000001,_0cf782_data

	_06a0cd_jump:
		call   _037280_func
		test   %al,%al
		je     _06a0e7_jump
		movb   $0x000001,_0cfa39_data
		mov    $0x00004d,%eax
		call   _072960_func

	_06a0e7_jump:
		call   _04f7b0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a0f4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf7a2_data,%ax
		xor    %bl,%bl
		cmp    $0x000002,%ax
		jb     _06a11b_jump
		jbe    _06a2ac_jump
		cmp    $0x000003,%ax
		je     _06a318_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06a11b_jump:
		cmp    $0x000001,%ax
		jne    _06a388_jump
		cmpw   $0x000000,_0cf7c2_data
		je     _06a276_jump
		mov    _0cf7c0_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1260_data,%edx
		add    $_0cd798_data,%eax
		call   _07fc40_func
		test   %eax,%eax
		je     _06a185_jump
		mov    _0cf7bc_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1260_data,%edx
		add    $_0cd798_data,%eax
		call   _07fc40_func
		test   %eax,%eax
		je     _06a183_jump
		mov    $0x000002,%eax
		call   _04fb94_func
		test   %al,%al
		je     _06a185_jump

	_06a183_jump:
		mov    $0x000001,%bl

	_06a185_jump:
		test   %bl,%bl
		je     _06a30a_jump
		mov    _0cf7be_data,%ax
		mov    %ax,_0cf7bc_data
		mov    _0cf7ba_data,%esi
		sar    $0x000010,%esi
		shl    $0x000002,%esi
		sub    $0x000004,%esi
		mov    $_0cd794_data,%edi
		add    $_0cd798_data,%esi
		push   %edi

	_06a1b4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a1cc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a1b4_jump

	_06a1cc_jump:
		pop    %edi
		mov    _0cf7c0_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		lea    -0x000004(%eax),%esi
		mov    _0cf7ba_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0cd798_data,%edi
		sub    $0x000004,%eax
		add    $_0cd798_data,%esi
		add    %eax,%edi
		push   %edi

	_06a1f7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06a20f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06a1f7_jump

	_06a20f_jump:
		pop    %edi
		mov    _0cf7c0_data,%eax
		mov    _0cf7ba_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _0cd8ac_data(,%eax,4),%bl
		mov    %bl,_0cd8ac_data(,%edx,4)
		mov    _0cd8ad_data(,%eax,4),%bl
		mov    %bl,_0cd8ad_data(,%edx,4)
		mov    _0cd8ae_data(,%eax,4),%bl
		mov    %bl,_0cd8ae_data(,%edx,4)
		mov    _0cd8af_data(,%eax,4),%al
		mov    %al,_0cd8af_data(,%edx,4)
		xor    %eax,%eax
		mov    _0cf7c2_data,%al
		mov    $0x000001,%ebx
		call   _0746d0_func
		mov    %bx,_0cf778_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06a276_jump:
		mov    _0cf7bc_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1260_data,%edx
		add    $_0cd798_data,%eax
		call   _07fc40_func
		test   %eax,%eax
		je     _06a388_jump
		mov    _0cf7be_data,%ax
		mov    %ax,_0cf7c2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06a2ac_jump:
		mov    _0cf7bc_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		sub    $0x000004,%eax
		mov    $_0c1260_data,%edx
		add    $_0cd798_data,%eax
		call   _07fc40_func
		test   %eax,%eax
		je     _06a388_jump
		mov    $0x000001,%eax
		call   _04fb94_func
		test   %al,%al
		je     _06a30a_jump
		mov    _0cf7be_data,%ax
		mov    %ax,_0cf7bc_data
		call   _036b0c_func
		mov    _0cf7ba_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c1260_data,%al
		mov    %al,_0cd794_data(%edx)

	_06a30a_jump:
		movw   $0x000001,_0cf778_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06a318_jump:
		mov    _0cf7be_data,%ax
		mov    %ax,_0cf7bc_data
		mov    _0cf7ba_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0cd798_data,%edx
		sub    $0x000004,%eax
		add    %eax,%edx
		mov    $_0c1260_data,%eax
		call   _07fc40_func
		test   %eax,%eax
		jne    _06a362_jump
		xor    %esi,%esi
		mov    $0x000001,%ah
		mov    %si,_0cf788_data
		mov    %ah,_0cfa3f_data
		call   _0696cc_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06a362_jump:
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    _0cf7bc_data,%al
		mov    %dx,_0cf788_data
		call   _0746d0_func
		mov    %dx,_0cf776_data
		mov    %dx,_0cf892_data

	_06a388_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06a390_switch:
		.long   _06a3b3_case
		.long   _06a3bc_case
		.long   _06a3c5_case
		.long   _06a3ce_case


	_06a3b3_case:
		push   $0x000002
		mov    $_0c1264_data,%eax
		jmp    _06a3d5_jump

	_06a3bc_case:
		push   $0x000001
		mov    $_0c1268_data,%eax
		jmp    _06a3d5_jump

	_06a3c5_case:
		push   $0x000005
		mov    $_0c126c_data,%eax
		jmp    _06a3d5_jump

	_06a3ce_case:
		push   $0x000001
		mov    $_0c1270_data,%eax

	_06a3d5_jump:
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a3f0_func
		ret    $0x000004



_06a3ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		mov    _0cf868_data,%si
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cf824_data
		mov    %bx,_0cf826_data
		mov    %ah,_0cfa5c_data
		mov    %dx,_0cf78a_data
		mov    %ah,_092994_data
		mov    %ah,_0cfa3e_data
		cmp    $0x000004,%si
		je     _06a437_jump
		testb  $0x000002,_0cf81b_data
		je     _06a46b_jump

	_06a437_jump:
		mov    $0x000021,%ecx
		mov    $_0ce650_data,%edi
		mov    $_0cedd4_data,%esi
		mov    $0x000001,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0cfa86_data
		mov    _0cf81b_data,%cl
		mov    $0x000001,%edi
		and    $0x0000fd,%cl
		mov    %di,_0cf868_data
		mov    %cl,_0cf81b_data

	_06a46b_jump:
		mov    $0x000087,%edx
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0ce6b9_data,%al
		mov    %ch,_0ce6bb_data
		sub    %eax,%edx
		mov    _0cfa3b_data,%al
		mov    %edx,_0ce67c_data
		test   %al,%al
		je     _06a4ba_jump
		mov    $0x000018,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %eax,%eax
		mov    $0x0000e1,%edx
		mov    _0ce6b8_data,%al
		sub    %eax,%edx
		mov    %edx,_0ce678_data
		jmp    _06a505_jump

	_06a4ba_jump:
		xor    %eax,%eax
		mov    $0x000050,%edx
		mov    _0ce6b8_data,%al
		sub    %eax,%edx
		mov    $_0ce650_data,%eax
		mov    %edx,_0ce678_data
		mov    $0x000003,%edx
		call   _01d810_func
		movw   $0x0000ff,_0cf826_data
		cmpb   $0x00000a,_0cfa09_data
		jbe    _06a4f6_jump
		mov    $0x000034,%edx
		jmp    _06a4fb_jump

	_06a4f6_jump:
		mov    $0x000033,%edx

	_06a4fb_jump:
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06a505_jump:
		mov    $0x000082,%ebx
		mov    _0ce6d1_data,%dl
		mov    $0x000078,%ecx
		and    $0x0000f7,%dl
		mov    $0x00006e,%esi
		mov    %dl,_0ce6d1_data
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,_0ce690_data
		mov    %dx,_0ce692_data
		call   _01d650_func
		mov    $0x000050,%edx
		mov    $_0ced44_data,%eax
		mov    %ebx,_0ced70_data
		mov    %edx,_0ced6c_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %edi,%edi
		call   _01d818_func
		mov    $0x000050,%dh
		mov    $0x000040,%bl
		mov    $_0cd8cc_data,%eax
		mov    %cx,_0cd902_data
		mov    %si,_0cd904_data
		mov    %dh,_0cd934_data
		mov    %bl,_0cd935_data
		xor    %cl,%cl
		mov    _0cd94d_data,%bh
		mov    $0x000005,%edx
		and    $0x0000fb,%bh
		mov    %cl,_0cd94b_data
		mov    %bh,_0cd94d_data
		mov    $0x000014,%ebx
		xor    %ch,%ch
		call   _01d818_func
		mov    _0cf89e_data,%ax
		mov    %ch,_0cfa40_data
		mov    %ax,_0cf844_data
		mov    _0cf8a6_data,%ax
		mov    %di,_0cf89e_data
		mov    %ax,_0cf83e_data
		mov    %di,_0cf8a6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06a5d8_switch:
		.long   _06a68c_case
		.long   _06a6c7_case
		.long   _06a6ff_case
		.long   _06a733_case




_06a5e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _092994_data,%dl
		movw   $0x000001,_0cf78a_data
		call   _041e34_func
		test   %ax,%ax
		je     _06a616_jump
		mov    _092994_data,%dl
		cmp    $0x000001,%dl
		je     _06a616_jump
		inc    %dl
		jmp    _06a673_jump

	_06a616_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _06a630_jump
		mov    _092994_data,%dl
		cmp    $0x000003,%dl
		je     _06a630_jump
		add    $0x000002,%dl
		jmp    _06a673_jump

	_06a630_jump:
		call   _041d54_func
		test   %ax,%ax
		je     _06a64a_jump
		mov    _092994_data,%dl
		cmp    $0x000007,%dl
		je     _06a64a_jump
		add    $0x000004,%dl
		jmp    _06a673_jump

	_06a64a_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _06a664_jump
		mov    _092994_data,%dl
		cmp    $0x00000f,%dl
		je     _06a664_jump
		add    $0x000008,%dl
		jmp    _06a673_jump

	_06a664_jump:
		xor    %ecx,%ecx
		mov    _092994_data,%dl
		mov    %cx,_0cf78a_data

	_06a673_jump:
		mov    _0cfa3e_data,%al
		cmp    $0x000003,%al
		ja     _06a76f_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_06a5d8_switch(,%ebx,4)

	_06a68c_case:
		cmp    $0x000001,%dl
		jne    _06a6a6_jump
		cmpb   $0x000003,_0cfa3b_data
		ja     _06a6a6_jump
		add    %dl,%al
		mov    %al,_0cfa3e_data
		jmp    _06a76f_jump

	_06a6a6_jump:
		cmpw   $0x000000,_0cf78a_data
		je     _06a76f_jump
		xor    %al,%al
		xor    %dl,%dl
		mov    %al,_0cfa3e_data
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a6c7_case:
		cmp    $0x000003,%dl
		jne    _06a6dd_jump
		inc    %al
		mov    %al,_0cfa3e_data
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a6dd_jump:
		cmpw   $0x000000,_0cf78a_data
		je     _06a76f_jump
		xor    %cl,%cl
		xor    %dl,%dl
		mov    %cl,_0cfa3e_data
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a6ff_case:
		cmp    $0x000007,%dl
		jne    _06a715_jump
		inc    %al
		mov    %al,_0cfa3e_data
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a715_jump:
		cmpw   $0x000000,_0cf78a_data
		je     _06a76f_jump
		xor    %bh,%bh
		xor    %dl,%dl
		mov    %bh,_0cfa3e_data
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a733_case:
		cmp    $0x00000f,%dl
		jne    _06a75b_jump
		orb    $0x000004,_0cd94d_data
		xor    %dl,%dl
		mov    $0x00000a,%bl
		mov    $0x000080,%dh
		mov    %bl,_0cfa3b_data
		mov    %dh,_0cd94b_data
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06a75b_jump:
		cmpw   $0x000000,_0cf78a_data
		je     _06a76f_jump
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0cfa3e_data

	_06a76f_jump:
		mov    %dl,_092994_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06a77c_switch:
		.long   _06a884_case
		.long   _06a8bd_case
		.long   _06a8d8_case
		.long   _06a9d2_case
		.long   _06a92b_case
		.long   _06a995_case
		.long   _06a90d_case




_06a798_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _055498_func
		call   _03715c_func
		test   %al,%al
		jne    _06a7c5_jump
		call   _0371a4_func
		test   %al,%al
		jne    _06a7c5_jump
		call   _037280_func
		test   %al,%al
		je     _06a84b_jump

	_06a7c5_jump:
		mov    _0ce6bc_data,%ah
		cmp    $0x000019,%ah
		je     _06a7da_jump
		cmp    $0x00001a,%ah
		je     _06a7da_jump
		cmp    $0x00001b,%ah
		jne    _06a84b_jump

	_06a7da_jump:
		cmpb   $0x000080,_0cd94b_data
		je     _06a7ea_jump
		orb    $0x000004,_0cd94d_data

	_06a7ea_jump:
		call   _01d024_func
		mov    $0x0000d8,%eax
		call   _072960_func
		cmpb   $0x00001b,_0ce6bc_data
		je     _06a818_jump
		mov    $0x00001f,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _06a833_jump

	_06a818_jump:
		mov    $0x00001d,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		orb    $0x000008,_0ce6d1_data

	_06a833_jump:
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0ce6bb_data
		mov    $_0ced44_data,%eax
		call   _01d818_func

	_06a84b_jump:
		mov    $_0ce650_data,%eax
		call   _055ee4_func
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		call   _055e60_func
		mov    %ax,_0ce690_data
		mov    _0ce6bc_data,%al
		sub    $0x000019,%al
		cmp    $0x000006,%al
		ja     _06aa01_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_06a77c_switch(,%eax,4)

	_06a884_case:
		xor    %eax,%eax
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%al
		add    %ecx,%eax
		cmp    $0x000046,%eax
		jge    _06aa01_jump
		mov    $0x00001a,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %dl,%dl
		mov    %dl,_0ce6bb_data
		jmp    _06aa01_jump

	_06a8bd_case:
		cmpb   $0x000006,_0ce6bb_data
		jbe    _06aa01_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce690_data
		jmp    _06aa01_jump

	_06a8d8_case:
		mov    _0cf824_data,%si
		inc    %esi
		mov    %si,_0cf824_data
		cmp    $0x00003c,%si
		jne    _06aa01_jump
		mov    _0cf826_data,%dx
		xor    %eax,%eax
		dec    %edx
		mov    %ax,_0cf824_data
		mov    %dx,_0cf826_data
		jmp    _06aa01_jump

	_06a90d_case:
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06aa01_jump
		orb    $0x000008,_0ce6d1_data
		jmp    _06aa01_jump

	_06a92b_case:
		mov    _0ce6d1_data,%dh
		xor    %eax,%eax
		mov    _0ce678_data,%ebx
		mov    _0ce6b8_data,%al
		or     $0x000008,%dh
		add    %ebx,%eax
		mov    %dh,_0ce6d1_data
		cmp    $0x0000b4,%eax
		jle    _06a97a_jump
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06a97a_jump
		mov    $0x00001c,%edx
		mov    $_0ce650_data,%eax
		xor    %bh,%bh
		call   _01d808_func
		mov    %bh,_0ce6bb_data
		jmp    _06aa01_jump

	_06a97a_jump:
		cmpb   $0x000040,_0ce6bb_data
		jae    _06aa01_jump
		xor    %edx,%edx
		mov    %dx,_0ce690_data
		jmp    _06aa01_jump

	_06a995_case:
		xor    %eax,%eax
		mov    _0ce678_data,%edx
		mov    _0ce6b8_data,%al
		add    %edx,%eax
		cmp    $0x0000af,%eax
		jle    _06aa01_jump
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06aa01_jump
		mov    $0x00001c,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		xor    %dl,%dl
		mov    %dl,_0ce6bb_data
		jmp    _06aa01_jump

	_06a9d2_case:
		cmpb   $0x000028,_0ce6bb_data
		jbe    _06a9ef_jump
		mov    $0x000001,%ch
		mov    $0xffffffff,%ebx
		mov    %ch,_0cfa5c_data
		mov    %bx,_0ce8d2_data

	_06a9ef_jump:
		cmpb   $0x000010,_0ce6bb_data
		jbe    _06aa01_jump
		xor    %ecx,%ecx
		mov    %cx,_0ce690_data

	_06aa01_jump:
		cmpb   $0x000000,_0cf9f7_data
		jne    _06aa13_jump
		cmpb   $0x000019,_0ce6bc_data
		je     _06aa3d_jump

	_06aa13_jump:
		mov    _0ce68e_data,%eax
		mov    _0ce678_data,%esi
		sar    $0x000010,%eax
		add    %eax,%esi
		mov    $_0ce650_data,%eax
		mov    %esi,_0ce678_data
		call   _01e030_func
		mov    $_0ce650_data,%eax
		call   _0567ac_func

	_06aa3d_jump:
		mov    $_0ced44_data,%eax
		call   _01e030_func
		mov    $_0ced44_data,%eax
		call   _0567ac_func
		testb  $0x000004,_0cd94d_data
		je     _06aa88_jump
		mov    $_0cd8cc_data,%eax
		call   _0567ac_func
		mov    $_0cd8cc_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06aa88_jump
		cmpb   $0x000080,_0cd94b_data
		je     _06aa81_jump
		decb   _0cfa3b_data

	_06aa81_jump:
		andb   $0x0000fb,_0cd94d_data

	_06aa88_jump:
		cmpw   $0x0000ff,_0cf826_data
		je     _06aa9d_jump
		call   _06a5e8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06aa9d_jump:
		call   _06ab98_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06aaa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x0000ff,_0cf826_data
		jne    _06aace_jump
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0cfa5c_data
		mov    %cl,_0cfa7a_data
		mov    %bh,_0cfa37_data
		jmp    _06ab07_jump

	_06aace_jump:
		mov    _0cf824_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06aaff_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%dl
		mov    %bx,_0cef52_data
		mov    %dl,_0ce6c6_data
		xor    %bl,%bl
		mov    %dl,_0cef5b_data
		mov    %bl,_0cfa7a_data
		jmp    _06ab07_jump

	_06aaff_jump:
		xor    %ah,%ah
		mov    %ah,_0cfa37_data

	_06ab07_jump:
		mov    _0cf844_data,%ax
		mov    %ax,_0cf89e_data
		mov    _0cf83e_data,%ax
		mov    %ax,_0cf8a6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ab98_func:
		call   _037280_func
		test   %al,%al
		setne  %al
		mov    %al,_0cfa40_data
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06abbc_jump
		movb   $0x000001,_0cfa40_data

	_06abbc_jump:
		cmpb   $0x000000,_0cfa40_data
		je     _06abd5_jump
		movb   $0x000001,_0cfa5c_data
		movw   $0x00ffff,_0ce8d2_data

	_06abd5_jump:
		ret    

_06abd8_switch:
		.long   _06ac44_case
		.long   _06aece_case
		.long   _06ad22_case
		.long   _06ade8_case
		.long   _06adfd_case




_06abec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cf824_data
		mov    %bx,_0cf826_data
		mov    %ah,_0cfa58_data
		call   _01ef80_func
		cmpb   $0x000000,_0cfa46_data
		je     _06ac26_jump
		call   _06af40_func
		jmp    _06af37_jump

	_06ac26_jump:
		mov    _0cf88c_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _06aece_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06abd8_switch(,%eax,4)

	_06ac44_case:
		mov    $_0cc578_data,%edi
		mov    _0c2bc0_data,%esi
		push   %edi

	_06ac50_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ac68_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ac50_jump

	_06ac68_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2bc4_data,%esi
		push   %edi

	_06ac75_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ac8d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ac75_jump

	_06ac8d_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2bc8_data,%esi
		push   %edi

	_06ac9a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06acb2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ac9a_jump

	_06acb2_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2bcc_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_06acc4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06acdc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06acc4_jump

	_06acdc_jump:
		pop    %edi
		mov    _0c2f8c_data,%edx
		mov    $_0cc650_data,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		mov    $0x0000ff,%ebx
		mov    _0c2f8c_data,%edx
		mov    $_0cc728_data,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		mov    $0x0000ff,%ebx
		mov    _0c2f8c_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		jmp    _06aece_case

	_06ad22_case:
		mov    $_0cc578_data,%edi
		mov    _0c2bd0_data,%esi
		push   %edi

	_06ad2e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ad46_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ad2e_jump

	_06ad46_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2bd4_data,%esi
		push   %edi

	_06ad53_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ad6b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ad53_jump

	_06ad6b_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2bd8_data,%esi
		push   %edi

	_06ad78_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ad90_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ad78_jump

	_06ad90_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2bdc_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_06ada2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06adba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ada2_jump

	_06adba_jump:
		pop    %edi
		mov    _0c2f86_data,%edx
		mov    $_0cc728_data,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		mov    $0x0000ff,%ebx
		mov    _0c2f86_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f4a0_func
		jmp    _06aece_case

	_06ade8_case:
		call   _01cf7c_func
		mov    $_0cc578_data,%edi
		mov    _0c2be0_data,%esi
		jmp    _06aeb4_jump

	_06adfd_case:
		cmpw   $0x000003,_0cf87c_data
		jne    _06ae9f_jump
		mov    $_0cc578_data,%edi
		mov    _0c2be4_data,%esi
		push   %edi

	_06ae17_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ae2f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ae17_jump

	_06ae2f_jump:
		pop    %edi
		mov    $_0cc650_data,%edi
		mov    _0c2be8_data,%esi
		push   %edi

	_06ae3c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ae54_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ae3c_jump

	_06ae54_jump:
		pop    %edi
		mov    $_0cc728_data,%edi
		mov    _0c2bec_data,%esi
		push   %edi

	_06ae61_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ae79_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ae61_jump

	_06ae79_jump:
		pop    %edi
		mov    $_0cc800_data,%edi
		mov    _0c2bf0_data,%esi
		push   %edi

	_06ae86_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06ae9e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06ae86_jump

	_06ae9e_jump:
		pop    %edi

	_06ae9f_jump:
		cmpw   $0x00000b,_0cf87c_data
		jne    _06aece_case
		mov    $_0cc578_data,%edi
		mov    _0c2bf4_data,%esi

	_06aeb4_jump:
		push   %edi

	_06aeb5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06aecd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06aeb5_jump

	_06aecd_jump:
		pop    %edi

	_06aece_case:
		mov    $0x0000d8,%edx
		xor    %eax,%eax

	_06aed5_jump:
		cmpb   $0x000000,_0cc578_data(%eax)
		je     _06aefd_jump
		mov    $0x0000a0,%edi
		mov    $0x0000ad,%ebx
		mov    %di,_0cc648_data(%eax)
		mov    %bx,_0cc64a_data(%eax)
		movb   $0x000002,_0cc64c_data(%eax)

	_06aefd_jump:
		cmpb   $0x000000,_0cc578_data(%edx)
		je     _06af25_jump
		mov    $0x0000a0,%ecx
		mov    $0x0000bc,%edi
		mov    %cx,_0cc648_data(%edx)
		mov    %di,_0cc64a_data(%edx)
		movb   $0x000002,_0cc64c_data(%edx)

	_06af25_jump:
		add    $0x0001b0,%eax
		add    $0x0001b0,%edx
		cmp    $0x000870,%eax
		jne    _06aed5_jump

	_06af37_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06af40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ebx
		xor    %ah,%ah
		mov    _0cfa19_data,%dl
		mov    %ah,_0cfa53_data
		test   %dl,%dl
		jne    _06af68_jump
		xor    %eax,%eax
		mov    _0cf7bc_data,%al
		call   _074400_func

	_06af68_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa34_data
		mov    %dh,_0cfa3a_data
		xor    %dl,%dl
		mov    %dx,_0cf764_data
		mov    %dh,_0cfa40_data
		mov    %dh,_0cfa47_data
		mov    %dh,_0cfa37_data

	_06af91_jump:
		inc    %ebx
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0951d4_data,%esi
		mov    $_0cd140_data,%edi
		mov    $0x00000c,%ecx
		add    %edx,%esi
		add    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpw   $0x000000,_0cd146_data(%edx)
		je     _06afdb_jump
		mov    _0cd144_data(%edx),%esi
		sar    $0x000010,%esi
		mov    _0c2b48_data(,%esi,4),%esi
		mov    %esi,_0cd140_data(%edx)

	_06afdb_jump:
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $0x0000dc,%esi
		mov    _0cd149_data(%edx),%cl
		mov    %si,_0cd146_data(%edx)
		cmp    $0x0000ff,%cl
		jne    _06af91_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cfa46_data,%ah
		mov    $0x000001,%ecx
		test   %ah,%ah
		je     _06b132_jump
		mov    %ecx,%eax
		call   _055498_func
		cmpb   $0x000000,_0cf9f7_data
		jne    _06b132_jump
		xor    %eax,%eax
		mov    _0cfa34_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		shl    $0x000002,%edx
		jmp    _06b055_jump

	_06b041_jump:
		mov    _0cd146_data(%edx),%di
		add    $0x00000c,%edx
		sub    %ecx,%edi
		inc    %eax
		mov    %di,_0cd13a_data(%edx)

	_06b055_jump:
		xor    %ebx,%ebx
		mov    _0cfa3a_data,%bl
		cmp    %ebx,%eax
		jle    _06b041_jump
		add    %cx,_0cf764_data
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _0cd149_data(%edx),%al
		test   %ax,%ax
		jne    _06b0ae_jump
		mov    _0cd148_data(%edx),%dl
		cmp    $0x000001,%dl
		jb     _06b095_jump
		jbe    _06b0a0_jump
		cmp    $0x000002,%dl
		je     _06b0a7_jump
		jmp    _06b0cb_jump

	_06b095_jump:
		test   %dl,%dl
		jne    _06b0cb_jump
		mov    $0x000024,%esi
		jmp    _06b0cb_jump

	_06b0a0_jump:
		mov    $0x000017,%esi
		jmp    _06b0cb_jump

	_06b0a7_jump:
		mov    $0x00000f,%esi
		jmp    _06b0cb_jump

	_06b0ae_jump:
		cmp    $0x0000ff,%ax
		jne    _06b0bb_jump
		mov    $0x0000a0,%esi
		jmp    _06b0cb_jump

	_06b0bb_jump:
		cmp    $0x000064,%ax
		jle    _06b0c8_jump
		mov    %eax,%esi
		sub    $0x000055,%esi
		jmp    _06b0cb_jump

	_06b0c8_jump:
		imul   $0x00000f,%eax,%esi

	_06b0cb_jump:
		cmp    _0cf764_data,%si
		jg     _06b108_jump
		xor    %ecx,%ecx
		mov    %cx,_0cf764_data
		cmp    $0x0000ff,%ax
		je     _06b101_jump
		incb   _0cfa3a_data
		xor    %edx,%edx
		mov    _0cfa3a_data,%dl
		mov    $0x00000f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06b108_jump

	_06b101_jump:
		movb   $0x000001,_0cfa40_data

	_06b108_jump:
		xor    %edx,%edx
		mov    _0cfa34_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd144_data(,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _06b132_jump
		mov    %dl,%cl
		inc    %cl
		mov    %cl,_0cfa34_data

	_06b132_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b178_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0ce688_data,%dx
		mov    _0ce6c4_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0c1274_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01a3f0_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0ce688_data,%cx
		mov    _0ce6c4_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0c128c_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01a3f0_func
		cmpb   $0x000080,_0ce6bb_data
		jbe    _06b1e5_jump
		movb   $0x000001,_0cfa40_data

	_06b1e5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b1ec_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0ce7ec_data
		mov    %dl,_0ce7ed_data
		mov    %bx,_0ce7bc_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0ce7ba_data
		mov    %bl,_0ce7f1_data
		mov    _0ce805_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0ce7f0_data
		mov    %bh,_0ce7f4_data
		mov    %dh,_0ce805_data
		pop    %edx
		pop    %ebx
		ret    

_06b240_switch:
		.long   _06b32d_case
		.long   _06b390_case
		.long   _06b403_case
		.long   _06b432_case
		.long   _06b498_case
		.long   _06b505_case




_06b258_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0ce7f1_data,%dl
		mov    _0ce790_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce7f0_data,%dl
		mov    0x000005(%ebx,%edx,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0ce7c4_data
		test   %al,%al
		je     _06b2a2_jump
		xor    %edx,%edx
		mov    %al,%dl
		cmpb   $0x000000,_0cf9f5_data(%edx)
		jne    _06b2a2_jump
		mov    $_0ce784_data,%eax
		call   _055ee4_func

	_06b2a2_jump:
		mov    _0ce7c4_data,%ax
		mov    _0ce7ba_data,%bx
		add    %eax,%ebx
		mov    _0cfa40_data,%dl
		mov    %bx,_0ce7ba_data
		cmp    $0x000001,%dl
		jne    _06b314_jump
		mov    $0x000005,%dh
		mov    $0x000002,%ebx
		mov    $_0ce784_data,%eax
		mov    %dh,_0ce7f4_data
		xor    %edx,%edx
		xor    %cl,%cl
		call   _01d818_func
		mov    $0x000002,%bl
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		mov    %cl,_0cfa40_data
		mov    _0ce7ec_data,%al
		mov    %bl,_0ce803_data
		sub    %eax,%edx
		mov    _0ce805_data,%bh
		mov    %edx,%eax
		and    $0x0000f7,%bh
		sub    $0x000010,%eax
		mov    %bh,_0ce805_data
		mov    %ax,_0ce7ba_data

	_06b314_jump:
		mov    _0ce7f4_data,%al
		cmp    $0x000005,%al
		ja     _06b540_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06b240_switch(,%edx,4)

	_06b32d_case:
		xor    %ebx,%ebx
		mov    _0ce7b8_data,%edx
		mov    _0ce7ec_data,%bl
		sar    $0x000010,%edx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _06b540_jump
		inc    %al
		mov    $0x000001,%ebx
		mov    %al,_0ce7f4_data
		mov    %ebx,%edx
		mov    $_0ce784_data,%eax
		call   _01d818_func
		xor    %eax,%eax
		mov    _0ce7ec_data,%al
		mov    _0ce805_data,%bl
		neg    %eax
		or     $0x000008,%bl
		sub    $0x00003c,%eax
		mov    %bl,_0ce805_data
		mov    %ax,_0ce7ba_data
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b390_case:
		xor    %edx,%edx
		mov    _0ce7b8_data,%ebx
		mov    _0ce7ec_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _06b540_jump
		mov    $0x000002,%ebx
		inc    %al
		mov    $0x000001,%edx
		mov    %al,_0ce7f4_data
		mov    $_0ce784_data,%eax
		call   _01d818_func
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0ce7ec_data,%al
		mov    %dl,_0ce7ef_data
		neg    %eax
		mov    _0ce805_data,%dh
		add    $0x00015e,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0ce7ba_data
		mov    %dh,_0ce805_data
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b403_case:
		cmpb   $0x000000,_0ce7f1_data
		jne    _06b540_jump
		cmpb   $0x000000,_0ce7f0_data
		jne    _06b540_jump
		inc    %al
		mov    %al,_0ce7f4_data
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b432_case:
		mov    $_0ce784_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06b540_jump
		mov    _0ce7f4_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0ce784_data,%eax
		mov    %bh,_0ce7f4_data
		mov    $0x000003,%ebx
		call   _01d818_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0ce805_data,%cl
		mov    _0ce7ec_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0ce805_data
		mov    %dx,_0ce7ba_data
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b498_case:
		xor    %edx,%edx
		mov    _0ce7b8_data,%ebx
		mov    _0ce7ec_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _06b540_jump
		mov    $0x000001,%ebx
		inc    %al
		xor    %edx,%edx
		mov    %al,_0ce7f4_data
		mov    $_0ce784_data,%eax
		call   _01d818_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0ce7ec_data,%al
		sub    %eax,%edx
		mov    _0ce805_data,%bl
		mov    %edx,%eax
		and    $0x0000f7,%bl
		sub    $0x000010,%eax
		mov    %bl,_0ce805_data
		mov    %ax,_0ce7ba_data
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b505_case:
		cmpb   $0x000000,_0ce7f1_data
		jne    _06b540_jump
		cmpb   $0x000002,_0ce7f0_data
		jne    _06b540_jump
		mov    _0ce803_data,%ah
		test   %ah,%ah
		jne    _06b536_jump
		movb   $0x000001,_0cfa40_data
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b536_jump:
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0ce803_data

	_06b540_jump:
		mov    $_0ce784_data,%eax
		call   _0567ac_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b550_func:
		push   %edx
		xor    %ah,%ah
		mov    _0cfa54_data,%dl
		mov    %ah,_0cfa8d_data
		cmp    $0x000001,%dl
		jne    _06b578_jump
		mov    _0cf818_data,%ax
		xor    %dh,%dh
		mov    %ax,_0cf81a_data
		mov    %dh,_0cfa54_data

	_06b578_jump:
		pop    %edx
		ret    

_06b57c_switch:
		.long   _06b5bc_case
		.long   _06b63c_case
		.long   _06b65b_case
		.long   _06b672_case
		.long   _06b693_case




_06b590_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf87c_data,%bx
		mov    _0cf88c_data,%ax
		dec    %eax
		xor    %edx,%edx
		cmp    $0x000004,%ax
		ja     _06b6b2_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_06b57c_switch(,%eax,4)

	_06b5bc_case:
		cmp    $0x000010,%bx
		jne    _06b5db_jump
		cmpw   $0x000001,_0cf880_data
		je     _06b5d6_jump
		cmpw   $0x000001,_0cf892_data
		jne    _06b5db_jump

	_06b5d6_jump:
		mov    $_097300_data,%edx

	_06b5db_jump:
		cmp    $0x000007,%bx
		jne    _06b606_jump
		cmpw   $0x000001,_0cf880_data
		je     _06b5f5_jump
		cmpw   $0x000001,_0cf892_data
		jne    _06b606_jump

	_06b5f5_jump:
		xor    %al,%al
		mov    $_0972bc_data,%edx
		mov    %al,_0cfa43_data
		jmp    _06b6b2_jump

	_06b606_jump:
		cmp    $0x000007,%bx
		jne    _06b6b2_jump
		cmpb   $0x000000,_0cfa43_data
		jne    _06b6b2_jump
		mov    _0cfa7a_data,%cl
		mov    $_0972aa_data,%edx
		test   %cl,%cl
		jne    _06b6b2_jump
		movb   $0x000001,_0cfa43_data
		jmp    _06b6b2_jump

	_06b63c_case:
		cmp    $0x000010,%bx
		jne    _06b6b2_jump
		cmpw   $0x000001,_0cf892_data
		jne    _06b6b2_jump
		mov    $_0972ce_data,%edx
		jmp    _06b6b2_jump

	_06b65b_case:
		cmp    $0x00000a,%bx
		jne    _06b6b2_jump
		cmpw   $0x000001,_0cf880_data
		jne    _06b6b2_jump
		mov    $_0972ce_data,%edx
		jmp    _06b6b2_jump

	_06b672_case:
		cmp    $0x00000b,%bx
		jne    _06b6b2_jump
		cmpw   $0x000001,_0cf880_data
		je     _06b68c_jump
		cmpw   $0x000001,_0cf892_data
		jne    _06b6b2_jump

	_06b68c_jump:
		mov    $_097290_data,%edx
		jmp    _06b6b2_jump

	_06b693_case:
		cmp    $0x00000b,%bx
		jne    _06b6b2_jump
		cmpw   $0x000001,_0cf880_data
		je     _06b6ad_jump
		cmpw   $0x000001,_0cf892_data
		jne    _06b6b2_jump

	_06b6ad_jump:
		mov    $_0972e8_data,%edx

	_06b6b2_jump:
		mov    %edx,_0e4e78_data
		xor    %ah,%ah
		mov    %bx,_0cf87c_data
		mov    %ah,_0cfa40_data
		test   %edx,%edx
		je     _06b6d4_jump
		cmpb   $0x000000,_0cfa7a_data
		je     _06b6dd_jump

	_06b6d4_jump:
		movb   $0x000001,_0cfa40_data
		jmp    _06b72d_jump

	_06b6dd_jump:
		mov    $0x000084,%ecx
		mov    $_0ce650_data,%esi
		mov    $_0cee5c_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0ce6b9_data,%al
		mov    %ch,_0ce6c0_data
		mov    $0x0000a8,%ecx
		sub    %eax,%ecx
		xor    %edi,%edi
		mov    %cx,_0ce688_data
		mov    $_06b73c_func,%ecx
		mov    %di,_0ce690_data
		mov    %ecx,_0cd13c_data

	_06b72d_jump:
		mov    _0e4e78_data,%edx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b73c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0ce650_data,%edi
		mov    _0ce65c_data,%ecx

	_06b74c_jump:
		xor    %ebx,%ebx
		mov    _0ce6c0_data,%bl
		mov    _0e4e78_data,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    (%ebx),%ax
		movzbw _0ce6c0_data,%si
		cmp    $0x000011,%ax
		jb     _06b79e_jump
		jbe    _06b91f_jump
		cmp    $0x000013,%ax
		jb     _06b93f_jump
		jbe    _06b8d5_jump
		cmp    $0x000014,%ax
		jbe    _06b981_jump
		cmp    $0x000015,%ax
		je     _06b8aa_jump
		jmp    _06b9b7_jump

	_06b79e_jump:
		cmp    $0x000001,%ax
		jb     _06b7c1_jump
		jbe    _06b7cb_jump
		cmp    $0x000008,%ax
		jb     _06b9b7_jump
		jbe    _06b80d_jump
		cmp    $0x00000e,%ax
		je     _06b9a5_jump
		jmp    _06b9b7_jump

	_06b7c1_jump:
		test   %ax,%ax
		je     _06b7eb_jump
		jmp    _06b9b7_jump

	_06b7cb_jump:
		mov    _0ce6d1_data,%bh
		mov    _0ce6c0_data,%al
		or     $0x000008,%bh
		inc    %al
		mov    %bh,_0ce6d1_data
		mov    %al,_0ce6c0_data
		jmp    _06b9b7_jump

	_06b7eb_jump:
		mov    _0ce6d1_data,%ah
		mov    _0ce6c0_data,%dl
		and    $0x0000f7,%ah
		inc    %dl
		mov    %ah,_0ce6d1_data
		mov    %dl,_0ce6c0_data
		jmp    _06b9b7_jump

	_06b80d_jump:
		mov    _0ce6c0_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0ce6c0_data
		mov    (%edx,%ebx,2),%dl
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _01d810_func
		incb   _0ce6c0_data
		xor    %edx,%edx
		mov    _0e4e78_data,%ebx
		mov    _0ce6c0_data,%dl
		mov    (%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _01d808_func
		testb  $0x000008,_0ce6d1_data
		je     _06b87b_jump
		xor    %edx,%edx
		mov    _0ce6bd_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce6bc_data,%dl
		movsbw (%ebx,%edx,8),%ax
		jmp    _06b899_jump

	_06b87b_jump:
		xor    %edx,%edx
		mov    _0ce6bd_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce6bc_data,%dl
		movsbw 0x000001(%ebx,%edx,8),%ax

	_06b899_jump:
		mov    %ax,_0ce690_data
		incb   _0ce6c0_data
		jmp    _06b9b7_jump

	_06b8aa_jump:
		mov    _0ce6c0_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0ce6c0_data
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%dl
		inc    %dl
		mov    %ax,_0ce686_data
		mov    %dl,_0ce6c0_data
		jmp    _06b9b7_jump

	_06b8d5_jump:
		mov    %edi,%eax
		call   _01d074_func
		test   %al,%al
		je     _06b9b7_jump
		xor    %edx,%edx
		mov    _0ce6bd_data,%dl
		lea    0x000000(,%edx,4),%ebx
		mov    _0ce65c_data,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0ce6bc_data,%dl
		mov    _0ce6ba_data,%al
		cmp    0x000002(%ebx,%edx,8),%al
		jne    _06b9b7_jump
		incb   _0ce6c0_data
		jmp    _06b9b7_jump

	_06b91f_jump:
		xor    %eax,%eax
		mov    0x000002(%ebx),%dx
		mov    _0ce6bb_data,%al
		cmp    %dx,%ax
		jne    _06b9b7_jump
		addb   $0x000002,_0ce6c0_data
		jmp    _06b9b7_jump

	_06b93f_jump:
		mov    _0ce686_data,%ax
		cmp    0x000002(%ebx),%ax
		jl     _06b954_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06b978_jump

	_06b954_jump:
		xor    %edx,%edx
		mov    _0e4e78_data,%ebx
		mov    _0ce6c0_data,%dl
		mov    _0ce686_data,%ax
		cmp    0x000002(%ebx,%edx,2),%ax
		jg     _06b9b7_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06b9b7_jump

	_06b978_jump:
		addb   $0x000002,_0ce6c0_data
		jmp    _06b9b7_jump

	_06b981_jump:
		incb   _0ce6c0_data
		xor    %ebx,%ebx
		mov    _0ce6c0_data,%bl
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%bh
		inc    %bh
		mov    %ax,_0ce690_data
		mov    %bh,_0ce6c0_data
		jmp    _06b9b7_jump

	_06b9a5_jump:
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d810_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d808_func

	_06b9b7_jump:
		xor    %eax,%eax
		mov    _0ce6c0_data,%al
		cmp    %ax,%si
		jne    _06b74c_jump
		xor    %eax,%eax
		mov    _0ce6ba_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0ce654_data,%eax
		mov    0x000008(%eax,%edx,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		mov    %al,%dl
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		call   _055e60_func
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cf9f5_data(%edx)
		jne    _06ba14_jump
		add    %ax,_0ce686_data

	_06ba14_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _06ba2d_jump
		cmpb   $0x000000,_0ce6bc_data
		jne    _06ba2d_jump
		movb   $0x000001,_0cfa40_data

	_06ba2d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ba34_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0cee5c_data,%esi
		xor    %ah,%ah
		mov    $_0ce650_data,%edi
		mov    %ah,_0cfa40_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03cadc_func
		call   _03ca8c_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_06ba8c_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _080408_func
		cli    
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_06baa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_06baaf_jump:
		mov    %ebx,%eax
		add    $0x000006,%ecx
		call   _081331_func
		mov    %dx,_0e4e7e_data(%ecx)
		inc    %ebx
		mov    %eax,_0e4e7a_data(%ecx)
		cmp    $0x000100,%ebx
		jl     _06baaf_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax
		ret    



_06bad8_func:
		call   _06baa8_func
		lea    0x000000(%eax),%eax



_06bae0_func:
		push   %ebx
		push   %ecx
		mov    $_06ba8c_func,%ebx
		mov    %cs,%ecx
		xor    %eax,%eax
		call   _081363_func
		mov    $_06ba8c_func,%ebx
		mov    $0x000001,%eax
		mov    %cs,%ecx
		call   _081363_func
		mov    $_06ba8c_func,%ebx
		mov    $0x000002,%eax
		mov    %cs,%ecx
		call   _081363_func
		mov    $_06ba8c_func,%ebx
		mov    $0x000003,%eax
		mov    %cs,%ecx
		call   _081363_func
		mov    $_06ba8c_func,%ebx
		mov    $0x000004,%eax
		mov    %cs,%ecx
		call   _081363_func
		mov    $_06ba8c_func,%ebx
		mov    $0x000005,%eax
		mov    %cs,%ecx
		call   _081363_func
		pop    %ecx
		pop    %ebx
		ret    



_06bb48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		xor    %esi,%esi

	_06bb50_jump:
		mov    %edx,%eax
		mov    _0e4e84_data(%esi),%cx
		mov    _0e4e80_data(%esi),%ebx
		call   _081363_func
		inc    %edx
		add    $0x000006,%esi
		cmp    $0x000100,%edx
		jl     _06bb50_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06bb78_func:
		push   %ebx
		push   %ecx
		mov    $0x000003,%eax
		mov    _0e4e96_data,%cx
		mov    _0e4e92_data,%ebx
		call   _081363_func
		pop    %ecx
		pop    %ebx
		ret    



_06bb94_func:
		push   %ebx
		push   %ecx
		mov    $0x000001,%eax
		mov    _0e4e8a_data,%cx
		mov    _0e4e86_data,%ebx
		call   _081363_func
		pop    %ecx
		pop    %ebx
		ret    



_06bbb0_func:
		push   %edx
		cmpb   $0x000000,_0cfa29_data
		je     _06bbe4_jump
		call   _0293b0_func
		add    $0x000041,%al
		mov    %al,_0cfa27_data
		mov    _0cf8f6_data,%al
		cmp    _0cfa27_data,%al
		jne    _06bbdc_jump
		movb   $0x000001,_0cfa2a_data
		pop    %edx
		ret    

	_06bbdc_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa2a_data

	_06bbe4_jump:
		pop    %edx
		lea    0x000000(%eax),%eax



_06bbe8_func:
		ret    



_06bbec_func:
		push   %edx
		call   _029a8c_func
		test   %al,%al
		jne    _06bc1c_jump
		push   $_0c12ac_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a384_func
		mov    $0xffffffff,%eax
		call   _080512_func

	_06bc1c_jump:
		call   _029ac8_func
		cmp    $0x000001,%al
		jne    _06bc34_jump
		xor    %dh,%dh
		mov    %al,_0cfa29_data
		mov    %dh,_0cfa2c_data
		pop    %edx
		ret    

	_06bc34_jump:
		xor    %ah,%ah
		mov    %ah,_0cfa29_data
		pop    %edx
		ret    



_06bc40_func:
		push   %ebx
		push   %edx
		sub    $0x000014,%esp
		cmpb   $0x000000,_0cfa29_data
		je     _06bcde_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a360_func
		test   %al,%al
		je     _06bcde_jump
		call   _01d028_func
		xor    %eax,%eax
		mov    _0cfa27_data,%al
		push   %eax
		push   $_0c12d4_data
		lea    0x000008(%esp),%eax
		push   %eax
		xor    %edx,%edx
		call   _08044b_func
		add    $0x00000c,%esp

	_06bc8a_jump:
		mov    $0x00001a,%eax
		inc    %edx
		call   _06bf60_func
		add    $0x000061,%al
		mov    %al,0x000001(%esp,%edx,1)
		cmp    $0x000008,%edx
		jl     _06bc8a_jump
		xor    %edx,%edx

	_06bca2_jump:
		mov    $0x00001a,%eax
		inc    %edx
		call   _06bf60_func
		add    $0x000061,%al
		mov    %al,0x00000a(%esp,%edx,1)
		cmp    $0x000003,%edx
		jl     _06bca2_jump
		mov    $_0c12e8_data,%edx
		mov    %esp,%eax
		call   _081903_func
		test   %eax,%eax
		je     _06bce5_jump
		call   _0819b7_func
		mov    %esp,%eax
		mov    $0x000001,%bl
		call   _0800a3_func
		mov    %bl,_0cfa2c_data
		jmp    _06bce5_jump

	_06bcde_jump:
		movb   $0x000001,_0cfa2c_data

	_06bce5_jump:
		add    $0x000014,%esp
		pop    %edx
		pop    %ebx
		ret    



_06bcec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa29_data
		je     _06be6e_jump
		xor    %dl,%dl

	_06bcff_jump:
		cmp    _0cfa12_data,%dl
		jne    _06bd1a_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a2e8_func
		test   %al,%al
		je     _06bcff_jump

	_06bd1a_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a5b8_func
		call   _06bed8_func
		test   %al,%al
		jne    _06bec9_jump
		cmpb   $0x000000,_0cfa12_data
		jne    _06bd48_jump
		cmpb   $0x000000,_0cfa14_data
		je     _06bd70_jump

	_06bd48_jump:
		push   $_0c12ec_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a384_func
		mov    $0xffffffff,%eax
		call   _080512_func
		jmp    _06bd7d_jump

	_06bd70_jump:
		push   $_0c130c_data
		call   _07fce1_func
		add    $0x000004,%esp

	_06bd7d_jump:
		call   _0293b0_func
		mov    $0x000039,%esi
		mov    $0x000001,%ebx
		and    $0x0000ff,%eax
		mov    $0xffffffff,%ecx
		call   _02a384_func
		xor    %dl,%dl

	_06bd9d_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a3e8_func
		cmp    _0cfa2c_data,%dl
		jne    _06be12_jump

	_06bdb4_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a2e8_func
		test   %al,%al
		jne    _06be12_jump
		mov    %ebx,%eax
		call   _041cb0_func
		test   %al,%al
		je     _06bdf9_jump
		mov    _0cfa12_data,%al
		cmp    %al,%dl
		jne    _06bdf2_jump
		cmp    _0cfa2c_data,%al
		jne    _06bdf2_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a440_func

	_06bdf2_jump:
		mov    %ecx,%eax
		call   _080512_func

	_06bdf9_jump:
		mov    %esi,%eax
		call   _041cb0_func
		test   %al,%al
		je     _06be0a_jump
		mov    %bl,_0cfa2c_data

	_06be0a_jump:
		cmp    _0cfa2c_data,%dl
		je     _06bdb4_jump

	_06be12_jump:
		cmp    _0cfa2c_data,%dl
		jne    _06be27_jump
		call   _06bed8_func
		test   %al,%al
		je     _06bd9d_jump

	_06be27_jump:
		cmpb   $0x000000,_0cfa12_data
		jne    _06bec9_jump
		cmpb   $0x000000,_0cfa2c_data
		jne    _06bec9_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a440_func
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a3b0_func
		cmpb   $0x000000,_0cfa2c_data
		sete   %al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06be6e_jump:
		push   $_0c13a0_data
		mov    $0x000039,%ecx
		mov    $0x000001,%ebx
		call   _07fce1_func
		add    $0x000004,%esp

	_06be85_jump:
		mov    %ebx,%eax
		call   _041cb0_func
		test   %al,%al
		jne    _06be9b_jump
		mov    %ecx,%eax
		call   _041cb0_func
		test   %al,%al
		je     _06be85_jump

	_06be9b_jump:
		mov    $0x000001,%eax
		call   _041cb0_func
		test   %al,%al
		je     _06beb3_jump
		mov    $0xffffffff,%eax
		call   _080512_func

	_06beb3_jump:
		mov    $0x000039,%eax
		call   _041cb0_func
		test   %al,%al
		je     _06bec9_jump
		xor    %dl,%dl
		mov    %dl,_095eb6_data

	_06bec9_jump:
		cmpb   $0x000000,_0cfa2c_data
		sete   %al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06bed8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000064,%eax
		mov    $0x000001,%bl
		call   _07f8d8_func
		xor    %edx,%edx
		mov    %eax,%ecx

	_06beeb_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a360_func
		test   %al,%al
		je     _06bf22_jump

	_06befe_jump:
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a360_func
		test   %al,%al
		je     _06bf2d_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a724_func
		jmp    _06bf2f_jump

	_06bf22_jump:
		inc    %edx
		cmp    $0x0003e8,%edx
		jl     _06beeb_jump
		jmp    _06befe_jump

	_06bf2d_jump:
		xor    %bl,%bl

	_06bf2f_jump:
		mov    %ecx,%eax
		call   _07fa70_func
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06bf58_func:
		ret    



_06bf60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0e548c_data,%ebx
		inc    %ebx
		cmp    $0x000100,%ebx
		jl     _06bf74_jump
		xor    %ebx,%ebx

	_06bf74_jump:
		mov    _097342_data(,%ebx,2),%edx
		cwtl   
		sar    $0x000010,%edx
		lea    0x000001(%eax),%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %edx,%eax
		mov    %ebx,_0e548c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06bf98_func:
		push   %edx
		test   %eax,%eax
		je     _06bfa9_jump
		xor    %eax,%eax
		call   _085abc_func
		call   _0813ba_func

	_06bfa9_jump:
		xor    %edx,%edx

	_06bfab_jump:
		add    $0x000002,%edx
		call   _081396_func
		and    $0x0000ef,%ah
		mov    %ax,_097342_data(%edx)
		cmp    $0x000200,%edx
		jne    _06bfab_jump
		xor    %edx,%edx
		mov    %edx,_0e548c_data
		pop    %edx
		ret    



_06bfd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cfa79_data
		jne    _06bfff_jump
		mov    $_0ce650_data,%eax
		call   _07b29c_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _06bfff_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    %ecx,%eax
		call   _01e030_func

	_06bfff_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c004_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x00000c,_0cfa7c_data
		jne    _06c022_jump
		xor    %eax,%eax
		mov    _0ce678_data,%cx
		mov    _0ce6b8_data,%al
		add    %ecx,%eax
		jmp    _06c06e_jump

	_06c022_jump:
		mov    _0cfa7f_data,%dh
		cmp    $0x00000c,%dh
		jne    _06c048_jump
		xor    %eax,%eax
		mov    _0ce678_data,%bx
		mov    _0ce6b8_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dh,_0cfa7c_data
		jmp    _06c06e_jump

	_06c048_jump:
		mov    _0cfa80_data,%bl
		cmp    $0x00000c,%bl
		jne    _06c070_jump
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    %bl,_0cfa7c_data

	_06c06e_jump:
		and    $0x0000f0,%al

	_06c070_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0ce6b8_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0ce678_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c088_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0ce678_data,%cx
		mov    _0ce6b8_data,%al
		add    %eax,%ecx
		mov    _0ce6c4_data,%al
		add    $0x000016,%al
		mov    _0ce692_data,%ah
		mov    _0cf81b_data,%dl
		add    %ah,%al
		test   $0x000002,%dl
		je     _06c0ce_jump
		mov    $0x000050,%ebx
		and    $0x0000ff,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000050,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %ebx,%eax

	_06c0ce_jump:
		mov    _0ce67c_data,%dx
		xor    %ah,%ah
		add    %edx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %cx,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e588_func
		mov    %al,_0cfa7c_data
		cmp    $0x00000c,%al
		je     _06c123_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e588_func
		mov    %al,_0cfa7f_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e588_func
		mov    %al,_0cfa80_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c123_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0cfa80_data
		mov    %dh,_0cfa7f_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c138_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0ce6bd_data
		jne    _06c152_jump
		mov    _0ce6cf_data,%dl
		test   %dl,%dl
		jne    _06c212_jump

	_06c152_jump:
		cmpw   $0x00000a,_0cf8a4_data
		jle    _06c21e_jump
		xor    %ebx,%ebx
		mov    _0ce692_data,%dx
		mov    %bx,_0ce692_data
		call   _06c088_func
		mov    _0cfa7c_data,%bl
		mov    %dx,_0ce692_data
		cmp    $0x00000c,%bl
		je     _06c199_jump
		cmpb   $0x00000c,_0cfa7f_data
		je     _06c199_jump
		cmpb   $0x00000c,_0cfa80_data
		jne    _06c207_jump

	_06c199_jump:
		testb  $0x000018,_0cf81b_data
		jne    _06c207_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _06c1bd_jump
		cmpb   $0x000008,_0ce6bc_data
		jne    _06c1bd_jump
		movw   $0x00005a,_0ce6a6_data

	_06c1bd_jump:
		call   _06c004_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %esi,%esi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %si,_0ce690_data
		mov    %si,_0ce692_data
		mov    %si,_0ce6a2_data
		mov    %si,_0cf866_data
		call   _07228c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06c207_jump:
		mov    %dx,_0ce692_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06c212_jump:
		je     _06c21e_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0ce6cf_data

	_06c21e_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_06c224_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		testb  $0x000002,_0cf81b_data
		je     _06c242_jump
		movw   $0x000008,0x000010(%esp)
		jmp    _06c249_jump

	_06c242_jump:
		movw   $0x000004,0x000010(%esp)

	_06c249_jump:
		mov    _0cef5a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0xffffffff,%ecx
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		mov    %cx,_0ce69a_data
		add    %eax,%esi
		mov    _0cf024_data,%ax
		xor    %ecx,%ecx
		test   %ax,%ax
		jle    _06ca27_jump

	_06c281_jump:
		testb  $0x000020,0x000081(%esi)
		je     _06c9fb_jump
		cmp    0x000034(%esi),%di
		je     _06c9fb_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_09257d_data(,%eax,4)
		je     _06c2b7_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		mov    %eax,%ebx
		jmp    _06c2bb_jump

	_06c2b7_jump:
		mov    0x000042(%esi),%bx

	_06c2bb_jump:
		mov    _0ce692_data,%dx
		mov    0x00004c(%esi),%ax
		sub    %edx,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06c2d3_jump
		neg    %eax

	_06c2d3_jump:
		mov    %eax,%ebx
		mov    0x00000e(%esp),%eax
		add    $0x000002,%ebx
		sar    $0x000010,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jge    _06c2ec_jump
		mov    %ebx,%eax

	_06c2ec_jump:
		mov    %eax,%ebx
		mov    0x000060(%esi),%ax
		cmp    $0x00006d,%ax
		je     _06c304_jump
		cmp    $0x0000f1,%ax
		je     _06c304_jump
		cmp    $0x0000b3,%ax
		jne    _06c307_jump

	_06c304_jump:
		add    $0x000008,%ebx

	_06c307_jump:
		mov    0x000052(%esi),%eax
		sar    $0x000010,%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _06c316_jump
		neg    %eax

	_06c316_jump:
		cmp    %edx,%eax
		jge    _06c9fb_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		jne    _06c9fb_jump
		movswl %cx,%eax
		mov    _0cef5c_data(,%eax,2),%ax
		mov    _0cd8c4_data,%edx
		mov    %ax,_0ce69a_data
		cmp    $0xfffffffe,%edx
		jne    _06c376_jump
		mov    _0cd8c0_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _06c376_jump
		incl   _0cd8c0_data

	_06c376_jump:
		mov    $0xffffffff,%edx
		mov    $0x000001,%bh
		mov    _0ce6bd_data,%cl
		mov    %dx,_0ce6a0_data
		mov    %bh,_0cfa72_data
		cmp    $0x000002,%cl
		jne    _06c4eb_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000054,%ax
		jb     _06c40c_jump
		jbe    _06c4eb_jump
		cmp    $0x0000a0,%ax
		jb     _06c3e9_jump
		jbe    _06c45c_jump
		cmp    $0x0000ed,%ax
		jb     _06c3d0_jump
		jbe    _06c4c4_jump
		cmp    $0x0000f3,%ax
		je     _06c4d0_jump
		jmp    _06c4dc_jump

	_06c3d0_jump:
		cmp    $0x0000b2,%ax
		jb     _06c4dc_jump
		cmp    $0x0000b3,%ax
		jbe    _06c4eb_jump
		jmp    _06c4dc_jump

	_06c3e9_jump:
		cmp    $0x000056,%ax
		jb     _06c4dc_jump
		cmp    $0x000058,%ax
		jbe    _06c4eb_jump
		cmp    $0x00009f,%ax
		je     _06c4eb_jump
		jmp    _06c4dc_jump

	_06c40c_jump:
		cmp    $0x000016,%ax
		jb     _06c43b_jump
		jbe    _06c4ae_jump
		cmp    $0x00001a,%ax
		jb     _06c4dc_jump
		cmp    $0x00001c,%ax
		jbe    _06c4ae_jump
		cmp    $0x00003f,%ax
		je     _06c4ae_jump
		jmp    _06c4dc_jump

	_06c43b_jump:
		cmp    $0x000001,%ax
		jb     _06c4dc_jump
		jbe    _06c46c_jump
		cmp    $0x000010,%ax
		jb     _06c4dc_jump
		cmp    $0x000011,%ax
		jbe    _06c48f_jump
		jmp    _06c4dc_jump

	_06c45c_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		jmp    _06c4e6_jump

	_06c46c_jump:
		mov    _0cf88c_data,%dx
		cmp    $0x000001,%dx
		je     _06c4dc_jump
		cmp    $0x000004,%dx
		je     _06c4dc_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06c4e6_jump

	_06c48f_jump:
		mov    _0cf88c_data,%cx
		cmp    $0x000004,%cx
		je     _06c4dc_jump
		cmp    $0x000005,%cx
		je     _06c4dc_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06c4e6_jump

	_06c4ae_jump:
		cmpw   $0x000004,_0cf88c_data
		je     _06c4dc_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06c4e6_jump

	_06c4c4_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		jmp    _06c4e6_jump

	_06c4d0_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		jmp    _06c4e6_jump

	_06c4dc_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06c4e6_jump:
		call   _07228c_func

	_06c4eb_jump:
		mov    0x000060(%esi),%ax
		cmp    $0x000057,%ax
		jb     _06c589_jump
		jbe    _06c67d_jump
		cmp    $0x00009a,%ax
		jb     _06c54f_jump
		jbe    _06c759_jump
		cmp    $0x0000a7,%ax
		jb     _06c536_jump
		jbe    _06c60c_jump
		cmp    $0x0000a9,%ax
		jb     _06c8b3_jump
		jbe    _06c712_jump
		cmp    $0x0000cf,%ax
		je     _06c80a_jump
		jmp    _06c8b3_jump

	_06c536_jump:
		cmp    $0x00009b,%ax
		jbe    _06c780_jump
		cmp    $0x0000a2,%ax
		je     _06c7f1_jump
		jmp    _06c8b3_jump

	_06c54f_jump:
		cmp    $0x000083,%ax
		jb     _06c57a_jump
		jbe    _06c633_jump
		cmp    $0x000086,%ax
		jb     _06c8b3_jump
		jbe    _06c60c_jump
		cmp    $0x00008a,%ax
		je     _06c732_jump
		jmp    _06c8b3_jump

	_06c57a_jump:
		cmp    $0x000058,%ax
		je     _06c6e8_jump
		jmp    _06c8b3_jump

	_06c589_jump:
		cmp    $0x00003f,%ax
		jb     _06c5cb_jump
		jbe    _06c7ce_jump
		cmp    $0x000044,%ax
		jb     _06c5bc_jump
		jbe    _06c896_jump
		cmp    $0x000051,%ax
		jb     _06c8b3_jump
		jbe    _06c601_jump
		cmp    $0x000056,%ax
		je     _06c650_jump
		jmp    _06c8b3_jump

	_06c5bc_jump:
		cmp    $0x000043,%ax
		je     _06c87c_jump
		jmp    _06c8b3_jump

	_06c5cb_jump:
		cmp    $0x000010,%ax
		jb     _06c5f6_jump
		cmp    $0x000011,%ax
		jbe    _06c63d_jump
		cmp    $0x00001b,%ax
		jb     _06c8b3_jump
		jbe    _06c896_jump
		cmp    $0x000031,%ax
		je     _06c7a7_jump
		jmp    _06c8b3_jump

	_06c5f6_jump:
		cmp    $0x000008,%ax
		je     _06c60c_jump
		jmp    _06c8b3_jump

	_06c601_jump:
		movw   $0x000000,0x000052(%esi)
		jmp    _06c8b3_jump

	_06c60c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _06c8b3_jump

	_06c633_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _06c8b3_jump

	_06c63d_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		jmp    _06c8b3_jump

	_06c650_jump:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _06c8b3_jump
		cmpb   $0x000000,0x000076(%esi)
		jne    _06c671_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _06c8b3_jump

	_06c671_jump:
		mov    %esi,%eax
		call   _07b390_func
		jmp    _06c8b3_jump

	_06c67d_jump:
		mov    0x00006d(%esi),%cl
		movb   $0x000010,0x00007d(%esi)
		test   %cl,%cl
		jne    _06c6b1_jump
		cmpb   $0x000007,0x00006c(%esi)
		jne    _06c6b1_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		jmp    _06c8b3_jump

	_06c6b1_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d818_func
		mov    0x000032(%esi),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		jmp    _06c8b3_jump

	_06c6e8_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000010,0x00007d(%esi)
		call   _01d818_func
		mov    0x000032(%esi),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		jmp    _06c8b3_jump

	_06c712_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    %esi,%eax
		call   _07bf40_func
		jmp    _06c8b3_jump

	_06c732_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		jmp    _06c8b3_jump

	_06c759_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		jmp    _06c8b3_jump

	_06c780_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _061220_func
		jmp    _06c8b3_jump

	_06c7a7_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		jmp    _06c8b3_jump

	_06c7ce_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c7de_jump
		cmpb   $0x00000a,0x00006c(%esi)
		je     _06c8b3_jump

	_06c7de_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _061220_func
		jmp    _06c8b3_jump

	_06c7f1_jump:
		testb  $0x000004,_0cf81f_data
		je     _06c8b3_jump
		mov    %esi,%eax
		call   _07ec50_func
		jmp    _06c8b3_jump

	_06c80a_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c81a_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _06c8b3_jump

	_06c81a_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		call   _01d818_func
		mov    0x000081(%esi),%ah
		mov    $0x000001,%dl
		and    $0x0000df,%ah
		mov    $0x000002,%ebx
		mov    %ah,0x000081(%esi)
		mov    $0x000001,%eax
		mov    %dl,_0cfa54_data
		mov    %ax,_0ce690_data
		mov    _0cf81a_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cf818_data
		mov    $_0cf81a_data,%eax
		mov    %cx,_0ce69a_data
		call   _080420_func
		orb    $0x000001,_0cf81a_data
		jmp    _06c8b3_jump

	_06c87c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06c8b3_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _06c8b3_jump
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _06c8b3_jump

	_06c896_jump:
		cmpw   $0x000001,_0ce692_data
		jle    _06c8aa_jump
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		jmp    _06c8af_jump

	_06c8aa_jump:
		mov    $0x000002,%eax

	_06c8af_jump:
		mov    %ax,0x00004a(%esi)

	_06c8b3_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _06c943_jump
		mov    _0ce65c_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06c8d9_jump
		sar    %cl,%ax
		jmp    _06c8e2_jump

	_06c8d9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c8e2_jump:
		movswl %ax,%edx
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06c8f3_jump
		neg    %eax

	_06c8f3_jump:
		cmp    %edx,%eax
		jl     _06c918_jump
		mov    _0cf81b_data,%al
		and    $0x000001,%al
		cmp    $0x000001,%al
		jne    _06c918_jump
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _06c943_jump

	_06c918_jump:
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d810_func
		mov    $0x000008,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		cmpw   $0x0000c8,_0ce6a2_data
		jle    _06c943_jump
		call   _06bfd0_func

	_06c943_jump:
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		mov    0x00000c(%esp),%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    _0ce6b9_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0ce67c_data,%ax
		sub    %eax,%edx
		mov    0x000060(%esi),%ax
		mov    %dx,_0ce692_data
		cmp    $0x0000fe,%ax
		jne    _06c9e2_jump
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06c9ca_jump
		sar    %cl,%ax
		jmp    _06c9d3_jump

	_06c9ca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06c9d3_jump:
		sub    %ax,_0ce692_data
		xor    %bh,%bh
		mov    %bh,_0cfa72_data

	_06c9e2_jump:
		mov    $0xffffffff,%ecx
		movb   $0x000000,0x000000(%ebp)
		mov    %cx,_0ce6a2_data
		mov    %cx,_0cf898_data
		jmp    _06ca27_jump

	_06c9fb_jump:
		inc    %ecx
		movswl %cx,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%esi
		mov    _0cf024_data,%dx
		add    %eax,%esi
		cmp    %dx,%cx
		jl     _06c281_jump

	_06ca27_jump:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _06ca45_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06ca45_jump
		mov    %di,_0ce69a_data
		jmp    _06ca67_jump

	_06ca45_jump:
		mov    _0ce698_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _06ca67_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		movw   $0x000000,0x000054(%edx,%eax,4)

	_06ca67_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06ca70_func:
		push   %esi
		push   %edi
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		mov    _0ce65c_data,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06ca99_jump
		neg    %eax

	_06ca99_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _06caad_jump
		mov    %ebx,%eax

	_06caad_jump:
		mov    %al,%bl
		mov    _0ce690_data,%di
		neg    %bl
		test   %di,%di
		jle    _06cad2_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _06cacd_jump
		mov    %ebx,%eax

	_06cacd_jump:
		mov    %al,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_06cad2_jump:
		jge    _06caeb_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %bl,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _06cae3_jump
		mov    %ebx,%eax

	_06cae3_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_06caeb_jump:
		mov    %cl,%ah
		mov    %cl,(%esi)
		neg    %ah
		mov    %ah,(%esi)
		mov    %cl,(%edx)
		pop    %edi
		pop    %esi
		ret    



_06caf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _06cbc0_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _06ccc9_jump

	_06cbc0_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0cf864_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_06ccc9_jump:
		mov    _0cf864_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _06ca70_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cce0_func:
		push   %edx
		mov    _0cf870_data,%dx
		test   %dx,%dx
		je     _06ccf8_jump
		movw   $0x000001,_0ce698_data
		pop    %edx
		ret    

	_06ccf8_jump:
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06cd34_jump
		mov    _0cfa72_data,%al
		test   %al,%al
		jbe    _06cd14_jump
		cmp    $0x000001,%al
		jne    _06cd3b_jump
		jmp    _06cd34_jump

	_06cd14_jump:
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06cd22_jump
		neg    %eax

	_06cd22_jump:
		cmp    $0x000100,%eax
		jle    _06cd34_jump
		movw   $0x000001,_0ce698_data
		pop    %edx
		ret    

	_06cd34_jump:
		mov    %dx,_0ce698_data

	_06cd3b_jump:
		pop    %edx
		ret    



_06cd40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce6bc_data,%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _06cfff_jump
		xor    %edx,%edx
		mov    _0cfa7d_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06cfff_jump
		mov    _0ce6bd_data,%bh
		cmp    $0x000007,%bh
		jne    _06cdb8_jump
		mov    _0ce690_data,%ax
		mov    %bh,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0ce692_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0cf866_data
		mov    %cx,_0ce692_data
		jmp    _06cdd1_jump

	_06cdb8_jump:
		cmp    $0x000004,%bh
		jne    _06cdc8_jump
		movw   $0x00fffd,_0ce692_data
		jmp    _06cdd1_jump

	_06cdc8_jump:
		movw   $0x00fffb,_0ce692_data

	_06cdd1_jump:
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		mov    _0ce692_data,%cx
		cmp    $0xffffffff,%eax
		je     _06ce09_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		mov    0x00004a(%edx,%eax,4),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		cmp    %ebx,%eax
		jle    _06ce02_jump
		mov    %ebx,%eax

	_06ce02_jump:
		mov    %eax,%ecx
		jmp    _06cebf_jump

	_06ce09_jump:
		mov    _0ce6b2_data,%al
		cmp    $0x00000c,%al
		jb     _06ce3d_jump
		jbe    _06cebf_jump
		cmp    $0x000014,%al
		jb     _06ce31_jump
		cmp    $0x000015,%al
		jbe    _06ce7f_jump
		cmp    $0x000018,%al
		jb     _06ce92_jump
		jmp    _06cebf_jump

	_06ce31_jump:
		cmp    $0x000012,%al
		jb     _06cebf_jump
		jbe    _06ce58_jump
		jmp    _06ce69_jump

	_06ce3d_jump:
		cmp    $0x000004,%al
		jb     _06ce4e_jump
		cmp    $0x000005,%al
		jbe    _06ce7f_jump
		cmp    $0x000008,%al
		jb     _06ce92_jump
		jmp    _06cebf_jump

	_06ce4e_jump:
		cmp    $0x000002,%al
		jb     _06cebf_jump
		ja     _06ce69_jump

	_06ce58_jump:
		mov    _0ce690_data,%di
		cmp    $0x000005,%di
		jle    _06cebf_jump
		mov    %edi,%ecx
		jmp    _06cebc_jump

	_06ce69_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffb,%eax
		jge    _06cebf_jump
		mov    _0ce690_data,%cx
		jmp    _06cebe_jump

	_06ce7f_jump:
		mov    _0ce690_data,%si
		cmp    $0x00000a,%si
		jle    _06cebf_jump
		mov    $0x000001,%cl
		mov    %esi,%eax
		jmp    _06cea7_jump

	_06ce92_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06cebf_jump
		mov    $0x000001,%cl
		mov    _0ce690_data,%ax

	_06cea7_jump:
		test   %ax,%ax
		js     _06ceb1_jump
		sar    %cl,%ax
		jmp    _06ceba_jump

	_06ceb1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06ceba_jump:
		mov    %eax,%ecx

	_06cebc_jump:
		neg    %ecx

	_06cebe_jump:
		dec    %ecx

	_06cebf_jump:
		mov    %cx,_0ce692_data
		call   _06cce0_func
		testb  $0x000002,_0cf81b_data
		je     _06cedb_jump
		mov    $0x000100,%edx
		jmp    _06cee0_jump

	_06cedb_jump:
		mov    $0x000200,%edx

	_06cee0_jump:
		cmpb   $0x000000,_0cfa54_data
		je     _06cf24_jump
		xor    %eax,%eax
		call   _06caf8_func
		cmpb   $0x000000,_0ce6bd_data
		jne    _06cf13_jump
		cmpb   $0x000028,_0ce6bc_data
		jne    _06cf13_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		jmp    _06cf66_jump

	_06cf13_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		jmp    _06cf66_jump

	_06cf24_jump:
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _06cf35_jump
		neg    %eax

	_06cf35_jump:
		cmp    %edx,%eax
		setg   %al
		mov    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _06caf8_func
		test   %dl,%dl
		je     _06cf5a_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		jmp    _06cf66_jump

	_06cf5a_jump:
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx

	_06cf66_jump:
		call   _01d818_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0cf774_data
		mov    %dh,_0cfa8c_data
		mov    %bx,_0cf898_data
		mov    %cx,_0ce69a_data
		mov    _0ce678_data,%ax
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %dx,_0cf8a4_data
		mov    %bl,_0ce6c1_data
		mov    %cl,_0cfa7d_data
		mov    %ax,_0cf89c_data
		mov    _0ce67c_data,%ax
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0ce6c2_data
		mov    %ax,_0cf89a_data
		mov    _0cf81b_data,%al
		mov    %ch,_0ce780_data
		test   $0x000002,%al
		je     _06cfff_jump
		mov    $0x000001,%cl
		mov    _0ce692_data,%ax
		test   %ax,%ax
		js     _06cfef_jump
		sar    %cl,%ax
		jmp    _06cff8_jump

	_06cfef_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06cff8_jump:
		dec    %eax
		mov    %ax,_0ce692_data

	_06cfff_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06d008_switch:
		.long   _06d0c8_case
		.long   _06d0c8_case
		.long   _06d0d2_case
		.long   _06d0c8_case
		.long   _06d0da_case
		.long   _06d0c8_case




_06d020_func:
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %al,0x000014(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		test   %al,%al
		jne    _06d03f_jump
		mov    %bx,_0cf866_data
		xor    %ebx,%ebx
		jmp    _06d1d2_jump

	_06d03f_jump:
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    0x000014(%esp),%al
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		je     _06d055_jump
		sar    %cl,%eax
		jmp    _06d05b_jump

	_06d055_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_06d05b_jump:
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    0x000014(%esp),%al
		test   %ax,%ax
		js     _06d071_jump
		sar    %cl,%ax
		jmp    _06d07a_jump

	_06d071_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06d07a_jump:
		test   %ax,%ax
		je     _06d084_jump
		movswl %ax,%ebx
		jmp    _06d089_jump

	_06d084_jump:
		mov    $0x000001,%ebx

	_06d089_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    $0x000003,%cl
		mov    %eax,0x000004(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000008(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    _0cf88c_data,%ax
		dec    %eax
		mov    %ecx,0x000010(%esp)
		cmp    $0x000005,%ax
		ja     _06d0da_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06d008_switch(,%eax,4)

	_06d0c8_case:
		movl   $0x000006,0x00000c(%esp)
		jmp    _06d0da_case

	_06d0d2_case:
		movl   $0x000003,0x00000c(%esp)

	_06d0da_case:
		mov    0x000010(%esp),%ecx
		test   %cx,%cx
		jle    _06d12e_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _06d102_jump
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%cl
		add    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06d104_jump

	_06d102_jump:
		xor    %eax,%eax

	_06d104_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _06d111_jump
		movswl %di,%edx
		jmp    _06d113_jump

	_06d111_jump:
		xor    %edx,%edx

	_06d113_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0cf866_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jge    _06d181_jump
		mov    %ecx,%eax
		jmp    _06d181_jump

	_06d12e_jump:
		jge    _06d17b_jump
		cmpw   $0x000000,0x000004(%esp)
		jge    _06d14f_jump
		sub    0x00000c(%esp),%edx
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06d151_jump

	_06d14f_jump:
		xor    %eax,%eax

	_06d151_jump:
		cmpw   $0x000000,0x000008(%esp)
		jge    _06d15e_jump
		movswl %di,%edx
		jmp    _06d160_jump

	_06d15e_jump:
		xor    %edx,%edx

	_06d160_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0cf866_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jle    _06d181_jump
		mov    %ecx,%eax
		jmp    _06d181_jump

	_06d17b_jump:
		mov    _0cf866_data,%ax

	_06d181_jump:
		mov    0x000010(%esp),%esi
		test   %si,%si
		je     _06d1d2_jump
		mov    _0cf866_data,%dx
		add    %esi,%edx
		test   %ax,%ax
		jle    _06d1b3_jump
		cmp    _0cf866_data,%ax
		jle    _06d1a8_jump
		mov    %dx,_0cf866_data

	_06d1a8_jump:
		cmp    _0cf866_data,%ax
		jge    _06d1d2_jump
		jmp    _06d1cc_jump

	_06d1b3_jump:
		cmp    _0cf866_data,%ax
		jge    _06d1c3_jump
		mov    %dx,_0cf866_data

	_06d1c3_jump:
		cmp    _0cf866_data,%ax
		jle    _06d1d2_jump

	_06d1cc_jump:
		mov    %ax,_0cf866_data

	_06d1d2_jump:
		mov    _0cf866_data,%cx
		test   %cx,%cx
		je     _06d23d_jump
		mov    %ecx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06d1ec_jump
		sar    %cl,%ax
		jmp    _06d1f5_jump

	_06d1ec_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06d1f5_jump:
		cwtl   
		xor    %edx,%edx
		call   _055e60_func
		mov    %ax,_0ce690_data
		mov    $_0ce650_data,%eax
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _06d244_jump
		cmpb   $0x000002,_0ce6bd_data
		je     _06d244_jump
		xor    %edi,%edi
		mov    %di,_0ce690_data
		mov    %di,_0cf866_data
		mov    %di,_0ce698_data
		jmp    _06d244_jump

	_06d23d_jump:
		mov    %cx,_0ce690_data

	_06d244_jump:
		mov    _0ce6bd_data,%cl
		test   %cl,%cl
		je     _06d258_jump
		cmp    $0x000001,%cl
		je     _06d258_jump
		cmp    $0x000003,%cl
		jne    _06d26f_jump

	_06d258_jump:
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06d26f_jump
		mov    $_0ce650_data,%eax
		call   _025820_func

	_06d26f_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _06d284_jump
		cmpb   $0x00000f,_0ce6bc_data
		jne    _06d284_jump
		add    $0x000002,%ebx

	_06d284_jump:
		mov    _0cf866_data,%cx
		cmp    %cx,%bx
		jg     _06d29c_jump
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %ax,_0cf866_data
		jmp    _06d2c8_jump

	_06d29c_jump:
		movswl %bx,%eax
		mov    _0cf864_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _06d2bf_jump
		mov    %ecx,%edi
		add    %ebx,%edi
		mov    %di,_0cf866_data
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

	_06d2bf_jump:
		xor    %esi,%esi
		mov    %si,_0cf866_data

	_06d2c8_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

_06d2d0_switch:
		.long   _06d661_case
		.long   _06d66a_case
		.long   _06d62b_case
		.long   _06d62b_case
		.long   _06d637_case
		.long   _06d637_case




_06d2e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf88c_data,%ax
		xor    %esi,%esi
		cmp    $0x000003,%ax
		jne    _06d302_jump
		mov    $0x000020,%bh
		jmp    _06d304_jump

	_06d302_jump:
		mov    $0x000010,%bh

	_06d304_jump:
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06d469_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000081(%ecx)
		jne    _06d339_jump
		movw   $0x00ffff,_0ce69a_data

	_06d339_jump:
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d345_jump
		neg    %eax

	_06d345_jump:
		cmp    $0x000008,%eax
		jg     _06d362_jump
		cmpw   $0x000000,0x000054(%ecx)
		jl     _06d362_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06d469_jump

	_06d362_jump:
		mov    _0ce698_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _06c224_func
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06d469_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d38f_jump
		neg    %eax

	_06d38f_jump:
		cmp    $0x000008,%eax
		jle    _06d469_jump
		mov    $0xffffffff,%eax
		mov    0x000060(%ecx),%dx
		mov    %ax,_0ce69a_data
		cmp    $0x0000fe,%dx
		jne    _06d3b7_jump
		movw   $0x000001,_0ce698_data

	_06d3b7_jump:
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		mov    _0ce6bd_data,%cl
		call   _01d810_func
		cmpb   $0x000000,_0cfa54_data
		je     _06d3f3_jump
		test   %cl,%cl
		jne    _06d3ec_jump
		cmpb   $0x000028,_0ce6bc_data
		jne    _06d3ec_jump
		mov    $0x00001a,%edx
		jmp    _06d44f_jump

	_06d3ec_jump:
		mov    $0x00001c,%edx
		jmp    _06d44f_jump

	_06d3f3_jump:
		cmp    $0x000001,%cl
		jne    _06d42e_jump
		mov    _0ce6bc_data,%dh
		cmp    $0x000009,%dh
		je     _06d408_jump
		cmp    $0x00000b,%dh
		jne    _06d42e_jump

	_06d408_jump:
		mov    _0ce6d1_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0ce6d1_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0ce6d1_data

	_06d42e_jump:
		cmp    $0x000001,%cl
		jne    _06d44a_jump
		cmpb   $0x000003,_0ce6bc_data
		jne    _06d443_jump
		mov    $0x000020,%edx
		jmp    _06d44f_jump

	_06d443_jump:
		mov    $0x000018,%edx
		jmp    _06d44f_jump

	_06d44a_jump:
		mov    $0x000001,%edx

	_06d44f_jump:
		mov    $_0ce650_data,%eax
		call   _01d808_func
		xor    %edi,%edi
		mov    %di,_0ce6a2_data
		mov    %di,_0cf8a4_data

	_06d469_jump:
		cmpb   $0x000000,_0cfa77_data
		jne    _06d47c_jump
		mov    $_0ce650_data,%eax
		call   _055ee4_func

	_06d47c_jump:
		cmpb   $0x000001,_0ce6bd_data
		jne    _06d4a1_jump
		mov    _0ce6bc_data,%dl
		cmp    $0x000009,%dl
		je     _06d49a_jump
		cmp    $0x000030,%dl
		je     _06d49a_jump
		cmp    $0x00000b,%dl
		jne    _06d4a1_jump

	_06d49a_jump:
		negw   _0ce690_data

	_06d4a1_jump:
		mov    $0x000004,%cl
		mov    _0ce690_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0ce690_data,%cx
		mov    %eax,%edi
		test   %cx,%cx
		je     _06d4f0_jump
		cwtl   
		test   %eax,%eax
		jge    _06d4c1_jump
		neg    %eax

	_06d4c1_jump:
		cmp    $0x000100,%eax
		jg     _06d4cc_jump
		mov    $0x0000ff,%al
		jmp    _06d4ce_jump

	_06d4cc_jump:
		xor    %al,%al

	_06d4ce_jump:
		mov    _0cf870_data,%dx
		test   %dx,%dx
		jle    _06d4e4_jump
		addw   $0x00000a,_0ce690_data
		jmp    _06d4f2_jump

	_06d4e4_jump:
		jge    _06d4f2_jump
		subw   $0x00000a,_0ce690_data
		jmp    _06d4f2_jump

	_06d4f0_jump:
		xor    %al,%al

	_06d4f2_jump:
		mov    _0ce6bd_data,%ch
		cmp    $0x000002,%ch
		jne    _06d54b_jump
		cmpb   $0x00000f,_0ce6bc_data
		je     _06d510_jump
		cmpw   $0x000000,_0ce698_data
		je     _06d544_jump

	_06d510_jump:
		testb  $0x000008,_0ce6d1_data
		je     _06d523_jump
		cmpw   $0x000000,_0cf866_data
		jg     _06d536_jump

	_06d523_jump:
		testb  $0x000008,_0ce6d1_data
		jne    _06d53d_jump
		cmpw   $0x000000,_0cf866_data
		jge    _06d53d_jump

	_06d536_jump:
		mov    $0x00000c,%bl
		jmp    _06d6c0_jump

	_06d53d_jump:
		mov    $0x000008,%bl
		jmp    _06d6c0_jump

	_06d544_jump:
		mov    %al,%bl
		jmp    _06d6c0_jump

	_06d54b_jump:
		test   %ch,%ch
		je     _06d55d_jump
		cmp    $0x000001,%ch
		je     _06d55d_jump
		cmp    $0x000003,%ch
		jne    _06d6c2_jump

	_06d55d_jump:
		mov    _0ce698_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _06d5cc_jump
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpw   $0x0000fe,0x000060(%esi)
		jne    _06d5c5_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _06d591_jump
		neg    %eax

	_06d591_jump:
		lea    0x000001(%eax),%ecx
		mov    $0x0000ff,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x000076(%esi),%ax
		test   %ax,%ax
		js     _06d5b3_jump
		sar    %cl,%ax
		jmp    _06d5bc_jump

	_06d5b3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06d5bc_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _06d6c2_jump

	_06d5c5_jump:
		xor    %bl,%bl
		jmp    _06d6c0_jump

	_06d5cc_jump:
		mov    _0ce6b2_data,%bl
		cmp    $0x00000f,%bl
		jb     _06d601_jump
		jbe    _06d643_jump
		cmp    $0x000014,%bl
		jb     _06d5f1_jump
		cmp    $0x000015,%bl
		jbe    _06d62b_case
		cmp    $0x000018,%bl
		jb     _06d637_case
		jmp    _06d673_jump

	_06d5f1_jump:
		cmp    $0x000012,%bl
		jb     _06d673_jump
		jbe    _06d661_case
		jmp    _06d66a_case

	_06d601_jump:
		cmp    $0x000008,%bl
		jb     _06d621_jump
		cmp    $0x000009,%bl
		jbe    _06d673_jump
		cmp    $0x00000c,%bl
		jb     _06d673_jump
		jbe    _06d6be_jump
		cmp    $0x00000e,%bl
		je     _06d6be_jump
		jmp    _06d673_jump

	_06d621_jump:
		cmp    $0x000001,%bl
		jbe    _06d673_jump
		jmp    _06d6be_jump

	_06d62b_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _06d6c2_jump

	_06d637_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _06d6c2_jump

	_06d643_jump:
		mov    _0ce6b5_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _06d6be_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_06d2d0_switch(,%edx,4)

	_06d661_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _06d6c2_jump

	_06d66a_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _06d6c2_jump

	_06d673_jump:
		xor    %edx,%edx
		mov    _0ce6b2_data,%dl
		testb  $0x000001,_09253c_data(%edx)
		jne    _06d69c_jump
		xor    %edx,%edx
		mov    _0ce6b6_data,%dl
		mov    _09253c_data(%edx),%cl
		test   $0x000008,%cl
		jne    _06d69c_jump
		test   $0x000002,%cl
		jne    _06d6be_jump

	_06d69c_jump:
		cmpw   $0x000000,_0ce690_data
		jne    _06d6ba_jump
		cmpw   $0x000000,_0cf866_data
		jne    _06d6ba_jump
		cmpw   $0x000000,_0cf870_data
		je     _06d6be_jump

	_06d6ba_jump:
		mov    %bh,%bl
		jmp    _06d6c0_jump

	_06d6be_jump:
		mov    %al,%bl

	_06d6c0_jump:
		xor    %esi,%esi

	_06d6c2_jump:
		cmpb   $0x000001,_0cfa54_data
		jne    _06d6cd_jump
		shr    %bl

	_06d6cd_jump:
		mov    _0cf86e_data,%ecx
		movswl %di,%edx
		movswl %si,%esi
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    %bl,%al
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _06d020_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06d6f4_switch:
		.long   _06d77b_case
		.long   _06d789_case
		.long   _06d789_case
		.long   _06d77b_case
		.long   _06d77b_case
		.long   _06d77b_case
		.long   _06d789_case
		.long   _06d77b_case
		.long   _06d763_case
		.long   _06d76f_case
		.long   _06d763_case
		.long   _06d76f_case




_06d724_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,_0ce6bd_data
		je     _06d73c_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06d7a6_jump

	_06d73c_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0ce6bc_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _06d789_case
		jmp    *%cs:_06d6f4_switch(,%eax,4)

	_06d763_case:
		mov    $0x00002f,%ebx
		mov    $_0ce650_data,%eax
		jmp    _06d782_jump

	_06d76f_case:
		mov    $0x000030,%ebx
		mov    $_0ce650_data,%eax
		jmp    _06d782_jump

	_06d77b_case:
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx

	_06d782_jump:
		xor    %edx,%edx
		call   _01d818_func

	_06d789_case:
		mov    _0cf866_data,%bx
		test   %bx,%bx
		jne    _06d7ce_jump
		mov    %bx,_0ce692_data
		mov    %bx,_0ce690_data
		pop    %edx
		pop    %ebx
		ret    

	_06d7a6_jump:
		cmpb   $0x000004,_0ce6bd_data
		jne    _06d7ce_jump
		mov    _0ce780_data,%dh
		test   %dh,%dh
		jne    _06d7ce_jump
		xor    %dl,%dl
		mov    $_0ce650_data,%eax
		mov    %dx,_0ce692_data
		xor    %edx,%edx
		call   _01d808_func

	_06d7ce_jump:
		pop    %edx
		pop    %ebx
		ret    



_06d7d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _06d902_jump
		cmpb   $0x000001,_0cfa7d_data
		jne    _06d902_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06d902_jump
		testb  $0x000008,_0cf81a_data
		je     _06d8b9_jump
		testb  $0x000018,_0cf81b_data
		jne    _06d8b9_jump
		mov    $0x000002,%al
		mov    $0x00000e,%edx
		mov    %al,_0cfa7d_data
		mov    $_0ce650_data,%eax
		call   _01d808_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce6bd_data,%al
		mov    _0ce6bc_data,%dl
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%eax,%edx,8)
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%eax,%edx,8)
		mov    0x000008(%ebx),%eax
		mov    $0xffffffff,%esi
		mov    0x00007d(%eax),%dl
		mov    %si,_0cf898_data
		and    $0x00000f,%dl
		xor    %cl,%cl
		mov    %dl,0x00007d(%eax)
		mov    %dl,%dh
		mov    %cl,_0cfa75_data
		or     $0x000020,%dh
		mov    %cl,_0cfa5e_data
		mov    %dh,0x00007d(%eax)
		xor    %al,%al
		mov    %si,_0ce6a2_data
		xor    %ah,%ah
		mov    %cl,_0ce6cf_data
		mov    %ax,_0cf840_data
		jmp    _06d902_jump

	_06d8b9_jump:
		testb  $0x000004,_0cf81a_data
		je     _06d902_jump
		testb  $0x000018,_0cf81b_data
		jne    _06d902_jump
		mov    $0x000002,%cl
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		mov    %cl,_0cfa7d_data
		call   _01d808_func
		xor    %ch,%ch
		mov    $0x000032,%edx
		mov    %ch,_0ce6bb_data
		mov    $0xffffffff,%ecx
		mov    %dx,_0cf898_data
		mov    %cx,_0ce6a2_data

	_06d902_jump:
		cmpb   $0x00000f,_0ce6bc_data
		jne    _06d94d_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ce6bc_data,%dl
		mov    _0ce6bd_data,%al
		shl    $0x000003,%edx
		mov    (%ebx,%eax,4),%eax
		add    %edx,%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		cmp    $0x000020,%dl
		jne    _06d94d_jump
		mov    0x000005(%eax),%dl
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)
		mov    %dl,%dh
		or     $0x0000a0,%dh
		xor    %cl,%cl
		mov    %dh,0x000005(%eax)
		mov    %cl,_0ce6c1_data
		movb   $0x000014,_0ce6c2_data

	_06d94d_jump:
		cmpb   $0x000003,_0cfa7d_data
		jne    _06d961_jump
		call   *_0c2f78_data
		test   %ax,%ax
		jne    _06d96f_jump

	_06d961_jump:
		cmpw   $0x000000,_0cf898_data
		jne    _06db16_jump

	_06d96f_jump:
		testb  $0x000008,_0cf81a_data
		je     _06daea_jump
		testb  $0x000018,_0cf81b_data
		jne    _06daea_jump
		mov    _0ce6bc_data,%cl
		cmp    $0x00000f,%cl
		jne    _06db16_jump
		cmpw   $0x000000,_0cf898_data
		je     _06db16_jump
		movb   $0x000002,_0cfa7d_data
		movb   $0x000001,_0cfa75_data
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %ch,%ch
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %cl,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %ch,_0ce6c1_data
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0ce6c2_data
		mov    _0cfa5e_data,%ch
		mov    $0xffffffff,%edi
		inc    %ch
		mov    %di,_0ce692_data
		mov    %ch,_0cfa5e_data
		cmp    $0x000002,%ch
		jb     _06dadb_jump
		cmpw   $0x000000,_0cf848_data
		jl     _06dac1_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06da47_jump
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _06da47_jump
		call   _041ce4_func
		test   %ax,%ax
		je     _06da47_jump
		movw   $0x00ffd0,_0ce690_data
		jmp    _06da82_jump

	_06da47_jump:
		testb  $0x000008,_0ce6d1_data
		je     _06da6f_jump
		cmpw   $0x000002,_0ce690_data
		jl     _06da6f_jump
		call   _041d54_func
		test   %ax,%ax
		je     _06da6f_jump
		movw   $0x000030,_0ce690_data
		jmp    _06da82_jump

	_06da6f_jump:
		cmpw   $0x000000,_0ce690_data
		jne    _06da82_jump
		movw   $0x00fffe,_0ce692_data

	_06da82_jump:
		mov    $0x000046,%ebx
		mov    $0x000004,%cl
		mov    _0ce690_data,%ax
		mov    %bx,_0cf898_data
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %bl,_0cfa5e_data
		mov    _0cf86e_data,%ebx
		cwtl   
		shl    %cl,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x0000ff,%eax
		call   _06d020_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dac1_jump:
		mov    $0x000001,%ah
		mov    $0x000014,%ebx
		mov    %ah,_0cfa5e_data
		mov    %bx,_0cf848_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dadb_jump:
		movw   $0x000014,_0cf848_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06daea_jump:
		mov    $0x000004,%dh
		mov    $_0ce650_data,%eax
		mov    $0xffffffff,%ebx
		mov    %dh,_0cfa7d_data
		mov    $0x000005,%edx
		xor    %ecx,%ecx
		call   _01d808_func
		mov    %bx,_0cf898_data
		mov    %cx,_0ce6a2_data

	_06db16_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06db1c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmpb   $0x000002,_0ce6bd_data
		jne    _06db3f_jump
		cmpb   $0x000008,_0ce6bc_data
		jne    _06db3f_jump
		movw   $0x00005a,_0ce6a6_data

	_06db3f_jump:
		mov    $0x000005,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		mov    _0ce6a8_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01d5b0_func
		testb  $0x000002,_0cf81b_data
		je     _06db72_jump
		mov    $0x000003,%edx
		jmp    _06db77_jump

	_06db72_jump:
		mov    $0x000007,%edx

	_06db77_jump:
		testb  $0x000008,_0ce6d1_data
		je     _06db91_jump
		mov    $0x000010,%ebx
		and    $0x0000ff,%edx
		sub    %edx,%ebx
		mov    %ebx,%edx
		jmp    _06db97_jump

	_06db91_jump:
		and    $0x0000ff,%edx

	_06db97_jump:
		mov    %edx,%ebx
		testb  $0x000002,_0cf81b_data
		je     _06dba7_jump
		add    $0x000025,%eax

	_06dba7_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0ce69a_data
		mov    %edx,_0ce67c_data
		movswl %si,%edx
		xor    %eax,%eax
		sar    $0x000004,%edx
		mov    _0ce6b8_data,%al
		shl    $0x000004,%edx
		xor    %ecx,%ecx
		sub    %eax,%edx
		movswl %bx,%eax
		dec    %edx
		mov    %cx,_0cf866_data
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0ce678_data
		mov    %bx,_0ce692_data
		mov    %bx,_0ce690_data
		mov    %bx,_0ce6a2_data
		xor    %dh,%dh
		xor    %bl,%bl
		mov    %dh,_0ce6c1_data
		xor    %dl,%dl
		mov    %bl,_0ce6c2_data
		mov    %dx,_0cf8a4_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06dc24_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    



_06dc4c_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0ce640_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    _09253c_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %edx
		ret    



_06dc78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0cf81a_data
		je     _06df1e_jump
		testb  $0x000018,_0cf81b_data
		jne    _06df1e_jump
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)
		mov    0x000016(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		mov    _0ce636_data,%ecx
		mov    %ax,0x000010(%esp)
		sar    $0x000010,%ecx
		mov    0x00000e(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06dce8_jump
		cmp    %ecx,%eax
		jg     _06dce8_jump
		mov    $0x000001,%eax
		jmp    _06dcea_jump

	_06dce8_jump:
		xor    %eax,%eax

	_06dcea_jump:
		test   %eax,%eax
		je     _06df1e_jump
		xor    %eax,%eax
		mov    _0ce67c_data,%dx
		mov    _0ce6c4_data,%al
		add    %edx,%eax
		add    $0x000020,%eax
		mov    _0ce6aa_data,%bx
		mov    %ax,0x000014(%esp)
		test   %bx,%bx
		je     _06dd44_jump
		xor    %eax,%eax
		mov    _0ce6b9_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d560_func
		mov    0x000012(%esp),%edx
		mov    _0ce6a8_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01d614_func
		mov    %ax,0x000014(%esp)

	_06dd44_jump:
		testb  $0x000008,_0ce6d1_data
		je     _06dd54_jump
		mov    $0x000001,%eax
		jmp    _06dd59_jump

	_06dd54_jump:
		mov    $0xffffffff,%eax

	_06dd59_jump:
		mov    %ax,0x00000c(%esp)
		mov    0x000012(%esp),%eax
		mov    _0ce636_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    %ebx,%ecx
		sar    $0x000010,%eax
		sub    %edx,%ecx
		add    %eax,%ecx
		mov    %ecx,0x000008(%esp)
		test   %ecx,%ecx
		jl     _06df1e_jump
		lea    (%ebx,%edx,1),%esi
		lea    (%esi,%edx,1),%ecx
		lea    (%ecx,%edx,1),%ebp
		lea    (%ecx,%eax,1),%edx
		lea    (%ebx,%eax,1),%edi
		mov    %edx,0x000004(%esp)
		lea    (%esi,%eax,1),%edx
		mov    _0ce6aa_data,%ax
		mov    %edx,(%esp)
		test   %ax,%ax
		je     _06ddbc_jump
		mov    %ecx,%ebp

	_06ddbc_jump:
		mov    %edi,%eax
		call   _06dc4c_func
		test   %ax,%ax
		jne    _06dde7_jump
		mov    (%esp),%eax
		call   _06dc4c_func
		test   %ax,%ax
		jne    _06dde7_jump
		mov    0x000004(%esp),%eax
		call   _06dc4c_func
		test   %ax,%ax
		je     _06df1e_jump

	_06dde7_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _06df1e_jump
		cmpw   $0x000008,_0cf8a4_data
		jle    _06df1e_jump
		mov    %ebx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06de5f_jump
		mov    %ecx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06de5f_jump
		mov    %esi,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06de5f_jump
		mov    0x000008(%esp),%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06de5f_jump
		mov    %ebp,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06de5f_jump
		mov    %edi,%eax
		call   _06dc4c_func
		test   %ax,%ax
		je     _06de5f_jump
		mov    0x000012(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _06df19_jump

	_06de5f_jump:
		cmpw   $0x000000,_0ce6aa_data
		jne    _06df1e_jump
		cmpw   $0x000002,0x000010(%esp)
		jge    _06de82_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06df1e_jump

	_06de82_jump:
		mov    _0ce636_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %eax,%edx
		jle    _06dea5_jump
		testb  $0x000008,_0ce6d1_data
		je     _06df1e_jump

	_06dea5_jump:
		mov    0x00000a(%esp),%edx
		mov    %ebx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06df1e_jump
		mov    %ecx,%eax
		sub    %edx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06df1e_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06df1e_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06df1e_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _06dc24_func
		test   %ax,%ax
		je     _06df1e_jump
		mov    %edi,%eax
		sub    %edx,%eax
		call   _06dc4c_func
		test   %ax,%ax
		je     _06df1e_jump
		mov    0x00000c(%esp),%eax
		mov    0x000018(%esp),%ebx
		shl    $0x000004,%eax
		mov    0x000012(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax

	_06df19_jump:
		call   _06db1c_func

	_06df1e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06df28_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cfa54_data
		je     _06df5a_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _06df50_jump
		cmpb   $0x000028,_0ce6bc_data
		jne    _06df50_jump
		mov    $0x00001a,%ebx
		jmp    _06dfc3_jump

	_06df50_jump:
		mov    $0x00001c,%ebx
		jmp    _06dfc3_jump

	_06df5a_jump:
		mov    _0ce6bd_data,%dl
		cmp    $0x000001,%dl
		jne    _06df94_jump
		cmpb   $0x00000b,_0ce6bc_data
		jne    _06df94_jump
		mov    _0ce6d1_data,%bl
		test   $0x000008,%bl
		sete   %al
		mov    %bl,%bh
		and    %dl,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,_0ce6d1_data
		or     %al,%cl
		mov    %cl,_0ce6d1_data

	_06df94_jump:
		cmpb   $0x000005,_0ce6bd_data
		jne    _06dfa4_jump
		mov    $0x000001,%ebx
		jmp    _06dfc3_jump

	_06dfa4_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06dfb2_jump
		neg    %eax

	_06dfb2_jump:
		cmp    $0x000002,%eax
		jg     _06dfbe_jump
		mov    $0x000018,%ebx
		jmp    _06dfc3_jump

	_06dfbe_jump:
		mov    $0x000020,%ebx

	_06dfc3_jump:
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %edx,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0cf8a4_data
		mov    %bx,_0cf898_data
		xor    %dl,%dl
		mov    %bx,_0ce69a_data
		mov    %dl,_0ce6c1_data
		mov    %dl,_0ce6c2_data
		mov    %dl,_0cfa7d_data
		mov    %dl,_0ce780_data
		call   _06cce0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06e014_switch:
		.long   _06e0e5_case
		.long   _06e266_case
		.long   _06e34b_case
		.long   _06e34b_case
		.long   _06e04f_case
		.long   _06e301_case
		.long   _06e313_case




_06e030_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce6bd_data,%al
		cmp    $0x000006,%al
		ja     _06e34b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06e014_switch(,%eax,4)

	_06e04f_case:
		mov    _0ce6bc_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e0d6_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e0d6_jump
		mov    $0x000001,%edi
		mov    _0ce6aa_data,%ax
		mov    %di,_0ce692_data
		test   %ax,%ax
		je     _06e09d_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _06e09d_jump
		mov    $_0ce650_data,%eax
		call   _0567ac_func

	_06e09d_jump:
		call   _06c088_func
		cmpb   $0x00000c,_0cfa7c_data
		je     _06e0b5_jump
		call   _06df28_func
		jmp    _06e34b_case

	_06e0b5_jump:
		cmpb   $0x000003,_0ce6bc_data
		je     _06e34b_case
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		jmp    _06e34b_case

	_06e0d6_jump:
		xor    %esi,%esi
		mov    %si,_0ce692_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e0e5_case:
		mov    _0ce6bc_data,%ah
		test   %ah,%ah
		je     _06e166_jump
		cmp    $0x000001,%ah
		je     _06e166_jump
		cmp    $0x000002,%ah
		je     _06e166_jump
		cmp    $0x000003,%ah
		je     _06e166_jump
		cmp    $0x000031,%ah
		je     _06e166_jump
		cmp    $0x000008,%ah
		je     _06e166_jump
		cmp    $0x00002b,%ah
		je     _06e166_jump
		cmp    $0x000024,%ah
		je     _06e166_jump
		cmp    $0x000025,%ah
		je     _06e166_jump
		cmp    $0x000026,%ah
		je     _06e166_jump
		cmp    $0x000027,%ah
		je     _06e166_jump
		cmp    $0x000028,%ah
		je     _06e166_jump
		cmp    $0x000029,%ah
		je     _06e166_jump
		cmp    $0x00002a,%ah
		je     _06e166_jump
		cmp    $0x00000d,%ah
		je     _06e166_jump
		cmp    $0x00003b,%ah
		je     _06e166_jump
		cmp    $0x00003e,%ah
		je     _06e166_jump
		cmp    $0x00003f,%ah
		je     _06e166_jump
		cmp    $0x000040,%ah
		je     _06e166_jump
		cmp    $0x000041,%ah
		jne    _06e175_jump

	_06e166_jump:
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _06e251_jump

	_06e175_jump:
		cmp    $0x000014,%ah
		jne    _06e1fb_jump
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06e1fb_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce6bc_data,%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000ef,%cl
		shl    $0x000004,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    $0x000001,%edx
		mov    %ch,(%eax)
		mov    $_0ce650_data,%eax
		call   _056734_func
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000ef,%bl
		shl    $0x000004,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _06e25b_jump

	_06e1fb_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e25b_jump
		cmpb   $0x000000,_0cfa54_data
		jne    _06e25b_jump
		cmpb   $0x000000,_0ce77e_data
		jne    _06e247_jump
		mov    _0ce6bc_data,%al
		cmp    $0x00000b,%al
		je     _06e225_jump
		cmp    $0x00000c,%al
		jne    _06e247_jump

	_06e225_jump:
		xor    %dl,%dl
		mov    $0x000006,%ebx
		mov    %dl,_0ce780_data
		xor    %dh,%dh
		mov    $_0ce650_data,%eax
		mov    %dx,_0ce778_data
		mov    $0x000003,%edx
		jmp    _06e256_jump

	_06e247_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_06e251_jump:
		mov    $_0ce650_data,%eax

	_06e256_jump:
		call   _01d818_func

	_06e25b_jump:
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e266_case:
		cmpb   $0x000000,_0ce6bc_data
		jne    _06e29c_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e29c_jump
		cmpb   $0x000000,_0cfa54_data
		jne    _06e29c_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _06e2f6_jump

	_06e29c_jump:
		mov    _0ce6bc_data,%dl
		cmp    $0x000008,%dl
		je     _06e2b6_jump
		cmp    $0x00000a,%dl
		je     _06e2b6_jump
		cmp    $0x000009,%dl
		je     _06e2b6_jump
		cmp    $0x00000b,%dl
		jne    _06e2e8_jump

	_06e2b6_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e2ca_jump
		cmpb   $0x000000,_0cfa54_data
		je     _06e2f6_jump

	_06e2ca_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _06e2e8_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e2e8_jump
		cmpb   $0x000000,_0cfa54_data
		je     _06e2f6_jump

	_06e2e8_jump:
		testb  $0x000018,_0cf81b_data
		jne    _06e2f6_jump
		call   _06d724_func

	_06e2f6_jump:
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e301_case:
		addl   $0x00000e,_0ce67c_data
		call   _06df28_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e313_case:
		mov    _0ce6d1_data,%ah
		mov    _0ce692_data,%bx
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0cf866_data
		mov    %ah,_0ce6d1_data
		cmp    $0x000003,%bx
		jge    _06e34b_case
		cmpb   $0x000000,_0ce6c1_data
		jne    _06e34b_case
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0ce692_data

	_06e34b_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06e354_switch:
		.long   _06e46d_case
		.long   _06e448_case
		.long   _06e527_case
		.long   _06e527_case
		.long   _06e38e_case
		.long   _06e45f_case
		.long   _06e4fa_case




_06e370_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce6bd_data,%al
		cmp    $0x000006,%al
		ja     _06e527_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06e354_switch(,%eax,4)

	_06e38e_case:
		mov    _0ce6bc_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e43a_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e43a_jump
		call   _06c088_func
		mov    _0cfa7c_data,%bh
		test   %bh,%bh
		jne    _06e3df_jump
		call   _06df28_func
		mov    $0x00000a,%al
		mov    $0x000001,%ebx
		mov    %al,_0ce6cf_data
		mov    %bx,_0ce692_data
		jmp    _06e419_jump

	_06e3df_jump:
		cmp    $0x00000c,%bh
		je     _06e3ef_jump
		xor    %edx,%edx
		mov    %dx,_0ce692_data
		jmp    _06e419_jump

	_06e3ef_jump:
		mov    $0xffffffff,%edi
		mov    _0ce6aa_data,%ax
		mov    %di,_0ce692_data
		test   %ax,%ax
		je     _06e419_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _06e419_jump
		mov    $_0ce650_data,%eax
		call   _0567ac_func

	_06e419_jump:
		cmpb   $0x000002,_0ce6bc_data
		je     _06e527_case
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06e43a_jump:
		xor    %esi,%esi
		mov    %si,_0ce692_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06e448_case:
		testb  $0x000018,_0cf81b_data
		jne    _06e527_case
		call   _06d724_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06e45f_case:
		movw   $0x0000ff,_0cf8b4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06e46d_case:
		cmpb   $0x000025,_0ce6bc_data
		jne    _06e49a_jump
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06e484_jump
		neg    %eax

	_06e484_jump:
		cmp    $0x000080,%eax
		jg     _06e49a_jump
		mov    $0x000026,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06e49a_jump:
		call   _06d2e8_func
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e4b5_jump
		movw   $0x0000ff,_0cf8b4_data

	_06e4b5_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _06e527_case
		cmpb   $0x00000f,_0ce6bc_data
		jne    _06e527_case
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		jne    _06e527_case
		mov    $0x00003c,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06e4fa_case:
		orb    $0x000008,_0ce6d1_data
		mov    _0ce690_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0cf866_data
		cmp    $0xfffffffd,%eax
		jle    _06e527_case
		cmpb   $0x000000,_0ce6c1_data
		jne    _06e527_case
		decw   _0ce692_data

	_06e527_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06e52c_switch:
		.long   _06e6ed_case
		.long   _06e568_case
		.long   _06e8be_case
		.long   _06eb1b_case
		.long   _06e928_case
		.long   _06ea98_case
		.long   _06eac0_case




_06e548_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0ce6bd_data,%al
		cmp    $0x000006,%al
		ja     _06eb1b_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06e52c_switch(,%edx,4)

	_06e568_case:
		mov    _092994_data,%bh
		inc    %bh
		mov    _0ce6bc_data,%al
		mov    %bh,_092994_data
		cmp    $0x000008,%al
		je     _06e583_jump
		cmp    $0x00000a,%al
		jne    _06e5bf_jump

	_06e583_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e5a1_jump
		cmpb   $0x000000,_0cfa54_data
		jne    _06e5a1_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _06e5a8_jump

	_06e5a1_jump:
		mov    $0x000001,%edx
		jmp    _06e5aa_jump

	_06e5a8_jump:
		xor    %edx,%edx

	_06e5aa_jump:
		test   %edx,%edx
		je     _06e5bf_jump
		mov    $0x00002f,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		jmp    _06e63e_jump

	_06e5bf_jump:
		mov    _0ce6bc_data,%dh
		cmp    $0x000009,%dh
		je     _06e5cf_jump
		cmp    $0x00000b,%dh
		jne    _06e608_jump

	_06e5cf_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _06e5ed_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e5ed_jump
		cmpb   $0x000000,_0cfa54_data
		je     _06e5f4_jump

	_06e5ed_jump:
		mov    $0x000001,%edx
		jmp    _06e5f6_jump

	_06e5f4_jump:
		xor    %edx,%edx

	_06e5f6_jump:
		test   %edx,%edx
		je     _06e608_jump
		mov    $0x000030,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		jmp    _06e63e_jump

	_06e608_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _06e643_jump
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e643_jump
		cmpb   $0x000000,_0cfa54_data
		jne    _06e643_jump
		cmpb   $0x000000,_0ce6bc_data
		jne    _06e643_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax

	_06e63e_jump:
		call   _01d818_func

	_06e643_jump:
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06e6a3_jump
		mov    _0ce6bc_data,%bl
		cmp    $0x000008,%bl
		je     _06e662_jump
		cmp    $0x00000a,%bl
		jne    _06e675_jump

	_06e662_jump:
		mov    $0x000032,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _06e6c2_jump

	_06e675_jump:
		cmp    $0x00000b,%bl
		je     _06e6c2_jump
		cmp    $0x000032,%bl
		je     _06e6c2_jump
		cmp    $0x000033,%bl
		je     _06e6c2_jump
		cmpb   $0x000001,_0cfa72_data
		je     _06e6c2_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _06e6c2_jump

	_06e6a3_jump:
		mov    _0ce6bc_data,%dl
		cmp    $0x000009,%dl
		je     _06e6b3_jump
		cmp    $0x00000b,%dl
		jne    _06e6c2_jump

	_06e6b3_jump:
		mov    $0x00000a,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06e6c2_jump:
		mov    _0ce6d1_data,%bl
		mov    %cl,%al
		and    $0x0000f7,%bl
		and    $0x000001,%al
		mov    %bl,_0ce6d1_data
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0ce6d1_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e6ed_case:
		incb   _092994_data
		mov    _0ce6bc_data,%ah
		cmp    $0x00000f,%ah
		je     _06e70c_jump
		cmp    $0x00002f,%ah
		je     _06e70c_jump
		cmp    $0x000030,%ah
		jne    _06e788_jump

	_06e70c_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06e788_jump
		cmpb   $0x000000,_0cfa54_data
		jne    _06e788_jump
		call   _041dc4_func
		test   %ax,%ax
		je     _06e788_jump
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _06e752_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _06e8b3_jump

	_06e752_jump:
		mov    %cl,%al
		and    $0x000001,%al
		mov    _0ce6d1_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0ce6d1_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000033,%ebx
		or     %al,%dl
		mov    $_0ce650_data,%eax
		mov    %dl,_0ce6d1_data
		xor    %edx,%edx
		call   _01d818_func
		jmp    _06e8b3_jump

	_06e788_jump:
		cmpb   $0x00000f,_0ce6bc_data
		jne    _06e7d3_jump
		call   _041dc4_func
		test   %ax,%ax
		jne    _06e7d3_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000010,_09253c_data(%edx)
		jne    _06e7d3_jump
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e7d3_jump:
		mov    _0ce6bc_data,%ah
		cmp    $0x00000c,%ah
		je     _06e8b3_jump
		cmp    $0x00000b,%ah
		je     _06e8b3_jump
		cmp    $0x000012,%ah
		je     _06e8b3_jump
		cmp    $0x000014,%ah
		je     _06e8b3_jump
		cmp    $0x00000f,%ah
		je     _06e8b3_jump
		cmp    $0x00002f,%ah
		je     _06e8b3_jump
		cmp    $0x000030,%ah
		je     _06e8b3_jump
		cmp    $0x000032,%ah
		je     _06e8b3_jump
		cmp    $0x000033,%ah
		je     _06e8b3_jump
		cmp    $0x00003d,%ah
		je     _06e8b3_jump
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06e898_jump
		cmpb   $0x000001,_0cfa72_data
		je     _06e85c_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		jmp    _06e868_jump

	_06e85c_jump:
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx

	_06e868_jump:
		call   _01d818_func
		mov    %cl,%al
		mov    _0ce6d1_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0ce6d1_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0ce6d1_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e898_jump:
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d810_func
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d808_func

	_06e8b3_jump:
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e8be_case:
		mov    _092994_data,%bh
		mov    _0ce6bc_data,%ah
		inc    %bh
		xor    %edx,%edx
		mov    %bh,_092994_data
		cmp    $0x00000f,%ah
		setne  %dl
		test   %edx,%edx
		je     _06e8ef_jump
		mov    _0ce698_data,%ax
		test   %ax,%ax
		jne    _06e8ef_jump
		mov    %ax,_0cf866_data

	_06e8ef_jump:
		call   _06d2e8_func
		cmpb   $0x000000,_0cfa54_data
		jne    _06e91d_jump
		mov    %cl,%al
		mov    _0ce6d1_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0ce6d1_data
		or     %al,%bl
		mov    %bl,_0ce6d1_data

	_06e91d_jump:
		call   _06dc78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06e928_case:
		mov    _092994_data,%bh
		inc    %bh
		mov    _0ce6bc_data,%al
		mov    %bh,_092994_data
		cmp    $0x000002,%al
		jne    _06e949_jump
		call   _041e34_func
		test   %ax,%ax
		jne    _06e95c_jump

	_06e949_jump:
		cmpb   $0x000003,_0ce6bc_data
		jne    _06e99d_jump
		call   _041dc4_func
		test   %ax,%ax
		je     _06e99d_jump

	_06e95c_jump:
		call   _06c088_func
		mov    _0cfa7c_data,%bl
		test   %bl,%bl
		jne    _06e996_jump
		cmpb   $0x000002,_0ce6bc_data
		jne    _06e98f_jump
		call   _06df28_func
		mov    $0x00000a,%ah
		mov    $0x000001,%esi
		mov    %ah,_0ce6cf_data
		mov    %si,_0ce692_data
		jmp    _06e9b2_jump

	_06e98f_jump:
		call   _06df28_func
		jmp    _06e9b2_jump

	_06e996_jump:
		cmp    $0x00000c,%bl
		je     _06e9b2_jump
		jmp    _06e9ad_jump

	_06e99d_jump:
		mov    _0ce6bc_data,%dl
		cmp    $0x000002,%dl
		je     _06e9ad_jump
		cmp    $0x000003,%dl
		jne    _06e9b2_jump

	_06e9ad_jump:
		call   _06d724_func

	_06e9b2_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06ea23_jump
		xor    %edx,%edx
		mov    _0cfa7d_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06ea23_jump
		cmpb   $0x00000b,_0ce6bc_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06ea23_jump
		cmpb   $0x00000c,_0ce6bc_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06ea23_jump
		mov    _0ce6bc_data,%bl
		xor    %edx,%edx
		cmp    $0x00000d,%bl
		setne  %dl
		test   %edx,%edx
		je     _06ea23_jump
		mov    $0x000100,%edi
		call   _06cd40_func
		mov    %di,_0cf866_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ea23_jump:
		cmpb   $0x00000d,_0ce6bc_data
		jne    _06ea4a_jump
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06ea4a_jump
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06ea4a_jump:
		mov    _0ce6bc_data,%ah
		xor    %edx,%edx
		cmp    $0x00000b,%ah
		setne  %dl
		test   %edx,%edx
		je     _06eb1b_case
		cmp    $0x00000c,%ah
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06eb1b_case
		mov    %cl,%al
		mov    _0ce6d1_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0ce6d1_data
		or     %al,%bl
		mov    %bl,_0ce6d1_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ea98_case:
		mov    _0ce6d1_data,%al
		mov    _092994_data,%bl
		shl    $0x000004,%al
		inc    %bl
		shr    $0x000007,%al
		mov    %bl,_092994_data
		cmp    %cl,%al
		je     _06eb1b_case
		call   _06df28_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06eac0_case:
		xor    %edx,%edx
		mov    _0ce6d1_data,%ah
		mov    %dx,_0cf866_data
		mov    _092994_data,%dl
		or     $0x000008,%ah
		inc    %dl
		mov    %ah,_0ce6d1_data
		mov    %dl,_092994_data
		test   %cx,%cx
		je     _06eaf0_jump
		movswl %cx,%edx
		jmp    _06eaf5_jump

	_06eaf0_jump:
		mov    $0xffffffff,%edx

	_06eaf5_jump:
		mov    _0ce68e_data,%ebx
		mov    %edx,%ecx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		imul   %ebx,%edx
		cmp    $0x000003,%edx
		jge    _06eb1b_case
		cmpb   $0x000000,_0ce6c1_data
		jne    _06eb1b_case
		add    %cx,_0ce690_data

	_06eb1b_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06eb24_switch:
		.long   _06ec06_case
		.long   _06eb5f_case
		.long   _06efbd_case
		.long   _06f0a4_case
		.long   _06ef8e_case
		.long   _06f0a4_case
		.long   _06f029_case




_06eb40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce6bd_data,%al
		cmp    $0x000006,%al
		ja     _06f0a4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06eb24_switch(,%eax,4)

	_06eb5f_case:
		mov    _0ce6bc_data,%al
		cmp    $0x000004,%al
		je     _06ebfb_jump
		cmp    $0x000005,%al
		je     _06ebfb_jump
		testb  $0x000018,_0cf81b_data
		jne    _06ebfb_jump
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d810_func
		mov    _0ce6bc_data,%dh
		cmp    $0x000008,%dh
		je     _06eb9d_jump
		cmp    $0x00000a,%dh
		jne    _06eba9_jump

	_06eb9d_jump:
		mov    $0x00002f,%edx
		mov    $_0ce650_data,%eax
		jmp    _06ebf6_jump

	_06eba9_jump:
		cmp    $0x000009,%dh
		je     _06ebb3_jump
		cmp    $0x00000b,%dh
		jne    _06ebcc_jump

	_06ebb3_jump:
		mov    $0x000030,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		call   _06d2e8_func
		jmp    _06f0a4_case

	_06ebcc_jump:
		cmp    $0x000003,%dh
		je     _06ebd6_jump
		cmp    $0x000007,%dh
		jne    _06ebef_jump

	_06ebd6_jump:
		mov    $0x000024,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		call   _06d2e8_func
		jmp    _06f0a4_case

	_06ebef_jump:
		mov    $_0ce650_data,%eax
		xor    %edx,%edx

	_06ebf6_jump:
		call   _01d808_func

	_06ebfb_jump:
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ec06_case:
		mov    _0ce69e_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0ce690_data
		cmp    $0xffffffff,%eax
		je     _06ec45_jump
		cmpb   $0x000000,_0ce6bc_data
		jne    _06ec45_jump
		cmpw   $0x000001,_0ce6a0_data
		jne    _06ec36_jump
		mov    $0x000031,%edx
		jmp    _06ec3b_jump

	_06ec36_jump:
		mov    $0x000003,%edx

	_06ec3b_jump:
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06ec45_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		je     _06ed3d_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		jne    _06ecb4_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _06ec9e_jump
		cmpb   $0x00003c,_0ce6bc_data
		je     _06ef83_jump

	_06ec9e_jump:
		mov    $0x00003c,%ebx
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _06ef83_jump

	_06ecb4_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _06ecc6_jump
		cmpb   $0x00000f,_0ce6bc_data
		je     _06eccd_jump

	_06ecc6_jump:
		mov    $0x000001,%eax
		jmp    _06eccf_jump

	_06eccd_jump:
		xor    %eax,%eax

	_06eccf_jump:
		test   %eax,%eax
		je     _06ef83_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _06ece9_jump
		cmpb   $0x00003d,_0ce6bc_data
		je     _06ecf0_jump

	_06ece9_jump:
		mov    $0x000001,%eax
		jmp    _06ecf2_jump

	_06ecf0_jump:
		xor    %eax,%eax

	_06ecf2_jump:
		test   %eax,%eax
		je     _06ef83_jump
		xor    %ebx,%ebx
		mov    _0ce6ba_data,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce654_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%ecx
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0ce6bb_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ed3d_jump:
		cmp    $0x000025,%al
		jne    _06ed70_jump
		mov    _0cf864_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06ed4f_jump
		neg    %eax

	_06ed4f_jump:
		cmp    $0x000080,%eax
		jg     _06ed70_jump
		mov    $0x000026,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ed70_jump:
		cmpb   $0x000014,_0ce6bc_data
		jne    _06ee27_jump
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06ee27_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _06ef83_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0ce6bc_data,%bl
		mov    (%eax),%eax
		shl    $0x000003,%ebx
		add    %eax,%ebx
		mov    0x000007(%ebx),%ch
		lea    0x000007(%ebx),%eax
		test   $0x000010,%ch
		sete   %cl
		mov    (%eax),%dl
		and    $0x000001,%cl
		and    $0x0000ef,%dl
		shl    $0x000004,%cl
		mov    %dl,(%eax)
		mov    %dl,%dh
		or     %cl,%dh
		mov    %dh,(%eax)
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _056734_func
		lea    0x000007(%ebx),%eax
		testb  $0x000010,0x000007(%ebx)
		sete   %bl
		mov    (%eax),%ch
		and    $0x000001,%bl
		and    $0x0000ef,%ch
		shl    $0x000004,%bl
		mov    %ch,%dl
		mov    %ch,(%eax)
		or     %bl,%dl
		mov    %dl,(%eax)
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee27_jump:
		mov    _0ce6bc_data,%bh
		cmp    $0x00003b,%bh
		je     _06ee46_jump
		cmp    $0x00003e,%bh
		je     _06ee46_jump
		cmp    $0x00003f,%bh
		je     _06ee46_jump
		cmp    $0x000040,%bh
		je     _06ee46_jump
		cmp    $0x000041,%bh
		jne    _06ee77_jump

	_06ee46_jump:
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _06ef83_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0cf774_data
		mov    $_0ce650_data,%eax
		call   _01d808_func
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ee77_jump:
		test   %bh,%bh
		je     _06ee89_jump
		cmp    $0x000001,%bh
		je     _06ee89_jump
		cmp    $0x000002,%bh
		jne    _06ef83_jump

	_06ee89_jump:
		mov    _0cf774_data,%di
		inc    %edi
		mov    %di,_0cf774_data
		cmp    $0x0001f4,%di
		jl     _06ef83_jump
		mov    %edi,%edx
		sub    $0x000064,%edx
		mov    _0cf76c_data,%bx
		mov    %dx,_0cf774_data
		test   %bx,%bx
		jne    _06eee1_jump
		mov    $0x00003b,%edx
		mov    $_0ce650_data,%eax
		mov    $0x000001,%edi
		call   _01d808_func
		mov    %di,_0cf76c_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06eee1_jump:
		cmp    $0x000001,%bx
		jne    _06ef0d_jump
		mov    $0x000040,%edx
		mov    $_0ce650_data,%eax
		mov    $0x000002,%esi
		call   _01d808_func
		mov    %si,_0cf76c_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef0d_jump:
		cmp    $0x000002,%bx
		jne    _06ef39_jump
		mov    $0x00003e,%edx
		mov    $_0ce650_data,%eax
		mov    $0x000003,%ecx
		call   _01d808_func
		mov    %cx,_0cf76c_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef39_jump:
		cmp    $0x000003,%bx
		jne    _06ef65_jump
		mov    $0x00003f,%edx
		mov    $_0ce650_data,%eax
		mov    $0x000004,%ebx
		call   _01d808_func
		mov    %bx,_0cf76c_data
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef65_jump:
		cmp    $0x000004,%bx
		jne    _06ef83_jump
		mov    $0x000041,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		xor    %edx,%edx
		mov    %dx,_0cf76c_data

	_06ef83_jump:
		call   _06d2e8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef8e_case:
		mov    _0ce6bc_data,%bl
		cmp    $0x000002,%bl
		je     _06efa2_jump
		cmp    $0x000003,%bl
		jne    _06f0a4_case

	_06efa2_jump:
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01d808_func
		mov    %si,_0ce692_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06efbd_case:
		xor    %edi,%edi
		mov    _0ce6bc_data,%cl
		mov    %di,_0cf774_data
		mov    %di,_0cf76c_data
		cmp    $0x000008,%cl
		je     _06efdf_jump
		mov    %di,_0ce690_data

	_06efdf_jump:
		cmpb   $0x00000f,_0ce6bc_data
		je     _06eff2_jump
		cmpw   $0x000000,_0ce698_data
		je     _06f00f_jump

	_06eff2_jump:
		mov    $0x000008,%eax
		mov    _0cf86e_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _06d020_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f00f_jump:
		mov    _0cf86e_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _06d020_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f029_case:
		xor    %edx,%edx
		mov    %dx,_0cf866_data
		mov    _092994_data,%dl
		mov    _0ce6d1_data,%ah
		inc    %dl
		or     $0x000008,%ah
		mov    %dl,_092994_data
		mov    _0ce6c1_data,%dh
		mov    %ah,_0ce6d1_data
		test   %dh,%dh
		jne    _06f0a4_case
		mov    _0ce690_data,%bx
		test   %bx,%bx
		jle    _06f071_jump
		mov    %ebx,%edi
		dec    %edi
		mov    %di,_0ce690_data
		jmp    _06f07d_jump

	_06f071_jump:
		jge    _06f07d_jump
		mov    %ebx,%esi
		inc    %esi
		mov    %si,_0ce690_data

	_06f07d_jump:
		mov    _0ce692_data,%ax
		test   %ax,%ax
		jle    _06f098_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0ce692_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f098_jump:
		jge    _06f0a4_case
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0ce692_data

	_06f0a4_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax
		ret    



_06f0b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce6bd_data,%ah
		cmp    $0x000002,%ah
		je     _06f1c4_jump
		cmp    $0x000001,%ah
		je     _06f199_jump
		call   _06d724_func
		cmpb   $0x000000,_0ce6bd_data
		jne    _06f1c4_jump
		mov    _0ce6bc_data,%bl
		test   %bl,%bl
		je     _06f10e_jump
		cmp    $0x000001,%bl
		je     _06f10e_jump
		cmp    $0x000002,%bl
		je     _06f10e_jump
		cmp    $0x00003f,%bl
		je     _06f10e_jump
		cmp    $0x00003e,%bl
		je     _06f10e_jump
		cmp    $0x00003b,%bl
		je     _06f10e_jump
		cmp    $0x000003,%bl
		je     _06f10e_jump
		cmp    $0x000008,%bl
		jne    _06f1c4_jump

	_06f10e_jump:
		testb  $0x000040,_0cf81a_data
		je     _06f150_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06f1c4_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		xor    %edx,%edx
		mov    %dx,_0ce690_data
		mov    %dx,_0ce692_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f150_jump:
		cmpb   $0x000000,_0cfa54_data
		jne    _06f1c4_jump
		mov    _0ce6bc_data,%cl
		cmp    $0x000012,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06f1c4_jump
		mov    _0cf81b_data,%ch
		test   $0x000018,%ch
		jne    _06f1c4_jump
		test   $0x000001,%ch
		jne    _06f1c4_jump
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06f1c4_jump
		test   $0x000080,%ch
		jne    _06f1c4_jump
		mov    $0x000012,%edx
		jmp    _06f1ba_jump

	_06f199_jump:
		cmp    %ah,%ah
		jne    _06f1c4_jump
		mov    _0cf81b_data,%bl
		test   $0x000018,%bl
		jne    _06f1c4_jump
		test   %ah,%bl
		je     _06f1c4_jump
		cmpb   $0x000000,_0ce6bc_data
		jne    _06f1c4_jump
		mov    $0x000003,%edx

	_06f1ba_jump:
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06f1c4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06f1c7_jump:
		ret    



_06f1c8_func:
		cmpb   $0x000000,_0ce77e_data
		jne    _06f1c7_jump
		testb  $0x000001,_0cf81a_data
		je     _06f1c7_jump
		testb  $0x000018,_0cf81b_data
		jne    _06f1c7_jump
		jmp    _066af0_jump

_06f1e8_switch:
		.long   _06f23b_case
		.long   _06f228_case
		.long   _06f23b_case
		.long   _06f24a_case
		.long   _06f24a_case
		.long   _06f23b_case
		.long   _06f24a_case
		.long   _06f23b_case




_06f208_func:
		push   %edx
		cmpb   $0x000000,_0cfa76_data
		jne    _06f24a_case
		mov    _0ce6bd_data,%al
		cmp    $0x000007,%al
		ja     _06f24a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06f1e8_switch(,%eax,4)

	_06f228_case:
		call   _041dc4_func
		test   %ax,%ax
		je     _06f23b_case
		cmpb   $0x000003,_0ce6bc_data
		jne    _06f242_jump

	_06f23b_case:
		call   _06cd40_func
		pop    %edx
		ret    

	_06f242_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa7d_data

	_06f24a_case:
		pop    %edx
		ret    



_06f24c_func:
		push   %edx
		test   %ax,%ax
		jne    _06f257_jump
		mov    $0x000001,%eax

	_06f257_jump:
		cwtl   
		dec    %eax
		sar    $0x000003,%eax
		cmp    $0x00001f,%ax
		jg     _06f279_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06f272_jump
		add    $0x00001f,%eax
		pop    %edx
		ret    

	_06f272_jump:
		mov    $0x000020,%edx
		jmp    _06f28c_jump

	_06f279_jump:
		testb  $0x000008,_0ce6d1_data
		jne    _06f287_jump
		sub    $0x00001f,%eax
		pop    %edx
		ret    

	_06f287_jump:
		mov    $0x00005f,%edx

	_06f28c_jump:
		cwtl   
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _06f297_jump
		neg    %eax

	_06f297_jump:
		pop    %edx
		ret    



_06f29c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000002,_0ce6bd_data
		jne    _06f2bc_jump
		cmpb   $0x000008,_0ce6bc_data
		jne    _06f2bc_jump
		movw   $0x00005a,_0ce6a6_data

	_06f2bc_jump:
		mov    $0x000007,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%esi
		call   _01d818_func
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _07228c_func
		mov    %bx,_0ce6a2_data
		mov    %bx,_0cf774_data
		mov    %si,_0ce69a_data
		mov    %di,_0cf866_data
		mov    %cx,_0ce692_data
		xor    %bl,%bl
		xor    %dh,%dh
		mov    %bl,_0ce6c2_data
		mov    $0x000001,%bh
		mov    %dh,_0ce6c1_data
		mov    %bh,_0cfa7d_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f328_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _0ce678_data,%dx
		mov    _0ce6b8_data,%al
		mov    0x000028(%esi),%bx
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %edx,%ecx
		mov    0x000068(%esi),%al
		sub    %ebx,%ecx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0ce67c_data,%di
		mov    _0ce6b9_data,%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edi
		sub    %edx,%edi
		movswl %cx,%edx
		imul   %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edi
		movswl %di,%eax
		imul   %eax,%eax
		add    %eax,%edx
		mov    _0ce6bc_data,%ah
		test   %ah,%ah
		jne    _06f4f6_jump
		cmp    $0x0011a0,%edx
		jbe    _06f46c_jump
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		movb   $0x000000,0x00007f(%esi)
		xor    %eax,%eax
		mov    %ax,_0ce692_data
		mov    %ax,_0ce690_data
		mov    %ax,_0cf866_data
		mov    %esi,%eax
		call   _07b470_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cmp    $0x000100,%ax
		jg     _06f3db_jump
		jne    _06f3e3_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06f3e3_jump

	_06f3db_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _06f3e9_jump

	_06f3e3_jump:
		movw   $0x000001,0x000052(%esi)

	_06f3e9_jump:
		test   %cx,%cx
		jge    _06f3f0_jump
		neg    %ecx

	_06f3f0_jump:
		test   %di,%di
		jge    _06f3f7_jump
		neg    %edi

	_06f3f7_jump:
		mov    %edx,%eax
		lea    0x000004(%esp),%ebx
		add    $0x000080,%eax
		mov    %esp,%edx
		cwtl   
		call   _05e12c_func
		cmpw   $0x000002,(%esp)
		jle    _06f44b_jump
		cmpw   $0x000002,0x000004(%esp)
		jle    _06f44b_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    -0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _06f45f_jump

	_06f44b_jump:
		cmpw   $0x000002,(%esp)
		jg     _06f45d_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _06f4f6_jump

	_06f45d_jump:
		mov    %edi,%eax

	_06f45f_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f46c_jump:
		ja     _06f4be_jump
		mov    _0ce6c1_data,%dh
		xor    %al,%al
		inc    %dh
		mov    %ax,_0ce690_data
		mov    %dh,_0ce6c1_data
		mov    0x000042(%esi),%ax
		mov    _0ce692_data,%dx
		sub    %eax,%edx
		mov    _0ce6c1_data,%bl
		mov    %dx,_0ce692_data
		cmp    $0x000003,%bl
		jb     _06f4f6_jump
		xor    %bh,%bh
		mov    %bh,_0ce6c1_data
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,_0ce692_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06f4be_jump:
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		xor    %ebx,%ebx
		mov    $0x000001,%dl
		mov    %bx,_0ce692_data
		mov    %bx,_0ce690_data
		mov    %bx,_0cf866_data
		movb   $0x000000,0x00007f(%esi)
		mov    %dl,_0cfa7d_data
		movw   $0x00005f,0x00004c(%esi)

	_06f4f6_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f500_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0ce65c_data,%eax
		mov    %eax,(%esp)
		mov    _0cf840_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		mov    %edx,0x000008(%esp)
		mov    _0ce6bc_data,%ah
		mov    0x00004e(%ecx),%si
		test   %ah,%ah
		jne    _06f552_jump
		mov    %ecx,%eax
		call   _06f328_func
		jmp    _06f67f_jump

	_06f552_jump:
		cmp    $0x000001,%ah
		jne    _06f67f_jump
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _06f661_jump
		mov    0x00004c(%ecx),%dx
		cmp    $0x000064,%dx
		jle    _06f579_jump
		sub    $0x000002,%edx
		mov    %dx,0x00004c(%ecx)
		jmp    _06f586_jump

	_06f579_jump:
		cmp    $0x00005f,%dx
		jge    _06f586_jump
		mov    %edx,%eax
		inc    %eax
		mov    %ax,0x00004c(%ecx)

	_06f586_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x00000c(%esp),%edx
		cwtl   
		call   _05e03c_func
		cmp    0x000008(%esp),%si
		jl     _06f5b5_jump
		cmpw   $0x000000,0x000052(%ecx)
		jle    _06f5ad_jump
		movb   $0x000005,0x00007f(%ecx)

	_06f5ad_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _06f5cb_jump

	_06f5b5_jump:
		cmp    %di,%si
		jg     _06f5cb_jump
		cmpw   $0x000000,0x000052(%ecx)
		jge    _06f5c5_jump
		movb   $0x000005,0x00007f(%ecx)

	_06f5c5_jump:
		movw   $0x000001,0x000052(%ecx)

	_06f5cb_jump:
		movswl %si,%eax
		call   _05e10c_func
		cwtl   
		sar    $0x000007,%eax
		mov    0x000052(%ecx),%dx
		inc    %eax
		test   %dx,%dx
		jge    _06f5e3_jump
		neg    %eax

	_06f5e3_jump:
		add    %ax,0x00004e(%ecx)
		mov    0x000028(%ecx),%edx
		mov    _0ce67c_data,%ax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000068(%ecx),%bl
		mov    0x00004a(%ecx),%eax
		add    %edx,%ebx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0ce6b8_data,%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		add    %edx,%ebp
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %ebp,%eax
		sub    %edx,%eax
		mov    _0ce678_data,%di
		mov    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0ce6b9_data,%al
		mov    0x000004(%esp),%edi
		sub    %eax,%edx
		mov    %bx,_0ce690_data
		sub    %edi,%edx
		mov    %dx,_0ce692_data
		jmp    _06f67f_jump

	_06f661_jump:
		mov    %dh,%bl
		sub    %ah,%bl
		mov    %bl,0x00007f(%ecx)
		xor    %ebx,%ebx
		mov    %bx,_0ce690_data
		mov    %bx,_0ce692_data
		mov    %bx,_0cf866_data

	_06f67f_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,_0ce6ba_data
		movswl %si,%eax
		call   _06f24c_func
		mov    _0ce690_data,%dx
		mov    %al,_0ce6bb_data
		mov    0x000040(%ecx),%ax
		mov    _0ce692_data,%bx
		add    %eax,%edx
		add    0x000042(%ecx),%bx
		xor    %eax,%eax
		mov    _0ce6b2_data,%al
		mov    %bx,_0ce692_data
		mov    _09253c_data(%eax),%bh
		mov    %dx,_0ce690_data
		test   $0x000002,%bh
		je     _06f79e_jump
		testb  $0x000008,_0ce6d1_data
		jne    _06f702_jump
		xor    %eax,%eax
		mov    _0ce6b3_data,%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _06f723_jump

	_06f702_jump:
		testb  $0x000008,_0ce6d1_data
		je     _06f79e_jump
		xor    %eax,%eax
		mov    _0ce6b4_data,%al
		testb  $0x000002,_09253c_data(%eax)
		je     _06f79e_jump

	_06f723_jump:
		cmpw   $0x000000,_0ce692_data
		jg     _06f734_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _06f79e_jump

	_06f734_jump:
		mov    $_0ce650_data,%eax
		mov    $0xffffffff,%edx
		call   _025b30_func
		xor    %ch,%ch
		mov    _0ce690_data,%eax
		mov    _0ce67c_data,%ebx
		sar    $0x000010,%eax
		mov    %dx,_0cf898_data
		add    %eax,%ebx
		xor    %edx,%edx
		mov    %ebx,_0ce67c_data
		xor    %eax,%eax
		mov    $0x000008,%ebx
		mov    %ax,_0ce692_data
		mov    $_0ce650_data,%eax
		mov    %ch,_0ce6cf_data
		call   _01d818_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0ce6a2_data
		call   _07228c_func
		jmp    _06f7c3_jump

	_06f79e_jump:
		xor    %eax,%eax
		mov    _0ce6b4_data,%al
		testb  $0x000010,_09253c_data(%eax)
		jne    _06f7be_jump
		xor    %eax,%eax
		mov    _0ce6b3_data,%al
		testb  $0x000010,_09253c_data(%eax)
		je     _06f7c3_jump

	_06f7be_jump:
		call   _06f7d0_func

	_06f7c3_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f7d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf840_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		cmpw   $0x000100,0x00004e(%edx,%eax,4)
		setl   %al
		and    $0x0000ff,%eax
		and    $0x000001,%al
		mov    _0ce6d1_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0ce6d1_data
		shl    $0x000003,%al
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    $_0ce650_data,%eax
		mov    %dl,_0ce6d1_data
		mov    %ebx,%edx
		xor    %ecx,%ecx
		call   _01d818_func
		mov    _0ce68e_data,%eax
		xor    %dh,%dh
		mov    %cx,_0ce692_data
		mov    %dh,_0ce6c1_data
		mov    %dh,_0ce6c2_data
		sar    $0x000010,%eax
		mov    _0ce678_data,%edx
		mov    %si,_0cf898_data
		sub    %eax,%edx
		mov    %si,_0ce6a2_data
		mov    %edx,_0ce678_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f870_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce678_data,%dx
		mov    _0ce67c_data,%bx
		mov    _0cf866_data,%di
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0ce6b8_data,%al
		mov    _0ce6c4_data,%cl
		add    %edx,%eax
		add    %ebx,%ecx
		mov    %al,%bl
		mov    %eax,%esi
		and    $0x00000f,%bl
		test   %di,%di
		jg     _06f8b4_jump
		jne    _06f8c2_jump
		testb  $0x000008,_0ce6d1_data
		je     _06f8c2_jump

	_06f8b4_jump:
		mov    $0x000010,%edx
		cmp    $0x00000d,%bl
		jbe    _06f8cf_jump
		add    %edx,%eax
		jmp    _06f8cf_jump

	_06f8c2_jump:
		mov    $0xfffffff0,%edx
		cmp    $0x000004,%bl
		jae    _06f8cf_jump
		sub    $0x000010,%eax

	_06f8cf_jump:
		mov    _0cf866_data,%bx
		add    %edx,%eax
		test   %bx,%bx
		je     _06f930_jump
		mov    %ecx,%edx
		movswl %ax,%ebx
		add    $0x000010,%edx
		mov    %ebx,%eax
		movswl %dx,%edx
		call   _024e90_func
		test   %ax,%ax
		jne    _06f920_jump
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024e90_func
		test   %ax,%ax
		jne    _06f920_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024e90_func
		test   %ax,%ax
		je     _06f930_jump

	_06f920_jump:
		xor    %edi,%edi
		mov    %di,_0ce690_data
		mov    %di,_0cf866_data

	_06f930_jump:
		cmpw   $0x000000,_0ce692_data
		jge    _06f956_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _024e90_func
		test   %ax,%ax
		je     _06f956_jump
		xor    %ebx,%ebx
		mov    %bx,_0ce692_data

	_06f956_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f95c_func:
		push   %ebx
		push   %edx
		mov    _0ce678_data,%ax
		sub    _0cf86a_data,%ax
		cmp    $0x000001,%ax
		jle    _06f992_jump
		mov    _0ce6d1_data,%dl
		and    $0x0000f7,%dl
		mov    $_0ce650_data,%eax
		mov    %dl,_0ce6d1_data
		mov    $0x000015,%edx
		call   _01d808_func
		pop    %edx
		pop    %ebx
		ret    

	_06f992_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jge    _06f9b9_jump
		mov    _0ce6d1_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0ce6d1_data
		mov    $_0ce650_data,%eax
		call   _01d808_func
		pop    %edx
		pop    %ebx
		ret    

	_06f9b9_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0ce650_data,%eax
		mov    %bx,_0ce690_data
		call   _01d808_func
		mov    _0ce678_data,%ax
		mov    %ax,_0cf86a_data
		pop    %edx
		pop    %ebx
		ret    



_06f9e0_func:
		push   %ecx
		push   %edx
		cmpw   $0x000003,_0cf868_data
		je     _06fa40_jump
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _06fa40_jump
		mov    _0ce6bc_data,%dh
		cmp    $0x000007,%dh
		je     _06fa40_jump
		cmp    $0x000009,%dh
		je     _06fa40_jump
		cmpw   $0x000000,_0ce692_data
		jg     _06fa40_jump
		cmp    $0x000008,%dh
		je     _06fa30_jump
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		xor    %cl,%cl
		call   _01d808_func
		mov    %cl,_0cfa7d_data

	_06fa30_jump:
		xor    %ecx,%ecx
		mov    %cx,_0ce6a2_data
		mov    %cx,_0ce692_data

	_06fa40_jump:
		pop    %edx
		pop    %ecx
		ret    



_06fa44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf870_data,%dx
		mov    _0ce65c_data,%esi
		test   %dx,%dx
		je     _06fa67_jump
		movw   $0x000001,_0ce698_data

	_06fa67_jump:
		mov    $0x000012,%ebx
		mov    $_0ce5b8_data,%edx
		mov    $_0ce5ba_data,%eax
		call   _085aeb_func
		mov    _0ce678_data,%ax
		mov    %ax,_0ce5b8_data
		cmpb   $0x000007,_0ce6bc_data
		jne    _06fa99_jump
		movw   $0x00ffff,_0ce69a_data

	_06fa99_jump:
		mov    _0cf896_data,%eax
		mov    $0x000001,%dl
		sar    $0x000010,%eax
		mov    %dl,(%esp)
		cmp    $0xffffffff,%eax
		je     _06fab2_jump
		decw   _0cf898_data

	_06fab2_jump:
		mov    _0cf846_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fac6_jump
		decw   _0cf848_data

	_06fac6_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		mov    _0cf8a4_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		mov    %bx,_0cf8a4_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		cmp    $0x00000b,%bx
		je     _06fb3a_jump
		cmp    $0x00000a,%bx
		je     _06fb3a_jump
		mov    _0ce6c1_data,%dh
		inc    %dh
		mov    %dh,_0ce6c1_data
		cmp    $0x000003,%dh
		jb     _06fb22_jump
		xor    %ch,%ch
		mov    %ch,_0ce6c1_data

	_06fb22_jump:
		mov    _0ce6c2_data,%al
		inc    %al
		mov    %al,_0ce6c2_data
		cmp    $0x000004,%al
		jb     _06fb3a_jump
		xor    %dl,%dl
		mov    %dl,_0ce6c2_data

	_06fb3a_jump:
		cmpw   $0x000017,_0cf8a4_data
		jne    _06fb4b_jump
		incw   _0ce692_data

	_06fb4b_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _06fb7b_jump
		cmpw   $0x00000c,_0cf8a4_data
		jg     _06fb7b_jump
		cmpb   $0x000000,_0cfa8c_data
		jne    _06fb7b_jump
		cmpb   $0x000000,_0ce6cf_data
		jne    _06fb7b_jump
		cmpb   $0x000002,_0ce6bc_data
		jne    _06fbae_jump

	_06fb7b_jump:
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _0565d0_func
		mov    _0cfa7d_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _06fbae_jump
		call   *_0c2f78_data
		test   %ax,%ax
		jne    _06fbae_jump
		incb   _0cfa7d_data

	_06fbae_jump:
		cmpw   $0x000006,_0cf8a4_data
		jne    _06fbe3_jump
		mov    _0ce6bc_data,%ah
		cmp    $0x000018,%ah
		je     _06fbc8_jump
		cmp    $0x000021,%ah
		jne    _06fbcf_jump

	_06fbc8_jump:
		mov    $0x000002,%edx
		jmp    _06fbd9_jump

	_06fbcf_jump:
		cmp    $0x000020,%ah
		jne    _06fbe3_jump
		mov    $0x000011,%edx

	_06fbd9_jump:
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_06fbe3_jump:
		mov    _0ce6a0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fbfd_jump
		mov    _0ce692_data,%ax
		add    %ax,_0ce6a2_data

	_06fbfd_jump:
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		mov    _0ce6bc_data,%cl
		mov    %al,%dl
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06fc41_jump
		cmp    $0x00001f,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06fc41_jump
		call   _06d7d4_func
		cmpb   $0x00000f,_0ce6bc_data
		jne    _06fc41_jump
		call   _06f870_func

	_06fc41_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _06f9e0_func
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _06fc9e_jump
		cmpb   $0x00000f,_0ce6bc_data
		jne    _06fc9e_jump
		cmp    $0x00000b,%bx
		jne    _06fc9e_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		shl    $0x000002,%eax
		lea    (%esi,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0ce6c1_data
		mov    %cl,_0ce6c2_data

	_06fc9e_jump:
		cmpw   $0x000000,_0ce692_data
		jl     _06fcea_jump
		mov    _0ce6bc_data,%al
		test   %al,%al
		jne    _06fcca_jump
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func
		xor    %eax,%eax
		mov    %ax,_0ce6a2_data
		jmp    _06fcea_jump

	_06fcca_jump:
		cmp    $0x000011,%al
		je     _06fcd2_jump
		cmp    $0x000012,%al
		jne    _06fcea_jump

	_06fcd2_jump:
		mov    $0x000013,%edx
		mov    $_0ce650_data,%eax
		xor    %edi,%edi
		call   _01d808_func
		mov    %di,_0ce6a2_data

	_06fcea_jump:
		mov    _0ce6bc_data,%dh
		cmp    $0x000011,%dh
		je     _06ffce_jump
		test   %dh,%dh
		je     _06ffce_jump
		cmp    $0x000009,%dh
		je     _06ffce_jump
		cmp    $0x00001f,%dh
		je     _06ffce_jump
		cmp    $0x00000d,%dh
		jne    _06fd26_jump
		cmpw   $0x000000,_0ce692_data
		jl     _06ffce_jump

	_06fd26_jump:
		cmpw   $0x000003,_0cf8a4_data
		jl     _06ffce_jump
		cmpw   $0x000003,_0cf868_data
		je     _06ffce_jump
		xor    %eax,%eax
		mov    _0ce6b2_data,%al
		mov    _09253c_data(%eax),%dl
		test   $0x000002,%dl
		je     _06ff7f_jump
		test   $0x000040,%dl
		je     _06fd82_jump
		mov    _0ce692_data,%dx
		mov    _09253c_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _06fd7b_jump
		add    %dx,_0cf866_data
		jmp    _06fd82_jump

	_06fd7b_jump:
		sub    %dx,_0cf866_data

	_06fd82_jump:
		mov    $_0ce650_data,%eax
		call   _025b30_func
		xor    %ecx,%ecx
		xor    %bh,%bh
		mov    _0ce690_data,%eax
		mov    _0ce67c_data,%edx
		mov    %bh,_0ce6cf_data
		mov    %bh,_0cfa8c_data
		sar    $0x000010,%eax
		mov    %cx,_0ce692_data
		add    %eax,%edx
		mov    $_0ce650_data,%eax
		mov    %edx,_0ce67c_data
		call   _0256d4_func
		test   %al,%al
		jne    _06fdf6_jump
		cmpw   $0x000006,_0cf88c_data
		jne    _06fde7_jump
		cmpw   $0x000001,_0cf87c_data
		jne    _06fde7_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06fdf1_jump

	_06fde7_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06fdf1_jump:
		call   _07228c_func

	_06fdf6_jump:
		cmpw   $0x000000,_0ce698_data
		jne    _06fe7e_jump
		mov    $0x000001,%al

	_06fe06_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0ce5b6_data(,%edx,2),%bx
		cmp    _0ce5b8_data(,%edx,2),%bx
		jne    _06fe22_jump
		inc    %al
		cmp    $0x00000a,%al
		jb     _06fe06_jump

	_06fe22_jump:
		cmp    $0x00000a,%al
		je     _06fe75_jump
		and    $0x0000ff,%eax
		mov    _0ce5b6_data(,%eax,2),%dx
		cmp    _0ce5b8_data(,%eax,2),%dx
		jge    _06fe59_jump
		mov    _0cf864_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06fe51_jump
		mov    %ebx,%eax

	_06fe51_jump:
		mov    %ax,_0cf866_data
		jmp    _06fe7e_jump

	_06fe59_jump:
		mov    _0cf864_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _06fe6d_jump
		mov    %ebx,%eax

	_06fe6d_jump:
		mov    %ax,_0cf866_data
		jmp    _06fe7e_jump

	_06fe75_jump:
		xor    %esi,%esi
		mov    %si,_0cf866_data

	_06fe7e_jump:
		mov    $0xffffffff,%eax
		mov    _0ce6bc_data,%ch
		mov    %ax,_0cf898_data
		cmp    $0x000003,%ch
		jne    _06fea6_jump
		cmpb   $0x000000,_0ce6bb_data
		jne    _06fec4_jump
		movb   $0x000001,_0cfa7d_data
		jmp    _06fec4_jump

	_06fea6_jump:
		cmp    $0x000008,%ch
		jne    _06fec4_jump
		mov    _0ce6a4_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _06febe_jump
		mov    %ebx,%eax

	_06febe_jump:
		mov    %ax,_0ce6a6_data

	_06fec4_jump:
		mov    _0ce6bc_data,%dh
		cmp    $0x000011,%dh
		je     _06fed9_jump
		cmp    $0x000012,%dh
		je     _06fed9_jump
		cmp    $0x000013,%dh
		jne    _06ff31_jump

	_06fed9_jump:
		testb  $0x000001,_0cf81b_data
		je     _06ff2a_jump
		mov    _0ce65c_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06fefb_jump
		sar    %cl,%ax
		jmp    _06ff04_jump

	_06fefb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06ff04_jump:
		movswl %ax,%edx
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06ff15_jump
		neg    %eax

	_06ff15_jump:
		cmp    %edx,%eax
		jl     _06ff2a_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		jmp    _06ff5f_jump

	_06ff2a_jump:
		mov    $0x00002b,%ebx
		jmp    _06ff58_jump

	_06ff31_jump:
		cmp    $0x000019,%dh
		je     _06ff3b_jump
		cmp    $0x00001a,%dh
		jne    _06ff42_jump

	_06ff3b_jump:
		mov    $0x000034,%ebx
		jmp    _06ff58_jump

	_06ff42_jump:
		cmp    $0x00001b,%dh
		je     _06ff4c_jump
		cmp    $0x00001c,%dh
		jne    _06ff53_jump

	_06ff4c_jump:
		mov    $0x000035,%ebx
		jmp    _06ff58_jump

	_06ff53_jump:
		mov    $0x000008,%ebx

	_06ff58_jump:
		mov    $_0ce650_data,%eax
		xor    %edx,%edx

	_06ff5f_jump:
		call   _01d818_func
		cmpw   $0x0000c8,_0ce6a2_data
		jl     _06ff74_jump
		call   _06bfd0_func

	_06ff74_jump:
		movw   $0x00ffff,_0ce6a2_data
		jmp    _06ffce_jump

	_06ff7f_jump:
		mov    _0ce6bc_data,%dh
		cmp    $0x000007,%dh
		je     _06ffce_jump
		cmp    $0x000008,%dh
		jne    _06ffc2_jump
		cmpw   $0x000000,_0ce692_data
		jl     _06ffa5_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _06c224_func

	_06ffa5_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _06ffb7_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _06ffce_jump

	_06ffb7_jump:
		movw   $0x00005a,_0ce6a6_data
		jmp    _06ffce_jump

	_06ffc2_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _06c224_func

	_06ffce_jump:
		cmpw   $0x000003,_0cf868_data
		je     _06fffc_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _06fffc_jump
		cmpb   $0x00001f,_0ce6bc_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06fffc_jump
		call   _06c138_func
		call   _06dc78_func

	_06fffc_jump:
		cmpb   $0x000001,(%esp)
		jne    _07002b_jump
		cmpw   $0x000004,_0ce692_data
		jle    _070015_jump
		movw   $0x000004,_0ce692_data

	_070015_jump:
		mov    _0ce690_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _07002b_jump
		movw   $0x00fff6,_0ce692_data

	_07002b_jump:
		cmpw   $0x000002,_0cf88c_data
		jne    _070082_jump
		cmpw   $0x00000f,_0cf87c_data
		jne    _070082_jump
		mov    _0ce678_data,%edx
		mov    _0cf88e_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _070082_jump
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0ce67c_data,%ebx
		sub    $0x000064,%eax
		cmp    %ebx,%eax
		jge    _070082_jump
		cmpb   $0x0000ff,_0ce6c6_data
		je     _070082_jump
		call   _07bfb0_func
		call   _03cadc_func

	_070082_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_07008a_jump:
		ret    



_07008c_func:
		cmpb   $0x000000,_0ce77e_data
		je     _07008a_jump
		mov    _0ce6dc_data,%eax
		call   _07b628_func
		jmp    _066d54_func



_0700a4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		andb   $0x0000f7,_0cf81a_data
		mov    _0cef52_data,%bx
		dec    %ebx
		xor    %ah,%ah
		mov    %bx,_0cef52_data
		mov    _0cfa7b_data,%bh
		mov    %ah,_0cef58_data
		test   %bh,%bh
		jne    _070104_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _0700e2_jump
		cmpb   $0x000020,_0ce6bc_data
		je     _0700e9_jump

	_0700e2_jump:
		mov    $0x000001,%eax
		jmp    _0700eb_jump

	_0700e9_jump:
		xor    %eax,%eax

	_0700eb_jump:
		test   %eax,%eax
		je     _070104_jump
		movb   $0x000005,_0cfa66_data
		mov    $0x000001,%ah
		mov    %edx,_0cd8c8_data
		mov    %ah,_0cfa70_data

	_070104_jump:
		call   _07008c_func
		pop    %edx
		pop    %ebx
		ret    



_07010c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		xor    %ecx,%ecx
		call   _01d818_func
		mov    %cx,_0cf866_data
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0ce6bb_data
		mov    %dx,_0ce692_data
		mov    _0cfa54_data,%dl
		mov    %bx,_0ce690_data
		test   %dl,%dl
		je     _070168_jump
		mov    _0cf8b0_data,%eax
		mov    _0ce678_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0ce678_data

	_070168_jump:
		mov    $0x000001,%dh
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0ce650_data,%eax
		mov    %si,_0cf8b2_data
		mov    %dh,_0cfa7e_data
		mov    %di,_0ce6a6_data
		mov    %dh,_0cfa7b_data
		call   _07ad20_func
		call   _07008c_func
		call   _01cf80_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0701a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cf754_data,%eax
		sar    $0x000010,%eax
		mov    _0ce678_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _0701fa_jump
		xor    %eax,%eax
		mov    _0ce686_data,%edx
		mov    _0ce6b9_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _0701e5_jump
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0701fa_jump

	_0701e5_jump:
		mov    _0cf758_data,%eax
		sar    $0x000010,%eax
		mov    _0ce678_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _070213_jump

	_0701fa_jump:
		mov    $0x000001,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0ce6c6_data
		call   _02dbdc_func
		jmp    _0703d5_jump

	_070213_jump:
		cmpw   $0x0000b4,_0ce688_data
		jle    _070237_jump
		mov    $0x000001,%eax
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0ce6c6_data
		call   _02dbdc_func
		jmp    _0703d5_jump

	_070237_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _070249_jump
		cmpb   $0x000009,_0ce6bc_data
		je     _070250_jump

	_070249_jump:
		mov    $0x000001,%eax
		jmp    _070252_jump

	_070250_jump:
		xor    %eax,%eax

	_070252_jump:
		test   %eax,%eax
		je     _0702f8_jump
		cmpb   $0x000003,_0ce6bd_data
		jne    _07026c_jump
		cmpb   $0x000016,_0ce6bc_data
		je     _070273_jump

	_07026c_jump:
		mov    $0x000001,%eax
		jmp    _070275_jump

	_070273_jump:
		xor    %eax,%eax

	_070275_jump:
		test   %eax,%eax
		je     _0702f8_jump
		testb  $0x000004,_0ce6d1_data
		je     _0702f8_jump
		cmpb   $0x00000a,_0ce6b2_data
		jne    _0702b0_jump
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0702b0_jump
		cmpb   $0x000006,_0ce6bd_data
		je     _0702b0_jump
		call   _07010c_func
		jmp    _0702f8_jump

	_0702b0_jump:
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		add    %eax,%edx
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x000010,%eax
		cmp    %eax,%edx
		jle    _0702f8_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		cmpw   $0x000000,_0ce692_data
		jge    _0702f8_jump
		xor    %ecx,%ecx
		mov    %cx,_0ce692_data

	_0702f8_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _07030a_jump
		cmpb   $0x000009,_0ce6bc_data
		je     _07033d_jump

	_07030a_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _0703d5_jump
		mov    _0ce6bc_data,%dh
		cmp    $0x000016,%dh
		je     _07032b_jump
		cmp    $0x000020,%dh
		jne    _0703d5_jump

	_07032b_jump:
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		je     _0703d5_jump

	_07033d_jump:
		mov    _0cfa7e_data,%bh
		dec    %bh
		mov    %bh,_0cfa7e_data
		jne    _0703cc_jump
		cmpb   $0x000000,_0cfa7a_data
		jne    _0703cc_jump
		mov    $0x000002,%al
		mov    _0ce674_data,%ecx
		mov    %al,_0ce6c6_data
		test   %ecx,%ecx
		je     _0703b4_jump
		mov    $0x000040,%dl
		mov    _0ce6d1_data,%ah
		xor    %esi,%esi
		and    $0x0000fb,%ah
		mov    %esi,_0ce674_data
		mov    %ah,_0ce6d1_data
		mov    $_0ce650_data,%eax
		mov    %dl,_0cfa7e_data
		call   _0700a4_func
		cmpw   $0x000000,_0cef52_data
		jge    _0703b4_jump
		mov    $0x000001,%dh
		mov    %bh,_0ce6c6_data
		xor    %eax,%eax
		mov    %dh,_0cfa7a_data
		mov    %ax,_0cef52_data

	_0703b4_jump:
		mov    _0ce6c6_data,%al
		mov    $0x00005a,%edx
		mov    %al,_0cef5b_data
		mov    %dx,_0ce6a6_data
		jmp    _0703d5_jump

	_0703cc_jump:
		movw   $0x00ffff,_0ce69a_data

	_0703d5_jump:
		cmpl   $0x000000,_0ce674_data
		je     _070401_jump
		testb  $0x000004,_0ce6d1_data
		je     _070401_jump
		mov    _0cf868_data,%bx
		cmp    $0x000003,%bx
		je     _070401_jump
		cmp    $0x000004,%bx
		je     _070401_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_070401_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070408_func:
		push   %edx
		push   %esi
		call   _07c328_func
		mov    _0ce6c6_data,%dl
		mov    _0ce6a4_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0ce6c6_data
		cmp    $0xffffffff,%eax
		jne    _07047d_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _070474_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _024f60_func
		and    $0x0000ff,%eax
		testb  $0x000010,_09253c_data(%eax)
		je     _070474_jump
		movw   $0x00003c,_0ce6a6_data
		jmp    _07047d_jump

	_070474_jump:
		movw   $0x000078,_0ce6a6_data

	_07047d_jump:
		cmpb   $0x0000ff,_0ce6c6_data
		jne    _0704ac_jump
		cmpw   $0x000002,_0cf868_data
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %esi,%esi
		mov    %ax,_0cf868_data
		call   _01cf80_func
		mov    %si,_0cf8a4_data

	_0704ac_jump:
		pop    %esi
		pop    %edx
		ret    



_0704b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _07058f_jump
		mov    0x000028(%ecx),%eax
		mov    _0ce678_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _070574_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _070574_jump
		mov    0x00002c(%ecx),%eax
		mov    _0ce67c_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _070574_jump
		mov    %eax,_0ce67c_data
		cmpb   $0x000002,_0ce6bd_data
		je     _07056a_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _055e60_func
		mov    %ax,_0ce692_data
		mov    %dx,_0cf8a4_data
		xor    %dl,%dl
		mov    %bx,_0cf898_data
		mov    %dl,_0ce6c1_data
		mov    %dl,_0ce6c2_data
		mov    %dl,_0cfa7d_data
		jmp    _070574_jump

	_07056a_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0ce692_data

	_070574_jump:
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _07058f_jump
		andb   $0x0000fb,0x000081(%ecx)

	_07058f_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070598_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0ce690_data,%bx
		mov    %edx,0x000004(%esp)
		test   %bx,%bx
		je     _07088e_jump
		jle    _0705c2_jump
		mov    _0cf862_data,%eax
		sar    $0x000010,%eax
		jmp    _0705c4_jump

	_0705c2_jump:
		xor    %eax,%eax

	_0705c4_jump:
		mov    _0cf85e_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x000028(%esp)
		mov    _0cf874_data,%eax
		sar    $0x000010,%eax
		mov    _0cef5a_data,%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000020(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    _0cf024_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _07088e_jump

	_07060f_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_09257e_data(,%eax,4)
		je     _070862_jump
		lea    0x000018(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		mov    %eax,%ebx
		sar    $0x000010,%edx
		sar    $0x000003,%ebx
		add    %ebx,%edx
		mov    %dx,0x000010(%esp)
		mov    %eax,%edx
		sar    $0x000002,%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		testb  $0x000020,0x000081(%esi)
		je     _0706ae_jump
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000028(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01dbb4_func
		mov    _0ce69a_data,%ax
		cmp    0x000034(%esi),%ax
		sete   %al
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,0x00001c(%esp)
		jmp    _0706be_jump

	_0706ae_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)

	_0706be_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		mov    0x00001c(%esp),%edx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_09257f_data(,%eax,4)
		je     _070705_jump
		mov    0x000010(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000008(%esp),%esi
		add    $0x000002,%ebx
		add    $0x000006,%ecx
		sub    $0x00000c,%esi
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_070705_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		mov    _0ce690_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _07074d_jump
		mov    _0ce68e_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ecx
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _070747_jump
		cmp    %ecx,%eax
		jg     _070747_jump
		mov    $0x000001,%eax
		jmp    _070749_jump

	_070747_jump:
		xor    %eax,%eax

	_070749_jump:
		test   %eax,%eax
		jne    _07077f_jump

	_07074d_jump:
		mov    _0ce68e_data,%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		mov    %edx,%ecx
		sub    %eax,%ecx
		lea    (%edx,%eax,1),%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _070775_jump
		cmp    %ecx,%eax
		jg     _070775_jump
		mov    $0x000001,%eax
		jmp    _070777_jump

	_070775_jump:
		xor    %eax,%eax

	_070777_jump:
		test   %eax,%eax
		je     _070862_jump

	_07077f_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000018(%esp),%ebx
		mov    _0cf862_data,%si
		add    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _0707ae_jump
		cmp    %ecx,%eax
		jg     _0707ae_jump
		mov    $0x000001,%eax
		jmp    _0707b0_jump

	_0707ae_jump:
		xor    %eax,%eax

	_0707b0_jump:
		test   %eax,%eax
		jne    _070858_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _0707d9_jump
		cmp    %ecx,%eax
		jg     _0707d9_jump
		mov    $0x000001,%eax
		jmp    _0707db_jump

	_0707d9_jump:
		xor    %eax,%eax

	_0707db_jump:
		test   %eax,%eax
		jne    _070858_jump
		mov    0x000020(%esp),%eax
		mov    0x00001a(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _070804_jump
		cmp    %ecx,%eax
		jg     _070804_jump
		mov    $0x000001,%eax
		jmp    _070806_jump

	_070804_jump:
		xor    %eax,%eax

	_070806_jump:
		test   %eax,%eax
		jne    _070858_jump
		mov    0x000020(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    0x00001a(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _07082b_jump
		cmp    %ecx,%eax
		jg     _07082b_jump
		mov    $0x000001,%eax
		jmp    _07082d_jump

	_07082b_jump:
		xor    %eax,%eax

	_07082d_jump:
		test   %eax,%eax
		jne    _070858_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _070852_jump
		cmp    %ecx,%eax
		jg     _070852_jump
		mov    $0x000001,%eax
		jmp    _070854_jump

	_070852_jump:
		xor    %eax,%eax

	_070854_jump:
		test   %eax,%eax
		je     _070862_jump

	_070858_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _07088e_jump

	_070862_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0cef5a_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0ccdf0_data,%esi
		mov    _0cf024_data,%dx
		add    %eax,%esi
		cmp    %dx,%di
		jl     _07060f_jump

	_07088e_jump:
		mov    0x000004(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07089c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa8b_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0cf026_data,%eax
		mov    _0ce678_data,%dx
		mov    %dx,(%eax)
		mov    _0ce67c_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0ce6bd_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0ce6bc_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0ce6ba_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0ce6bb_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0ce6d1_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0ce6aa_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0ce77e_data,%dl
		mov    %dl,0x000010(%eax)
		test   %dl,%dl
		je     _070948_jump
		mov    _0ce6dc_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006a(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006b(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000081(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_070948_jump:
		inc    %bl
		cmp    $0x000064,%bl
		jbe    _070959_jump
		mov    $0x000001,%ah
		xor    %bl,%bl
		mov    %ah,_0cfa88_data

	_070959_jump:
		mov    %bl,_0cfa8b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070964_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07099f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000a0,%dx
		je     _070a86_jump
		cmp    $0x00009f,%dx
		je     _070a86_jump

	_07099f_jump:
		cmpb   $0x000000,_0ce6bd_data
		jne    _070a86_jump
		mov    _0ce6bc_data,%dl
		cmp    $0x00000d,%dl
		je     _070a86_jump
		cmp    $0x00000b,%dl
		je     _070a86_jump
		cmp    $0x00000c,%dl
		je     _070a86_jump
		cmp    $0x000012,%dl
		je     _070a86_jump
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0709e4_jump
		neg    %eax

	_0709e4_jump:
		cmp    $0x000003,%eax
		jle    _070a35_jump
		mov    _0ce6bc_data,%cl
		cmp    $0x000028,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _070a35_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    %cl,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _070a86_jump
		cmp    $0x000008,%cl
		je     _070a86_jump
		cmp    $0x000034,%cl
		je     _070a86_jump
		cmp    $0x000035,%cl
		je     _070a86_jump
		mov    $0x000029,%ebx
		jmp    _070a7a_jump

	_070a35_jump:
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _070a43_jump
		neg    %eax

	_070a43_jump:
		cmp    $0x000002,%eax
		jg     _070a86_jump
		mov    _0ce6bc_data,%ch
		cmp    $0x000028,%ch
		jne    _070a86_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0ce65c_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _070a86_jump
		mov    $0x00002a,%ebx

	_070a7a_jump:
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _01d818_func

	_070a86_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070a8c_func:
		push   %edx
		cmpb   $0x000000,_0ce6bd_data
		jne    _070ae3_jump
		cmpb   $0x000028,_0ce6bc_data
		jne    _070ae3_jump
		testb  $0x000008,_0ce6d1_data
		je     _070aaf_jump
		mov    $0x000001,%eax
		jmp    _070ab4_jump

	_070aaf_jump:
		mov    $0xffffffff,%eax

	_070ab4_jump:
		mov    %eax,%edx
		mov    _0ce68e_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _070acf_jump
		mov    $0x000001,%eax
		jg     _070acf_jump
		neg    %eax

	_070acf_jump:
		cmp    %edx,%eax
		jne    _070adc_jump
		movb   $0x00004f,_0ce6ba_data
		pop    %edx
		ret    

	_070adc_jump:
		movb   $0x000050,_0ce6ba_data

	_070ae3_jump:
		pop    %edx
		ret    



_070ae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%edx
		mov    $_0ce650_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ce6a6_data
		mov    %bx,_0cf8b4_data
		mov    %bx,_0cf8b2_data
		call   _01e030_func
		mov    $_0ce650_data,%eax
		call   _01e790_func
		call   _06fa44_func
		call   _06d2e8_func
		call   _059d18_func
		mov    _0ce692_data,%si
		test   %si,%si
		jle    _070b3e_jump
		call   _058ec8_func
		jmp    _070b45_jump

	_070b3e_jump:
		jge    _070b45_jump
		call   _058de8_func

	_070b45_jump:
		mov    _0ce690_data,%ax
		test   %ax,%ax
		jge    _070b57_jump
		call   _05949c_func
		jmp    _070b5e_jump

	_070b57_jump:
		jle    _070b5e_jump
		call   _059418_func

	_070b5e_jump:
		xor    %eax,%eax
		call   _066bf4_func
		cmpb   $0x000001,_0cfa54_data
		jne    _070b82_jump
		mov    _0cf818_data,%ax
		xor    %dl,%dl
		mov    %ax,_0cf81a_data
		mov    %dl,_0cfa54_data

	_070b82_jump:
		mov    $_0ce650_data,%eax
		call   _01d074_func
		test   %al,%al
		jne    _070baf_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _070ba2_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _070ba9_jump

	_070ba2_jump:
		mov    $0x000001,%eax
		jmp    _070bab_jump

	_070ba9_jump:
		xor    %eax,%eax

	_070bab_jump:
		test   %eax,%eax
		je     _070c0c_jump

	_070baf_jump:
		mov    $_0ce650_data,%eax
		mov    $0x000080,%cl
		call   _0700a4_func
		mov    _0ce6d1_data,%bh
		mov    %cl,_0cfa7e_data
		and    $0x0000fb,%bh
		mov    $0x000001,%ch
		mov    %bh,_0ce6d1_data
		mov    _0cef52_data,%bx
		mov    %ch,_0cfa70_data
		test   %bx,%bx
		jl     _070bf4_jump
		mov    $0x000002,%dl
		mov    %dl,_0ce6c6_data
		mov    %dl,_0cef5b_data
		jmp    _070c0c_jump

	_070bf4_jump:
		xor    %al,%al
		xor    %ecx,%ecx
		mov    %al,_0ce6c6_data
		mov    $0x000001,%ah
		mov    %cx,_0cef52_data
		mov    %ah,_0cfa7a_data

	_070c0c_jump:
		mov    $_0ce650_data,%eax
		call   _0567ac_func
		call   _07089c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070c20_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0ce650_data,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _070c48_jump
		xor    %edx,%edx
		mov    %dx,_0ce690_data

	_070c48_jump:
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0ce6bc_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _070c6f_jump
		xor    %al,%al
		jmp    _070c71_jump

	_070c6f_jump:
		mov    $0x000002,%al

	_070c71_jump:
		cmpw   $0x000000,_0ce692_data
		jle    _070cd3_jump
		mov    _0ce690_data,%eax
		mov    _0ce67c_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0ce6b9_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0ce67c_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0ce678_data,%ecx
		mov    _0ce6b8_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e588_func
		mov    _0ce690_data,%edx
		mov    _0ce67c_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0ce67c_data
		jmp    _070ce3_jump

	_070cd3_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0ce650_data,%eax
		call   _024f60_func
		xor    %ah,%ah

	_070ce3_jump:
		cwtl   
		testb  $0x000002,_09253c_data(%eax)
		je     _070d51_jump
		mov    _0ce690_data,%eax
		mov    _0ce67c_data,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0ce6b6_data,%al
		mov    _09253c_data(%eax),%cl
		mov    %edi,_0ce67c_data
		test   $0x000002,%cl
		jne    _070d33_jump
		cmpw   $0x000000,_0ce692_data
		jge    _070d33_jump
		xor    %esi,%esi
		lea    0x000004(%edi),%ebp
		mov    %si,_0ce692_data
		mov    %ebp,_0ce67c_data
		jmp    _070d3d_jump

	_070d33_jump:
		mov    $_0ce650_data,%eax
		call   _025b30_func

	_070d3d_jump:
		xor    %edi,%edi
		mov    $0xffffffff,%eax
		mov    %di,_0ce690_data
		mov    %ax,_0ce69a_data

	_070d51_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_070d58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_09257d_data(,%eax,4)
		je     _070d96_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		mov    %eax,%ebx
		jmp    _070d9a_jump

	_070d96_jump:
		mov    0x000040(%edx),%bx

	_070d9a_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_09257d_data(,%eax,4)
		je     _070db7_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _055e60_func
		jmp    _070dbb_jump

	_070db7_jump:
		mov    0x000042(%edx),%ax

	_070dbb_jump:
		mov    _0ce690_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0ce692_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0ce690_data
		mov    %edi,%ebx
		mov    %di,_0ce692_data
		add    %eax,%ebx
		mov    %si,_0ce690_data
		mov    %bx,_0ce692_data
		call   _070c20_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _070e0b_jump
		movw   $0x00ffff,_0ce69a_data

	_070e0b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070e14_func:
		push   %ecx
		push   %edx
		cmpb   $0x000001,_0cfa54_data
		jne    _070ebe_jump
		cmpw   $0x000000,_0cf866_data
		jne    _070e66_jump
		cmpw   $0x000000,_0ce692_data
		jne    _070e66_jump
		call   _041d54_func
		test   %ax,%ax
		je     _070e51_jump
		testb  $0x000008,_0ce6d1_data
		jne    _070e51_jump
		mov    $0x000001,%eax
		jmp    _070e95_jump

	_070e51_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _070e9a_jump
		testb  $0x000008,_0ce6d1_data
		je     _070e9a_jump
		jmp    _070e93_jump

	_070e66_jump:
		cmpw   $0x000000,_0cf866_data
		jle    _070e80_jump
		testb  $0x000008,_0ce6d1_data
		jne    _070e80_jump
		mov    $0x000001,%eax
		jmp    _070e95_jump

	_070e80_jump:
		cmpw   $0x000000,_0cf866_data
		jge    _070e9a_jump
		testb  $0x000008,_0ce6d1_data
		je     _070e9a_jump

	_070e93_jump:
		xor    %eax,%eax

	_070e95_jump:
		call   _06e548_func

	_070e9a_jump:
		cmpb   $0x000000,_092994_data
		jne    _070eab_jump
		call   _06eb40_func
		pop    %edx
		pop    %ecx
		ret    

	_070eab_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cf774_data
		mov    %cx,_0cf76c_data
		pop    %edx
		pop    %ecx
		ret    

	_070ebe_jump:
		testb  $0x000060,_0cf81b_data
		jne    _070f72_jump
		call   _041d54_func
		test   %ax,%ax
		jne    _070ede_jump
		testb  $0x000018,_0cf81b_data
		je     _070ee8_jump

	_070ede_jump:
		mov    $0x000001,%eax
		call   _06e548_func

	_070ee8_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _070f02_jump
		testb  $0x000018,_0cf81b_data
		jne    _070f02_jump
		xor    %eax,%eax
		call   _06e548_func

	_070f02_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _070f29_jump
		cmpb   $0x000000,_092994_data
		jne    _070f29_jump
		testb  $0x000018,_0cf81b_data
		jne    _070f29_jump
		call   _06e030_func
		incb   _092994_data

	_070f29_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _070f50_jump
		cmpb   $0x000000,_092994_data
		jne    _070f50_jump
		testb  $0x000018,_0cf81b_data
		jne    _070f50_jump
		call   _06e370_func
		incb   _092994_data

	_070f50_jump:
		cmpb   $0x000000,_092994_data
		jne    _070eab_jump
		testb  $0x000018,_0cf81b_data
		jne    _070eab_jump
		call   _06eb40_func
		pop    %edx
		pop    %ecx
		ret    

	_070f72_jump:
		call   _041d54_func
		test   %ax,%ax
		je     _070f83_jump
		xor    %eax,%eax
		call   _06e548_func

	_070f83_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _070f97_jump
		mov    $0x000001,%eax
		call   _06e548_func

	_070f97_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _070fb5_jump
		cmpb   $0x000000,_092994_data
		jne    _070fb5_jump
		call   _06e030_func
		incb   _092994_data

	_070fb5_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _070fd3_jump
		cmpb   $0x000000,_092994_data
		jne    _070fd3_jump
		call   _06e370_func
		incb   _092994_data

	_070fd3_jump:
		cmpb   $0x000000,_092994_data
		jne    _070fe4_jump
		call   _06eb40_func
		pop    %edx
		pop    %ecx
		ret    

	_070fe4_jump:
		xor    %edx,%edx
		mov    %dx,_0cf774_data
		mov    %dx,_0cf76c_data
		pop    %edx
		pop    %ecx
		ret    



_070ff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    %dx,_0cf8b4_data
		mov    %dx,_0cf8b2_data
		call   _0701a8_func
		test   %al,%al
		je     _071334_jump
		mov    _0ce6c1_data,%ah
		inc    %ah
		mov    %ah,_0ce6c1_data
		cmp    $0x000003,%ah
		jbe    _071034_jump
		xor    %dh,%dh
		mov    %dh,_0ce6c1_data

	_071034_jump:
		xor    %eax,%eax
		mov    _0ce678_data,%bx
		mov    _0ce6b8_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce67c_data,%cx
		mov    _0ce6b9_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0ce636_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    _0ce684_data,%edx
		mov    %ax,_0ce6a4_data
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0ce6b8_data,%al
		add    %edx,%eax
		add    $0x00001e,%eax
		test   %eax,%eax
		jl     _0710bb_jump
		xor    %eax,%eax
		mov    _0ce686_data,%edx
		mov    _0ce6b9_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		add    $0x000014,%eax
		test   %eax,%eax
		jl     _0710bb_jump
		cmpw   $0x000122,_0ce686_data
		jg     _0710bb_jump
		cmpw   $0x0000c8,_0ce688_data
		jle    _0710c8_jump

	_0710bb_jump:
		xor    %bl,%bl
		mov    %bl,_0ce6c6_data
		call   _070408_func

	_0710c8_jump:
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _07110d_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _07110d_jump
		call   _02d914_func
		test   %ax,%ax
		je     _07110d_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02dbdc_func

	_07110d_jump:
		xor    %cl,%cl
		mov    $_0ce650_data,%eax
		mov    %cl,_092994_data
		call   _01e030_func
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _071136_jump
		mov    $_0ce650_data,%eax
		call   _01e790_func

	_071136_jump:
		mov    _0ce6bd_data,%ch
		cmp    $0x000003,%ch
		je     _0712b7_jump
		cmp    $0x000006,%ch
		jne    _071153_jump
		cmpb   $0x00000e,_0ce6bc_data
		je     _07115a_jump

	_071153_jump:
		mov    $0x000001,%eax
		jmp    _07115c_jump

	_07115a_jump:
		xor    %eax,%eax

	_07115c_jump:
		test   %eax,%eax
		je     _0712b7_jump
		call   *_0c2f7c_data
		test   %ax,%ax
		je     _071193_jump
		mov    _0ce6bc_data,%dl
		cmp    $0x000004,%dl
		je     _071193_jump
		cmp    $0x000002,%dl
		je     _071193_jump
		cmp    $0x000008,%dl
		je     _071193_jump
		cmp    $0x000005,%dl
		je     _071193_jump
		cmp    $0x000003,%dl
		je     _071193_jump
		call   _06f1c8_func

	_071193_jump:
		call   *_0c2f84_data
		test   %ax,%ax
		je     _0711a3_jump
		call   _06f0b0_func

	_0711a3_jump:
		call   *_0c2f80_data
		test   %ax,%ax
		cmpb   $0x000000,_0ce780_data
		je     _0711d3_jump
		cmpb   $0x00000c,_0ce6bc_data
		jne    _0711c3_jump
		call   _066bd0_func

	_0711c3_jump:
		call   *_0c2f7c_data
		test   %ax,%ax
		jne    _0711d3_jump
		call   _06676c_func

	_0711d3_jump:
		call   _041d54_func
		test   %ax,%ax
		je     _0711e7_jump
		mov    $0x000001,%eax
		call   _06e548_func

	_0711e7_jump:
		call   _041ce4_func
		test   %ax,%ax
		je     _0711f8_jump
		xor    %eax,%eax
		call   _06e548_func

	_0711f8_jump:
		call   _041dc4_func
		test   %ax,%ax
		je     _07120d_jump
		call   _06e030_func
		incb   _092994_data

	_07120d_jump:
		call   _041e34_func
		test   %ax,%ax
		je     _071222_jump
		call   _06e370_func
		incb   _092994_data

	_071222_jump:
		cmpb   $0x000000,_092994_data
		jne    _071230_jump
		call   _06eb40_func

	_071230_jump:
		mov    _0ce684_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _071250_jump
		cmpw   $0x000000,_0ce690_data
		jge    _071250_jump
		xor    %edx,%edx
		mov    %dx,_0ce690_data

	_071250_jump:
		cmpw   $0x0000d2,_0ce686_data
		jle    _07126e_jump
		cmpw   $0x000000,_0ce690_data
		jle    _07126e_jump
		xor    %esi,%esi
		mov    %si,_0ce690_data

	_07126e_jump:
		cmpw   $0x000003,_0ce688_data
		jge    _07128b_jump
		cmpw   $0x000000,_0ce692_data
		jge    _07128b_jump
		xor    %edx,%edx
		mov    %dx,_0ce692_data

	_07128b_jump:
		xor    %edx,%edx
		mov    _0ce686_data,%eax
		mov    _0ce6b9_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _0712b7_jump
		cmpw   $0x000000,_0ce692_data
		jle    _0712b7_jump
		xor    %ecx,%ecx
		mov    %cx,_0ce692_data

	_0712b7_jump:
		mov    _0ce692_data,%si
		test   %si,%si
		jle    _0712ca_jump
		call   _058ec8_func
		jmp    _0712d1_jump

	_0712ca_jump:
		jge    _0712d1_jump
		call   _058de8_func

	_0712d1_jump:
		mov    _0ce690_data,%ax
		test   %ax,%ax
		jge    _0712e3_jump
		call   _05949c_func
		jmp    _0712ea_jump

	_0712e3_jump:
		jle    _0712ea_jump
		call   _059418_func

	_0712ea_jump:
		testb  $0x000004,_0ce6d1_data
		je     _0712fd_jump
		mov    $_0ce650_data,%eax
		call   _0567ac_func

	_0712fd_jump:
		cmpw   $0x000000,_0cf892_data
		jne    _071334_jump
		cmpw   $0x000000,_0cf880_data
		jne    _071334_jump
		push   $_0cf876_data
		mov    $_0cf864_data,%ecx
		mov    $_0cf862_data,%ebx
		mov    $_0cf860_data,%edx
		mov    $_0ce650_data,%eax
		call   _01dcfc_func
		call   _02eae8_func

	_071334_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07133c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cf8b4_data
		mov    %dx,_0cf8b2_data
		xor    %edx,%edx
		call   _072a1c_func
		call   _0701a8_func
		test   %al,%al
		je     _07190a_jump
		xor    %eax,%eax
		mov    _0ce678_data,%bx
		mov    _0ce6b8_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce67c_data,%cx
		mov    _0ce6b9_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0ce636_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0ce6a4_data
		call   _02da98_func
		mov    _0cf8b8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0713dc_jump
		xor    %eax,%eax
		mov    _0ce686_data,%edx
		mov    _0ce6b9_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _0713dc_jump
		xor    %esi,%esi
		mov    %si,_0ce692_data

	_0713dc_jump:
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _071421_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _071421_jump
		call   _02d914_func
		test   %ax,%ax
		je     _071421_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02dbdc_func

	_071421_jump:
		testb  $0x000080,_0cf81b_data
		je     _071446_jump
		mov    _0ce6a4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _071446_jump
		cmpw   $0x000000,_0ce6aa_data
		jne    _071446_jump
		call   _05b378_func

	_071446_jump:
		xor    %cl,%cl
		mov    $_0ce650_data,%eax
		mov    %cl,_092994_data
		call   _01e030_func
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _071471_jump
		mov    $_0ce650_data,%eax
		call   _01e790_func
		jmp    _07147f_jump

	_071471_jump:
		xor    %eax,%eax
		mov    %ax,_0ce692_data
		mov    %ax,_0ce690_data

	_07147f_jump:
		mov    _0cf868_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _071563_jump
		xor    %eax,%eax
		mov    _0ce6bd_data,%al
		mov    _0ce65c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0ce6bc_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _071563_jump
		cmpb   $0x000000,_0ce6bd_data
		jne    _0714f2_jump
		mov    _0ce6bc_data,%ah
		cmp    $0x000004,%ah
		je     _0714ec_jump
		cmp    $0x000005,%ah
		je     _0714ec_jump
		cmp    $0x000006,%ah
		je     _0714ec_jump
		cmp    $0x000007,%ah
		je     _0714ec_jump
		cmp    $0x000009,%ah
		je     _0714ec_jump
		cmp    $0x00000a,%ah
		je     _0714ec_jump
		mov    $0x000001,%eax
		jmp    _0714ee_jump

	_0714ec_jump:
		xor    %eax,%eax

	_0714ee_jump:
		test   %eax,%eax
		jne    _07153e_jump

	_0714f2_jump:
		mov    _0ce6bd_data,%ch
		cmp    $0x000001,%ch
		jne    _07150d_jump
		cmp    _0ce6bc_data,%ch
		setne  %al
		and    $0x0000ff,%eax
		jne    _07153e_jump

	_07150d_jump:
		mov    _0ce6bd_data,%dl
		cmp    $0x000003,%dl
		jne    _071563_jump
		mov    _0ce6bc_data,%dh
		cmp    $0x000001,%dh
		je     _071538_jump
		cmp    %dl,%dh
		je     _071538_jump
		cmp    $0x000002,%dh
		je     _071538_jump
		cmp    $0x000004,%dh
		je     _071538_jump
		mov    $0x000001,%eax
		jmp    _07153a_jump

	_071538_jump:
		xor    %eax,%eax

	_07153a_jump:
		test   %eax,%eax
		je     _071563_jump

	_07153e_jump:
		cmpw   $0x000000,_0cf86a_data
		je     _07154f_jump
		mov    $0x000015,%ebx
		jmp    _071554_jump

	_07154f_jump:
		mov    $0x000014,%ebx

	_071554_jump:
		mov    $0x000003,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func

	_071563_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _071575_jump
		cmpb   $0x000008,_0ce6bc_data
		je     _071587_jump

	_071575_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _071591_jump
		cmpb   $0x00001f,_0ce6bc_data
		jne    _071591_jump

	_071587_jump:
		call   _06fa44_func
		jmp    _0716da_jump

	_071591_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _071623_jump
		mov    _0ce6bc_data,%dl
		cmp    $0x000010,%dl
		jne    _0715d1_jump
		call   _07b1a0_func
		mov    _0cf880_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0715e0_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		movw   $0x000001,0x000056(%edx,%eax,4)
		jmp    _0715e0_jump

	_0715d1_jump:
		cmp    $0x000015,%dl
		je     _0715db_jump
		cmp    $0x000014,%dl
		jne    _0715e0_jump

	_0715db_jump:
		call   _06f95c_func

	_0715e0_jump:
		mov    _0ce6bc_data,%bh
		cmp    $0x000016,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _0716da_jump
		cmp    $0x000017,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _0716da_jump
		cmp    $0x000020,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _0716da_jump
		call   _06d2e8_func
		jmp    _0716da_jump

	_071623_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		je     _071633_jump
		call   _06f208_func

	_071633_jump:
		call   *_0c2f7c_data
		test   %ax,%ax
		je     _071643_jump
		call   _06f1c8_func

	_071643_jump:
		call   *_0c2f84_data
		test   %ax,%ax
		je     _071653_jump
		call   _06f0b0_func

	_071653_jump:
		call   *_0c2f80_data
		test   %ax,%ax
		cmpb   $0x000000,_0caf65_data
		je     _07167e_jump
		call   _04210c_func
		test   %ax,%ax
		je     _07167e_jump
		call   _0420d4_func
		test   %ax,%ax
		je     _07167e_jump
		call   _07bfb0_func

	_07167e_jump:
		cmpb   $0x000000,_0ce780_data
		je     _0716a5_jump
		cmpb   $0x00000c,_0ce6bc_data
		jne    _071695_jump
		call   _066bd0_func

	_071695_jump:
		call   *_0c2f7c_data
		test   %ax,%ax
		jne    _0716a5_jump
		call   _06676c_func

	_0716a5_jump:
		mov    _0ce6bd_data,%ch
		cmp    $0x000007,%ch
		jne    _0716b7_jump
		call   _06f500_func
		jmp    _0716d5_jump

	_0716b7_jump:
		cmp    $0x000002,%ch
		jne    _0716c3_jump
		call   _06fa44_func
		jmp    _0716d5_jump

	_0716c3_jump:
		call   *_0c2f78_data
		test   %ax,%ax
		jne    _0716d5_jump
		movb   $0x000001,_0cfa7d_data

	_0716d5_jump:
		call   _070e14_func

	_0716da_jump:
		mov    _0cf81b_data,%al
		test   $0x000060,%al
		je     _07176b_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0ce650_data,%eax
		call   _01dbb4_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		lea    (%edx,%eax,1),%ebx
		mov    _0ce6d4_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    _0ce6d8_data,%edx
		mov    %ebx,0x000028(%eax)
		mov    %ebx,0x000028(%edx)
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%eax),%cl
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    %ebx,0x00002c(%edx)
		cmpl   $0x000000,0x000024(%edx)
		jne    _071752_jump
		mov    %edx,%eax
		call   _01f8e8_func

	_071752_jump:
		mov    _0ce6d4_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _071820_jump
		call   _01f8e8_func
		jmp    _071820_jump

	_07176b_jump:
		test   $0x000018,%al
		je     _071820_jump
		and    $0x000018,%al
		cmp    $0x000008,%al
		jne    _0717b6_jump
		mov    _0cf81b_data,%ah
		and    $0x0000e6,%ah
		mov    $0x000003,%ebx
		mov    %ah,%dl
		mov    %ah,_0cf81b_data
		or     $0x000011,%dl
		mov    $_0ce650_data,%eax
		mov    %dl,_0cf81b_data
		call   _07b628_func
		mov    $0x000001,%edx
		mov    $_0ce650_data,%eax
		call   _01d818_func
		jmp    _071820_jump

	_0717b6_jump:
		cmpb   $0x000001,_0ce6bd_data
		jne    _0717cf_jump
		mov    _0ce6bc_data,%dh
		cmp    $0x000003,%dh
		je     _0717fd_jump
		cmp    $0x000007,%dh
		je     _0717fd_jump

	_0717cf_jump:
		cmpb   $0x000002,_0ce6bd_data
		je     _0717fd_jump
		mov    $0x000003,%ebx
		mov    _0cf81b_data,%cl
		mov    $0x000001,%edx
		or     $0x000001,%cl
		mov    $_0ce650_data,%eax
		mov    %cl,_0cf81b_data
		call   _01d818_func
		jmp    _071820_jump

	_0717fd_jump:
		mov    _0cf81b_data,%al
		and    $0x000018,%al
		cmp    $0x000018,%al
		jne    _071820_jump
		cmpb   $0x000002,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _071820_jump
		andb   $0x0000e7,_0cf81b_data

	_071820_jump:
		mov    _0ce698_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _071832_jump
		call   _070d58_func

	_071832_jump:
		call   _070598_func
		test   %ax,%ax
		je     _071861_jump
		cmpb   $0x000007,_0ce6bd_data
		jne    _07184a_jump
		call   _06f7d0_func

	_07184a_jump:
		xor    %ecx,%ecx
		mov    %cx,_0ce690_data
		mov    %cx,_0cf866_data
		mov    %cx,_0ce698_data

	_071861_jump:
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _071873_jump
		call   _0704b0_func

	_071873_jump:
		call   _070964_func
		call   _059d18_func
		mov    _0ce692_data,%ax
		test   %ax,%ax
		jle    _07188f_jump
		call   _058ec8_func
		jmp    _071896_jump

	_07188f_jump:
		jge    _071896_jump
		call   _058de8_func

	_071896_jump:
		mov    _0ce690_data,%bx
		test   %bx,%bx
		jge    _0718a9_jump
		call   _05949c_func
		jmp    _0718b0_jump

	_0718a9_jump:
		jle    _0718b0_jump
		call   _059418_func

	_0718b0_jump:
		testb  $0x000004,_0ce6d1_data
		je     _0718d9_jump
		cmpb   $0x000007,_0ce6bd_data
		setne  %al
		and    $0x0000ff,%eax
		je     _0718d9_jump
		mov    $_0ce650_data,%eax
		call   _0567ac_func
		call   _070a8c_func

	_0718d9_jump:
		push   $_0cf876_data
		mov    $_0cf864_data,%ecx
		mov    $_0cf862_data,%ebx
		mov    $_0cf860_data,%edx
		mov    $_0ce650_data,%eax
		call   _01dcfc_func
		call   _02eae8_func
		cmpb   $0x000000,_0cfa76_data
		je     _07190a_jump
		call   _062150_func

	_07190a_jump:
		call   _07089c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071920_func:
		push   %edx
		mov    $0x02ee00,%edx
		mov    $_0cd8a0_data,%eax
		call   _07f7d0_func
		pop    %edx
		ret    



_071934_func:
		mov    $_0cd8a0_data,%eax
		jmp    _07fadc_func



_071940_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,(%esp)
		xor    %eax,%eax
		mov    _0cfa4c_data,%al
		mov    $_0c7088_data,%edx
		call   _03d9e4_func
		call   _03b4d0_func
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _03c54c_func
		call   _016e8a_func
		mov    _0cd828_data,%esi
		mov    _0cd138_data,%edi
		xor    %ebx,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cd7d0_data,%edi
		mov    _0cd138_data,%esi
		mov    $_0c7988_data,%ecx
		call   _014ab7_func
		mov    $_0c7088_data,%esi

	_0719b6_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0719ed_jump
		call   _016e9a_func
		call   _016e8a_func
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _03c5cc_func
		inc    %ebx
		mov    0x000004(%esp),%edx
		cmp    %dx,%bx
		jne    _0719b6_jump
		mov    0x000008(%esp),%edi
		dec    %edi
		xor    %edx,%ebx
		mov    %di,0x000008(%esp)
		jmp    _0719b6_jump

	_0719ed_jump:
		call   _042134_func
		xor    %ebx,%ebx
		mov    $_0c7088_data,%esi
		mov    $0x000039,%edi
		xor    %ecx,%ecx

	_071a00_jump:
		mov    %edi,%eax
		call   _041cb0_func
		test   %al,%al
		jne    _071a5a_jump
		call   _041ea4_func
		test   %ax,%ax
		jne    _071a5a_jump
		call   _041f30_func
		test   %ax,%ax
		jne    _071a5a_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _071a5a_jump
		call   _016e9a_func
		call   _016e8a_func
		mov    $_0c7988_data,%edx
		mov    %esi,%eax
		call   _03c5cc_func
		call   _042134_func
		inc    %ebx
		cmp    0x000004(%esp),%bx
		jne    _071a00_jump
		mov    (%esp),%edx
		dec    %edx
		mov    %ecx,%ebx
		mov    %dx,(%esp)
		jmp    _071a00_jump

	_071a5a_jump:
		mov    $_0c7088_data,%edx
		mov    $0x000002,%eax
		call   _03c6bc_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_071a70_func:
		push   %edx
		mov    $0x00001d,%edx
		mov    $_0cd8a0_data,%eax
		call   _047d3c_func
		pop    %edx
		ret    

	_071b23_jump:
		loope  _071b28_jump
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_071b28_jump:
		add    $0x000300,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_071b34_func:
		push   %ebx
		push   %edx
		call   _071920_func
		call   _01cee0_func
		mov    $0x000008,%ebx
		xor    %ah,%ah
		mov    $0xffffffff,%edx
		mov    %ah,_0cfa82_data
		call   _071a70_func
		call   _03ca8c_func
		call   _01cf54_func
		mov    $0x00003c,%eax
		call   _071940_func
		call   _071934_func
		call   _01d028_func
		pop    %edx
		pop    %ebx
		ret    

.data

_071b80_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd"

.text

	_071c00_jump:
		ret    



_071c04_func:
		mov    %ax,_097f64_data
		mov    %eax,%eax
		ret    



_071c10_func:
		push   %ebx

	_071c11_jump:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
	_071c18_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		cmpb   $0x000000,_0cfa17_data
	_071c1d_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		je     _071c38_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_071c22_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03ec0c_func
		cmp    $0x000020,%si
		jle    _071c22_jump

	_071c38_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071ca8_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		movswl %ax,%edx
		cmp    $0xffffffa0,%edx
		jge    _071cc0_jump
		xor    %eax,%eax
		jmp    _071cde_jump

	_071cc0_jump:
		cmp    $0x0001a0,%ax
		jle    _071cd8_jump
		mov    $0x00007f,%eax
		cmp    $0x00007f,%ax
		jle    _071ce9_jump
		mov    $0x00007f,%eax
		pop    %edx
		ret    

	_071cd8_jump:
		lea    0x000060(%edx),%eax
		sar    $0x000002,%eax

	_071cde_jump:
		cmp    $0x00007f,%ax
		jle    _071ce9_jump
		mov    $0x00007f,%eax

	_071ce9_jump:
		pop    %edx
		ret    



_071cec_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01d738_func
		xor    %edx,%edx
		mov    _0ce678_data,%ebx
		mov    _0ce6b8_data,%dl
		add    %ebx,%edx
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    0x000006(%esp),%ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %ecx
		sar    $0x000010,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    _071d77_jump
		xor    %edx,%eax

	_071d77_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071d80_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _071c04_func
		pop    %edx
		pop    %ebx



_071da0_func:
		ret    



_071da4_func:
		test   %ax,%ax
		ret    



_071da8_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cfa17_data
		je     _071e3d_jump
		mov    $0xfffffffe,%ebx
		xor    %eax,%eax

	_071dbe_jump:
		add    $0x000002,%eax
		xor    %edx,%edx
		mov    %bx,_0e548e_data(%eax)
		mov    %dx,_0e54b6_data(%eax)
		cmp    $0x000028,%eax
		jne    _071dbe_jump
		mov    $0x000002,%eax
		mov    %dx,_0e5756_data
		mov    %dx,_0e575a_data
		mov    %dx,_0e5750_data
		mov    $0xfffffffe,%edx
		mov    %ax,_0e5754_data
		xor    %eax,%eax

	_071dfd_jump:
		add    $0x00000c,%eax
		mov    %dx,_0e55c4_data(%eax)
		cmp    $0x000180,%eax
		jne    _071dfd_jump
		xor    %edx,%edx
		mov    _0c2f92_data,%dx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _071c04_func
		mov    _0c2f92_data,%eax
		sar    $0x000010,%eax
		call   _071da4_func

	_071e3d_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_071e44_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax

	_071e4a_jump:
		movswl %ax,%edx
		cmp    _0e5490_data(,%edx,2),%bx
		je     _071e5e_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _071e4a_jump

	_071e5e_jump:
		cmp    $0x000014,%ax
		jne    _071e82_jump

	_071e64_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _071e78_jump
		cmpw   $0x000000,_0e54b8_data(,%edx,2)
		jne    _071e64_jump

	_071e78_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _071e82_jump
		xor    %eax,%eax

	_071e82_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _071e92_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_071e92_jump:
		mov    _0e54b8_data(,%edx,2),%ax
		pop    %edx
		pop    %ebx
		ret    



_071ea0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e5756_data,%cx
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		test   %cx,%cx
		je     _071ee7_jump
		mov    $_0e54e0_data,%edx
		mov    _0e54e0_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _071edd_jump

	_071ecb_jump:
		cmp    %cx,%ax
		jge    _071edd_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _071ecb_jump

	_071edd_jump:
		cmp    %cx,%ax
		jne    _071ee7_jump
		mov    $0xffffffff,%eax

	_071ee7_jump:
		mov    %cx,_0e5756_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071ef4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e55d0_data,%edx
		mov    _0e55d0_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _071f20_jump

	_071f0d_jump:
		cmp    $0x000020,%ax
		jge    _071f20_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _071f0d_jump

	_071f20_jump:
		cmp    $0x000020,%ax
		jne    _071f2b_jump
		mov    $0xffffffff,%eax

	_071f2b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071f6c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $_0e55d6_data,%ebx
		mov    $_0e55d0_data,%edx
		xor    %eax,%eax
		cmp    $0x000030,%cx
		jne    _071f9e_jump

	_071f85_jump:
		cmp    (%ebx),%cx
		jne    _071f8f_jump
		cmp    (%edx),%si
		je     _071fb7_jump

	_071f8f_jump:
		cmp    $0x000020,%ax
		jge    _071fb7_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _071f85_jump

	_071f9e_jump:
		cmp    (%ebx),%cx
		je     _071fb7_jump
		cmp    (%edx),%si
		je     _071fb7_jump
		cmp    $0x000020,%ax
		jge    _071fb7_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _071f9e_jump

	_071fb7_jump:
		cmp    $0x000020,%ax
		jne    _071fc2_jump
		mov    $0xffffffff,%eax

	_071fc2_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_071fc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0e5756_data,%si
		cwtl   
		call   _071ea0_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0720ab_jump
		mov    _0e5756_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _072097_jump

	_071ff7_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e54e0_data(%edx),%cx
		mov    %cx,_0e54e0_data(%eax)
		mov    _0e54e2_data(%edx),%cx
		mov    %cx,_0e54e2_data(%eax)
		mov    _0e54e4_data(%edx),%cx
		mov    %cx,_0e54e4_data(%eax)
		mov    _0e54e6_data(%edx),%cx
		mov    %cx,_0e54e6_data(%eax)
		mov    _0e54e8_data(%edx),%cx
		mov    %cx,_0e54e8_data(%eax)
		mov    _0e54ea_data(%edx),%cx
		mov    %cx,_0e54ea_data(%eax)
		mov    _0e54ec_data(%edx),%cx
		mov    %cx,_0e54ec_data(%eax)
		mov    _0e54ee_data(%edx),%cx
		mov    %cx,_0e54ee_data(%eax)
		mov    _0e54f0_data(%edx),%ecx
		mov    %ecx,_0e54f0_data(%eax)
		mov    _0e54f4_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e54f4_data(%eax)
		cmp    %si,%bx
		jl     _071ff7_jump

	_072097_jump:
		mov    %si,_0e5756_data
		test   %si,%si
		jle    _0720ab_jump
		dec    %esi
		mov    %si,_0e5756_data

	_0720ab_jump:
		mov    _0e5756_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0720b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0e5756_data,%si
		mov    _0cd8c0_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _0721af_jump

	_0720d6_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e54f0_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _0721a5_jump
		test   %edx,%edx
		je     _0721a5_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _07219d_jump

	_0720fd_jump:
		movswl %cx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e54e0_data(%edx),%di
		mov    %di,_0e54e0_data(%eax)
		mov    _0e54e2_data(%edx),%di
		mov    %di,_0e54e2_data(%eax)
		mov    _0e54e4_data(%edx),%di
		mov    %di,_0e54e4_data(%eax)
		mov    _0e54e6_data(%edx),%di
		mov    %di,_0e54e6_data(%eax)
		mov    _0e54e8_data(%edx),%di
		mov    %di,_0e54e8_data(%eax)
		mov    _0e54ea_data(%edx),%di
		mov    %di,_0e54ea_data(%eax)
		mov    _0e54ec_data(%edx),%di
		mov    %di,_0e54ec_data(%eax)
		mov    _0e54ee_data(%edx),%di
		mov    %di,_0e54ee_data(%eax)
		mov    _0e54f0_data(%edx),%edi
		mov    %edi,_0e54f0_data(%eax)
		mov    _0e54f4_data(%edx),%dx
		inc    %ecx
		mov    %dx,_0e54f4_data(%eax)
		cmp    %si,%cx
		jl     _0720fd_jump

	_07219d_jump:
		test   %si,%si
		jle    _0721a6_jump
		dec    %esi
		jmp    _0721a6_jump

	_0721a5_jump:
		inc    %ebx

	_0721a6_jump:
		cmp    %si,%bx
		jl     _0720d6_jump

	_0721af_jump:
		mov    %ebp,_0cd8c0_data
		mov    %si,_0e5756_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0721c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e55d0_data,%edx
		mov    _0e55d0_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _0721f0_jump

	_0721dd_jump:
		cmp    $0x000020,%ax
		jge    _0721f0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _0721dd_jump

	_0721f0_jump:
		cmp    $0x000020,%ax
		je     _0721fb_jump
		movw   $0x00fffe,(%edx)

	_0721fb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072254_func:
		movswl %dx,%edx
		mov    _071b80_data(%edx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_07226c_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _071b80_data(%ebx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_07228c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmpb   $0x000000,_0cfa17_data
		je     _072957_jump
		cmpw   $0x000000,_0ce6aa_data
		je     _0722b8_jump
		cmp    _0cf886_data,%si
		je     _0722c1_jump

	_0722b8_jump:
		cmp    _0cf894_data,%si
		jne    _0722c6_jump

	_0722c1_jump:
		mov    $0xffffffff,%esi

	_0722c6_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		jne    _0722dc_jump
		cmp    $0x00000f,%di
		je     _0722dc_jump
		xor    %eax,%eax
		mov    %ax,_0e5750_data

	_0722dc_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _071e44_func
		mov    %eax,0x00001c(%esp)
		cmp    %ax,%di
		je     _072381_jump
		movswl %ax,%edx
		testb  $0x000008,_097544_data(%edx)
		je     _072381_jump
		mov    %ebx,%eax
		call   _071fc8_func
		mov    %ebx,%eax
		call   _071f6c_func
		test   %ax,%ax
		jl     _072381_jump
		movswl %ax,%ebp
		lea    0x000000(,%ebp,4),%edx
		sub    %ebp,%edx
		xor    %ebx,%ebx
		shl    $0x000002,%edx
		xor    %ecx,%ecx
		mov    _0e55d4_data(%edx),%eax
		mov    %edx,0x000008(%esp)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _097a44_data(,%eax,4),%bl
		mov    _097a46_data(,%eax,4),%cl
		push   %ebx
		xor    %ebx,%ebx
		mov    _097e44_data(%eax),%dl
		mov    _097a45_data(,%eax,4),%bl
		mov    %ebp,%eax
		call   _03ec0c_func
		mov    0x000008(%esp),%eax
		mov    $0xfffffffe,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0e55d0_data(%eax)
		xor    %ch,%ch
		mov    %bx,_0e55d6_data(%eax)
		mov    %ch,_097f44_data(%ebp)

	_072381_jump:
		cmpb   $0x000000,_0cfa53_data
		jne    _0728e4_jump
		test   %di,%di
		je     _0728e4_jump
		mov    0x00001c(%esp),%ecx
		cmp    %cx,%di
		jne    _0723b0_jump
		movswl %cx,%eax
		testb  $0x000004,_097544_data(%eax)
		je     _0728e4_jump

	_0723b0_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _0723ce_jump
		cmp    _0cf894_data,%si
		jne    _0723e4_jump
		mov    _0cf892_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0723e4_jump

	_0723ce_jump:
		mov    $_0ce650_data,%eax
		mov    $0x00007f,%cl
		call   _071ca8_func
		mov    %al,0x000028(%esp)
		mov    %cl,0x000024(%esp)
		jmp    _072424_jump

	_0723e4_jump:
		movswl %si,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _071ca8_func
		mov    %al,0x000028(%esp)
		movswl %di,%eax
		testb  $0x000001,_097544_data(%eax)
		jne    _072414_jump
		movb   $0x00007f,0x000024(%esp)
		jmp    _072424_jump

	_072414_jump:
		mov    _0ccdf0_data,%eax
		add    %edx,%eax
		call   _071cec_func
		mov    %al,0x000024(%esp)

	_072424_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _097a45_data,%bl
		mov    _097a46_data,%cl
		cmp    $0x000035,%di
		jb     _07248b_jump
		jbe    _0724c1_jump
		cmp    $0x000050,%di
		jb     _07246c_jump
		jbe    _0725a2_jump
		cmp    $0x000067,%di
		jb     _072660_jump
		jbe    _072659_jump
		cmp    $0x0000f5,%di
		je     _072640_jump
		jmp    _072660_jump

	_07246c_jump:
		cmp    $0x000037,%di
		jb     _072660_jump
		jbe    _072659_jump
		cmp    $0x000039,%di
		je     _072659_jump
		jmp    _072660_jump

	_07248b_jump:
		cmp    $0x00000f,%di
		jb     _0724b2_jump
		jbe    _072559_jump
		cmp    $0x000013,%di
		jb     _072660_jump
		jbe    _072627_jump
		cmp    $0x00002f,%di
		je     _072501_jump
		jmp    _072660_jump

	_0724b2_jump:
		cmp    $0x00000e,%di
		je     _0725e1_jump
		jmp    _072660_jump

	_0724c1_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		cmpw   $0x0000ee,0x000060(%eax,%edx,4)
		je     _0724f5_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097b19_data,%bl
		mov    _097b18_data,%al
		mov    _097b1a_data,%cl
		jmp    _07267e_jump

	_0724f5_jump:
		xor    %eax,%eax
		mov    _097a44_data,%al
		jmp    _07267e_jump

	_072501_jump:
		cmpw   $0x000005,_0cf88c_data
		je     _072532_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097b00_data,%al
		mov    _097b01_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%ah
		mov    _097b02_data,%cl
		mov    %ah,0x000024(%esp)
		jmp    _072683_jump

	_072532_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097cec_data,%al
		mov    _097ced_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%al
		mov    _097cee_data,%cl
		mov    %al,0x000024(%esp)
		jmp    _072683_jump

	_072559_jump:
		mov    _0e5750_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e5750_data
		cmp    $0x000002,%ax
		jle    _072593_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097a80_data,%al
		mov    _097a81_data,%bl
		mov    %ax,0x000020(%esp)
		xor    %eax,%eax
		mov    _097a82_data,%cl
		mov    %ax,_0e5750_data

	_072593_jump:
		mov    $0xffffffff,%eax
		call   _071fc8_func
		jmp    _072683_jump

	_0725a2_jump:
		mov    _0e5754_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e5754_data
		cmp    $0x000001,%ax
		jle    _072683_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _097b85_data,%bl
		mov    _097b86_data,%cl
		mov    _097b84_data,%al
		mov    %dx,_0e5754_data
		jmp    _07267e_jump

	_0725e1_jump:
		movswl %si,%eax
		mov    %eax,%edx
		xor    %ebx,%ebx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		mov    _097a7d_data,%bl
		mov    _097a7e_data,%cl
		mov    0x00006c(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		mov    _097f56_data(%eax),%al
		xor    %ah,%ah
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		mov    _097a7c_data,%al
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		jmp    _072683_jump

	_072627_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097a91_data,%bl
		mov    _097a90_data,%al
		mov    _097a92_data,%cl
		jmp    _07267e_jump

	_072640_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097e19_data,%bl
		mov    _097e18_data,%al
		mov    _097e1a_data,%cl
		jmp    _07267e_jump

	_072659_jump:
		mov    $0xffffffff,%ebx
		jmp    _072683_jump

	_072660_jump:
		movswl %di,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097a45_data(,%edx,4),%bl
		mov    _097a44_data(,%edx,4),%al
		mov    _097a46_data(,%edx,4),%cl

	_07267e_jump:
		mov    %ax,0x000020(%esp)

	_072683_jump:
		movswl %bx,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0xffffffff,%eax
		je     _0728ac_jump
		cmp    $0x0000ff,%bx
		je     _0728ac_jump
		movswl %si,%ebp
		mov    %ebp,%eax
		call   _071fc8_func
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    %eax,0x000004(%esp)
		movswl %di,%eax
		mov    %eax,0x000014(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000010(%esp)
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _097a47_data(%edx),%al
		mov    %eax,0x000008(%esp)
		xor    %edx,%edx
		mov    _097f62_data,%eax
		mov    0x000024(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,(%esp)
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _07226c_func
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _097a47_data(%edx),%al
		mov    %eax,0x000008(%esp)
		mov    _097f62_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _072254_func
		mov    0x000014(%esp),%eax
		cmpb   $0x000000,_097644_data(%eax)
		jne    _0727e6_jump
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		push   %eax
		xor    %eax,%eax
		mov    _097a47_data(%edx),%al
		mov    _097f62_data,%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		imul   %ebx,%edx
		imul   %edx,%eax
		movswl %cx,%ebx
		sar    $0x00000e,%eax
		mov    0x000018(%esp),%ecx
		cwtl   
		mov    0x000022(%esp),%edx
		push   %eax
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _097e44_data(%ecx),%al
		mov    %edx,%ecx
		mov    0x000014(%esp),%edx
		call   _03eabc_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _0728ac_jump
		mov    %ebp,%eax
		call   _0721c4_func
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000024(%esp),%al
		mov    %ax,_0e55d2_data(,%edx,4)
		xor    %eax,%eax
		mov    %si,_0e55d0_data(,%edx,4)
		mov    0x000028(%esp),%al
		mov    %ax,_0e55d4_data(,%edx,4)
		mov    0x000014(%esp),%eax
		mov    %di,_0e55d6_data(,%edx,4)
		testb  $0x000010,_097544_data(%eax)
		je     _0728ac_jump
		movb   $0x000001,_097f44_data(%ebx)
		jmp    _0728ac_jump

	_0727e6_jump:
		call   _0720b8_func
		mov    %ebp,%eax
		call   _071fc8_func
		mov    _0e5754_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%eax
		mov    %bx,_0e54e4_data(,%edx,8)
		mov    0x000010(%esp),%ebx
		mov    %ax,_0e54e8_data(,%edx,8)
		xor    %eax,%eax
		mov    _097a47_data(%ebx),%al
		mov    %ax,_0e54ea_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		mov    %ax,_0e54ec_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    0x000014(%esp),%ebx
		mov    %ax,_0e54ee_data(,%edx,8)
		xor    %eax,%eax
		mov    _097644_data(%ebx),%al
		mov    _0cd8c0_data,%ebx
		mov    %si,_0e54e0_data(,%edx,8)
		add    %ebx,%eax
		mov    %eax,_0e54f0_data(,%edx,8)
		mov    0x000014(%esp),%eax
		mov    %di,_0e54e2_data(,%edx,8)
		mov    _097844_data(,%eax,2),%bx
		mov    %cx,_0e54e6_data(,%edx,8)
		test   %bx,%bx
		setne  %al
		xor    %ah,%ah
		mov    _0e5756_data,%cx
		mov    %ax,_0e54f4_data(,%edx,8)
		cmp    $0x000009,%cx
		jge    _0728ac_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0e5756_data

	_0728ac_jump:
		cmp    $0x0000cb,%di
		je     _0728cf_jump
		cmp    $0x0000ed,%di
		je     _0728cf_jump
		cmp    $0x0000d1,%di
		je     _0728cf_jump
		cmp    $0x0000e1,%di
		je     _0728cf_jump
		cmp    $0x0000ec,%di
		jne    _0728e4_jump

	_0728cf_jump:
		mov    _0cfa7e_data,%ch
		cmp    $0x000040,%ch
		je     _0728df_jump
		cmp    $0x000080,%ch
		jne    _0728e4_jump

	_0728df_jump:
		call   _01cfd4_func

	_0728e4_jump:
		xor    %eax,%eax

	_0728e6_jump:
		movswl %ax,%edx
		add    %edx,%edx
		cmp    _0e5490_data(%edx),%si
		je     _072909_jump
		mov    _0e548e_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _072909_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _0728e6_jump

	_072909_jump:
		cmp    $0x000014,%ax
		jne    _072944_jump
		test   %di,%di
		je     _072957_jump
		mov    _0ccdf0_data,%ebx

	_07291a_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _07293a_jump
		mov    _0e548e_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		jne    _07291a_jump

	_07293a_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _072944_jump
		xor    %eax,%eax

	_072944_jump:
		movswl %ax,%edx
		mov    %si,_0e5490_data(,%edx,2)
		mov    %di,_0e54b8_data(,%edx,2)

	_072957_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072960_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa17_data
		je     _072a14_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		xor    %edx,%edx
		mov    _097a45_data(%eax),%dl
		cmp    $0xffffffff,%edx
		je     _072a14_jump
		cmp    $0x0000ff,%dl
		je     _072a14_jump
		mov    _097f62_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    _097a47_data(%eax),%bl
		imul   %ecx,%ebx
		sar    $0x000007,%ebx
		push   $0x000040
		movswl %bx,%ebx
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _097a44_data(%eax),%cl
		mov    _097a46_data(%eax),%bl
		xor    %eax,%eax
		mov    _097e44_data(%esi),%al
		call   _03eabc_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _072a14_jump
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0xfffffffe,%ebx
		mov    $0x000040,%ecx
		mov    %bx,_0e55d0_data(,%eax,4)
		mov    %cx,_0e55d2_data(,%eax,4)
		mov    _097544_data(%esi),%bh
		mov    %cx,_0e55d4_data(,%eax,4)
		test   $0x000010,%bh
		je     _072a14_jump
		movb   $0x000001,_097f44_data(%edx)

	_072a14_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072a1c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0cfa17_data
		je     _072e6a_jump
		cmpw   $0x000000,_0ce6aa_data
		je     _072a45_jump
		cmp    _0cf886_data,%si
		je     _072a4e_jump

	_072a45_jump:
		cmp    _0cf894_data,%si
		jne    _072a53_jump

	_072a4e_jump:
		mov    $0xffffffff,%esi

	_072a53_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _071ea0_func
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _072d81_jump
		cmp    $0xffffffff,%edx
		je     _072a87_jump
		cmp    _0cf894_data,%si
		jne    _072a8b_jump
		mov    _0cf892_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _072a8b_jump

	_072a87_jump:
		mov    $0x00007f,%al
		jmp    _072ad3_jump

	_072a8b_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0e54e0_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _097544_data(%eax),%dl
		test   $0x000001,%dl
		je     _072ab5_jump
		test   $0x000002,%dl
		jne    _072ab9_jump

	_072ab5_jump:
		mov    $0x00007f,%al
		jmp    _072ad3_jump

	_072ab9_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _071cec_func

	_072ad3_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000003,%edi
		mov    0x000008(%esp),%edx
		mov    %dx,_0e54ec_data(%edi)
		mov    _0cd8c0_data,%edx
		mov    %edx,(%esp)
		mov    (%esp),%ebx
		cmp    _0e54f0_data(%edi),%ebx
		jne    _072d81_jump
		mov    _0e54ec_data(%edi),%edx
		sar    $0x000010,%edx
		mov    _0e54e8_data(%edi),%ebx
		push   %edx
		mov    _097f62_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		imul   %edx,%eax
		imul   %ebx,%eax
		mov    _0e54e6_data(%edi),%ecx
		sar    $0x000010,%ecx
		sar    $0x00000e,%eax
		mov    _0e54e2_data(%edi),%edx
		cwtl   
		sar    $0x000010,%edx
		push   %eax
		mov    _0e54e0_data(%edi),%eax
		mov    _0e54e4_data(%edi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _097e44_data(%eax),%al
		and    $0x0000ff,%eax
		call   _03eabc_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _072bd5_jump
		movswl %si,%eax
		call   _0721c4_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebx
		mov    %si,_0e55d0_data(,%eax,4)
		mov    %bx,_0e55d2_data(,%eax,4)
		mov    _0e54ee_data(%edi),%bx
		mov    %bx,_0e55d4_data(,%eax,4)
		mov    _0e54e2_data(%edi),%bx
		mov    %bx,_0e55d6_data(,%eax,4)
		mov    _0e54e0_data(%edi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097544_data(%eax)
		je     _072bd5_jump
		movb   $0x000001,_097f44_data(%edx)

	_072bd5_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		cmpw   $0x000000,_0e54f4_data(%ebx)
		je     _072cb4_jump
		mov    _0e54e0_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097744_data(%eax),%al
		mov    (%esp),%ecx
		and    $0x0000ff,%eax
		add    %ecx,%eax
		mov    %eax,_0e54f0_data(%ebx)
		mov    _0e54e0_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097844_data(,%eax,2),%ax
		mov    %ax,_0e54e2_data(%ebx)
		mov    _0e54e0_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097a45_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0e54e4_data(%ebx)
		mov    _0e5754_data,%edx
		mov    _0e54e0_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _097a46_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0e54e6_data(,%eax,8)
		mov    _0e54e0_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097a44_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0e54e8_data(,%eax,8)
		mov    _0e54e0_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097a47_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0e54ea_data(,%eax,8)
		mov    %cx,_0e54f4_data(%ebx)
		jmp    _072d81_jump

	_072cb4_jump:
		mov    0x000004(%esp),%ebx
		cmp    _0e5756_data,%bx
		jge    _072d6c_jump
		mov    _0e5756_data,%di

	_072ccc_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e54e0_data(%edx),%cx
		mov    %cx,_0e54e0_data(%eax)
		mov    _0e54e2_data(%edx),%cx
		mov    %cx,_0e54e2_data(%eax)
		mov    _0e54e4_data(%edx),%cx
		mov    %cx,_0e54e4_data(%eax)
		mov    _0e54e6_data(%edx),%cx
		mov    %cx,_0e54e6_data(%eax)
		mov    _0e54e8_data(%edx),%cx
		mov    %cx,_0e54e8_data(%eax)
		mov    _0e54ea_data(%edx),%cx
		mov    %cx,_0e54ea_data(%eax)
		mov    _0e54ec_data(%edx),%cx
		mov    %cx,_0e54ec_data(%eax)
		mov    _0e54ee_data(%edx),%cx
		mov    %cx,_0e54ee_data(%eax)
		mov    _0e54f0_data(%edx),%ecx
		mov    %ecx,_0e54f0_data(%eax)
		mov    _0e54f4_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e54f4_data(%eax)
		cmp    %di,%bx
		jl     _072ccc_jump

	_072d6c_jump:
		mov    _0e5756_data,%ax
		test   %ax,%ax
		jle    _072d81_jump
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0e5756_data

	_072d81_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _071ef4_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _072e6a_jump
		cmp    $0xffffffff,%edx
		je     _072db2_jump
		cmp    _0cf894_data,%si
		jne    _072db6_jump
		mov    _0cf892_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _072db6_jump

	_072db2_jump:
		mov    $0x00007f,%dl
		jmp    _072e09_jump

	_072db6_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x0000cc,_0e55d6_data(%eax)
		je     _072de9_jump
		mov    _0e55d4_data(%eax),%eax
		sar    $0x000010,%eax
		mov    _097544_data(%eax),%cl
		test   $0x000001,%cl
		je     _072de9_jump
		test   $0x000002,%cl
		jne    _072ded_jump

	_072de9_jump:
		mov    $0x00007f,%dl
		jmp    _072e09_jump

	_072ded_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _071cec_func
		mov    %al,%dl

	_072e09_jump:
		movswl %bx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0e55d4_data(%eax),%si
		mov    _097f44_data(%ecx),%dh
		mov    %bx,_0e55d2_data(%eax)
		test   %dh,%dh
		je     _072e6a_jump
		mov    _0e55d4_data(%eax),%eax
		mov    _097f62_data,%edi
		sar    $0x000010,%eax
		movswl %si,%ebx
		movzbl _097a47_data(,%eax,4),%esi
		xor    %eax,%eax
		sar    $0x000010,%edi
		mov    %dl,%al
		imul   %edi,%eax
		imul   %esi,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _03ec1c_func

	_072e6a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072e74_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0cfa17_data
		je     _072f32_jump
		cmpw   $0x000000,_0ce6aa_data
		je     _072e9f_jump
		cmp    _0cf886_data,%bx
		jne    _072e9f_jump
		mov    $0xffffffff,%ebx

	_072e9f_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _071ef4_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmp    $0xffffffff,%edi
		je     _072ef3_jump
		cmp    $0xffffffff,%edx
		jne    _072ec9_jump
		mov    $_0ce650_data,%eax
		jmp    _072ed1_jump

	_072ec9_jump:
		mov    _0ccdf0_data,%edx
		add    %edx,%eax

	_072ed1_jump:
		call   _071ca8_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0e55d4_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_072ef3_jump:
		cmp    %edi,%edx
		jne    _072efe_jump
		mov    $_0ce650_data,%eax
		jmp    _072f06_jump

	_072efe_jump:
		mov    _0ccdf0_data,%edx
		add    %edx,%eax

	_072f06_jump:
		call   _071ca8_func
		mov    %al,%cl
		movswl %bx,%eax
		call   _071ea0_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _072f32_jump
		lea    0x000000(,%edx,4),%eax
		xor    %ebx,%ebx
		sub    %edx,%eax
		mov    %cl,%bl
		mov    %bx,_0e54ee_data(,%eax,8)

	_072f32_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_072f38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		cmpb   $0x000000,_0cfa17_data
		je     _0730d0_jump
		mov    $_0e55d6_data,%ebp
		xor    %edi,%edi
		mov    $_0e55d0_data,%esi
		mov    %edi,0x000004(%esp)

	_072f5e_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _072f7b_jump
		movswl %dx,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%eax
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _072f9c_jump

	_072f7b_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _072f8c_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _072f9c_jump

	_072f8c_jump:
		mov    _0ccdf4_data,%bx
		cmp    (%esi),%bx
		jg     _07302c_jump

	_072f9c_jump:
		mov    0x000004(%esp),%eax
		mov    _0e55d4_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097544_data(%eax)
		je     _073021_jump
		movswl 0x000000(%ebp),%edx
		xor    %ecx,%ecx
		mov    _097a44_data(,%edx,4),%cl
		push   %ecx
		xor    %ecx,%ecx
		mov    _097a45_data(,%edx,4),%al
		mov    _097a46_data(,%edx,4),%cl
		and    $0x0000ff,%eax
		mov    _097e44_data(%edx),%dl
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%edx
		movswl %di,%eax
		call   _03ec0c_func
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_097f44_data(%edi)
		xor    %edx,%edx

	_072ffd_jump:
		mov    _0e5490_data(%eax),%bx
		cmp    (%esi),%bx
		je     _073012_jump
		add    $0x000002,%eax
		inc    %edx
		cmp    $0x000028,%eax
		jne    _072ffd_jump

	_073012_jump:
		cmp    $0x000014,%edx
		jge    _073021_jump
		movw   $0x00ffff,_0e54b8_data(,%edx,2)

	_073021_jump:
		movw   $0x00fffe,(%esi)
		movw   $0x00ffff,0x000000(%ebp)

	_07302c_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _07305b_jump
		movswl %dx,%eax
		imul   $0x000084,%eax,%edx
		mov    _0ccdf0_data,%ecx
		cmpl   $0x000000,0x000024(%ecx,%edx,1)
		je     _07305b_jump
		xor    %edx,%edx
		call   _072a1c_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _072e74_func

	_07305b_jump:
		mov    0x000004(%esp),%ecx
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%ecx
		add    $0x00000c,%esi
		mov    %ecx,0x000004(%esp)
		cmp    $0x000020,%edi
		jl     _072f5e_jump
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _0730c4_jump

	_07307e_jump:
		mov    _0ccdf4_data,%bx
		cmp    _0e54e0_data(%esi),%bx
		jle    _0730c0_jump
		mov    _0e54de_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0ccdf0_data,%ecx
		cmp    0x000024(%ecx,%edx,1),%ebp
		je     _0730c0_jump
		mov    %ebp,%edx
		call   _072a1c_func
		mov    _0e54de_data(%esi),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		call   _072e74_func

	_0730c0_jump:
		add    $0x000018,%esi
		inc    %edi

	_0730c4_jump:
		mov    _0e5754_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _07307e_jump

	_0730d0_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0730dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa17_data
		je     _073132_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_0730ed_jump:
		movswl %cx,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0e55d6_data(%eax),%dx
		cmp    $0x000006,%dx
		je     _07311f_jump
		cmp    $0x0000f5,%dx
		je     _07311f_jump
		cmp    $0x000002,%dx
		je     _07311f_jump
		mov    _0e55d4_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097544_data(%eax)
		je     _07312b_jump

	_07311f_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _03ec1c_func

	_07312b_jump:
		inc    %ecx
		cmp    $0x000020,%cx
		jl     _0730ed_jump

	_073132_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073138_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cfa17_data
		je     _07315c_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_073149_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		inc    %ecx
		call   _03ec1c_func
		cmp    $0x000020,%cx
		jl     _073149_jump

	_07315c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073164_func:
		push   %edx
		mov    $0x000001,%edx
		call   _073138_func
		mov    %dx,_097f76_data
		pop    %edx
		ret    



_073178_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_097f76_data
		pop    %edx
		ret    

_073184_switch:
		.long   _0731c6_case
		.long   _0731f1_case
		.long   _0731cd_case
		.long   _0731d4_case
		.long   _0731db_case
		.long   _0731ec_case


	_07319c_jump:
		push   %edx
		cmpb   $0x000000,_0cfa17_data
		je     _0731ff_jump
		test   %eax,%eax
		jne    _0731f1_case
		mov    _0cf83a_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _0731f1_case
		and    $0x00ffff,%edx
		jmp    *%cs:_073184_switch(,%edx,4)

	_0731c6_case:
		mov    $0x000001,%eax
		jmp    _0731f1_case

	_0731cd_case:
		mov    $0x000002,%eax
		jmp    _0731f1_case

	_0731d4_case:
		mov    $0x000004,%eax
		jmp    _0731f1_case

	_0731db_case:
		cmpw   $0x000003,_0cf82e_data
		jne    _0731ff_jump
		mov    $0x000003,%eax
		jmp    _0731f1_case

	_0731ec_case:
		mov    $0x000007,%eax

	_0731f1_case:
		mov    _097f62_data,%edx
		sar    $0x000010,%edx
		call   _03edf4_func

	_0731ff_jump:
		pop    %edx
		ret    



_073204_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cd85c_data,%edx
		test   %edx,%edx
		jne    _073269_jump
		mov    $_0cd858_data,%esi
		call   _012748_func
		mov    _0cf88a_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cf87a_data,%eax
		sar    $0x000010,%eax
		mov    _094f3b_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _02a710_func
		xor    %bh,%bh
		mov    $0x000001,%eax
		mov    %bh,_097f79_data
		mov    %eax,_0cd85c_data
		jmp    _07337b_jump

	_073269_jump:
		cmp    $0xffffffff,%edx
		je     _07337b_jump
		mov    $_0cd870_data,%esi
		call   _012748_func
		mov    _0cd870_data,%edx
		sub    _0cd858_data,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x0000b6,%ebx
		add    %eax,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %eax,_0cd85c_data
		mov    _0cf88a_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    _0cf87a_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    _0cd85c_data,%esi
		add    %eax,%edx
		add    $0x000002,%esi
		mov    _094fbc_data(%edx),%edi
		mov    %esi,_0cd85c_data
		cmp    %edi,%esi
		jb     _07337b_jump
		mov    _097f78_data,%al
		inc    %al
		mov    _097f78_data,%ah
		test   %ah,%ah
		jne    _07330c_jump
		mov    %al,_097f78_data
		call   _02a6c4_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_07330c_jump:
		cmp    $0x000004,%ah
		jae    _07331c_jump
		mov    %al,_097f78_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_07331c_jump:
		mov    $_0cd858_data,%esi
		call   _012748_func
		mov    _0cf88a_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cf87a_data,%edx
		sar    $0x000010,%edx
		mov    _094f3b_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		mov    $0x000001,%ebp
		call   _02a654_func
		xor    %bl,%bl
		mov    _097f79_data,%dh
		mov    %bl,_097f78_data
		test   %dh,%dh
		sete   %al
		mov    %ebp,_0cd85c_data
		mov    %al,_097f79_data

	_07337b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_073384_func:
		call   _029790_func
		test   %al,%al
		je     _0733b4_jump
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a360_func
		test   %al,%al
		je     _0733b4_jump
		call   _02a6bc_func
		call   _0293b0_func
		and    $0x0000ff,%eax
		jmp    _02a3b0_func

	_0733b4_jump:
		mov    %al,_0cfa50_data
		ret    



_0733bc_func:
		call   _02a6bc_func
		call   _0293b0_func
		and    $0x0000ff,%eax
		call   _02a384_func
		jmp    _029768_jump



_0733e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e5760_data,%ebp
		movw   $0x000000,0x000000(%ebp)
		test   %ax,%ax
		jl     _07340c_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _073408_jump
		mov    %ebx,%eax

	_073408_jump:
		neg    %eax
		jmp    _07341c_jump

	_07340c_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07341c_jump
		mov    %ebx,%eax

	_07341c_jump:
		mov    %ax,0x000002(%ebp)
		test   %ax,%ax
		jle    _073429_jump
		xor    %eax,%eax
		jmp    _07342e_jump

	_073429_jump:
		mov    $0x000003,%eax

	_07342e_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		mov    %eax,%ebx
		mov    %ax,0x000008(%esp)
		neg    %ebx
		movb   $0x000000,0x000019(%ebp)
		mov    %bx,0x000008(%esp)
		jmp    _07349e_jump

	_073449_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _07fd11_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000006(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _07fd04_func
		call   _0808e0_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _085b4a_func
		call   _07ff01_func
		call   _0805b4_func
		mov    0x000004(%esp),%edx
		add    (%esp),%edx
		mov    0x000008(%esp),%ecx
		lea    0x000000(,%edx,4),%esi
		inc    %ecx
		mov    0x000024(%ebp),%edx
		mov    %cx,0x000008(%esp)
		mov    %eax,(%edx,%esi,1)

	_07349e_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		cmp    %edx,%eax
		jl     _073449_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_0734c3_jump:
		ret    

	_0734c4_case:
		mov    _0e5760_data,%eax
		test   %eax,%eax
		je     _0734c3_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _0734db_jump
		add    $0x000024,%eax
		call   _07fbcc_func

	_0734db_jump:
		cmpl   $0x000000,_0e5760_data
		je     _0734c3_jump
		mov    $_0e5760_data,%eax
		jmp    _07fbcc_func



_0734f0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _0735ee_jump
		test   %ecx,%ecx
		je     _0735ee_jump
		mov    $0x000030,%eax
		call   _07fbb4_func
		mov    %eax,%ebp
		mov    %eax,_0e5760_data
		test   %eax,%eax
		je     _0735ee_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _073541_jump
		mov    %ebx,%eax

	_073541_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07354e_jump
		mov    %ebx,%eax

	_07354e_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _07fd11_func
		call   _07ff01_func
		call   _0805b8_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _07fd11_func
		call   _07ff01_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07ff01_func
		call   _0805b8_func
		mov    $0x00fa00,%ecx
		mov    _0cd130_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0735bf_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0735bf_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cd130_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _07fbb4_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _0735ee_jump
		movb   $0x000001,0x000008(%esp)

	_0735ee_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _073603_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _0733e0_func
		jmp    _073608_jump

	_073603_jump:
		call   _0734c4_case

	_073608_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_073614_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e5760_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _07363d_jump
		jbe    _0736d3_jump
		cmp    $0x000002,%al
		je     _073793_jump
		jmp    _0737f4_jump

	_07363d_jump:
		test   %al,%al
		jne    _0737f4_jump
		cmpb   $0x000000,0x000019(%esi)
		jne    _073682_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _073671_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _07367e_jump

	_073671_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_07367e_jump:
		movb   $0x000001,0x000019(%esi)

	_073682_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07fd04_func
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ebx
		call   _07fd11_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ecx,%eax
		mov    %ebx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _0808e0_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _080872_func
		call   _07ff01_func
		call   _0805b4_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		jmp    _0737f1_jump

	_0736d3_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _07370b_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _0736f1_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _073707_jump

	_0736f1_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_073707_jump:
		movb   $0x000001,0x000019(%esi)

	_07370b_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07fd04_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _07fd11_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _085bd2_func
		jg     _073771_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _07fd11_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _0808e0_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _080899_func
		call   _07ff01_func
		call   _0805b4_func
		mov    %eax,0x00000c(%esi)
		jmp    _073781_jump

	_073771_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebp
		mov    %eax,0x00000c(%esi)
		neg    %ebp
		mov    %ebp,0x00000c(%esi)

	_073781_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		mov    $0x00013f,%edx
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _0737f4_jump

	_073793_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _0737d9_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _0737b8_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebx
		mov    %eax,0x000008(%esi)
		neg    %ebx
		mov    %ebx,0x000008(%esi)
		jmp    _0737d5_jump

	_0737b8_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%edx
		mov    %eax,0x000014(%esi)
		neg    %edx
		mov    %edx,0x000014(%esi)
		mov    %edx,0x000008(%esi)

	_0737d5_jump:
		movb   $0x000001,0x000019(%esi)

	_0737d9_jump:
		mov    0x000014(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    %eax,%ecx
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		neg    %ecx
		add    %edx,%eax
		mov    %ecx,0x00000c(%esi)

	_0737f1_jump:
		mov    %eax,0x000010(%esi)

	_0737f4_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0737ff_jump
		neg    %eax

	_0737ff_jump:
		mov    (%esi),%di
		add    %eax,%edi
		mov    0x000002(%esi),%ax
		mov    %di,(%esi)
		test   %ax,%ax
		jle    _073818_jump
		cmpb   $0x000004,0x000018(%esi)
		jne    _073828_jump
		jmp    _073823_jump

	_073818_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _073828_jump

	_073823_jump:
		movw   $0x000000,(%esi)

	_073828_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073838_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0e5760_data,%edx
		cmpb   $0x000003,0x000018(%edx)
		jne    _073879_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		cmpw   $0x000000,0x000002(%edx)
		jle    _073868_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _07386d_jump

	_073868_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_07386d_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		jmp    _073b70_jump

	_073879_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,0x000010(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _07389d_jump
		jbe    _073988_jump
		cmp    $0x000002,%al
		je     _073a87_jump
		jmp    _073b2e_jump

	_07389d_jump:
		test   %al,%al
		jne    _073b2e_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _0738c4_jump
		cmpb   $0x000001,0x000019(%edx)
		jne    _0738c4_jump
		mov    $0x003e80,%ecx
		mov    0x000010(%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_0738c4_jump:
		xor    %esi,%esi
		mov    %esi,0x000008(%esp)
		mov    $0x000140,%edi

	_0738cf_jump:
		mov    0x00000c(%edx),%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _073905_jump

	_0738d8_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%ebx
		add    (%esi),%eax
		mov    0x000010(%esp),%esi
		add    %ecx,%ebx
		add    %eax,%esi
		lea    (%ebx,%ebp,1),%eax
		mov    (%esi),%bl
		mov    %bl,(%eax)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _0738d8_jump

	_073905_jump:
		cmpw   $0x000000,0x000002(%edx)
		jle    _073936_jump
		mov    0x00000c(%edx),%ecx
		jmp    _073922_jump

	_073911_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		cmp    $0x000140,%eax
		jge    _073921_jump
		movb   $0x000000,(%eax,%ebp,1)

	_073921_jump:
		inc    %ecx

	_073922_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07392d_jump
		neg    %eax

	_07392d_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ecx
		jge    _07395f_jump
		jmp    _073911_jump

	_073936_jump:
		mov    $0xffffffff,%ecx
		mov    0x000010(%esp),%ebx
		jmp    _07394f_jump

	_073941_jump:
		mov    0x000014(%edx),%eax
		sub    %ecx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ebx,%eax,1),%al
		inc    %ecx
		mov    %al,(%esi)

	_07394f_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07395a_jump
		neg    %eax

	_07395a_jump:
		dec    %eax
		cmp    %eax,%ecx
		jl     _073941_jump

	_07395f_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    %edi,%esi
		inc    %eax
		mov    %esi,0x000010(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _073b2e_jump
		jmp    _0738cf_jump

	_073988_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _0739e9_jump

	_073993_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    (%ebx),%edi
		lea    (%eax,%edi,1),%ebx
		mov    0x000014(%edx),%esi
		mov    $0x00013f,%eax
		mov    0x000010(%esp),%edi
		cmp    %ebx,%eax
		jle    _0739b7_jump
		mov    %ebx,%eax

	_0739b7_jump:
		add    %eax,%edi
		mov    (%edi),%bl
		add    %ecx,%esi
		test   %bl,%bl
		jne    _0739df_jump
		test   %ecx,%ecx
		jg     _0739c9_jump
		mov    %esi,%eax
		jmp    _0739df_jump

	_0739c9_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		sub    (%ebx),%eax
		dec    %eax

	_0739df_jump:
		add    0x000010(%esp),%eax
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_0739e9_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _073993_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _073a21_jump
		mov    %eax,%ecx
		jmp    _073a08_jump

	_0739fe_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_073a08_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _073a19_jump
		neg    %eax

	_073a19_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jge    _073a57_jump
		jmp    _0739fe_jump

	_073a21_jump:
		cmp    0x000014(%edx),%eax
		jge    _073a57_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _073a35_jump
		neg    %eax

	_073a35_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx
		jge    _073a57_jump

	_073a40_jump:
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jl     _073a40_jump

	_073a57_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,0x000004(%esp)
		cmp    $0x0000c8,%eax
		jge    _073b2e_jump
		mov    0x00000c(%edx),%ecx
		jmp    _0739e9_jump

	_073a87_jump:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)

	_073a8c_jump:
		mov    0x00000c(%edx),%ecx
		jmp    _073ad2_jump

	_073a91_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000014(%edx),%ebx
		mov    0x000010(%edx),%eax
		mov    (%esi),%edi
		add    %ecx,%ebx
		add    %edi,%eax
		mov    0x000010(%esp),%edi
		mov    %ebx,0x00000c(%esp)
		cmpb   $0x000000,(%edi,%eax,1)
		jne    _073ac4_jump
		test   %ecx,%ecx
		jge    _073abf_jump
		mov    0x00000c(%esp),%eax
		jmp    _073ac4_jump

	_073abf_jump:
		mov    0x000010(%edx),%eax
		sub    (%esi),%eax

	_073ac4_jump:
		add    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%ebx,%ebp,1)

	_073ad2_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _073a91_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _073b08_jump
		mov    %eax,%ecx
		jmp    _073af1_jump

	_073ae7_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_073af1_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _073b02_jump
		neg    %eax

	_073b02_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jl     _073ae7_jump

	_073b08_jump:
		mov    0x000010(%esp),%edi
		mov    (%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,(%esp)
		cmp    $0x0000c8,%eax
		jl     _073a8c_jump

	_073b2e_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x000002(%edx),%bx
		mov    %ecx,0x000014(%edx)
		test   %bx,%bx
		jle    _073b5f_jump
		cmp    0x000008(%edx),%ecx
		jge    _073b70_jump
		mov    0x000018(%edx),%cl
		movb   $0x000000,0x000019(%edx)
		inc    %cl
		mov    %cl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073b5f_jump:
		cmp    0x000004(%edx),%ecx
		jle    _073b70_jump
		mov    0x000018(%edx),%bh
		movb   $0x000000,0x000019(%edx)
		dec    %bh
		mov    %bh,0x000018(%edx)

	_073b70_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073b80_func:
		xor    %ah,%ah
		mov    %ah,_0ceae5_data
		ret    



_073b8c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0cef58_data,%al
		mov    %al,0x00025a(%edx)
		mov    _0cf89e_data,%ax
		mov    %ax,0x000034(%edx)
		mov    _0cf8a6_data,%ax
		mov    %ax,0x000036(%edx)
		mov    _0ce678_data,%ax
		mov    %ax,0x000038(%edx)
		mov    _0ce67c_data,%ax
		mov    %ax,0x00003a(%edx)
		mov    _0ce686_data,%ax
		mov    %ax,0x00003c(%edx)
		mov    _0ce688_data,%ax
		mov    %ax,0x00003e(%edx)
		mov    _0ce6d1_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000040(%edx)
		mov    _0cf81b_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000254(%edx)
		mov    _0cf81a_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000255(%edx)
		mov    _0cf81a_data,%al
		and    $0x000001,%al
		mov    %al,0x000256(%edx)
		test   %ecx,%ecx
		je     _073c50_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000046(%edx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x000042(%edx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x000044(%edx)
		mov    0x00007b(%ecx),%al
		mov    %al,0x000248(%edx)
		mov    0x000081(%ecx),%al
		and    $0x000001,%al
		mov    %al,0x000249(%edx)
		jmp    _073c56_jump

	_073c50_jump:
		movw   $0x00ffff,0x000046(%edx)

	_073c56_jump:
		mov    _0ccdf2_data,%ecx
		mov    _0cee58_data,%esi
		sar    $0x000010,%ecx
		lea    0x000048(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al

	_073c7c_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0ce6b2_data(%ecx),%ah
		mov    %ah,0x00024a(%ecx,%edx,1)
		inc    %al
		cmp    $0x000005,%al
		jb     _073c7c_jump
		mov    _0ce6ba_data,%al
		mov    %al,0x00024f(%edx)
		mov    _0ce6bb_data,%al
		mov    %al,0x000250(%edx)
		mov    _0ce6bd_data,%al
		mov    %al,0x000251(%edx)
		mov    _0ce6bc_data,%al
		mov    %al,0x000252(%edx)
		xor    %al,%al

	_073cc1_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0caeb0_data(,%ecx,2),%bx
		inc    %al
		mov    %bx,0x000020(%edx,%ecx,2)
		cmp    $0x000008,%al
		jb     _073cc1_jump
		mov    _0cf82a_data,%ax
		mov    _0ccdf4_data,%cx
		mov    %ax,0x000030(%edx)
		mov    _0cf828_data,%ax
		xor    %ebx,%ebx
		mov    %ax,0x000032(%edx)
		mov    _0ce77c_data,%al
		mov    %ecx,(%esp)
		mov    %al,0x000253(%edx)
		mov    _0ccdf0_data,%eax
		test   %cx,%cx
		jle    _073d6d_jump

	_073d0d_jump:
		mov    0x000060(%eax),%di
		cmp    $0x00008d,%di
		je     _073d2d_jump
		cmp    $0x0000a4,%di
		je     _073d2d_jump
		cmp    $0x0000b3,%di
		je     _073d2d_jump
		cmp    $0x0000f2,%di
		jne    _073d5f_jump

	_073d2d_jump:
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		movswl %bx,%edi
		shl    %cl,%esi
		mov    0x000081(%eax),%cl
		sar    $0x000005,%edi
		test   $0x000004,%cl
		je     _073d57_jump
		movswl %di,%ecx
		or     %esi,(%edx,%ecx,4)
		jmp    _073d5f_jump

	_073d57_jump:
		movswl %di,%ecx
		not    %esi
		and    %esi,(%edx,%ecx,4)

	_073d5f_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _073d0d_jump

	_073d6d_jump:
		mov    _0cfa7e_data,%al
		movb   $0x000001,0x000259(%edx)
		mov    %al,0x000258(%edx)
		mov    _0cfa82_data,%al
		mov    %al,0x000257(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_073d94_switch:
		.long   _074020_case
		.long   _074027_case
		.long   _074020_case
		.long   _074027_case
		.long   _074017_case
		.long   _074027_case
		.long   _074027_case
		.long   _074020_case
		.long   _074027_case
		.long   _074020_case
		.long   _074027_case
		.long   _074017_case




_073dc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edx
		cmpb   $0x000000,0x000259(%eax)
		je     _0741bf_jump
		mov    _0cf81b_data,%bl
		test   $0x000002,%bl
		je     _073e02_jump
		mov    $0x000021,%ecx
		mov    $_0ce650_data,%edi
		mov    %bl,%bh
		mov    $_0cedd4_data,%esi
		and    $0x0000fd,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0cf81b_data

	_073e02_jump:
		mov    0x00025a(%edx),%al
		mov    %al,_0cef58_data
		mov    0x000034(%edx),%ax
		mov    %ax,_0cf89e_data
		mov    0x000036(%edx),%ax
		mov    %ax,_0cf8a6_data
		mov    0x000036(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0ce678_data
		mov    0x000038(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0ce67c_data
		mov    0x00003c(%edx),%ax
		mov    _0ce6d1_data,%cl
		mov    %ax,_0ce686_data
		mov    0x00003e(%edx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0ce688_data
		mov    0x000040(%edx),%al
		mov    %cl,_0ce6d1_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000255(%edx),%al
		and    $0x000001,%al
		mov    _0cf81a_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cf81a_data
		shl    $0x000003,%al
		mov    %ah,%bl
		or     %al,%bl
		mov    %bl,_0cf81a_data
		mov    _0cf88c_data,%bx
		mov    %ch,_0ce6d1_data
		cmp    $0x000006,%bx
		jne    _073eec_jump
		cmpw   $0x000003,_0cf87c_data
		jne    _073eec_jump
		mov    _0cf81a_data,%bh
		mov    0x000256(%edx),%al
		and    $0x0000fe,%bh
		and    $0x000001,%al
		mov    %bh,%cl
		mov    %bh,_0cf81a_data
		or     %al,%cl
		mov    %cl,_0cf81a_data
		mov    0x000254(%edx),%al
		mov    _0cf81b_data,%ch
		and    $0x000003,%al
		and    $0x00009f,%ch
		shl    $0x000005,%al
		mov    %ch,%ah
		mov    %ch,_0cf81b_data
		or     %al,%ah
		mov    %ah,_0cf81b_data

	_073eec_jump:
		mov    0x000044(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _073f45_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000040(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x000042(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000248(%edx),%bl
		mov    %bl,0x00007b(%eax)
		mov    0x000249(%edx),%bl
		and    $0x000001,%bl
		mov    0x000081(%eax),%bh
		and    $0x0000fe,%bh
		mov    %bh,%cl
		mov    %bh,0x000081(%eax)
		or     %bl,%cl
		mov    %cl,0x000081(%eax)

	_073f45_jump:
		cmp    $_0ce88c_data,%edx
		jne    _073fad_jump
		mov    _0ccdf4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _073fad_jump

	_073f5b_jump:
		movswl %ax,%ebx
		lea    0x000000(,%ebx,2),%ecx
		imul   $0x000084,%ebx,%ebx
		mov    _0cee58_data,%esi
		lea    (%edx,%ecx,1),%edi
		add    %esi,%ecx
		mov    0x000048(%edi),%si
		mov    %si,(%ecx)
		cmp    %ax,%si
		je     _073f92_jump
		mov    _0ccdf0_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _073fa0_jump

	_073f92_jump:
		mov    _0ccdf0_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_073fa0_jump:
		mov    _0ccdf4_data,%di
		inc    %eax
		cmp    %di,%ax
		jl     _073f5b_jump

	_073fad_jump:
		xor    %eax,%eax
		jmp    _073fc2_jump

	_073fb1_jump:
		movswl %ax,%ecx
		mov    0x00024a(%ecx,%edx,1),%bl
		inc    %eax
		mov    %bl,_0ce6b2_data(%ecx)

	_073fc2_jump:
		movswl %ax,%ebx
		cmp    $0x000005,%ebx
		jb     _073fb1_jump
		mov    0x00024f(%edx),%al
		mov    %al,_0ce6ba_data
		mov    0x000250(%edx),%al
		mov    %al,_0ce6bb_data
		mov    0x000251(%edx),%al
		mov    %al,_0ce6bd_data
		mov    0x000252(%edx),%al
		mov    %al,_0ce6bc_data
		cmp    $_0ce88c_data,%edx
		jne    _074027_case
		mov    0x000253(%edx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _074027_case
		and    $0x0000ff,%eax
		jmp    *%cs:_073d94_switch(,%eax,4)

	_074017_case:
		movb   $0x000003,0x000253(%edx)
		jmp    _074027_case

	_074020_case:
		movb   $0x000001,0x000253(%edx)

	_074027_case:
		mov    _0ce6dc_data,%ebx
		mov    0x000253(%edx),%al
		mov    %al,0x00006e(%ebx)
		mov    %al,_0ce77c_data
		mov    0x000258(%edx),%al
		mov    %al,_0cfa7e_data
		xor    %eax,%eax
		mov    %ax,_0cf866_data
		mov    %ax,_0cf870_data

	_074054_jump:
		movswl %ax,%ebx
		mov    0x000020(%edx,%ebx,2),%cx
		inc    %eax
		mov    %cx,_0caeb0_data(,%ebx,2)
		cmp    $0x000008,%ax
		jl     _074054_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    0x000030(%edx),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cf82a_data
		mov    %cx,_0ce690_data
		mov    %cx,_0ce692_data
		mov    %di,_0ce6a6_data
		mov    %ebx,_0ce674_data
		mov    _0ce6d1_data,%ch
		mov    0x000032(%edx),%ax
		xor    %ebx,%ebx
		or     $0x000004,%ch
		mov    %ax,_0cf828_data
		mov    %ch,_0ce6d1_data
		xor    %eax,%eax
		mov    _0ccdf4_data,%cx
		mov    %ax,_0cf8b2_data
		mov    %ax,_0cf8b4_data
		mov    _0ccdf0_data,%eax
		mov    %ecx,(%esp)
		test   %cx,%cx
		jle    _07419e_jump

	_0740dd_jump:
		mov    0x000060(%eax),%di
		cmp    $0x000003,%di
		je     _074185_jump
		cmp    $0x00000d,%di
		je     _074185_jump
		cmp    $0x00000f,%di
		je     _074185_jump
		cmp    $0x00003b,%di
		je     _074185_jump
		cmp    $0x000024,%di
		je     _074185_jump
		cmp    $0x000042,%di
		je     _074185_jump
		cmp    $0x00003e,%di
		je     _074185_jump
		cmp    $0x000063,%di
		je     _074185_jump
		cmp    $0x00008d,%di
		je     _07415b_jump
		cmp    $0x0000a4,%di
		je     _07415b_jump
		cmp    $0x0000b3,%di
		je     _074149_jump
		cmp    $0x0000f2,%di
		jne    _074155_jump

	_074149_jump:
		movl   $0x000001,0x00001c(%eax)
		mov    0x00001c(%eax),%ecx
		jmp    _074157_jump

	_074155_jump:
		xor    %ecx,%ecx

	_074157_jump:
		test   %ecx,%ecx
		je     _07418c_jump

	_07415b_jump:
		movswl %bx,%ecx
		sar    $0x000005,%ecx
		mov    %ecx,%edi
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		shl    %cl,%esi
		movswl %di,%ecx
		test   %esi,(%edx,%ecx,4)
		je     _074185_jump
		orb    $0x000004,0x000081(%eax)
		jmp    _07418c_jump

	_074185_jump:
		andb   $0x0000fb,0x000081(%eax)

	_07418c_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _0740dd_jump

	_07419e_jump:
		xor    %al,%al
		mov    %al,_0cfa70_data
		mov    0x000257(%edx),%al
		inc    %al
		mov    %al,_0cfa82_data
		xor    %eax,%eax
		mov    0x000257(%edx),%al
		call   _03c6f8_func

	_0741bf_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0741c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cf88c_data,%si
		mov    _0cf87c_data,%di
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		xor    %edx,%edx
		cmp    %ax,%si
		jle    _074203_jump

	_0741ed_jump:
		movswl %ax,%ebx
		mov    _094a74_data(%ebx),%bl
		xor    %bh,%bh
		shl    $0x000005,%ebx
		inc    %eax
		add    %ebx,%edx
		cmp    %si,%ax
		jl     _0741ed_jump

	_074203_jump:
		mov    $0x000001,%eax
		cmp    %ax,%di
		jle    _074216_jump

	_07420d_jump:
		inc    %eax
		add    $0x000020,%edx
		cmp    %di,%ax
		jl     _07420d_jump

	_074216_jump:
		mov    $0x000003,%cl
		mov    (%esp),%eax
		mov    %si,_0cf88c_data
		mov    %di,_0cf87c_data
		test   %ax,%ax
		js     _074233_jump
		sar    %cl,%ax
		jmp    _07423c_jump

	_074233_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07423c_jump:
		mov    _0cf88c_data,%si
		add    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074270_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _0741c8_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _074292_jump
		sar    %cl,%ax
		jmp    _07429b_jump

	_074292_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07429b_jump:
		or     %al,_0cafa0_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0742a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _0741c8_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _0742ca_jump
		sar    %cl,%ax
		jmp    _0742d3_jump

	_0742ca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0742d3_jump:
		and    _0cafa0_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0742e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx

	_0742e5_jump:
		movswl %dx,%eax
		imul   $0x000014,%eax,%ebx
		mov    _094d64_data(%ebx),%cl
		and    $0x000001,%cl
		mov    _0caf88_data(%eax),%ch
		and    $0x0000fe,%ch
		mov    %ch,_0caf88_data(%eax)
		or     %cl,%ch
		mov    %ch,_0caf88_data(%eax)
		mov    _094d64_data(%ebx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		and    $0x000001,%cl
		and    $0x0000fd,%ch
		mov    _094d65_data(%ebx),%bl
		mov    %ch,_0caf88_data(%eax)
		add    %cl,%cl
		and    $0x000007,%bl
		or     %cl,%ch
		mov    %ch,%bh
		mov    %ch,_0caf88_data(%eax)
		and    $0x0000e3,%bh
		mov    %bh,_0caf88_data(%eax)
		shl    $0x000002,%bl
		mov    %bh,%cl
		or     %bl,%cl
		inc    %edx
		mov    %cl,_0caf88_data(%eax)
		cmp    $0x000018,%dx
		jl     _0742e5_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07435c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx

	_074361_jump:
		movswl %bx,%edx
		imul   $0x000014,%edx,%eax
		mov    _0caf88_data(%edx),%cl
		and    $0x000001,%cl
		mov    _094d64_data(%eax),%ch
		and    $0x0000fe,%ch
		mov    %ch,_094d64_data(%eax)
		or     %cl,%ch
		mov    %ch,_094d64_data(%eax)
		mov    _0caf88_data(%edx),%cl
		shl    $0x000006,%cl
		shr    $0x000007,%cl
		mov    _0caf88_data(%edx),%dl
		and    $0x000001,%cl
		shl    $0x000003,%dl
		and    $0x0000fb,%ch
		shr    $0x000005,%dl
		mov    %ch,_094d64_data(%eax)
		shl    $0x000002,%cl
		mov    %dl,_094d65_data(%eax)
		or     %cl,%ch
		inc    %ebx
		mov    %ch,_094d64_data(%eax)
		cmp    $0x000018,%bx
		jl     _074361_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0743c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0c140c_data,%edx
		call   _081903_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _0743f9_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _080d12_func
		mov    %ecx,%eax
		call   _085967_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _0819b7_func
		mov    %edx,%eax

	_0743f9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074400_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000104,%esp
		mov    %al,0x0000fc(%esp)
		mov    $_0ccfdc_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		movzbl 0x0000fc(%esp),%ebp
		push   %edi

	_074425_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07443d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074425_jump

	_07443d_jump:
		pop    %edi
		mov    $_0c1410_data,%esi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074453_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _07446b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074453_jump

	_07446b_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $_0c1418_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ebp,%eax
		add    %ecx,%edx
		mov    %esp,%edi
		call   _081256_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074491_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0744a9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074491_jump

	_0744a9_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0ccfdc_data,%esi
		lea    0x000078(%esp),%edi
		call   _085c6b_func
		push   %edi

	_0744c0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0744d8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0744c0_jump

	_0744d8_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0744ed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074505_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0744ed_jump

	_074505_jump:
		pop    %edi
		push   $0x000180
		push   $0x000222
		lea    0x000080(%esp),%eax
		push   %eax
		call   _0813e7_func
		add    $0x00000c,%esp
		movswl %ax,%ecx
		mov    %eax,%esi
		cmp    $0xffffffff,%ecx
		je     _07467a_jump
		lea    0x000000(,%ebp,4),%edx
		mov    $0x000004,%ebx
		sub    $0x000004,%edx
		mov    %ecx,%eax
		add    $_0cd798_data,%edx
		call   _085d1f_func
		mov    $0x000001,%ebx
		mov    $_0cfa3b_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		call   _0742e0_func
		mov    $0x000018,%ebx
		mov    $_0caf88_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x000002,%ebx
		mov    $_0cf81a_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x000014,%ebx
		mov    $_0ce770_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x00000a,%ebx
		mov    $_0cef52_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x000001,%ebx
		mov    $_0ce6c6_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x000a20,%ebx
		mov    $_0cafa0_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x000018,%ebx
		mov    $_0cbb40_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		cmpb   $0x000000,_0cfa53_data
		je     _0745ec_jump
		mov    $0x000002,%ebx
		mov    $_0cf83a_data,%edx
		jmp    _0745f6_jump

	_0745ec_jump:
		mov    $0x000002,%ebx
		mov    $_0cfa60_data,%edx

	_0745f6_jump:
		mov    %ecx,%eax
		call   _085d1f_func
		mov    $0x000002,%ebx
		movswl %si,%ecx
		mov    $_0cf81e_data,%edx
		mov    %ecx,%eax
		call   _085d1f_func
		mov    %ecx,%eax
		mov    0x0000fc(%esp),%dh
		call   _08168b_func
		test   %dh,%dh
		jbe    _07467a_jump
		mov    $_0c1420_data,%edx
		lea    0x000078(%esp),%eax
		call   _081903_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		je     _07467a_jump
		mov    $_0c1424_data,%edx
		mov    %esp,%eax
		call   _081903_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _074669_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _031b48_func
		call   _031840_func
		mov    %al,0x000100(%esp)
		mov    %ecx,%eax
		call   _0819b7_func
		jmp    _074671_jump

	_074669_jump:
		movb   $0x000001,0x000100(%esp)

	_074671_jump:
		mov    %ebp,%eax
		call   _0819b7_func
		jmp    _074682_jump

	_07467a_jump:
		movb   $0x000001,0x000100(%esp)

	_074682_jump:
		mov    $_0c1424_data,%edx
		lea    0x000078(%esp),%eax
		call   _081903_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0746b3_jump
		mov    $0x000001,%ebx
		mov    $0x000a7a,%edx
		mov    %eax,%ecx
		mov    $_0ce650_data,%eax
		call   _080e0e_func
		mov    %esi,%eax
		call   _0819b7_func

	_0746b3_jump:
		lea    0x000078(%esp),%eax
		call   _0800a3_func
		mov    0x000100(%esp),%al
		add    $0x000104,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0746d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000104,%esp
		mov    %al,0x000100(%esp)
		mov    $_0ccfdc_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		push   %edi

	_0746ec_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074704_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0746ec_jump

	_074704_jump:
		pop    %edi
		mov    $_0c1410_data,%esi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_07471a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074732_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07471a_jump

	_074732_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $_0c1418_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000100(%esp),%al
		mov    %esp,%edi
		call   _081256_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_07475f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074777_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07475f_jump

	_074777_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0ccfdc_data,%esi
		lea    0x000078(%esp),%edi
		call   _085c6b_func
		push   %edi

	_07478e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0747a6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _07478e_jump

	_0747a6_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		mov    $_0c1420_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0747c0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0747d8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0747c0_jump

	_0747d8_jump:
		pop    %edi
		mov    %esp,%eax
		call   _081903_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _07482b_jump
		mov    $_0c1424_data,%edx
		lea    0x000078(%esp),%eax
		call   _081903_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _07481a_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _031d28_func
		call   _031840_func
		mov    %al,0x0000fc(%esp)
		mov    %ecx,%eax
		call   _0819b7_func
		jmp    _074822_jump

	_07481a_jump:
		movb   $0x000001,0x0000fc(%esp)

	_074822_jump:
		mov    %edi,%eax
		call   _0819b7_func
		jmp    _074833_jump

	_07482b_jump:
		movb   $0x000001,0x0000fc(%esp)

	_074833_jump:
		cmpb   $0x000000,0x0000fc(%esp)
		jne    _074855_jump
		lea    0x000078(%esp),%eax
		call   _0743c8_func
		cmp    $0x000a7a,%eax
		je     _074855_jump
		movb   $0x000001,0x0000fc(%esp)

	_074855_jump:
		cmpb   $0x000000,0x0000fc(%esp)
		jne    _074973_jump
		push   $0x000180
		push   $0x000200
		lea    0x000080(%esp),%eax
		push   %eax
		call   _0813e7_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		je     _074973_jump
		xor    %eax,%eax
		mov    0x000100(%esp),%al
		shl    $0x000002,%eax
		mov    $_0cd798_data,%edx
		sub    $0x000004,%eax
		mov    $0x000004,%ebx
		add    %eax,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000001,%ebx
		mov    $_0cfa3b_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000018,%ebx
		mov    $_0caf88_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000002,%ebx
		mov    $_0cf81a_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000014,%ebx
		mov    $_0ce770_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x00000a,%ebx
		mov    $_0cef52_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000001,%ebx
		mov    $_0ce6c6_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000a20,%ebx
		mov    $_0cafa0_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000018,%ebx
		mov    $_0cbb40_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000002,%ebx
		mov    $_0cfa60_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000002,%ebx
		mov    $_0cf81e_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    %ecx,%eax
		call   _08168b_func
		xor    %edx,%edx
		call   _07435c_func
		mov    %dx,_0cf834_data
		mov    %dx,_0cf832_data
		jmp    _07497b_jump

	_074973_jump:
		movb   $0x000001,0x0000fc(%esp)

	_07497b_jump:
		mov    $_0c1424_data,%edx
		lea    0x000078(%esp),%eax
		call   _081903_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _0749ac_jump
		mov    $0x000001,%ebx
		mov    $0x000a7a,%edx
		mov    %eax,%ecx
		mov    $_0ce650_data,%eax
		call   _080e0e_func
		mov    %esi,%eax
		call   _0819b7_func

	_0749ac_jump:
		lea    0x000078(%esp),%eax
		call   _0800a3_func
		mov    0x0000fc(%esp),%al
		add    $0x000104,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0749c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000104,%esp
		mov    %al,0x0000fc(%esp)
		mov    $_0ccfdc_data,%esi
		mov    %esp,%edi
		mov    %esp,%edx
		push   %edi

	_0749e4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0749fc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0749e4_jump

	_0749fc_jump:
		pop    %edi
		mov    $_0c1410_data,%esi
		mov    %esp,%edi
		mov    $0x00000a,%ebx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074a12_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074a2a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074a12_jump

	_074a2a_jump:
		pop    %edi
		mov    %esp,%edi
		mov    $_0c1418_data,%esi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x0000fc(%esp),%al
		mov    %esp,%edi
		call   _081256_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074a57_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074a6f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074a57_jump

	_074a6f_jump:
		pop    %edi
		lea    0x0000ec(%esp),%eax
		mov    $_0ccfdc_data,%esi
		lea    0x000078(%esp),%edi
		call   _085c6b_func
		push   %edi

	_074a86_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074a9e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074a86_jump

	_074a9e_jump:
		pop    %edi
		lea    0x0000ec(%esp),%esi
		lea    0x000078(%esp),%edi
		mov    $_0c1420_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074ab8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074ad0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074ab8_jump

	_074ad0_jump:
		pop    %edi
		mov    %esp,%eax
		call   _081903_func
		mov    %eax,%esi
		mov    %eax,%ebx
		test   %eax,%eax
		je     _074b23_jump
		mov    $_0c1424_data,%edx
		lea    0x000078(%esp),%eax
		call   _081903_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _074b12_jump
		mov    %eax,%edx
		mov    %esi,%eax
		call   _031d28_func
		call   _031840_func
		mov    %al,0x000100(%esp)
		mov    %ecx,%eax
		call   _0819b7_func
		jmp    _074b1a_jump

	_074b12_jump:
		movb   $0x000001,0x000100(%esp)

	_074b1a_jump:
		mov    %ebx,%eax
		call   _0819b7_func
		jmp    _074b2b_jump

	_074b23_jump:
		movb   $0x000001,0x000100(%esp)

	_074b2b_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _074b4d_jump
		lea    0x000078(%esp),%eax
		call   _0743c8_func
		cmp    $0x000a7a,%eax
		je     _074b4d_jump
		movb   $0x000001,0x000100(%esp)

	_074b4d_jump:
		cmpb   $0x000000,0x000100(%esp)
		jne    _074c56_jump
		push   $0x000180
		push   $0x000200
		lea    0x000080(%esp),%eax
		push   %eax
		call   _0813e7_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		je     _074c56_jump
		movzbl 0x0000fc(%esp),%esi
		shl    $0x000002,%esi
		mov    $0x000004,%ebx
		lea    -0x000004(%esi),%edx
		mov    %ecx,%eax
		add    $_0cd798_data,%edx
		call   _08560b_func
		mov    $0x000001,%ebx
		mov    $_0cfa3b_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000018,%ebx
		mov    $_0caf88_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000002,%ebx
		mov    $_0cf81a_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x000014,%ebx
		mov    $_0ce770_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    $0x00000a,%ebx
		mov    $_0cef52_data,%edx
		mov    %ecx,%eax
		call   _08560b_func
		mov    %ecx,%eax
		call   _08168b_func
		mov    _0cfa3b_data,%al
		xor    %ch,%ch
		mov    %al,_0cd8af_data(%esi)
		mov    %ch,_0cd8ae_data(%esi)
		xor    %eax,%eax

	_074c12_jump:
		xor    %edx,%edx
		mov    _0caf88_data(%eax),%bl
		mov    0x0000fc(%esp),%dl
		shl    $0x000003,%bl
		shl    $0x000002,%edx
		shr    $0x000005,%bl
		mov    _0cd8ae_data(%edx),%bh
		add    %bl,%bh
		inc    %eax
		mov    %bh,_0cd8ae_data(%edx)
		cmp    $0x000018,%eax
		jl     _074c12_jump
		mov    _0cef52_data,%al
		mov    %al,_0cd8ac_data(%edx)
		mov    _0cef58_data,%al
		mov    %al,_0cd8ad_data(%edx)
		jmp    _074c5e_jump

	_074c56_jump:
		movb   $0x000001,0x000100(%esp)

	_074c5e_jump:
		mov    $_0c1424_data,%edx
		lea    0x000078(%esp),%eax
		call   _081903_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _074c8f_jump
		mov    $0x000001,%ebx
		mov    $0x000a7a,%edx
		mov    %eax,%ecx
		mov    $_0ce650_data,%eax
		call   _080e0e_func
		mov    %esi,%eax
		call   _0819b7_func

	_074c8f_jump:
		lea    0x000078(%esp),%eax
		call   _0800a3_func
		cmpb   $0x000000,_0cfa2c_data
		je     _074cb3_jump
		xor    %eax,%eax
		mov    0x0000fc(%esp),%al
		xor    %ch,%ch
		mov    %ch,_0cd794_data(,%eax,4)

	_074cb3_jump:
		mov    0x000100(%esp),%al
		add    $0x000104,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074cc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    $_0ccfdc_data,%esi
		mov    _095e6c_data,%al
		mov    %esp,%edi
		mov    %al,0x000078(%esp)
		push   %edi

	_074ce1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074cf9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074ce1_jump

	_074cf9_jump:
		pop    %edi
		mov    $_0c1428_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_074d0a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _074d22_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _074d0a_jump

	_074d22_jump:
		pop    %edi
		push   $0x000180
		push   $0x000222
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0813e7_func
		add    $0x00000c,%esp
		movswl %ax,%esi
		mov    %eax,%edi
		cmp    $0xffffffff,%esi
		jne    _074d4b_jump
		xor    %al,%al
		jmp    _07525f_jump

	_074d4b_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa35_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		cmp    $0xffffffff,%eax
		jne    _074d6c_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d6c_jump:
		call   _03f008_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074d8e_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074d8e_jump:
		call   _03f010_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074db0_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074db0_jump:
		call   _03f018_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074dd2_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074dd2_jump:
		call   _03f020_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074df4_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074df4_jump:
		call   _03f028_func
		mov    $0x000004,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074e16_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e16_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa25_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074e36_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e36_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f88_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074e56_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e56_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f8a_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074e76_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e76_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f8c_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074e96_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074e96_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f8e_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074eb6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074eb6_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f90_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074ed6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ed6_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f92_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074ef6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ef6_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f94_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074f16_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f16_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa23_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074f36_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f36_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa1d_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074f56_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f56_jump:
		mov    $0x000002,%ebx
		mov    $_0cf748_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074f76_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f76_jump:
		mov    $0x000002,%ebx
		mov    $_0cf750_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074f96_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074f96_jump:
		mov    $0x000002,%ebx
		mov    $_0cf74a_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074fb6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074fb6_jump:
		mov    $0x000002,%ebx
		mov    $_0cf752_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074fd6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074fd6_jump:
		mov    $0x000002,%ebx
		mov    $_0cf74e_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _074ff6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074ff6_jump:
		mov    $0x000002,%ebx
		mov    $_0cf74c_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075016_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075016_jump:
		xor    %cl,%cl
		mov    $0x000001,%esi

	_07501d_jump:
		xor    %eax,%eax
		mov    %cl,%al
		mov    $_0c97f0_data,%edx
		add    %eax,%eax
		mov    %esi,%ebx
		add    %eax,%edx
		movswl %di,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075043_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075043_jump:
		inc    %cl
		cmp    $0x000004,%cl
		jb     _07501d_jump
		movswl %di,%esi
		xor    %cl,%cl

	_07504f_jump:
		xor    %eax,%eax
		mov    %cl,%al
		mov    $0x000001,%ebx
		mov    _095e40_data(,%eax,4),%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075075_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075075_jump:
		inc    %cl
		cmp    $0x000007,%cl
		jb     _07504f_jump
		mov    $0x000001,%ebx
		mov    $_095e2d_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _07509c_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07509c_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa20_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _0750bc_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0750bc_jump:
		mov    $0x000001,%ebx
		mov    $_095e6a_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _0750dc_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0750dc_jump:
		mov    0x000078(%esp),%ah
		cmp    $0x000001,%ah
		je     _0750f4_jump
		test   %ah,%ah
		je     _0750f4_jump
		cmp    $0x000002,%ah
		je     _0750f4_jump
		xor    %bl,%bl
		mov    %bl,0x000078(%esp)

	_0750f4_jump:
		mov    $0x000001,%ebx
		movswl %di,%esi
		lea    0x000078(%esp),%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075116_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075116_jump:
		mov    $0x000001,%ebx
		mov    $_095e66_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075136_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075136_jump:
		mov    $0x000001,%ebx
		mov    $_095e6d_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075156_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075156_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa1f_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075176_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075176_jump:
		mov    $0x000010,%ebx
		mov    $_095e70_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075196_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075196_jump:
		mov    $0x000010,%ebx
		mov    $_095e80_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _0751b6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0751b6_jump:
		mov    $0x000010,%ebx
		mov    $_095e90_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _0751d6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0751d6_jump:
		mov    $0x000004,%ebx
		mov    $_095ea0_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _0751f6_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0751f6_jump:
		mov    $0x000004,%ebx
		mov    $_095ea4_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075216_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075216_jump:
		mov    $0x000004,%ebx
		mov    $_095ea8_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075236_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075236_jump:
		mov    $0x000004,%ebx
		mov    $_095eac_data,%edx
		mov    %esi,%eax
		call   _085d1f_func
		test   %eax,%eax
		jg     _075256_jump
		xor    %al,%al
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075256_jump:
		mov    %esi,%eax
		call   _08168b_func
		mov    $0x000001,%al

	_07525f_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075268_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000078,%esp
		mov    $_0ccfdc_data,%esi
		mov    %esp,%edi
		push   %edi

	_075278_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _075290_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _075278_jump

	_075290_jump:
		pop    %edi
		mov    $_0c1428_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0752a1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0752b9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0752a1_jump

	_0752b9_jump:
		pop    %edi
		push   $0x000180
		push   $0x000200
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0813e7_func
		add    $0x00000c,%esp
		movswl %ax,%esi
		mov    %eax,%edi
		cmp    $0xffffffff,%esi
		jne    _0752e2_jump
		xor    %al,%al
		jmp    _07582e_jump

	_0752e2_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0816ab_func
		cmp    $0x000084,%eax
		je     _075302_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075302_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _0816ab_func
		mov    $0x000001,%ebx
		mov    $_0cfa35_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _07532e_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07532e_jump:
		mov    $0x000004,%ebx
		mov    $_0cd040_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _07534f_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07534f_jump:
		mov    $0x000004,%ebx
		mov    $_0cd048_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _075370_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075370_jump:
		mov    $0x000004,%ebx
		mov    $_0cd050_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _075391_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075391_jump:
		mov    $0x000004,%ebx
		mov    $_0cd04c_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _0753b2_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0753b2_jump:
		mov    $0x000004,%ebx
		mov    $_0cd044_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _0753d3_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0753d3_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa25_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		cmp    $0xffffffff,%eax
		jne    _0753f4_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0753f4_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f88_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075414_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075414_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f8a_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075434_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075434_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f8c_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075454_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075454_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f8e_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075474_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075474_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f90_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075494_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075494_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f92_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0754b4_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0754b4_jump:
		mov    $0x000002,%ebx
		mov    $_0c2f94_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0754d4_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0754d4_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa1c_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0754f4_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0754f4_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa1e_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075514_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075514_jump:
		mov    $0x000002,%ebx
		mov    $_0cf748_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075534_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075534_jump:
		mov    $0x000002,%ebx
		mov    $_0cf750_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075554_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075554_jump:
		mov    $0x000002,%ebx
		mov    $_0cf74a_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075574_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075574_jump:
		mov    $0x000002,%ebx
		mov    $_0cf752_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075594_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075594_jump:
		mov    $0x000002,%ebx
		mov    $_0cf74e_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0755b4_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0755b4_jump:
		mov    $0x000002,%ebx
		mov    $_0cf74c_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0755d4_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0755d4_jump:
		xor    %cl,%cl
		mov    $0x000001,%esi

	_0755db_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		movswl %di,%eax
		add    %edx,%edx
		mov    %esi,%ebx
		add    $_0c97f0_data,%edx
		call   _08560b_func
		test   %eax,%eax
		jg     _075600_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075600_jump:
		inc    %cl
		cmp    $0x000004,%cl
		jb     _0755db_jump
		movswl %di,%esi
		xor    %cl,%cl

	_07560c_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    _095e40_data(,%edx,4),%edx
		call   _08560b_func
		test   %eax,%eax
		jg     _075632_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075632_jump:
		inc    %cl
		cmp    $0x000007,%cl
		jb     _07560c_jump
		mov    $0x000001,%ebx
		mov    $_095e2d_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075659_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075659_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa20_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075679_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075679_jump:
		mov    $0x000001,%ebx
		mov    $_095e6a_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075699_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075699_jump:
		cmpb   $0x000046,_095e6c_data
		je     _0756c2_jump
		mov    $0x000001,%ebx
		mov    $_095e6c_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0756e2_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0756c2_jump:
		mov    $0x000001,%ebx
		mov    $_095e66_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0756e2_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0756e2_jump:
		mov    $0x000001,%ebx
		movswl %di,%esi
		mov    $_095e66_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075705_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075705_jump:
		mov    $0x000001,%ebx
		mov    $_095e6d_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075725_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075725_jump:
		mov    $0x000001,%ebx
		mov    $_0cfa1f_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075745_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075745_jump:
		mov    $0x000010,%ebx
		mov    $_095e70_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075765_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075765_jump:
		mov    $0x000010,%ebx
		mov    $_095e80_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075785_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075785_jump:
		mov    $0x000010,%ebx
		mov    $_095e90_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0757a5_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0757a5_jump:
		mov    $0x000004,%ebx
		mov    $_095ea0_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0757c5_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0757c5_jump:
		mov    $0x000004,%ebx
		mov    $_095ea4_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _0757e5_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0757e5_jump:
		mov    $0x000004,%ebx
		mov    $_095ea8_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075805_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075805_jump:
		mov    $0x000004,%ebx
		mov    $_095eac_data,%edx
		mov    %esi,%eax
		call   _08560b_func
		test   %eax,%eax
		jg     _075825_jump
		xor    %al,%al
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075825_jump:
		mov    %esi,%eax
		call   _08168b_func
		mov    $0x000001,%al

	_07582e_jump:
		add    $0x000078,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075840_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cfa68_data
		jne    _075905_jump
		mov    _0cf858_data,%ecx
		mov    _0cf8b0_data,%ebx
		mov    _0cf856_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cf89c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _075887_jump
		cmp    %ecx,%eax
		jg     _075887_jump
		mov    $0x000001,%eax
		jmp    _075889_jump

	_075887_jump:
		xor    %eax,%eax

	_075889_jump:
		test   %eax,%eax
		je     _0758ce_jump
		mov    _0cf85a_data,%ecx
		mov    _0cf8b2_data,%ebx
		mov    _0cf854_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0758c4_jump
		cmp    %ecx,%eax
		jg     _0758c4_jump
		mov    $0x000001,%eax
		jmp    _0758c6_jump

	_0758c4_jump:
		xor    %eax,%eax

	_0758c6_jump:
		test   %eax,%eax
		je     _0758ce_jump
		mov    $0x000001,%al
		jmp    _0758d0_jump

	_0758ce_jump:
		xor    %al,%al

	_0758d0_jump:
		mov    %al,_0cfa68_data
		test   %al,%al
		je     _07591e_jump
		mov    _0cf89e_data,%ax
		mov    %ax,_0cf872_data
		mov    %ax,_0cf86e_data
		mov    _0cf856_data,%ax
		mov    %ax,_0cf854_data
		mov    _0cf85c_data,%ax
		mov    %ax,_0cf85e_data
		jmp    _07591e_jump

	_075905_jump:
		mov    _0cf854_data,%ax
		mov    _0cf8a6_data,%dx
		cmp    %dx,%ax
		jge    _07591e_jump
		mov    %dx,_0cf854_data

	_07591e_jump:
		mov    _0cfa68_data,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075928_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _018ad0_func
		cwtl   
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01e030_func
		movl   $0x000000,0x000024(%edx)
		movw   $0x000000,0x000040(%edx)
		xor    %bl,%bl
		movw   $0x000000,0x000042(%edx)
		mov    %bl,_0cfa94_data
		mov    0x000081(%edx),%ah
		mov    0x000060(%edx),%cx
		xor    %bh,%bh
		or     $0x000004,%ah
		mov    %bl,_0cfa8e_data
		mov    %bx,_0e577a_data
		mov    %ah,0x000081(%edx)
		cmp    $0x00004a,%cx
		jne    _075997_jump
		mov    _0e5775_data,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _018c8c_func

	_075997_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0e5774_data
		mov    %si,_0e577e_data
		mov    %si,_0e5778_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0759b4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		cmpw   $0x000000,0x000056(%eax)
		jle    _075ab9_jump
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _075ab9_jump

	_0759de_jump:
		cmpw   $0x00005c,0x000060(%ecx)
		jne    _075aa9_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _075aa9_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		test   %bx,%bx
		je     _075a1c_jump
		neg    %eax

	_075a1c_jump:
		movswl %ax,%edx
		mov    0x000028(%esi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000002,%bl
		mov    %eax,0x00002c(%ecx)
		mov    %bl,0x00006c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00006d(%ecx)
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%dl
		or     $0x000004,%dl
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		and    $0x0000bf,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f8e8_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000056(%esi),%ax
		dec    %eax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01e030_func
		mov    %ecx,%eax
		movw   $0x00000a,0x000050(%ecx)
		call   _07b29c_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_075aa9_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0759de_jump

	_075ab9_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_075ac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movw   $0x000000,0x000040(%eax)
		mov    $0x000001,%ebx
		movw   $0x000000,0x000042(%eax)
		call   _01e030_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    0x000032(%ecx),%edx
		mov    $0x0000f6,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    %ecx,%eax
		call   _07b29c_func
		movw   $0x00000a,0x000050(%ecx)
		movw   $0x000003,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075b0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x000060(%eax),%ax
		cmp    $0x00005d,%ax
		jb     _075b2e_jump
		jbe    _075c78_jump
		cmp    $0x0000b6,%ax
		je     _075b3d_jump
		jmp    _075d08_jump

	_075b2e_jump:
		cmp    $0x00005c,%ax
		je     _075bea_jump
		jmp    _075d08_jump

	_075b3d_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _075d08_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		mov    _0e576c_data,%cx
		add    %ebx,%eax
		sub    %ecx,%eax
		cmp    $0x000014,%ax
		jge    _075b8b_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		mov    0x000081(%esi),%ah
		movw   $0x000003,0x000040(%esi)
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075b8b_jump:
		cmp    $0x0000c8,%ax
		jge    _075d08_jump
		movswl %ax,%edx
		sar    $0x000003,%edx
		sub    $0x000002,%edx
		cmp    $0x000002,%dl
		jae    _075ba5_jump
		mov    $0x000002,%dl

	_075ba5_jump:
		cmp    $0x000032,%ax
		setl   %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    %al,%dh
		xor    %eax,%eax
		mov    %dl,%al
		xor    %ebx,%ebx
		mov    _0cf9f5_data(%eax),%bl
		sar    %eax
		cmp    %eax,%ebx
		jge    _075bdb_jump
		mov    0x00003a(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dh,%al
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075bdb_jump:
		mov    0x00003a(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075bea_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _075d08_jump
		mov    0x000050(%esi),%cx
		dec    %cx
		mov    %cx,0x000050(%esi)
		jne    _075d08_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _075c17_jump
		jbe    _075c2b_jump
		cmp    $0x000003,%al
		je     _075c50_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075c17_jump:
		cmp    $0x000001,%al
		jne    _075d08_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0759b4_func

	_075c2b_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0759b4_func
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075c50_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0759b4_func
		mov    0x000081(%esi),%cl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075c78_jump:
		push   $0x00008c
		mov    _0e576c_data,%eax
		push   $0x000014
		sar    $0x000010,%eax
		push   %eax
		mov    _0e576a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00002c(%esi),%di
		mov    0x000069(%esi),%al
		add    %edi,%eax
		sub    $0x000018,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _02b430_func
		test   %ax,%ax
		je     _075d08_jump
		cmpb   $0x000000,_0e5774_data
		jne    _075cd2_jump
		movb   $0x000001,_0e5774_data

	_075cd2_jump:
		mov    0x00002c(%esi),%edx
		movl   $0x000000,0x000024(%esi)
		add    $0x00001e,%edx
		mov    %edx,0x00002c(%esi)
		mov    $0x0000f3,%eax
		mov    0x000081(%esi),%bl
		mov    0x000032(%esi),%edx
		and    $0x0000fb,%bl
		sar    $0x000010,%edx
		mov    %bl,0x000081(%esi)
		call   _07228c_func
		mov    %esi,%eax
		call   _07b29c_func

	_075d08_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_075d10_switch:
		.long   _075e00_case
		.long   _075e0e_case
		.long   _075e1c_case
		.long   _075e2a_case




_075d20_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		mov    %eax,%ecx
		cmp    $0x000066,%dx
		jne    _075d4a_jump

	_075d31_jump:
		cmpl   $0x000000,0x000024(%ecx)
		je     _075d4a_jump
		mov    0x0000e4(%ecx),%di
		add    $0x000084,%ecx
		cmp    $0x000066,%di
		je     _075d31_jump

	_075d4a_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _075e83_jump
		cmp    $0x000004,%bx
		jge    _075dbc_jump
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%al
		and    $0x000001,%dl
		and    $0x0000f7,%al
		shl    $0x000003,%dl
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		cmp    $0x000002,%bx
		jge    _075d95_jump
		mov    $0xffffffff,%edx
		jmp    _075d9a_jump

	_075d95_jump:
		mov    $0x000001,%edx

	_075d9a_jump:
		mov    %dx,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _075dae_jump
		mov    $0x000001,%edx
		jmp    _075db3_jump

	_075dae_jump:
		mov    $0xffffffff,%edx

	_075db3_jump:
		mov    %dx,0x000040(%ecx)
		jmp    _075e36_jump

	_075dbc_jump:
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%ah
		and    $0x000001,%dl
		and    $0x0000f7,%ah
		shl    $0x000003,%dl
		mov    %ah,%dh
		mov    %ah,0x000081(%ecx)
		or     %dl,%dh
		sub    $0x000004,%ebx
		mov    %dh,0x000081(%ecx)
		cmp    $0x000003,%bx
		ja     _075e36_jump
		xor    %edx,%edx
		mov    %bx,%dx
		jmp    *%cs:_075d10_switch(,%edx,4)

	_075e00_case:
		movw   $0x000000,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		jmp    _075e36_jump

	_075e0e_case:
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _075e36_jump

	_075e1c_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		jmp    _075e36_jump

	_075e2a_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000042(%ecx)

	_075e36_jump:
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movb   $0x000005,0x00006c(%ecx)
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f8e8_func
		mov    %ecx,%eax
		call   _01e030_func

	_075e83_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _075f91_jump

	_075ea6_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _075f81_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _075f81_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000f4,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    %esi,%eax
		call   _07b29c_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000001,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000002,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000003,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000004,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000005,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000006,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _075d20_func
		mov    $0x000007,%ebx
		lea    0x000084(%ecx),%eax
		mov    %esi,%edx
		call   _075d20_func
		mov    0x000081(%esi),%ah
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075f81_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _075ea6_jump

	_075f91_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075f98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0760c4_jump

	_075fb6_jump:
		cmpw   $0x00005d,0x000060(%ecx)
		jne    _0760b4_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0760b4_jump
		cmpw   $0x000000,0x000040(%esi)
		jne    _075ff9_jump
		movw   $0x00ffff,0x000040(%ecx)
		movw   $0x00fffc,0x000042(%ecx)
		movb   $0x00000a,0x000072(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000002,0x000050(%ecx)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _07603a_jump

	_075ff9_jump:
		mov    _0ce6dc_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _07600c_jump
		mov    $0xfffffffc,%eax
		jmp    _076011_jump

	_07600c_jump:
		mov    $0x000004,%eax

	_076011_jump:
		mov    %ax,0x000040(%ecx)
		test   %ax,%ax
		jge    _076023_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07602a_jump

	_076023_jump:
		orb    $0x000008,0x000081(%ecx)

	_07602a_jump:
		movb   $0x0000ff,0x000072(%ecx)
		movw   $0x000001,0x000050(%ecx)
		movw   $0x00ffff,0x000042(%ecx)

	_07603a_jump:
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		movb   $0x000002,0x00006d(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003c(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x00006c(%ecx)
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f8e8_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x0000c8,0x000056(%ecx)
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%esi)
		call   _01e030_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0760b4_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _075fb6_jump

	_0760c4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0760cc_func:
		push   %ebx
		mov    0x000060(%eax),%dx
		cmp    $0x00005b,%dx
		jb     _0760ea_jump
		jbe    _0760f7_jump
		cmp    $0x00005d,%dx
		jb     _076122_jump
		jbe    _0760fe_jump
		cmp    $0x0000b6,%dx
		je     _0760f0_jump
		pop    %ebx
		ret    

	_0760ea_jump:
		cmp    $0x00005a,%dx
		jne    _076122_jump

	_0760f0_jump:
		call   _075f98_func
		pop    %ebx
		ret    

	_0760f7_jump:
		call   _075e88_func
		pop    %ebx
		ret    

	_0760fe_jump:
		mov    _0ce6dc_data,%edx
		mov    0x000040(%edx),%dx
		movw   $0x00ffff,0x000042(%eax)
		movb   $0x0000ff,0x000072(%eax)
		mov    0x000040(%eax),%bx
		movw   $0x000001,0x000050(%eax)
		add    %edx,%ebx
		mov    %bx,0x000040(%eax)

	_076122_jump:
		pop    %ebx
		ret    



_076124_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00005c,%ax
		jb     _076145_jump
		jbe    _07614f_jump
		cmp    $0x00005d,%ax
		jbe    _07615a_jump
		cmp    $0x0000b6,%ax
		je     _07615a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076145_jump:
		cmp    $0x00005a,%ax
		je     _07615a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07614f_jump:
		mov    %edx,%eax
		call   _075ac0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07615a_jump:
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _076166_jump
		neg    %eax

	_076166_jump:
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jle    _076184_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000042(%edx)

	_076184_jump:
		mov    $0x00000a,%al
		mov    0x000071(%edx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%edx)
		mov    %edx,%eax
		call   _01e030_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07619c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		cmpb   $0x000006,_0e5780_data
		jbe    _0761b4_jump
		movb   $0x000006,_0e5780_data

	_0761b4_jump:
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _07632b_jump

	_0761cc_jump:
		xor    %edx,%edx
		mov    _0e5780_data,%dl
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    _097f7c_data(%edx),%bl
		mov    0x000060(%ecx),%si
		add    $0x00005a,%ebx
		cmp    %ebx,%esi
		jne    _07631b_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07631b_jump
		mov    0x000081(%ecx),%bl
		mov    0x000081(%ebp),%al
		and    $0x0000f7,%bl
		and    $0x000008,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		mov    _097f80_data(%edx),%ax
		mov    %ax,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _07624d_jump
		mov    _097f7e_data(%edx),%ax
		mov    _0e576e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000017,%edx
		mov    %ax,0x000040(%ecx)
		jmp    _076271_jump

	_07624d_jump:
		mov    _097f7e_data(%edx),%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ecx)
		neg    %edx
		mov    %dx,0x000040(%ecx)
		mov    _0e576e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000009,%edx

	_076271_jump:
		sub    %ebx,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0e5770_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		add    $0x000019,%ebx
		mov    %ebx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    _0e5780_data,%bl
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    $0x000001,%ebx
		mov    _097f7c_data(,%edx,2),%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%ah
		xor    %ebx,%ebx
		or     $0x000004,%ah
		movl   $0x000001,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000bf,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f8e8_func
		mov    _0e5780_data,%bl
		lea    0x000000(,%ebx,4),%edx
		movb   $0x000000,0x000071(%ecx)
		add    %ebx,%edx
		movb   $0x00000a,0x000072(%ecx)
		mov    _097f82_data(,%edx,2),%ax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01e030_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07631b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _0761cc_jump

	_07632b_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076334_func:
		push   %ebx
		push   %edx
		mov    _0e577c_data,%bx
		mov    _0e5778_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		movswl %bx,%eax
		mov    _097fc2_data(%edx,%eax,4),%eax
		mov    %eax,_0e5764_data
		cmpw   $0x000000,_0e5766_data
		je     _076378_jump
		xor    %ebx,%ebx
		jmp    _076379_jump

	_076378_jump:
		inc    %ebx

	_076379_jump:
		mov    _0e5764_data,%al
		mov    %bx,_0e577c_data
		pop    %edx
		pop    %ebx
		ret    



_076388_func:
		push   %edx
		cmpw   $0x00004a,0x000060(%eax)
		jne    _0763ad_jump
		call   _07619c_func
		mov    _0e5765_data,%al
		inc    %al
		mov    %al,_0cfa95_data
		call   _076334_func
		mov    %al,_0e5780_data
		pop    %edx
		ret    

	_0763ad_jump:
		xor    %dl,%dl
		mov    %dl,_0e5780_data
		call   _07619c_func
		pop    %edx
		ret    



_0763bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000064,_0cfa94_data
		je     _07644b_jump
		mov    0x000076(%eax),%dh
		dec    %dh
		mov    %dh,0x000076(%eax)
		test   %dh,%dh
		jbe    _076443_jump
		mov    0x00006d(%eax),%cl
		cmp    $0x000002,%cl
		je     _076405_jump
		mov    $0x000003,%ebx
		mov    0x00006c(%eax),%dl
		mov    %cl,_0e5776_data
		mov    %dl,_0e5777_data
		xor    %edx,%edx
		mov    $0x000002,%ch
		call   _01d818_func
		mov    %ch,_0e5774_data
		jmp    _07640c_jump

	_076405_jump:
		xor    %al,%al
		mov    %al,_0e5774_data

	_07640c_jump:
		mov    _0e577a_data,%dx
		inc    %edx
		mov    %dx,_0e577a_data
		cmp    $0x000003,%dx
		jle    _07642c_jump
		movw   $0x000003,_0e577a_data
		jmp    _076435_jump

	_07642c_jump:
		xor    %ecx,%ecx
		mov    %cx,_0e577c_data

	_076435_jump:
		call   _076334_func
		mov    %al,_0e5780_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076443_jump:
		xor    %bh,%bh
		mov    %bh,_0e5774_data

	_07644b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076450_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cfa94_data,%al
		cmp    $0x000002,%al
		jb     _076468_jump
		jbe    _0764af_jump
		cmp    $0x000003,%al
		je     _0764be_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076468_jump:
		cmp    $0x000001,%al
		jne    _0764ea_jump
		mov    0x000076(%ecx),%al
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%dl
		mov    0x000077(%ecx),%al
		sub    %edx,%eax
		cmp    $0x000003,%eax
		jl     _076490_jump
		movb   $0x000002,_0cfa94_data

	_076490_jump:
		xor    %dl,%dl
		mov    %ecx,%eax
		mov    %dl,_0cfa93_data
		mov    $0x000003,%edx
		call   _01d808_func
		movb   $0x000002,_0e5774_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0764af_jump:
		xor    %bl,%bl
		mov    %bl,_0e5774_data
		decb   0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0764be_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		dec    %dl
		xor    %ah,%ah
		mov    %dl,0x000076(%ecx)
		mov    $0x000002,%dh
		mov    %ah,_0cfa93_data
		mov    %dh,_0e5774_data

	_0764ea_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0764f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    $_0e5772_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0e5770_data,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01dbb4_func
		testb  $0x000008,0x000081(%esi)
		je     _076537_jump
		mov    0x000004(%esp),%esi
		mov    _0e5770_data,%dx
		sub    $0x000020,%esi
		add    %esi,%edx
		mov    %dx,_0e5770_data

	_076537_jump:
		mov    _0e5770_data,%bx
		mov    _0e5772_data,%cx
		add    $0x00000c,%ebx
		add    $0x00000c,%ecx
		mov    %bx,_0e5770_data
		mov    %cx,_0e5772_data
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076564_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%esi
		lea    0x000018(%esp),%ebx
		push   %ebx
		lea    0x000020(%esp),%ebx
		lea    0x000010(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000018(%esp),%ebx
		call   _01dbb4_func
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000018(%esp),%ebx
		mov    $0x000005,%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x000008(%esp),%ebx
		call   _01dbb4_func
		mov    0x00001a(%esp),%ebx
		mov    0x000008(%esp),%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%esp),%ecx
		sub    $0x000014,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    $0x000014,%eax
		add    %ecx,%ebx
		mov    %ax,_0e576e_data
		mov    %bx,_0e576c_data
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0765dc_switch:
		.long   _0769bb_case
		.long   _07687d_case
		.long   _0768ff_case
		.long   _0768e5_case

_0765ec_switch:
		.long   _076933_case
		.long   _076933_case
		.long   _076933_case
		.long   _076933_case
		.long   _076933_case
		.long   _076933_case
		.long   _076933_case
		.long   _076944_case
		.long   _07696b_case
		.long   _076992_case




_076614_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		call   _075840_func
		mov    %esi,%eax
		call   _0764f0_func
		mov    %esi,%eax
		call   _076564_func
		cmpb   $0x000001,0x000076(%esi)
		jae    _0766e0_jump
		cmpb   $0x000064,_0cfa94_data
		je     _0766e0_jump
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_0e5774_data
		mov    0x000069(%esi),%al
		add    0x00002c(%esi),%eax
		mov    _0ce636_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		je     _0766e0_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movb   $0x0000ff,0x00006b(%esi)
		call   _01d818_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _061220_func
		mov    $0x000064,%bh
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    %cl,_0cfa78_data
		movw   $0x000000,0x000042(%esi)
		mov    %bh,_0cfa94_data
		mov    %dx,_0e5778_data

	_0766e0_jump:
		cmpb   $0x000001,_0e5774_data
		jne    _0766fa_jump
		mov    %esi,%eax
		xor    %cl,%cl
		call   _0763bc_func
		mov    %cl,_0cfa93_data
		jmp    _076760_jump

	_0766fa_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _076758_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cf9f5_data(%eax),%dl
		test   %dl,%dl
		jne    _076758_jump
		mov    $0x000001,%bl
		mov    %dl,_0cfa90_data
		mov    %bl,_0cfa93_data
		jmp    _076760_jump

	_076758_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa93_data

	_076760_jump:
		mov    _0cfa94_data,%al
		mov    0x000028(%esi),%dx
		cmp    $0x000002,%al
		jb     _07678e_jump
		jbe    _0769e3_jump
		cmp    $0x000004,%al
		jb     _076bb8_jump
		jbe    _076dad_jump
		cmp    $0x000064,%al
		je     _0770b9_jump
		jmp    _0770ee_jump

	_07678e_jump:
		test   %al,%al
		ja     _07682a_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0767a6_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _0770ee_jump

	_0767a6_jump:
		movswl %dx,%eax
		mov    _0ce678_data,%ebx
		lea    0x0000dc(%eax),%edx
		cmp    %ebx,%edx
		jle    _0767c9_jump
		lea    0x00006e(%ebx),%edx
		cmp    %eax,%edx
		jle    _0767c9_jump
		movb   $0x000001,_0cfa90_data
		jmp    _0767d7_jump

	_0767c9_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func

	_0767d7_jump:
		cmpb   $0x000000,_0cfa90_data
		je     _0770ee_jump
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		mov    $0x000001,%ah
		mov    $0x000001,%ebx
		mov    %ah,_0cfa94_data
		mov    %ah,_0cfa92_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0e577c_data
		mov    %ax,_0e577a_data
		call   _076334_func
		mov    %al,_0e5780_data
		mov    %esi,%eax
		call   _01d818_func
		jmp    _0770ee_jump

	_07682a_jump:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dfb8_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _076866_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		xor    %bl,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0cfa93_data

	_076866_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		ja     _0770ee_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0765dc_switch(,%edx,4)

	_07687d_case:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _0770ee_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000018,%cl
		je     _0768d9_jump
		cmp    $0x00001c,%cl
		jne    _0768c2_jump
		cmpb   $0x000000,_0cfa95_data
		je     _0768d9_jump

	_0768c2_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _0770ee_jump
		cmpb   $0x000000,_0cfa95_data
		jne    _0770ee_jump

	_0768d9_jump:
		mov    %esi,%eax
		call   _076388_func
		jmp    _0770ee_jump

	_0768e5_case:
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		xor    %cl,%cl
		mov    %cl,_0e5774_data
		jmp    _0770ee_jump

	_0768ff_case:
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		mov    _0cfa95_data,%al
		cmp    $0x000001,%al
		ja     _0769ac_jump
		mov    _0e5764_data,%al
		cmp    $0x000009,%al
		ja     _0770ee_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0765ec_switch(,%eax,4)

	_076933_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _0770ee_jump

	_076944_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000003,%edi
		call   _01d818_func
		mov    $0x000002,%bl
		mov    %di,_0e5778_data
		mov    %bl,_0cfa94_data
		jmp    _0770ee_jump

	_07696b_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%ecx
		call   _01d818_func
		mov    $0x000003,%dh
		mov    %cx,_0e5778_data
		mov    %dh,_0cfa94_data
		jmp    _0770ee_jump

	_076992_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movb   $0x000004,_0cfa94_data
		jmp    _0770ee_jump

	_0769ac_jump:
		mov    %al,%ah
		dec    %ah
		mov    %ah,_0cfa95_data
		jmp    _0770ee_jump

	_0769bb_case:
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d808_func
		call   _076334_func
		mov    %al,_0e5780_data
		jmp    _0770ee_jump

	_0769e3_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _076a1d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076a1d_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _076a1d_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e5777_data,%bl
		mov    _0e5776_data,%dl
		xor    %cl,%cl
		call   _01d818_func
		mov    %cl,_0e5774_data
		mov    %cl,_0cfa93_data

	_076a1d_jump:
		mov    0x00006d(%esi),%al
		test   %al,%al
		jne    _076b1c_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076a3f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edi
		mov    0x000068(%esi),%al
		add    %edi,%eax
		test   %eax,%eax
		jl     _076a63_jump

	_076a3f_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076a69_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cf88e_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076a69_jump

	_076a63_jump:
		movw   $0x000000,0x000040(%esi)

	_076a69_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _0770ee_jump
		jbe    _076a8c_jump
		cmp    $0x00000b,%al
		je     _076ac3_jump
		jmp    _0770ee_jump

	_076a8c_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ebp
		mov    0x000081(%esi),%dh
		mov    %ebp,0x00002c(%esi)
		test   $0x000008,%dh
		je     _076ab5_jump
		mov    $0x000001,%eax
		jmp    _076aba_jump

	_076ab5_jump:
		mov    $0xffffffff,%eax

	_076aba_jump:
		mov    %ax,0x000040(%esi)
		jmp    _0770ee_jump

	_076ac3_jump:
		mov    _0e5778_data,%dx
		dec    %edx
		mov    %dx,_0e5778_data
		test   %dx,%dx
		jle    _076af0_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%esi)
		jmp    _0770ee_jump

	_076af0_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _076b0e_jump
		mov    $0x000002,%eax
		jmp    _076b13_jump

	_076b0e_jump:
		mov    $0xfffffffe,%eax

	_076b13_jump:
		mov    %ax,0x000040(%esi)
		jmp    _0770ee_jump

	_076b1c_jump:
		cmp    $0x000001,%al
		jne    _0770ee_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076b37_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _076b62_jump

	_076b37_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0770ee_jump
		mov    _0cf88e_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _0770ee_jump

	_076b62_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%esi)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		mov    $0x000001,%cl
		call   _01d818_func
		mov    %cl,_0cfa94_data
		movw   $0x000000,0x000040(%esi)
		jmp    _0770ee_jump

	_076bb8_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _076bf2_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076bf2_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _076bf2_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e5777_data,%bl
		mov    _0e5776_data,%dl
		call   _01d818_func
		xor    %bh,%bh
		mov    %bh,_0e5774_data
		mov    %bh,_0cfa93_data

	_076bf2_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _076cd7_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076c14_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		test   %eax,%eax
		jl     _076c38_jump

	_076c14_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076c3e_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cf88e_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076c3e_jump

	_076c38_jump:
		movw   $0x000000,0x000040(%esi)

	_076c3e_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _0770ee_jump
		jbe    _076c61_jump
		cmp    $0x00000b,%al
		je     _076c98_jump
		jmp    _0770ee_jump

	_076c61_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ecx
		mov    0x000081(%esi),%dl
		mov    %ecx,0x00002c(%esi)
		test   $0x000008,%dl
		je     _076c8a_jump
		mov    $0x000001,%eax
		jmp    _076c8f_jump

	_076c8a_jump:
		mov    $0xffffffff,%eax

	_076c8f_jump:
		mov    %ax,0x000040(%esi)
		jmp    _0770ee_jump

	_076c98_jump:
		mov    _0e5778_data,%ax
		mov    $0x000001,%edx
		dec    %eax
		xor    %ebx,%ebx
		mov    %ax,_0e5778_data
		mov    %esi,%eax
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _076cc3_jump
		mov    $0x000002,%eax
		jmp    _076cc8_jump

	_076cc3_jump:
		mov    $0xfffffffe,%eax

	_076cc8_jump:
		movw   $0x00001e,0x000056(%esi)
		mov    %ax,0x000040(%esi)
		jmp    _0770ee_jump

	_076cd7_jump:
		cmp    $0x000001,%ch
		jne    _0770ee_jump
		mov    _0e5778_data,%bx
		cmp    $0x000001,%bx
		jne    _076d19_jump
		mov    0x000056(%esi),%cx
		sub    %ebx,%ecx
		mov    %cx,0x000056(%esi)
		cmp    %bx,%cx
		jge    _0770ee_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%esi)
		jmp    _0770ee_jump

	_076d19_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _076d2c_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _076d57_jump

	_076d2c_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0770ee_jump
		mov    _0cf88e_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _0770ee_jump

	_076d57_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		xor    %ebx,%ebx
		call   _01d818_func
		mov    $0x000001,%bh
		movw   $0x000000,0x000040(%esi)
		mov    %bh,_0cfa94_data
		jmp    _0770ee_jump

	_076dad_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _076de7_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076de7_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _076de7_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e5777_data,%bl
		mov    _0e5776_data,%dl
		call   _01d818_func
		xor    %bl,%bl
		mov    %bl,_0e5774_data
		mov    %bl,_0cfa93_data

	_076de7_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _07701f_jump
		testb  $0x000008,0x000081(%esi)
		jne    _076e09_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		test   %eax,%eax
		jl     _076e2d_jump

	_076e09_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076e33_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cf88e_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076e33_jump

	_076e2d_jump:
		movw   $0x000000,0x000040(%esi)

	_076e33_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _0770ee_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _0770ee_jump
		jbe    _076e5a_jump
		cmp    $0x00000b,%al
		je     _076f22_jump
		jmp    _0770ee_jump

	_076e5a_jump:
		mov    0x000028(%esi),%ax
		mov    _0ce678_data,%dx
		add    $0x000030,%eax
		movb   $0x000005,0x000072(%esi)
		sub    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		test   %ax,%ax
		jge    _076e7b_jump
		neg    %eax

	_076e7b_jump:
		cmp    $0x000064,%ax
		jle    _076ec5_jump
		movswl %ax,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _076ea2_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _076eae_jump

	_076ea2_jump:
		cmp    $0x000004,%ax
		jge    _076eae_jump
		movw   $0x000004,0x000042(%esi)

	_076eae_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076ebe_jump
		mov    $0x000002,%eax
		jmp    _076f07_jump

	_076ebe_jump:
		mov    $0xfffffffe,%eax
		jmp    _076f07_jump

	_076ec5_jump:
		movswl %ax,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _076ee6_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _076ef2_jump

	_076ee6_jump:
		cmp    $0x000004,%ax
		jge    _076ef2_jump
		movw   $0x000004,0x000042(%esi)

	_076ef2_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076f02_jump
		mov    $0x000001,%eax
		jmp    _076f07_jump

	_076f02_jump:
		mov    $0xffffffff,%eax

	_076f07_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		negw   0x000042(%esi)
		jmp    _0770ee_jump

	_076f22_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076f3b_jump
		mov    0x000028(%esi),%eax
		mov    _0ce678_data,%edi
		add    $0x000030,%eax
		cmp    %edi,%eax
		jl     _076f54_jump

	_076f3b_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _076f67_jump
		mov    0x000028(%esi),%eax
		mov    _0ce678_data,%ebp
		add    $0x000030,%eax
		cmp    %ebp,%eax
		jle    _076f67_jump

	_076f54_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _0770ee_jump

	_076f67_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _076f7a_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _076f9d_jump

	_076f7a_jump:
		testb  $0x000008,0x000081(%esi)
		je     _076ff3_jump
		mov    _0cf88e_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _076ff3_jump

	_076f9d_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d818_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0cfa94_data
		jmp    _0770ee_jump

	_076ff3_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		testb  $0x000008,0x000081(%esi)
		je     _077011_jump
		mov    $0x000002,%eax
		jmp    _077016_jump

	_077011_jump:
		mov    $0xfffffffe,%eax

	_077016_jump:
		mov    %ax,0x000040(%esi)
		jmp    _0770ee_jump

	_07701f_jump:
		cmp    $0x000001,%cl
		jne    _0770ee_jump
		testb  $0x000008,0x000081(%esi)
		jne    _07703b_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _077066_jump

	_07703b_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0770ee_jump
		mov    _0cf88e_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _0770ee_jump

	_077066_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		xor    %ebx,%ebx
		or     %al,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		call   _01d818_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0cfa94_data
		jmp    _0770ee_jump

	_0770b9_jump:
		mov    _0e5778_data,%bx
		dec    %ebx
		mov    %bx,_0e5778_data
		cmp    $0x000001,%bx
		jge    _0770ee_jump
		mov    $0x0003e7,%edi
		mov    $0x000001,%ch
		mov    _0cf81e_data,%al
		mov    %di,_0e5778_data
		or     $0x000004,%al
		mov    %ch,_0cfa76_data
		mov    %al,_0cf81e_data

	_0770ee_jump:
		mov    _0cf88e_data,%ecx
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _077120_jump
		cmp    %ecx,%eax
		jg     _077120_jump
		mov    $0x000001,%eax
		jmp    _077122_jump

	_077120_jump:
		xor    %eax,%eax

	_077122_jump:
		test   %eax,%eax
		jne    _07712c_jump
		movw   $0x000000,0x000040(%esi)

	_07712c_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077134_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _077172_jump
		call   _025820_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cf852_data
		mov    $0x00000b,%ebx
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _055d78_func

	_077172_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_077178_switch:
		.long   _0772b5_case
		.long   _077326_case
		.long   _077404_case
		.long   _0774fd_case

_077188_switch:
		.long   _07753c_case
		.long   _077658_case
		.long   _07753c_case
		.long   _07753c_case
		.long   _077658_case
		.long   _077658_case
		.long   _077658_case
		.long   _077658_case
		.long   _077658_case
		.long   _077658_case
		.long   _077561_case
		.long   _07753c_case




_0771b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		movb   $0x000001,_0cfa68_data
		mov    %esi,%eax
		call   _0764f0_func
		mov    0x000028(%esi),%ax
		mov    %ax,_0e5768_data
		mov    0x00002c(%esi),%ax
		mov    %ax,_0e576a_data
		mov    %esi,%eax
		call   _076564_func
		cmpb   $0x000001,_0e5774_data
		jne    _0771f9_jump
		mov    %esi,%eax
		call   _076450_func

	_0771f9_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _077257_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cf9f5_data(%eax),%dh
		test   %dh,%dh
		jne    _077257_jump
		mov    $0x000001,%bh
		mov    %dh,_0cfa90_data
		mov    %bh,_0cfa93_data
		jmp    _07725f_jump

	_077257_jump:
		xor    %bl,%bl
		mov    %bl,_0cfa93_data

	_07725f_jump:
		mov    _0ce678_data,%ebx
		mov    _0cf88e_data,%eax
		add    $0x000096,%ebx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%dx
		cmp    %eax,%ebx
		jle    _07729b_jump
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0ce67c_data,%ebx
		sub    $0x00006e,%eax
		cmp    %ebx,%eax
		jge    _07729b_jump
		mov    0x000076(%esi),%al
		mov    %al,_0e5775_data

	_07729b_jump:
		mov    _0cfa94_data,%al
		cmp    $0x000003,%al
		ja     _077658_case
		and    $0x0000ff,%eax
		jmp    *%cs:_077178_switch(,%eax,4)

	_0772b5_case:
		mov    %esi,%eax
		call   _025820_func
		movswl %dx,%eax
		mov    _0ce678_data,%ebx
		add    $0x0000dc,%eax
		cmp    %ebx,%eax
		jle    _0772e2_jump
		lea    0x0000dc(%ebx),%eax
		movswl %dx,%edx
		cmp    %edx,%eax
		jle    _0772e2_jump
		movb   $0x000001,_0cfa90_data

	_0772e2_jump:
		cmpb   $0x000000,_0cfa90_data
		je     _077658_case
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		mov    $0x000001,%cl
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %cl,_0cfa94_data
		mov    %al,_0cfa92_data
		mov    $0x000002,%ch
		mov    %esi,%eax
		mov    %ch,_0cfa95_data
		call   _01d818_func
		jmp    _077658_case

	_077326_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _077340_jump
		jbe    _0773b3_jump
		cmp    $0x000003,%al
		je     _0773eb_jump
		jmp    _077658_case

	_077340_jump:
		cmp    $0x000001,%al
		jne    _077658_case
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _077658_case
		mov    0x00006b(%esi),%bh
		cmp    $0x000018,%bh
		je     _0773a1_jump
		cmp    $0x00001c,%bh
		jne    _07738a_jump
		cmpb   $0x000001,_0cfa92_data
		ja     _0773a1_jump

	_07738a_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _077658_case
		cmpb   $0x000003,_0cfa92_data
		jbe    _077658_case

	_0773a1_jump:
		mov    %esi,%eax
		call   _076388_func
		incb   _0cfa92_data
		jmp    _077658_case

	_0773b3_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		mov    _0cfa95_data,%dl
		cmp    $0x000001,%dl
		ja     _0773dc_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d808_func
		jmp    _077658_case

	_0773dc_jump:
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cfa95_data
		jmp    _077658_case

	_0773eb_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		xor    %al,%al
		mov    %al,_0e5774_data
		jmp    _077658_case

	_077404_case:
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _077416_jump
		jbe    _077446_jump
		cmp    $0x00000b,%al
		je     _077481_jump
		jmp    _077658_case

	_077416_jump:
		cmp    $0x000003,%al
		jne    _077658_case
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0e5774_data
		call   _01d818_func
		jmp    _077658_case

	_077446_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fffa,0x000042(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%eax
		movw   $0x00ffff,0x000040(%esi)
		sub    $0x000006,%eax
		mov    %bx,_0e5778_data
		mov    %eax,0x00002c(%esi)
		jmp    _077658_case

	_077481_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		mov    _0ce678_data,%eax
		mov    0x000028(%esi),%ebp
		sub    $0x000032,%eax
		cmp    %ebp,%eax
		jle    _0774ea_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		call   _01d808_func
		movb   $0x000003,_0cfa94_data
		jmp    _077658_case

	_0774ea_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		jmp    _077658_case

	_0774fd_case:
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%al
		jb     _07750f_jump
		jbe    _07759a_jump
		jmp    _077658_case

	_07750f_jump:
		test   %al,%al
		jne    _077658_case
		cmpb   $0x000000,_0cfa93_data
		je     _077658_case
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%al
		ja     _077658_case
		and    $0x0000ff,%eax
		jmp    *%cs:_077188_switch(,%eax,4)

	_07753c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		xor    %cl,%cl
		mov    _0e5778_data,%ax
		mov    %cl,_0e5774_data
		mov    %ax,0x000040(%esi)
		jmp    _077658_case

	_077561_case:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d818_func
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff9,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		mov    0x000072(%esi),%al
		mov    0x00002c(%esi),%edi
		movb   $0x000005,0x000072(%esi)
		sub    $0x000007,%edi
		mov    %al,0x00006b(%esi)
		mov    %edi,0x00002c(%esi)
		jmp    _077658_case

	_07759a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0ce636_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%bl
		add    $0x000032,%edx
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_09253c_data(%eax)
		jne    _077602_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000000,0x000040(%esi)
		jmp    _077658_case

	_077602_jump:
		mov    0x000028(%esi),%edx
		mov    _0cf89c_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _077652_jump
		cmpw   $0x000002,_0e5778_data
		jne    _07763e_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _077652_jump
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000002,_0cf9f9_data
		jae    _077658_case
		decb   0x00006b(%esi)
		jmp    _077658_case

	_07763e_jump:
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000000,_0cf9f7_data
		je     _077658_case
		decb   0x00006b(%esi)
		jmp    _077658_case

	_077652_jump:
		movw   $0x000002,0x000040(%esi)

	_077658_case:
		mov    _0cf88e_data,%ecx
		mov    0x000028(%esi),%edi
		mov    0x00003e(%esi),%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		add    %edi,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _07768a_jump
		cmp    %ecx,%eax
		jg     _07768a_jump
		mov    $0x000001,%eax
		jmp    _07768c_jump

	_07768a_jump:
		xor    %eax,%eax

	_07768c_jump:
		test   %eax,%eax
		jne    _077696_jump
		movw   $0x000000,0x000040(%esi)

	_077696_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0776a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cfa94_data,%al
		cmp    $0x000002,%al
		jb     _0776ed_jump
		cmp    $0x000003,%al
		ja     _0776ed_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _0776ed_jump
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _025820_func
		xor    %edx,%edx
		mov    %bx,_0cf84c_data
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _01d818_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _055d78_func

	_0776ed_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0776f4_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		inc    %eax
		mov    %ax,_0e5778_data
		ret    



_077704_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _0764f0_func
		mov    0x000028(%ecx),%ax
		mov    %ax,_0e5768_data
		mov    0x00002c(%ecx),%ax
		mov    %ax,_0e576a_data
		mov    %ecx,%eax
		call   _076564_func
		cmpb   $0x000002,_0cfa94_data
		jne    _077745_jump
		mov    0x00006d(%ecx),%dl
		test   %dl,%dl
		jne    _077745_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _077745_jump
		mov    %dl,_0cfa94_data

	_077745_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _0777a3_jump
		xor    %eax,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cf9f5_data(%eax),%bh
		test   %bh,%bh
		jne    _0777a3_jump
		mov    $0x000001,%ah
		mov    %bh,_0cfa90_data
		mov    %ah,_0cfa93_data
		jmp    _0777aa_jump

	_0777a3_jump:
		xor    %al,%al
		mov    %al,_0cfa93_data

	_0777aa_jump:
		mov    _0cfa94_data,%al
		cmp    $0x000001,%al
		jb     _07789f_jump
		jbe    _0777c5_jump
		cmp    $0x000002,%al
		je     _07787c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0777c5_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%al
		jb     _07789f_jump
		jbe    _0777de_jump
		cmp    $0x000003,%al
		je     _077867_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0777de_jump:
		cmpb   $0x000018,0x00006b(%ecx)
		jne    _07780f_jump
		xor    %edx,%edx
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _07780f_jump
		mov    %ecx,%eax
		call   _076388_func

	_07780f_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _07789f_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01d808_func
		incb   _0cfa94_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077867_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _07789f_jump
		xor    %cl,%cl
		mov    %cl,_0e5774_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07787c_jump:
		cmpb   $0x000000,_0cfa93_data
		je     _07789f_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07789f_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movw   $0x000002,0x000040(%ecx)
		call   _01d818_func

	_07789f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0778a4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cfa94_data
		jne    _0778c9_jump
		mov    $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %dh,_0cfa94_data
		mov    %dh,_0cfa95_data
		xor    %edx,%edx
		call   _01d818_func

	_0778c9_jump:
		pop    %edx
		pop    %ebx
		ret    



_0778cc_func:
		cmpb   $0x000002,_0cfa94_data
		jae    _0778db_jump
		mov    $0xffffffff,%eax
		ret    

	_0778db_jump:
		mov    $0x000001,%eax
		ret    



_0778f0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %edx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		xor    %ah,%ah
		mov    %ax,_0e744c_data
		cmp    $0x0000c8,%bx
		jbe    _077938_jump
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %bx,%si
		lea    -0x0000c8(%eax),%edx
		sub    $0x0000c8,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0e7444_data
		jmp    _077941_jump

	_077938_jump:
		movw   $0x000001,_0e7444_data

	_077941_jump:
		mov    _0e7444_data,%cx
		test   %cx,%cx
		jne    _077958_jump
		movw   $0x000002,_0e7444_data
		jmp    _077962_jump

	_077958_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0e7444_data

	_077962_jump:
		mov    _0ce638_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0e7444_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x0000c8(%eax),%esi
		sub    %edx,%esi
		lea    -0x000001(%esi),%edx
		mov    %dx,_0e7448_data
		cmpw   $0x000005,_0cf88c_data
		jne    _0779cd_jump
		cmpw   $0x00000a,_0cf87c_data
		jne    _0779cd_jump
		mov    0x000020(%esp),%ecx
		xor    %esi,%esi
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%si
		mov    %eax,%edx
		mov    %esi,%eax
		call   _078c14_func
		jmp    _077b94_jump

	_0779cd_jump:
		mov    _0cf88a_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0e744c_data,%dx
		mov    _0980c0_data(%edx,%eax,2),%al
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,_0e744a_data
		jmp    _077aee_jump

	_077a02_jump:
		imul   $0x000018,%esi,%eax
		mov    _0cf88a_data,%edi
		sar    $0x000010,%edi
		dec    %edi
		imul   $0x005dc0,%edi,%ebp
		mov    %ebp,(%esp)
		movzwl _0e744c_data,%ebp
		imul   $0x000960,%ebp,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		shl    $0x000003,%esi
		add    0x000004(%esp),%ecx
		add    %ecx,%esi
		mov    _0980fc_data(%esi),%cx
		mov    %cx,_0e5784_data(%eax)
		mov    _0980fe_data(%esi),%cl
		mov    %cl,_0e578c_data(%eax)
		mov    _098100_data(%esi),%cl
		mov    %cl,_0e578d_data(%eax)
		mov    _098102_data(%esi),%cl
		imul   $0x00000a,%edi,%esi
		mov    %cl,_0e5788_data(%eax)
		xor    %ecx,%ecx
		mov    %cx,_0e578a_data(%eax)
		add    %ebp,%esi
		mov    %cx,_0e5798_data(%eax)
		mov    _098084_data(%esi),%cl
		mov    %bx,_0e5786_data(%eax)
		test   %cl,%cl
		je     _077a92_jump
		cmp    $0x000002,%cl
		jne    _077ac3_jump

	_077a92_jump:
		xor    %esi,%esi
		movswl %bx,%eax
		mov    0x00000c(%esp),%si
		imul   %eax,%esi
		imul   $0x000140,%eax,%eax
		mov    0x000008(%esp),%edi
		add    %esi,%edi
		movswl %dx,%esi
		imul   $0x000018,%esi,%esi
		add    0x000020(%esp),%eax
		mov    %edi,_0e5790_data(%esi)
		mov    %eax,_0e5794_data(%esi)
		jmp    _077ade_jump

	_077ac3_jump:
		mov    0x000008(%esp),%edi
		movswl %bx,%esi
		add    %esi,%edi
		mov    %edi,_0e5790_data(%eax)
		mov    0x000020(%esp),%edi
		add    %edi,%esi
		mov    %esi,_0e5794_data(%eax)

	_077ade_jump:
		movswl %dx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e5784_data(%eax),%di
		inc    %edx
		add    %edi,%ebx

	_077aee_jump:
		xor    %eax,%eax
		movswl %dx,%esi
		mov    _0e744a_data,%ax
		cmp    %eax,%esi
		jl     _077a02_jump
		mov    _0cf88a_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e744c_data,%ax
		mov    _0bb37c_data(%edx,%eax,1),%al
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0e7446_data
		jmp    _077b84_jump

	_077b32_jump:
		mov    _0cf88a_data,%esi
		sar    $0x000010,%esi
		dec    %esi
		imul   $0x000640,%esi,%edi
		xor    %esi,%esi
		mov    _0e744c_data,%si
		imul   $0x0000a0,%esi,%esi
		add    %edi,%esi
		mov    _0bb3b8_data(%esi,%eax,8),%bx
		mov    %bx,_0e73a4_data(,%eax,8)
		mov    _0bb3ba_data(%esi,%eax,8),%bx
		mov    %bx,_0e73a6_data(,%eax,8)
		mov    _0bb3bc_data(%esi,%eax,8),%bx
		inc    %edx
		mov    %bx,_0e73a8_data(,%eax,8)

	_077b84_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    _0e7446_data,%si
		cmp    %esi,%eax
		jl     _077b32_jump

	_077b94_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_077ba0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000054(%esp)
		mov    %ebx,0x000060(%esp)
		mov    %ecx,0x000028(%esp)
		mov    _0cf88a_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e744c_data,%ax
		add    %edx,%eax
		mov    _098084_data(%eax),%dl
		test   %dl,%dl
		je     _077be8_jump
		cmp    $0x000002,%dl
		jne    _07808c_jump

	_077be8_jump:
		mov    0x000074(%esp),%eax
		mov    0x000060(%esp),%ecx
		mov    0x000054(%esp),%ebx
		mov    _0cf88c_data,%si
		sub    %ecx,%eax
		sub    $0x0000c8,%ebx
		mov    %ax,0x00003c(%esp)
		cmp    $0x000004,%si
		jne    _077ca3_jump
		mov    _0cf87c_data,%di
		cmp    %si,%di
		je     _077c28_jump
		cmp    $0x00000b,%di
		jne    _077ca3_jump

	_077c28_jump:
		mov    _0cf8ca_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _077ca3_jump
		xor    %edx,%edx
		mov    $0x0000c8,%esi
		mov    0x000078(%esp),%dx
		sub    %edx,%esi
		mov    0x00002c(%eax),%ecx
		mov    %esi,%edx
		sub    $0x00006e,%ecx
		xor    %esi,%edx
		sub    %esi,%ecx
		mov    0x000028(%esp),%dx
		cmp    %ecx,%edx
		jge    _077c8f_jump
		mov    $0x0000c8,%edx
		mov    0x00002c(%eax),%ax
		mov    0x000078(%esp),%ecx
		sub    $0x00006e,%eax
		sub    %ecx,%edx
		sub    %edx,%eax
		mov    %eax,0x000028(%esp)
		test   %ax,%ax
		jge    _077c8f_jump
		xor    %edi,%edi
		mov    %edi,0x000028(%esp)

	_077c8f_jump:
		mov    0x000028(%esp),%eax
		mov    0x000078(%esp),%edx
		cmp    %dx,%ax
		jb     _077ca3_jump
		mov    %edx,%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_077ca3_jump:
		mov    _0cf88a_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e744c_data,%ax
		cmpb   $0x000000,_098084_data(%edx,%eax,1)
		jne    _077d2e_jump
		cmpw   $0x000003,_0cf88c_data
		jne    _077d03_jump
		cmpw   $0x00000a,_0cf87c_data
		jne    _077d03_jump
		mov    $0x0000c8,%ecx
		mov    _0cf8a4_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000078(%esp),%dx
		sar    %eax
		sub    %edx,%ecx
		add    $0x00000b,%eax
		add    %ecx,%eax
		mov    %ax,0x000020(%esp)
		jmp    _077d42_jump

	_077d03_jump:
		mov    _0cf8a4_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0e7444_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0e7448_data,%dx
		add    %edx,%eax
		mov    %ax,0x000020(%esp)
		jmp    _077d42_jump

	_077d2e_jump:
		mov    $0x0000c8,%eax
		mov    0x000078(%esp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)

	_077d42_jump:
		xor    %eax,%eax
		mov    $0x0000c8,%edx
		mov    0x000078(%esp),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		add    %edx,%eax
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _077d72_jump
		mov    $0x0000c8,%eax
		sub    0x000078(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000020(%esp)

	_077d72_jump:
		xor    %ebx,%ebx
		mov    _0e744a_data,%cx
		mov    %ebx,0x000050(%esp)
		test   %cx,%cx
		jbe    _077f03_jump
		mov    0x000078(%esp),%eax
		mov    0x000028(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esp)

	_077d96_jump:
		xor    %eax,%eax
		mov    0x000050(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %edx,%edx
		mov    0x000060(%esp),%dx
		movzwl _0e578a_data(%eax),%ebp
		mov    _0e5790_data(%eax),%ebx
		mov    _0e5794_data(%eax),%edi
		add    %ebx,%ebp
		add    %edx,%edi
		add    %edx,%ebp
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000020(%esp),%ecx
		mov    %edx,%ebx
		mov    _0e5784_data(%eax),%si
		shl    $0x000008,%ebx
		shl    $0x000006,%edx
		mov    _0e5786_data(%eax),%ax
		add    %ebx,%edx
		sub    %ecx,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		add    %esi,%edx
		test   %ax,%ax
		jge    _077e1b_jump
		test   %dx,%dx
		jle    _077e1b_jump
		test   %si,%si
		je     _077e1b_jump
		cwtl   
		neg    %eax
		mov    %eax,%ecx
		mov    %eax,%ebx
		shl    $0x000008,%ecx
		shl    $0x000006,%ebx
		add    %ecx,%ebx
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bx
		imul   %ebx,%eax
		mov    %edx,%esi
		add    %eax,%ebp
		xor    %eax,%eax

	_077e1b_jump:
		movswl %dx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000028(%esp),%bx
		cmp    %ecx,%ebx
		jge    _077eea_jump
		movswl %ax,%ecx
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000078(%esp),%cx
		mov    %ecx,(%esp)
		mov    0x000008(%esp),%ecx
		cmp    (%esp),%ecx
		jge    _077eea_jump
		cmp    %ecx,%ebx
		jle    _077e84_jump
		mov    0x00000c(%esp),%ecx
		cmp    (%esp),%ecx
		jle    _077e84_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%esi
		mov    0x000034(%esp),%ax
		sub    %esi,%ebx
		imul   %ebx,%eax
		add    %eax,%ebp
		mov    %ebx,%eax
		shl    $0x000008,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		mov    0x00002c(%esp),%esi
		add    %eax,%edi
		jmp    _077eca_jump

	_077e84_jump:
		xor    %ecx,%ecx
		mov    0x000028(%esp),%cx
		movswl %ax,%ebx
		cmp    %ecx,%ebx
		jge    _077eb8_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000034(%esp),%dx
		imul   %ebx,%edx
		add    %edx,%ebp
		mov    %ebx,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%ebx
		add    %edx,%ebx
		mov    %ecx,%edx
		sub    %eax,%edx
		add    %ebx,%edi
		sub    %edx,%esi
		jmp    _077eca_jump

	_077eb8_jump:
		movswl %dx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%dx
		cmp    %edx,%ebx
		jle    _077eca_jump
		mov    %edx,%esi
		sub    %eax,%esi

	_077eca_jump:
		mov    0x00003a(%esp),%ecx
		mov    _0cd0fc_data,%eax
		xor    %edx,%edx
		movswl %si,%ebx
		mov    0x000034(%esp),%dx
		mov    %ebp,%esi
		sar    $0x000010,%ecx
		sub    %eax,%esi
		call   *_0cd124_data

	_077eea_jump:
		mov    0x000050(%esp),%ebx
		inc    %ebx
		mov    _0e744a_data,%cx
		mov    %ebx,0x000050(%esp)
		cmp    %cx,%bx
		jb     _077d96_jump

	_077f03_jump:
		mov    0x000034(%esp),%esi
		mov    $0x000001,%eax
		mov    _0e7446_data,%dx
		xor    %edi,%edi
		shr    %si
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000048(%esp)
		mov    %esi,0x000034(%esp)
		test   %dx,%dx
		jbe    _07849c_jump

	_077f2d_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e73a8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e5784_data(%edx)
		je     _078065_jump
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e73a4_data(%eax),%ax
		mov    _0e578a_data(%edx),%cx
		mov    _0ce634_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000040(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _077f89_jump
		mov    0x000034(%esp),%eax
		sub    %ax,0x000040(%esp)

	_077f89_jump:
		mov    0x00003e(%esp),%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		mov    0x000060(%esp),%bx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _077ff6_jump
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    0x000020(%esp),%ecx
		mov    _0e73a6_data(,%edx,8),%bx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000004(%esp)
		xor    %bh,%bh
		mov    0x000006(%ebp),%bl
		mov    %ebx,%ecx
		mov    _0cd7b8_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%bl
		mov    _0ce634_data,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %bx,%cx
		mov    0x000000(%ebp),%ebx
		mov    _0c21fc_data(,%edx,4),%edx
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		call   _016e0d_func

	_077ff6_jump:
		mov    0x000034(%esp),%eax
		add    %ax,0x000040(%esp)
		xor    %edx,%edx
		mov    0x00003e(%esp),%eax
		mov    0x000074(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _078065_jump
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    0x000020(%esp),%edi
		mov    _0e73a6_data(,%edx,8),%bx
		sub    %edi,%ebx
		movswl %bx,%ebx
		mov    _0ce634_data,%esi
		mov    %ebx,0x000004(%esp)
		xor    %bh,%bh
		xor    %ch,%ch
		mov    0x000006(%ebp),%bl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%ebx
		mov    0x000008(%esi),%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    _0c21fc_data(,%edx,4),%edx
		mov    %bx,%cx
		mov    0x000000(%ebp),%ebx
		mov    _0cd7b8_data,%edi
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		call   _016e0d_func

	_078065_jump:
		mov    0x000024(%esp),%esi
		mov    0x000048(%esp),%edi
		mov    _0e7446_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x000024(%esp)
		mov    %edi,0x000048(%esp)
		cmp    %dx,%si
		jae    _07849c_jump
		jmp    _077f2d_jump

	_07808c_jump:
		xor    %edx,%edx
		mov    _0e744a_data,%bx
		mov    %edx,0x000018(%esp)
		test   %bx,%bx
		jbe    _07832a_jump
		mov    0x000078(%esp),%eax
		sub    %ecx,%eax
		mov    0x000060(%esp),%esi
		mov    %eax,0x000058(%esp)
		mov    0x000074(%esp),%eax
		sub    %esi,%eax
		mov    %eax,0x000014(%esp)

	_0780ba_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000034(%esp),%ax
		mov    _0e578a_data(%edi),%dx
		imul   %eax,%edx
		mov    _0e5790_data(%edi),%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		imul   $0x000140,%edx,%eax
		mov    _0e5794_data(%edi),%ebx
		mov    _0e5784_data(%edi),%dx
		add    %ebx,%eax
		mov    %dx,0x000030(%esp)
		mov    _0e578a_data(%edi),%bx
		mov    0x000054(%esp),%edx
		mov    0x000028(%esp),%ecx
		sub    %ebx,%edx
		sub    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%esp)
		mov    _0e5786_data(%edi),%dx
		mov    0x000030(%esp),%edi
		mov    %dx,0x00005c(%esp)
		add    %edi,%edx
		mov    0x000060(%esp),%bx
		movswl %dx,%ebp
		cmp    %ebx,%ebp
		jle    _078311_jump
		xor    %ecx,%ecx
		mov    0x00005a(%esp),%edi
		mov    0x000074(%esp),%cx
		sar    $0x000010,%edi
		mov    %ecx,0x000010(%esp)
		cmp    %ecx,%edi
		jge    _078311_jump
		cmpw   $0x000000,0x000030(%esp)
		je     _078311_jump
		cmp    %ebx,%edi
		jge    _078182_jump
		cmp    0x000010(%esp),%ebp
		jle    _078182_jump
		mov    0x000014(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x000030(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _0781c6_jump

	_078182_jump:
		xor    %ecx,%ecx
		mov    0x00005a(%esp),%ebx
		mov    0x000060(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _0781b1_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		add    %edx,%esi
		add    %edx,%eax
		mov    %ecx,%edx
		mov    0x00005c(%esp),%ecx
		mov    0x000030(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x000030(%esp)
		jmp    _0781c6_jump

	_0781b1_jump:
		xor    %ebx,%ebx
		movswl %dx,%ecx
		mov    0x000074(%esp),%bx
		cmp    %ebx,%ecx
		jle    _0781c6_jump
		sub    %ebx,%edx
		sub    %dx,0x000030(%esp)

	_0781c6_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000078(%esp),%dx
		mov    0x000028(%esp),%bx
		sub    %ebx,%edx
		mov    0x000036(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jle    _0781ea_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_0781ea_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _07825a_jump
		mov    0x00002e(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0cd0fc_data,%edi
		mov    0x000034(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0cd124_data
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		imul   $0x000018,%eax,%eax
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		mov    _0e5790_data(%eax),%esi
		mov    _0e5794_data(%eax),%edi
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		imul   $0x000140,%eax,%eax
		add    %edi,%edx
		mov    0x000038(%esp),%ebx
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000038(%esp)
		jmp    _0782aa_jump

	_07825a_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000054(%esp),%bx
		mov    _0e578a_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bx
		imul   %ecx,%ebx
		mov    _0e5790_data(%eax),%esi
		mov    _0e5794_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)
		add    %ebx,%esi

	_0782aa_jump:
		xor    %ebx,%ebx
		mov    0x00005a(%esp),%edx
		mov    0x000060(%esp),%bx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jge    _0782c2_jump
		sub    %edx,%ebx
		add    %ebx,%esi
		add    %ebx,%eax

	_0782c2_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000028(%esp),%dx
		sub    %edx,%ebx
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _0782e6_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_0782e6_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _078311_jump
		mov    0x00002e(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0cd0fc_data,%edi
		mov    0x000034(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0cd124_data

	_078311_jump:
		mov    0x000018(%esp),%esi
		inc    %esi
		mov    _0e744a_data,%di
		mov    %esi,0x000018(%esp)
		cmp    %di,%si
		jb     _0780ba_jump

	_07832a_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    _0e7446_data,%bx
		mov    %eax,0x00001c(%esp)
		mov    %edx,0x00004c(%esp)
		test   %bx,%bx
		jbe    _07849c_jump

	_078349_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e73a8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e5784_data(%edx)
		je     _07847a_jump
		xor    %ebx,%ebx
		mov    0x00004c(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e73a6_data(%eax),%ax
		mov    _0e578a_data(%edx),%cx
		mov    _0ce634_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000044(%esp)
		add    %ebx,%ebp
		cmp    $0x0000c8,%ax
		jle    _0783a5_jump
		mov    0x000054(%esp),%eax
		sub    %ax,0x000044(%esp)

	_0783a5_jump:
		mov    0x000042(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		cmp    %eax,%edx
		jle    _07840c_jump
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		mov    _0e73a2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce634_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0cd7b8_data,%edi
		add    %edx,%esi
		mov    _0c21fc_data(,%eax,4),%edx
		mov    0x000004(%esp),%eax
		call   _016e0d_func

	_07840c_jump:
		mov    0x000054(%esp),%eax
		add    %ax,0x000044(%esp)
		xor    %eax,%eax
		mov    0x000042(%esp),%ebx
		mov    0x000078(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _07847a_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%esi
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x00001c(%esp),%ax
		mov    %dx,%si
		mov    _0cd7b8_data,%edx
		mov    _0e73a2_data(,%eax,8),%ecx
		mov    %edx,0x000004(%esp)
		mov    _0ce634_data,%edx
		sar    $0x000010,%ecx
		mov    0x000000(%ebp),%ebp
		mov    0x000008(%edx),%edx
		mov    0x000004(%esp),%edi
		add    %edx,%ebp
		mov    _0c21fc_data(,%eax,4),%edx
		mov    %ecx,%eax
		mov    %esi,%ecx
		mov    %ebp,%esi
		call   _016e0d_func

	_07847a_jump:
		mov    0x00001c(%esp),%esi
		mov    0x00004c(%esp),%edi
		mov    _0e7446_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x00004c(%esp)
		cmp    %dx,%si
		jb     _078349_jump

	_07849c_jump:
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0784a8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000028(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		mov    _0cf88a_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e744c_data,%ax
		add    %edx,%eax
		mov    _098084_data(%eax),%dl
		test   %dl,%dl
		je     _0784f0_jump
		cmp    $0x000002,%dl
		jne    _078677_jump

	_0784f0_jump:
		mov    0x000004(%esp),%esi
		mov    _0cf884_data,%dx
		mov    _0cf8a6_data,%ax
		xor    %edi,%edi
		shr    %si
		add    %edx,%edx
		add    %eax,%eax
		mov    %edi,0x000024(%esp)
		sub    %eax,%edx
		mov    %esi,0x000004(%esp)
		add    $0x0000c8,%edx
		mov    $0x000001,%eax
		mov    %edx,0x00002c(%esp)
		mov    _0e7446_data,%dx
		mov    %eax,0x000010(%esp)
		test   %dx,%dx
		jbe    _0787df_jump

	_078537_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e73a8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e5784_data(%edx)
		jne    _078650_jump
		movzwl 0x000010(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0e73a4_data(%eax),%ax
		mov    _0e578a_data(%edx),%cx
		mov    _0ce634_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000020(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _078591_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x000020(%esp)

	_078591_jump:
		mov    0x00001e(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000008(%esp),%dx
		cmp    %edx,%ebx
		jle    _0785f1_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce634_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    _0cd7b8_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0c21fc_data(%edx),%edx
		call   _016e0d_func

	_0785f1_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x000020(%esp)
		xor    %edx,%edx
		mov    0x00001e(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _078650_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce634_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0cd7b8_data,%edi
		mov    0x000024(%esp),%dx
		movswl %bx,%ebx
		mov    _0c21fc_data(,%edx,4),%edx
		call   _016e0d_func

	_078650_jump:
		mov    0x000024(%esp),%edi
		mov    0x000010(%esp),%eax
		mov    _0e7446_data,%dx
		inc    %edi
		inc    %eax
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000010(%esp)
		cmp    %dx,%di
		jae    _0787df_jump
		jmp    _078537_jump

	_078677_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0e7446_data,%cx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)
		test   %cx,%cx
		jbe    _0787df_jump

	_078696_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		mov    _0e73a8_data(%eax),%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e5784_data(%ebx)
		jne    _0787bd_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dx
		imul   $0x00000c,%edx,%ebp
		mov    _0ce634_data,%edx
		mov    (%edx),%edx
		mov    _0e73a6_data(%eax),%ax
		add    %edx,%ebp
		mov    _0e578a_data(%ebx),%dx
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		cmp    $0x0000c8,%ax
		jle    _0786f2_jump
		mov    0x000028(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_0786f2_jump:
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edx
		jle    _078757_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0cd7b8_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000014(%esp),%ax
		mov    %dx,%cx
		mov    _0ce634_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0e73a2_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0c21fc_data(,%edx,4),%edx
		call   _016e0d_func

	_078757_jump:
		mov    0x000028(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x00001a(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _0787bd_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		mov    _0e73a2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce634_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0cd7b8_data,%edi
		add    %edx,%esi
		mov    _0c21fc_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _016e0d_func

	_0787bd_jump:
		mov    0x000014(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    _0e7446_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x00000c(%esp)
		cmp    %si,%bx
		jb     _078696_jump

	_0787df_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0787e8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0cf88a_data,%eax
		sar    $0x000010,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e744c_data,%ax
		add    %edx,%eax
		mov    _098084_data(%eax),%dl
		test   %dl,%dl
		jne    _078a27_jump
		mov    _0e744a_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _0789f4_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_078842_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e5784_data(%ebx)
		jne    _07886c_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _0789dd_jump

	_07886c_jump:
		mov    _0e5788_data(%ebx),%dh
		test   %dh,%dh
		jne    _0788a9_jump
		xor    %eax,%eax
		mov    %si,%ax
		movzbl _0e578c_data(%ebx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		mov    (%esp),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _0789dd_jump

	_0788a9_jump:
		cmp    $0x000001,%dh
		je     _0788b3_jump
		cmp    $0x000004,%dh
		jne    _07891f_jump

	_0788b3_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		movzbl _0e578d_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    _0e5788_data(%ebx),%ah
		mov    %dx,_0e5798_data(%ebx)
		cmp    $0x000001,%ah
		jne    _078903_jump
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0789dd_jump

	_078903_jump:
		xor    %eax,%eax
		mov    _0e578c_data(%ebx),%al
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _078999_jump

	_07891f_jump:
		cmp    $0x000002,%dh
		je     _07892d_jump
		cmp    $0x000005,%dh
		jne    _0789e4_jump

	_07892d_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0e578d_data(%edx),%bl
		movzwl _0e5798_data(%edx),%ebp
		cmp    %ebp,%ebx
		jle    _078953_jump
		mov    0x000008(%esp),%eax
		add    %ax,_0e5798_data(%edx)

	_078953_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e578d_data(%ebx),%dl
		sub    %dx,_0e5798_data(%ebx)
		cmpb   $0x000002,_0e5788_data(%ebx)
		jne    _078981_jump
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0789dd_jump

	_078981_jump:
		xor    %eax,%eax
		mov    _0e578c_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx

	_078999_jump:
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0e578a_data(%ebx)
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		mov    %edx,%ebp
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0e578a_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0e578a_data(%ebx)
		mov    _0e578a_data(%ebx),%ax
		xor    %edx,%edx
		div    %si

	_0789dd_jump:
		mov    %dx,_0e578a_data(%ebx)

	_0789e4_jump:
		mov    _0e744a_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jb     _078842_jump

	_0789f4_jump:
		cmpw   $0x000005,_0cf88c_data
		jne    _078c0b_jump
		cmpw   $0x00000a,_0cf87c_data
		jne    _078c0b_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _078ca8_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_078a27_jump:
		cmp    $0x000001,%dl
		jne    _078c0b_jump
		mov    _0e744a_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _078c0b_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_078a4b_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e5784_data(%ebx)
		jne    _078a79_jump
		mov    _0cf8a4_data,%edx
		sar    $0x000010,%edx
		xor    %esi,%esi
		add    %edx,%edx
		mov    %di,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _078bf3_jump

	_078a79_jump:
		mov    _0e5788_data(%ebx),%al
		test   %al,%al
		jne    _078ab1_jump
		xor    %esi,%esi
		mov    %di,%si
		movzbl _0e578c_data(%ebx),%ebp
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _078bf3_jump

	_078ab1_jump:
		cmp    $0x000001,%al
		je     _078ab9_jump
		cmp    $0x000004,%al
		jne    _078b2f_jump

	_078ab9_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		movzbl _0e578d_data(%ebx),%esi
		add    %esi,%edx
		xor    %esi,%esi
		mov    %di,%si
		mov    %edx,%eax
		mov    %esi,%ebp
		sar    $0x00001f,%edx
		shl    $0x000004,%ebp
		idiv   %ebp
		mov    %dx,_0e5798_data(%ebx)
		cmpb   $0x000001,_0e5788_data(%ebx)
		jne    _078b05_jump
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _078bf3_jump

	_078b05_jump:
		mov    %esi,%eax
		movzbl _0e578c_data(%ebx),%ebp
		imul   %ebp,%eax
		mov    _0cf8a4_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _078bc0_jump

	_078b2f_jump:
		cmp    $0x000002,%al
		je     _078b3b_jump
		cmp    $0x000005,%al
		jne    _078bfa_jump

	_078b3b_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0e578d_data(%edx),%esi
		mov    _0e5798_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _078b64_jump
		mov    0x000004(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0e5798_data(%edx)

	_078b64_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e578d_data(%ebx),%dl
		mov    _0e5798_data(%ebx),%si
		sub    %edx,%esi
		mov    _0e5788_data(%ebx),%ah
		mov    %si,_0e5798_data(%ebx)
		cmp    $0x000002,%ah
		jne    _078b99_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		jmp    _078bf3_jump

	_078b99_jump:
		movzwl %di,%ebp
		movzbl _0e578c_data(%ebx),%esi
		mov    %ebp,%edx
		imul   %esi,%edx
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp

	_078bc0_jump:
		mov    %dx,_0e578a_data(%ebx)
		xor    %edx,%edx
		mov    _0e5798_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0e578a_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0e578a_data(%ebx)
		mov    _0e578a_data(%ebx),%ax
		xor    %edx,%edx
		div    %di

	_078bf3_jump:
		mov    %dx,_0e578a_data(%ebx)

	_078bfa_jump:
		mov    _0e744a_data,%si
		inc    %ecx
		cmp    %si,%cx
		jb     _078a4b_jump

	_078c0b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_078c14_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%esp),%ebp
		mov    %dx,_0e744a_data
		xor    %ebx,%ebx
		jmp    _078c86_jump

	_078c2f_jump:
		imul   $0x000018,%edx,%eax
		movw   $0x000001,_0e5784_data(%eax)
		movb   $0x000002,_0e578c_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e578d_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0e5788_data(%eax)
		mov    %cx,_0e578a_data(%eax)
		mov    %cx,_0e5798_data(%eax)
		xor    %ecx,%ecx
		mov    %si,%cx
		imul   %edx,%ecx
		imul   $0x000140,%edx,%edx
		mov    %bx,_0e5786_data(%eax)
		add    %ebp,%ecx
		mov    %ecx,_0e5790_data(%eax)
		add    %edi,%edx
		inc    %ebx
		mov    %edx,_0e5794_data(%eax)

	_078c86_jump:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    _0e744a_data,%ax
		cmp    %eax,%edx
		jl     _078c2f_jump
		xor    %esi,%esi
		mov    %si,_0e7446_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_078ca8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    %edx,0x000004(%esp)
		mov    %edx,%eax
		mov    _0cf8a4_data,%edx
		sar    $0x000010,%edx
		sub    $0x0000c9,%eax
		sar    $0x000002,%edx
		cmp    %ax,%dx
		jle    _078cd1_jump
		mov    %eax,%edx

	_078cd1_jump:
		call   _07a338_func
		sub    _0cf8a6_data,%ax
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    %ax,0x000008(%esp)
		cmpb   $0x000000,_0cfa62_data
		jne    _078cf6_jump
		incb   _0bd948_data

	_078cf6_jump:
		cmpb   $0x000010,_0bd948_data
		jne    _078d07_jump
		xor    %bl,%bl
		mov    %bl,_0bd948_data

	_078d07_jump:
		mov    0x000008(%esp),%ecx
		mov    _0bd948_data,%al
		mov    $0x00005a,%ebx
		mov    %al,0x00000c(%esp)
		jmp    _078d88_jump

	_078d1b_jump:
		dec    %ebx
		cmp    $0x000010,%bx
		jge    _078d27_jump
		mov    $0x000010,%ebx

	_078d27_jump:
		test   %cx,%cx
		jle    _078d73_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		mov    _0bd938_data(%edx),%dl
		and    $0x0000ff,%edx
		shl    $0x000004,%edx
		movswl %bx,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%edi
		imul   $0x000018,%edi,%edi
		xor    %esi,%esi
		xor    %edx,%edx
		mov    (%esp),%si
		mov    _0e578a_data(%edi),%dx
		cwtl   
		add    %esi,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0e578a_data(%edi)

	_078d73_jump:
		mov    0x00000c(%esp),%al
		inc    %al
		mov    %al,0x00000c(%esp)
		cmp    $0x000010,%al
		jne    _078d87_jump
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_078d87_jump:
		inc    %ecx

	_078d88_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		movswl %cx,%eax
		add    $0x00005a,%edx
		cmp    %edx,%eax
		jge    _078da8_jump
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		cmp    %edx,%eax
		jl     _078d1b_jump

	_078da8_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_078db0_func:
		push   %ebx
		push   %ecx
		mov    _0cce00_data(%edx),%bl
		mov    _0cce00_data(%eax),%cl
		mov    %bl,_0cce00_data(%eax)
		mov    %cl,_0cce00_data(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_078dd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%edx
		mov    _0ccdf2_data,%esi
		xor    %ebx,%ebx
		xor    %ah,%ah
		mov    %dx,_0cf8ec_data
		mov    %ah,_0cfa96_data
		sar    $0x000010,%esi
		mov    _0ccdf0_data,%eax
		xor    %edx,%edx
		test   %esi,%esi
		jle    _078e4d_jump

	_078dff_jump:
		mov    0x000060(%eax),%cx
		cmp    $0x0000bc,%cx
		jne    _078e16_jump
		inc    %ebx
		mov    0x000034(%eax),%cl
		mov    %cl,_0ccdff_data(%ebx)
		jmp    _078e43_jump

	_078e16_jump:
		cmp    $0x0000f8,%cx
		jne    _078e26_jump
		mov    %dx,_0cf8e4_data
		jmp    _078e43_jump

	_078e26_jump:
		cmp    $0x0000ea,%cx
		jne    _078e43_jump
		xor    %ecx,%ecx
		mov    _0cfa96_data,%cl
		mov    %dl,_0ceee0_data(%ecx)
		inc    %cl
		mov    %cl,_0cfa96_data

	_078e43_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %esi,%edx
		jl     _078dff_jump

	_078e4d_jump:
		mov    $0x000001,%edi

	_078e52_jump:
		xor    %esi,%esi
		xor    %ebx,%ebx

	_078e56_jump:
		xor    %eax,%eax
		mov    _0cce01_data(%ebx),%al
		imul   $0x000084,%eax,%edx
		xor    %ecx,%ecx
		mov    _0cce00_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%eax
		add    %eax,%edx
		mov    0x000028(%ecx,%eax,1),%eax
		cmp    0x000028(%edx),%eax
		jle    _078e8e_jump
		lea    0x000001(%ebx),%edx
		mov    %ebx,%eax
		mov    %edi,%esi
		call   _078db0_func

	_078e8e_jump:
		inc    %ebx
		cmp    $0x000007,%ebx
		jl     _078e56_jump
		test   %esi,%esi
		jne    _078e52_jump
		cmpb   $0x000000,_0cfa36_data
		jne    _078eaa_jump
		cmpb   $0x000000,_0caf64_data
		je     _078eb3_jump

	_078eaa_jump:
		movb   $0x000008,_0cfa91_data
		jmp    _078ed5_jump

	_078eb3_jump:
		mov    $0x0000b1,%eax
		call   _06bf60_func
		movswl %ax,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		shl    $0x000003,%edx
		mov    %dl,_0cfa91_data

	_078ed5_jump:
		xor    %eax,%eax
		mov    _0cfa91_data,%al
		mov    _092524_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0cce00_data(%eax),%al
		mov    $0x000020,%esi
		mov    $0x000138,%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cf804_data
		mov    %ah,_0cfa8f_data
		mov    %si,_0ce63a_data
		mov    %di,_0cf85e_data
		mov    %di,_0cf884_data
		mov    %edx,_0e7450_data
		xor    %eax,%eax
		jmp    _078f80_jump

	_078f26_jump:
		xor    %edx,%edx
		mov    _0ceee0_data(%eax),%dl
		imul   $0x000084,%edx,%ebx
		mov    _0ce63a_data,%cx
		shl    $0x000004,%ecx
		mov    _0ccdf0_data,%edx
		sub    $0x00003c,%ecx
		mov    %cx,0x00003e(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ceee0_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003c(%edx,%ebx,1),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x00002c(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ceee0_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003e(%edx,%ebx,1),%dx
		inc    %eax
		mov    %dx,_0e7454_data

	_078f80_jump:
		xor    %edx,%edx
		mov    _0cfa96_data,%dl
		cmp    %edx,%eax
		jl     _078f26_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078f94_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    %edx,%esi
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%cx
		xor    %edx,%edx
		xor    %eax,%eax

	_078fb1_jump:
		cmpw   $0x0000aa,0x000060(%ebx)
		jne    _078fc4_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _078fc4_jump
		mov    $0x000001,%edx

	_078fc4_jump:
		add    $0x000084,%ebx
		inc    %eax
		test   %dx,%dx
		jne    _078fd5_jump
		cmp    %cx,%ax
		jl     _078fb1_jump

	_078fd5_jump:
		sub    $0x000084,%ebx
		test   %dx,%dx
		je     _079035_jump
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f8e8_func
		mov    -0x000002(%esp),%eax
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x000040(%ebx)
		and    $0x0000bf,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000081(%ebx)
		mov    %eax,0x000028(%ebx)
		movswl %si,%eax
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movw   $0x000000,0x000042(%ebx)
		call   _01d810_func
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01d808_func

	_079035_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07903c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _07b56c_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _079080_jump
		movswl %di,%eax
		add    $0x000040,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		add    $0x000040,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		movb   $0x000001,0x00007e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000050(%edx)
		call   _01e030_func

	_079080_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		add    $0x00008c,%eax
		cwtl   
		call   _07bd40_func
		mov    $0x0000aa,%eax
		xor    %ebx,%ebx
		call   _01d4c4_func
		lea    0x000528(%eax),%edx

	_0790a9_jump:
		cmpl   $0x000000,0x000024(%edx)
		jne    _0790b6_jump
		mov    %edx,%eax
		call   _01f8e8_func

	_0790b6_jump:
		mov    0x000081(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		movswl %di,%eax
		movb   $0x000003,0x00006d(%edx)
		add    $0x000008,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		mov    %eax,0x00002c(%edx)
		movswl %bx,%eax
		movb   $0x000002,0x00006c(%edx)
		mov    _0bd94c_data(,%eax,2),%si
		mov    %si,0x000040(%edx)
		add    $0x000084,%edx
		mov    _0bd95c_data(,%eax,2),%ax
		movb   $0x000002,-0x000019(%edx)
		inc    %ebx
		mov    %ax,-0x000042(%edx)
		cmp    $0x000008,%bx
		jl     _0790a9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_079114_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0cf8de_data
		je     _0792a5_jump
		mov    $0x000003,%ebx
		mov    _0cf802_data,%edx
		mov    _0ccdf0_data,%ecx
		sar    $0x000010,%edx
		mov    _0cf8de_data,%si
		mov    %edx,%eax
		mov    _0cf8f0_data,%di
		shl    $0x000005,%eax
		mov    %bx,_0cf8e6_data
		add    %edx,%eax
		dec    %esi
		shl    $0x000002,%eax
		mov    _0cf8e0_data,%bx
		add    %eax,%ecx
		mov    _0cf8ee_data,%ax
		mov    %si,_0cf8de_data
		sub    %eax,%ebx
		mov    _0cf8e2_data,%si
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _079186_jump
		neg    %eax

	_079186_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _079193_jump
		neg    %eax

	_079193_jump:
		add    %eax,%edi
		cmp    $0x000008,%di
		jge    _0791b3_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d810_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d808_func

	_0791b3_jump:
		test   %di,%di
		jle    _0791e3_jump
		mov    _0cf8e6_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0cf8e6_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_0791e3_jump:
		cmpb   $0x000000,_0cf9f9_data
		jne    _0791fd_jump
		cmpw   $0x000032,_0cf8de_data
		jge    _0791fd_jump
		mov    $0x000001,%eax
		jmp    _0791ff_jump

	_0791fd_jump:
		xor    %eax,%eax

	_0791ff_jump:
		test   %ax,%ax
		je     _079254_jump
		mov    _0cf8e6_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _079221_jump
		mov    $0x000001,%eax
		jg     _079221_jump
		neg    %eax

	_079221_jump:
		mov    _0cf8e8_data,%edx
		mov    _0cf8e8_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0cf8e8_data
		cmp    $0x000000,%eax
		je     _07924d_jump
		mov    $0x000001,%eax
		jg     _07924d_jump
		neg    %eax

	_07924d_jump:
		add    %ax,_0cf8ea_data

	_079254_jump:
		mov    _0cf8e8_data,%ax
		mov    _0cf8ee_data,%si
		mov    _0cf8f0_data,%dx
		add    %eax,%esi
		mov    _0cf8ea_data,%ax
		add    %eax,%edx
		mov    %dx,_0cf8f0_data
		mov    _0cf9f8_data,%dl
		mov    %si,_0cf8ee_data
		test   %dl,%dl
		jne    _0792a5_jump
		test   %di,%di
		je     _0792a5_jump
		mov    _0cf8ee_data,%edx
		mov    _0cf8ec_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _078f94_func

	_0792a5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0792ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cf8de_data,%dx
		test   %dx,%dx
		je     _0794c7_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    _0ce77e_data,%ah
		mov    %bx,_0cf8de_data
		test   %ah,%ah
		je     _07931c_jump
		mov    $0x000003,%eax
		mov    _0ce6dc_data,%edx
		mov    %ax,_0cf8e6_data
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x000068,%eax
		mov    %ax,_0cf8e0_data
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000074(%edx),%al
		add    %ecx,%eax
		sub    $0x000078,%eax
		mov    _0cf9f7_data,%dh
		mov    %ax,_0cf8e2_data
		test   %dh,%dh
		jmp    _079361_jump

	_07931c_jump:
		mov    _0ce6b8_data,%al
		add    _0ce678_data,%ax
		sub    $0x000078,%eax
		mov    %ax,_0cf8e0_data
		xor    %eax,%eax
		mov    _0ce67c_data,%di
		mov    _0ce6b9_data,%al
		mov    $0x000003,%ecx
		add    %edi,%eax
		mov    _0cf9fd_data,%dl
		sub    $0x00008c,%eax
		mov    %cx,_0cf8e6_data
		mov    %ax,_0cf8e2_data
		test   %dl,%dl

	_079361_jump:
		sete   %al
		xor    %ah,%ah
		mov    %eax,(%esp)
		mov    _0cf8e0_data,%bx
		mov    _0cf8ee_data,%ax
		mov    _0cf8e2_data,%si
		sub    %eax,%ebx
		mov    _0cf8f0_data,%di
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _079391_jump
		neg    %eax

	_079391_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _07939e_jump
		neg    %eax

	_07939e_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _0793d0_jump
		mov    _0cf8e6_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0cf8e6_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_0793d0_jump:
		cmpw   $0x000000,(%esp)
		je     _079427_jump
		mov    _0cf8e6_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _0793f4_jump
		mov    $0x000001,%eax
		jg     _0793f4_jump
		neg    %eax

	_0793f4_jump:
		mov    _0cf8e8_data,%edx
		mov    _0cf8e8_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0cf8e8_data
		cmp    $0x000000,%eax
		je     _079420_jump
		mov    $0x000001,%eax
		jg     _079420_jump
		neg    %eax

	_079420_jump:
		add    %ax,_0cf8ea_data

	_079427_jump:
		mov    _0cf8e8_data,%ax
		mov    _0cf8ee_data,%si
		mov    _0cf8f0_data,%dx
		add    %eax,%esi
		mov    _0cf8ea_data,%ax
		mov    %si,_0cf8ee_data
		add    %eax,%edx
		mov    _0cf8ec_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0cf8f0_data
		cmp    $0xffffff6a,%eax
		jge    _079488_jump
		mov    _0cf8e8_data,%bx
		mov    %esi,%ecx
		neg    %ebx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    %cx,_0cf8ee_data
		add    %ebx,%esi
		mov    %bx,_0cf8e8_data
		mov    %si,_0cf8ee_data

	_079488_jump:
		cmpb   $0x000000,_0cf9f8_data
		jne    _0794ac_jump
		test   %di,%di
		je     _0794ac_jump
		mov    _0cf8ee_data,%edx
		mov    _0cf8ec_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _078f94_func

	_0794ac_jump:
		cmpw   $0x000000,_0cf8de_data
		jne    _0794c7_jump
		mov    $0xffff8300,%eax
		mov    %ax,_0cf8ee_data
		mov    %ax,_0cf8f0_data

	_0794c7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0794d4_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		incb   _0cfa91_data
		xor    %eax,%eax
		mov    _0cfa91_data,%al
		mov    _092524_data(%eax),%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    _0cce00_data(%eax),%dl
		mov    %dx,_0cf804_data
		xor    %edx,%edx
		mov    _0cce00_data(%eax),%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpw   $0x0000ff,_0cf8de_data
		je     _07952f_jump
		movw   $0x00003c,_0cf8de_data

	_07952f_jump:
		sub    $0x000050,%ebx
		mov    $0x000004,%edx
		mov    %bx,_0cf8ee_data
		mov    %dx,_0cf8ea_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		sub    $0x000078,%edx
		mov    %dx,_0cf8e0_data
		xor    %edx,%edx
		mov    $0xfffffffc,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		sub    $0x00000a,%ecx
		add    %edx,%eax
		mov    %cx,_0cf8f0_data
		sub    $0x000078,%eax
		mov    _0cf8ee_data,%edx
		mov    %ax,_0cf8e2_data
		mov    _0cf8ec_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cf8e8_data
		call   _078f94_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_0795a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0ce77e_data
		je     _0795b6_jump
		mov    _0ce6dc_data,%eax
		jmp    _0795bb_jump

	_0795b6_jump:
		mov    $_0ce650_data,%eax

	_0795bb_jump:
		sub    $0x000050,%ebx
		sub    $0x00000a,%edx
		mov    %bx,_0cf8ee_data
		mov    %dx,_0cf8f0_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		mov    $0x000078,%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    $0xfffffffc,%esi
		mov    %dx,_0cf8e0_data
		xor    %edx,%edx
		mov    $0x000002,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %cx,_0cf8de_data
		add    %edx,%eax
		mov    %si,_0cf8e8_data
		sub    %ecx,%eax
		mov    _0cf8ee_data,%edx
		mov    %ax,_0cf8e2_data
		mov    _0cf8ec_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cf8ea_data
		call   _078f94_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_079638_func:
		push   %ebx
		push   %edx
		mov    _0cf8e2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		orb    $0x000004,0x000081(%edx)
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%eax),%eax
		movw   $0x00ff80,0x000040(%edx)
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01e030_func
		mov    %edx,%eax
		call   _01f8e8_func
		pop    %edx
		pop    %ebx
		ret    



_079688_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0ce6a6_data
		pop    %edx
		ret    



_07969c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cf884_data,%si
		mov    _0e7454_data,%di
		mov    _0e7450_data,%ebp
		cmpw   $0x000003,_0cf868_data
		je     _0796eb_jump
		cmpb   $0x000002,_0ce6bd_data
		jne    _0796d2_jump
		cmpb   $0x000009,_0ce6bc_data
		je     _0796eb_jump

	_0796d2_jump:
		cmpb   $0x000003,_0ce6bd_data
		jne    _0796fb_jump
		mov    _0ce6bc_data,%bl
		cmp    $0x000017,%bl
		je     _0796eb_jump
		cmp    $0x000007,%bl
		jne    _0796fb_jump

	_0796eb_jump:
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cfa8f_data
		mov    %edx,_0ceef4_data

	_0796fb_jump:
		test   %ebp,%ebp
		je     _07971d_jump
		mov    _0cf9f9_data,%ch
		dec    %ebp
		cmp    $0x000002,%ch
		jb     _079715_jump
		addw   $0x000002,_0cf89e_data
		jmp    _07971d_jump

	_079715_jump:
		subw   $0x000002,_0cf89e_data

	_07971d_jump:
		cmpl   $0x000060,_0ceef4_data
		jge    _07972f_jump
		cmpb   $0x000001,_0cfa8f_data
		je     _07974c_jump

	_07972f_jump:
		cmpl   $0x0000c4,_0ceef4_data
		jge    _079897_jump
		cmpb   $0x000002,_0cfa8f_data
		jne    _079897_jump

	_07974c_jump:
		cmpb   $0x000001,_0cfa8f_data
		jne    _07975e_jump
		cmpb   $0x000000,_0cf9f7_data
		je     _079778_jump

	_07975e_jump:
		cmpb   $0x000002,_0cfa8f_data
		jne    _079897_jump
		cmpb   $0x000000,_0cf9f9_data
		jne    _079897_jump

	_079778_jump:
		cmpb   $0x000002,_0cf9f9_data
		jb     _07978b_jump
		addw   $0x000003,_0cf89e_data
		jmp    _079793_jump

	_07978b_jump:
		subw   $0x000003,_0cf89e_data

	_079793_jump:
		mov    _0cf85e_data,%ax
		mov    _0cf854_data,%bx
		dec    %esi
		cmp    %bx,%ax
		jle    _0797b0_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cf85e_data

	_0797b0_jump:
		incl   _0ceef4_data
		testb  $0x00000f,_0ceef4_data
		jne    _0797c6_jump
		decw   _0ce63a_data

	_0797c6_jump:
		xor    %eax,%eax
		jmp    _079886_jump

	_0797cd_jump:
		movswl %ax,%ebx
		xor    %edx,%edx
		mov    _0ceee0_data(%ebx),%dl
		imul   $0x000084,%edx,%ecx
		mov    _0ccdf0_data,%edx
		decl   0x00002c(%ecx,%edx,1)
		xor    %ecx,%ecx
		mov    _0ceee0_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decw   0x00003e(%ecx,%edx,1)
		cmpb   $0x000001,_0cfa8f_data
		jne    _079836_jump
		cmpb   $0x000000,_0cf9ff_data
		jne    _079836_jump
		xor    %ecx,%ecx
		mov    _0ceee0_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decl   0x00002c(%ecx,%edx,1)
		mov    _0ceee0_data(%ebx),%bl
		and    $0x0000ff,%ebx
		imul   $0x000084,%ebx,%ebx
		decw   0x00003e(%edx,%ebx,1)

	_079836_jump:
		movswl %ax,%ebx
		mov    _0ceee0_data(%ebx),%bl
		and    $0x0000ff,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0ccdf0_data,%edx
		add    %edx,%ebx
		movswl %si,%edx
		mov    0x00002c(%ebx),%ecx
		add    $0x000078,%edx
		cmp    %ecx,%edx
		jle    _079863_jump
		mov    %edx,0x00002c(%ebx)

	_079863_jump:
		movswl %ax,%edx
		mov    _0ceee0_data(%edx),%dl
		and    $0x0000ff,%edx
		imul   $0x000084,%edx,%ebx
		mov    _0ccdf0_data,%edx
		mov    0x00002c(%edx,%ebx,1),%dx
		inc    %eax
		mov    %edx,%edi

	_079886_jump:
		xor    %edx,%edx
		mov    _0cfa96_data,%dl
		cmp    %dx,%ax
		jl     _0797cd_jump

	_079897_jump:
		cmpl   $0x000060,_0ceef4_data
		jne    _0798be_jump
		cmpb   $0x000001,_0cfa8f_data
		jne    _0798be_jump
		mov    $0x00003c,%ebp
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_0ceef4_data
		mov    %ah,_0cfa8f_data

	_0798be_jump:
		cmpl   $0x0000c4,_0ceef4_data
		jne    _0798e8_jump
		cmpb   $0x000002,_0cfa8f_data
		jne    _0798e8_jump
		mov    $0x00003c,%ebp
		xor    %ecx,%ecx
		xor    %dh,%dh
		mov    %ecx,_0ceef4_data
		mov    %dh,_0cfa8f_data

	_0798e8_jump:
		mov    %ebp,_0e7450_data
		mov    %di,_0e7454_data
		mov    %si,_0cf884_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079904_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cf802_data,%ebx
		movzbw 0x00006d(%eax),%si
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%eax),%dl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		test   %si,%si
		jne    _079a89_jump
		cmp    $0x000002,%dx
		jb     _079a89_jump
		cmp    $0x000003,%dx
		jbe    _079a3b_jump
		cmp    $0x000004,%dx
		jne    _079a89_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079a89_jump
		cmpw   $0x000000,_0cf852_data
		jne    _079a89_jump
		mov    $0x000001,%esi
		mov    _0cf80e_data,%di
		mov    0x00006c(%ebx),%dl
		add    %esi,%edi
		mov    %si,_0cf852_data
		mov    %di,_0cf80e_data
		cmp    $0x000007,%dl
		jne    _0799d6_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d810_func
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    _0cfa91_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0cfa91_data
		mov    _092524_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0cce00_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0cf804_data

	_0799d6_jump:
		cmpw   $0x000004,_0cf80e_data
		jne    _0799f1_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func

	_0799f1_jump:
		cmpw   $0x000005,_0cf80e_data
		jne    _079a89_jump
		mov    $0x000005,%edx
		mov    _0cf816_data,%di
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cf80e_data
		mov    %bx,_0cf80a_data
		inc    %edi
		mov    $0x000001,%ebx
		mov    %di,_0cf816_data
		call   _061220_func
		decb   _0cfa91_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079a3b_jump:
		cmpw   $0x000004,_0cf8dc_data
		jne    _079a63_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d808_func
		mov    %bx,_0cf8dc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079a63_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		movw   $0x000004,_0cf8dc_data

	_079a89_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079a90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %dx,%dx
		jne    _079b55_jump
		cmp    $0x000004,%ax
		jb     _079b55_jump
		ja     _079b55_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079b55_jump
		cmpw   $0x000000,_0cf852_data
		jne    _079b55_jump
		mov    $0x000001,%ebx
		mov    _0cf80e_data,%si
		mov    _0ce6bd_data,%dl
		add    %ebx,%esi
		mov    %bx,_0cf852_data
		mov    %si,_0cf80e_data
		cmp    $0x000005,%dl
		jne    _079b16_jump
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d810_func
		mov    $0x000002,%edx
		mov    $_0ce650_data,%eax
		call   _01d808_func

	_079b16_jump:
		cmpw   $0x000003,_0cf80e_data
		jne    _079b55_jump
		mov    $0x000001,%ebx
		mov    _0cf816_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0cf8de_data
		mov    %dx,_0cf816_data
		mov    %ecx,%eax
		mov    $0x000006,%edx
		call   _061220_func
		xor    %ebx,%ebx
		movb   $0x000000,0x00006b(%ecx)
		mov    %bx,_0cf80e_data

	_079b55_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079b5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _079114_func
		test   %bx,%bx
		jne    _079c71_jump
		cmp    $0x000004,%dx
		jb     _079b91_jump
		jbe    _079b9d_jump
		cmp    $0x000007,%dx
		je     _079c06_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079b91_jump:
		cmp    $0x000002,%dx
		jb     _079c90_jump
		jmp    _079bf5_jump

	_079b9d_jump:
		mov    _0cf80e_data,%dx
		mov    %edx,%eax
		inc    %eax
		test   %dx,%dx
		jbe    _079bb7_jump
		cmp    $0x000001,%dx
		je     _079bd4_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079bb7_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079c90_jump
		mov    $0x000001,%bl
		mov    %ax,_0cf80e_data
		mov    %bl,_0cfa8f_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079bd4_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079c90_jump
		mov    $0x000001,%ebx
		mov    %ax,_0cf80e_data
		mov    %bx,_0cf852_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079bf5_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d808_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079c06_jump:
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _079c90_jump
		cmpw   $0x000000,_0cf8de_data
		jne    _079c90_jump
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0794d4_func
		mov    _0cf80e_data,%si
		inc    %esi
		mov    %si,_0cf80e_data
		cmp    $0x000005,%si
		jne    _079c90_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _061220_func
		mov    _0cf816_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0cf80e_data
		mov    %dx,_0cf816_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079c71_jump:
		cmp    $0x000001,%bx
		jne    _079c90_jump
		cmp    $0x00000f,%dx
		jne    _079c90_jump
		mov    _0cf80a_data,%dx
		cmp    0x000048(%ecx),%dx
		jne    _079c90_jump
		movw   $0x000000,0x000048(%ecx)

	_079c90_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079c98_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _079114_func
		test   %bx,%bx
		jne    _079d43_jump
		cmp    $0x000002,%dx
		jb     _079d43_jump
		mov    _0cf80e_data,%ax
		inc    %eax
		cmp    $0x000002,%dx
		jbe    _079cf8_jump
		cmp    $0x000004,%dx
		jne    _079d43_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _079d43_jump
		cmpw   $0x000001,_0cf80e_data
		jne    _079d43_jump
		mov    $0x000002,%dh
		mov    %ax,_0cf80e_data
		mov    %dh,_0cfa8f_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079cf8_jump:
		mov    _0cf80e_data,%bx
		test   %bx,%bx
		jne    _079d1f_jump
		mov    $0x000001,%ebx
		mov    $0x00000b,%edx
		mov    %ax,_0cf80e_data
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079d1f_jump:
		cmp    $0x000002,%bx
		jne    _079d43_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d810_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		call   _01d808_func
		movw   $0x000003,0x000040(%ecx)

	_079d43_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079d48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079e12_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000008,%dl
		jne    _079d91_jump
		cmpb   $0x000041,0x00006b(%ecx)
		jne    _079e12_jump
		mov    %ecx,%eax
		mov    $0x000009,%edx
		call   _079638_func
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x000009,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079d91_jump:
		cmp    $0x000009,%dl
		jne    _079dd0_jump
		mov    _0cf8e2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		addw   $0x000002,0x000040(%edx,%eax,4)
		mov    0x00003e(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		neg    %eax
		cmp    $0xffffff92,%eax
		jne    _079e12_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d808_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079dd0_jump:
		cmp    $0x00000a,%dl
		jne    _079e12_jump
		cmpb   $0x000007,0x00006b(%ecx)
		jne    _079e12_jump
		mov    _0cf8e2_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		mov    _0ccdf0_data,%edx
		add    %ecx,%eax
		movl   $0xffff8300,0x000028(%edx,%eax,4)
		mov    0x000081(%edx,%eax,4),%cl
		movl   $0xffff8300,0x00002c(%edx,%eax,4)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%edx,%eax,4)

	_079e12_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079e18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000010,%ebx
		mov    $0xffffffff,%edx
		mov    _0cf8f0_data,%ax
		mov    _0cf8ee_data,%di
		add    $0x000078,%eax
		add    $0x000078,%edi
		mov    %ax,(%esp)
		mov    0x00006d(%esi),%ah
		mov    %ebx,%ecx
		test   %ah,%ah
		jne    _079e54_jump
		cmpb   $0x00000b,0x00006c(%esi)
		je     _079e5b_jump

	_079e54_jump:
		mov    $0x000001,%eax
		jmp    _079e5d_jump

	_079e5b_jump:
		xor    %eax,%eax

	_079e5d_jump:
		test   %eax,%eax
		je     _079e98_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _079e6d_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _079e74_jump

	_079e6d_jump:
		mov    $0x000001,%eax
		jmp    _079e76_jump

	_079e74_jump:
		xor    %eax,%eax

	_079e76_jump:
		test   %eax,%eax
		je     _079e98_jump
		push   %esi
		movswl %cx,%eax
		movswl %di,%edx
		push   %eax
		movswl %bx,%ecx
		mov    0x000006(%esp),%ebx
		mov    $0x000096,%eax
		sar    $0x000010,%ebx
		call   _02c670_func
		mov    %eax,%edx

	_079e98_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _079f1a_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d808_func
		mov    _0cf8ee_data,%edx
		mov    _0cf8ec_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _07903c_func
		mov    $0xffff8300,%edx
		mov    %cx,_0cf8de_data
		mov    0x000076(%esi),%ah
		mov    %dx,_0cf8ee_data
		dec    %ah
		mov    %dx,_0cf8f0_data
		mov    %ah,0x000076(%esi)
		cmp    $0x000001,%ah
		jne    _079f00_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _061220_func

	_079f00_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _079f1a_jump
		mov    $0x00000c,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d808_func
		mov    %bl,_0cfa78_data

	_079f1a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079f24_func:
		push   %ecx
		orb    $0x000040,_0cf81e_data
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079f4f_jump
		cmpb   $0x00000c,0x00006c(%eax)
		jne    _079f4f_jump
		cmpb   $0x00007f,0x00006b(%eax)
		jb     _079f4f_jump
		mov    $0x000001,%cl
		movb   $0x000081,0x00006b(%eax)
		mov    %cl,_0cfa76_data
		call   _062150_func

	_079f4f_jump:
		pop    %ecx
		ret    

_079f54_switch:
		.long   _07a042_case
		.long   _07a052_case
		.long   _07a062_case
		.long   _07a072_case




_079f64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movzbw 0x00006c(%ecx),%si
		mov    %eax,(%esp)
		test   %ax,%ax
		jne    _079fc8_jump
		cmp    $0x000001,%si
		jne    _079fc8_jump
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _079f9c_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ac,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_079f9c_jump:
		cmpb   $0x000032,0x00006b(%ecx)
		jne    _079fb2_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ad,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_079fb2_jump:
		cmpb   $0x000064,0x00006b(%ecx)
		jne    _079fc8_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000b1,%eax
		sar    $0x000010,%edx
		call   _07228c_func

	_079fc8_jump:
		mov    _0cf87c_data,%bx
		cmp    $0x00000a,%bx
		jne    _07a082_jump
		mov    %ecx,%eax
		call   _02f658_func
		cmpw   $0x000000,_0cf8ec_data
		jne    _079fef_jump
		call   _078dd0_func

	_079fef_jump:
		mov    %ecx,%eax
		call   _079d48_func
		call   _07969c_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		mov    _0ce678_data,%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _07a025_jump
		cmpw   $0x000003,_0cf868_data
		je     _07a025_jump
		mov    $0x000001,%eax
		mov    %ecx,%edx
		call   _02dbdc_func

	_07a025_jump:
		mov    _0cf816_data,%ax
		cmp    $0x000003,%ax
		ja     _07a1d2_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_079f54_switch(,%eax,4)

	_07a042_case:
		mov    %ecx,%eax
		call   _079904_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a052_case:
		mov    %ecx,%eax
		call   _079a90_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a062_case:
		mov    %ecx,%eax
		call   _079b5c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a072_case:
		mov    %ecx,%eax
		call   _079c98_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a082_jump:
		cmp    $0x00000b,%bx
		jne    _07a1d2_jump
		cmpw   $0x000000,_0cf8ec_data
		jne    _07a115_jump
		mov    $0x000001,%bl
		mov    _0ccdf0_data,%edx
		mov    0x000077(%ecx),%al
		mov    %bl,_0cfa68_data
		mov    %al,0x000076(%ecx)
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07a0d8_jump

	_07a0bc_jump:
		cmpw   $0x0000f8,0x000060(%edx)
		jne    _07a0cc_jump
		mov    %ax,_0cf8e4_data
		jmp    _07a0d8_jump

	_07a0cc_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _07a0bc_jump

	_07a0d8_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _061220_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d810_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d808_func
		mov    $0x000001,%eax
		mov    $0x000004,%edx
		mov    %ax,_0cf8ec_data
		mov    %dx,_0cf816_data

	_07a115_jump:
		mov    %ecx,%eax
		call   _02f658_func
		call   _0792ac_func
		mov    %ecx,%eax
		call   _079d48_func
		mov    %ecx,%eax
		call   _079e18_func
		mov    %ecx,%eax
		mov    (%esp),%ebx
		call   _079f24_func
		test   %bx,%bx
		jne    _07a1d2_jump
		cmp    $0x000002,%si
		jb     _07a1d2_jump
		cmp    $0x000003,%si
		jbe    _07a192_jump
		cmp    $0x000007,%si
		jne    _07a1d2_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _07a1d2_jump
		cmpw   $0x000000,_0cf8de_data
		jne    _07a1d2_jump
		mov    $0x0000ff,%edi
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0cf8de_data
		call   _0795a0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a192_jump:
		cmpw   $0x000005,_0cf8dc_data
		jne    _07a1bd_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d808_func
		mov    %bx,_0cf8dc_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a1bd_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d808_func
		movw   $0x000005,_0cf8dc_data

	_07a1d2_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a1dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0cf816_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jae    _07a25e_jump
		test   %dx,%dx
		jne    _07a25e_jump
		test   %bx,%bx
		jne    _07a25e_jump
		test   %ax,%ax
		jbe    _07a217_jump
		cmp    $0x000002,%ax
		jb     _07a25e_jump
		cmp    $0x000003,%ax
		jbe    _07a241_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a217_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		xor    %edx,%edx
		mov    %dx,_0cf80e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a241_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func

	_07a25e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a264_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0cf816_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jb     _07a288_jump
		jbe    _07a312_jump
		pop    %ecx
		pop    %ebx
		ret    

	_07a288_jump:
		test   %dx,%dx
		jne    _07a332_jump
		test   %bx,%bx
		jne    _07a332_jump
		cmp    $0x000001,%ax
		jb     _07a2ab_jump
		jbe    _07a2e5_jump
		cmp    $0x000003,%ax
		jbe    _07a2f2_jump
		pop    %ecx
		pop    %ebx
		ret    

	_07a2ab_jump:
		test   %ax,%ax
		jne    _07a332_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		movb   $0x000000,0x000073(%ecx)
		xor    %ebx,%ebx
		movb   $0x000051,0x00006b(%ecx)
		mov    %bx,_0cf80e_data
		pop    %ecx
		pop    %ebx
		ret    

	_07a2e5_jump:
		cmpb   $0x000051,0x00006b(%ecx)
		jae    _07a332_jump
		movb   $0x000051,0x00006b(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07a2f2_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d808_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_07a312_jump:
		test   %bx,%bx
		jne    _07a332_jump
		addl   $0x000002,0x000028(%ecx)
		incw   _0cf80a_data
		cmp    $0x000002,%ax
		jb     _07a332_jump
		cmp    $0x000003,%ax
		ja     _07a332_jump
		mov    %bx,0x000048(%ecx)

	_07a332_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07a338_func:
		mov    _0e7454_data,%ax
		ret    



_07a340_func:
		push   %edx
		mov    _0ce678_data,%ax
		mov    %ax,_0cf8aa_data
		mov    _0ce67c_data,%ax
		mov    %ax,_0cf8a2_data
		mov    _0cf89e_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cf8b6_data
		mov    _0cf8a6_data,%ax
		mov    %dx,_0cf8a0_data
		mov    %ax,_0cf8b8_data
		pop    %edx
		ret    

_07a380_switch:
		.long   _07a4bb_case
		.long   _07a561_case
		.long   _07a5d5_case
		.long   _07a637_case
		.long   _07a668_case
		.long   _07a67d_case

_07a398_switch:
		.long   _07a6b7_case
		.long   _07a893_case
		.long   _07a9c6_case
		.long   _07aadc_case
		.long   _07abf1_case
		.long   _07acb1_case

_07a3b0_switch:
		.long   _07a8b3_case
		.long   _07acda_case
		.long   _07a8d1_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07a90b_case
		.long   _07acda_case
		.long   _07a92c_case
		.long   _07acda_case
		.long   _07a96b_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07a843_case
		.long   _07a99a_case
		.long   _07a9b0_case

_07a3ec_switch:
		.long   _07a9e6_case
		.long   _07acda_case
		.long   _07aa0f_case
		.long   _07aa2d_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07aa67_case
		.long   _07acda_case
		.long   _07aa88_case
		.long   _07aab1_case
		.long   _07aac6_case

_07a41c_switch:
		.long   _07aafc_case
		.long   _07ab1d_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07ab47_case
		.long   _07acda_case
		.long   _07ab72_case
		.long   _07acda_case
		.long   _07ab93_case
		.long   _07abc5_case
		.long   _07abdb_case

_07a448_switch:
		.long   _07ac11_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07ac65_case
		.long   _07acda_case
		.long   _07acda_case
		.long   _07ac8e_case
		.long   _07ac9e_case




_07a474_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    _0cf8a0_data,%cx
		xor    %edx,%edx
		test   %cx,%cx
		je     _07a699_jump
		call   _07a340_func
		cmpw   $0x000005,0x000060(%ebx)
		je     _07a699_jump
		mov    _0cf88c_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _07a699_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_07a380_switch(,%eax,4)

	_07a4bb_case:
		cmpw   $0x000002,_0cf87c_data
		jne    _07a4d5_jump
		testb  $0x000001,_0cf81a_data
		je     _07a4d5_jump
		incw   _0cf82e_data

	_07a4d5_jump:
		cmpw   $0x000005,_0cf87c_data
		jne    _07a4ef_jump
		testb  $0x000001,_0cf81e_data
		je     _07a4ef_jump
		incw   _0cf82e_data

	_07a4ef_jump:
		cmpw   $0x000007,_0cf87c_data
		jne    _07a50b_jump
		testb  $0x000002,_0cf81a_data
		je     _07a50b_jump
		movw   $0x000008,_0cf87c_data

	_07a50b_jump:
		cmpw   $0x00000d,_0cf87c_data
		jne    _07a525_jump
		testb  $0x000002,_0cf81e_data
		je     _07a525_jump
		incw   _0cf82e_data

	_07a525_jump:
		cmpw   $0x00000f,_0cf87c_data
		jne    _07a541_jump
		testb  $0x000002,_0cf81e_data
		je     _07a541_jump
		movw   $0x000001,_0cf892_data

	_07a541_jump:
		cmpw   $0x000010,_0cf87c_data
		jne    _07a699_jump
		testb  $0x000080,_0cf81a_data
		je     _07a699_jump
		jmp    _07a690_jump

	_07a561_case:
		cmpw   $0x000005,_0cf87c_data
		jne    _07a57d_jump
		testb  $0x000001,_0cf81f_data
		je     _07a57d_jump
		movw   $0x000001,_0cf892_data

	_07a57d_jump:
		cmpw   $0x000009,_0cf87c_data
		jne    _07a599_jump
		testb  $0x000004,_0cf81e_data
		je     _07a599_jump
		movw   $0x000001,_0cf892_data

	_07a599_jump:
		cmpw   $0x00000a,_0cf87c_data
		jne    _07a5b5_jump
		testb  $0x000004,_0cf81a_data
		je     _07a5b5_jump
		movw   $0x00000b,_0cf87c_data

	_07a5b5_jump:
		cmpw   $0x00000e,_0cf87c_data
		jne    _07a699_jump
		testb  $0x000004,_0cf81e_data
		je     _07a699_jump
		jmp    _07a690_jump

	_07a5d5_case:
		mov    _0cf87c_data,%di
		cmp    $0x000001,%di
		jne    _07a5f2_jump
		testb  $0x000008,_0cf81e_data
		je     _07a5f2_jump
		mov    %di,_0cf892_data

	_07a5f2_jump:
		cmpw   $0x000009,_0cf87c_data
		jne    _07a60e_jump
		testb  $0x000008,_0cf81e_data
		je     _07a60e_jump
		movw   $0x000001,_0cf892_data

	_07a60e_jump:
		cmpw   $0x00000a,_0cf87c_data
		jne    _07a699_jump
		testb  $0x000001,_0cf81b_data
		je     _07a699_jump
		movw   $0x00000b,_0cf87c_data
		jmp    _07a699_jump

	_07a637_case:
		cmpw   $0x000003,_0cf87c_data
		jne    _07a653_jump
		testb  $0x000010,_0cf81e_data
		je     _07a653_jump
		movw   $0x000001,_0cf892_data

	_07a653_jump:
		cmpw   $0x00000a,_0cf87c_data
		jne    _07a699_jump
		testb  $0x000020,_0cf81e_data
		je     _07a699_jump
		jmp    _07a690_jump

	_07a668_case:
		cmpw   $0x000009,_0cf87c_data
		jne    _07a699_jump
		testb  $0x000040,_0cf81e_data
		je     _07a699_jump
		jmp    _07a690_jump

	_07a67d_case:
		cmpw   $0x000003,_0cf87c_data
		jne    _07a699_jump
		testb  $0x000080,_0cf81e_data
		je     _07a699_jump

	_07a690_jump:
		movw   $0x000001,_0cf892_data

	_07a699_jump:
		mov    _0cf88c_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _07acda_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07a398_switch(,%eax,4)

	_07a6b7_case:
		mov    _0cf87c_data,%ax
		cmp    $0x00000c,%ax
		jb     _07a703_jump
		jbe    _07a822_jump
		cmp    $0x000013,%ax
		jb     _07a6ee_jump
		jbe    _07ab07_jump
		cmp    $0x000014,%ax
		jbe    _07a867_jump
		cmp    $0x000015,%ax
		je     _07a87d_jump
		jmp    _07acda_case

	_07a6ee_jump:
		cmp    $0x000011,%ax
		jb     _07acda_case
		jbe    _07a843_case
		jmp    _07a851_jump

	_07a703_jump:
		cmp    $0x000004,%ax
		jb     _07a72a_jump
		jbe    _07a752_jump
		cmp    $0x000008,%ax
		jb     _07acda_case
		jbe    _07a79f_jump
		cmp    $0x00000b,%ax
		je     _07a7e0_jump
		jmp    _07acda_case

	_07a72a_jump:
		cmp    $0x000002,%ax
		jne    _07acda_case
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		movw   $0x000015,_0cf82e_data
		mov    $0x000001,%edx
		jmp    _07acda_case

	_07a752_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a76f_jump
		mov    $0x000014,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf82e_data
		jmp    _07acda_case

	_07a76f_jump:
		mov    $0x000001,%esi
		mov    _094d78_data,%ch
		mov    %si,_0cf892_data
		test   $0x000001,%ch
		jne    _07acda_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094d78_data
		orb    $0x000004,_094ecc_data
		jmp    _07acda_case

	_07a79f_jump:
		mov    $0x000001,%ebx
		mov    _094d8c_data,%ah
		mov    %bx,_0cf892_data
		test   $0x000001,%ah
		jne    _07a7c1_jump
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094d8c_data

	_07a7c1_jump:
		mov    _094db4_data,%bh
		test   $0x000001,%bh
		jne    _07acda_case
		mov    %bh,%cl
		or     $0x000004,%cl
		mov    %cl,_094db4_data
		jmp    _07acda_case

	_07a7e0_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07a7fa_jump
		movw   $0x000012,_0cf82e_data
		mov    $0x000001,%edx
		jmp    _07acda_case

	_07a7fa_jump:
		mov    $0x000001,%eax
		mov    _094da0_data,%ch
		mov    %ax,_0cf892_data
		test   $0x000001,%ch
		jne    _07acda_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094da0_data
		jmp    _07acda_case

	_07a822_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		mov    $0x000013,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07a843_case:
		movw   $0x000001,_0cf892_data
		jmp    _07acda_case

	_07a851_jump:
		mov    $0x00000b,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf82e_data
		jmp    _07acda_case

	_07a867_jump:
		mov    $0x000004,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf82e_data
		jmp    _07acda_case

	_07a87d_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %bx,_0cf82e_data
		jmp    _07acda_case

	_07a893_case:
		mov    _0cf87c_data,%ax
		sub    $0x000004,%eax
		cmp    $0x00000e,%ax
		ja     _07acda_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07a3b0_switch(,%eax,4)

	_07a8b3_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		movw   $0x000011,_0cf82e_data
		mov    $0x000001,%edx
		jmp    _07acda_case

	_07a8d1_case:
		mov    $0x000001,%edi
		mov    _094dc8_data,%bl
		mov    %di,_0cf892_data
		test   $0x000001,%bl
		jne    _07acda_case
		mov    %bl,%bh
		mov    _094ee0_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094dc8_data
		mov    %cl,_094ee0_data
		jmp    _07acda_case

	_07a90b_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		mov    $0x000012,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07a92c_case:
		mov    $0x000001,%ebx
		mov    _094ddc_data,%cl
		mov    %bx,_0cf892_data
		test   $0x000001,%cl
		jne    _07a94e_jump
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094ddc_data

	_07a94e_jump:
		mov    _094e04_data,%al
		test   $0x000001,%al
		jne    _07acda_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094e04_data
		jmp    _07acda_case

	_07a96b_case:
		movw   $0x000001,_0cf892_data
		mov    _094df0_data,%ah
		test   $0x000001,%ah
		jne    _07acda_case
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094df0_data
		orb    $0x000004,_094ef4_data
		jmp    _07acda_case

	_07a99a_case:
		mov    $0x000004,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07a9b0_case:
		mov    $0x000009,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf82e_data
		jmp    _07acda_case

	_07a9c6_case:
		mov    _0cf87c_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000b,%ax
		ja     _07acda_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07a3ec_switch(,%eax,4)

	_07a9e6_case:
		mov    $0x000001,%ebx
		mov    _094e18_data,%ch
		mov    %bx,_0cf892_data
		test   $0x000001,%ch
		jne    _07acda_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094e18_data
		jmp    _07acda_case

	_07aa0f_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		movw   $0x00000c,_0cf82e_data
		mov    $0x000001,%edx
		jmp    _07acda_case

	_07aa2d_case:
		mov    $0x000001,%edi
		mov    _094e2c_data,%bl
		mov    %di,_0cf892_data
		test   $0x000001,%bl
		jne    _07acda_case
		mov    %bl,%bh
		mov    _094f08_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094e2c_data
		mov    %cl,_094f08_data
		jmp    _07acda_case

	_07aa67_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07aa88_case:
		mov    $0x000001,%ebx
		mov    _094e40_data,%al
		mov    %bx,_0cf892_data
		test   $0x000001,%al
		jne    _07acda_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094e40_data
		jmp    _07acda_case

	_07aab1_case:
		mov    $0x000004,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cf82e_data
		jmp    _07acda_case

	_07aac6_case:
		mov    $0x000009,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf82e_data
		jmp    _07acda_case

	_07aadc_case:
		mov    _0cf87c_data,%ax
		sub    $0x000003,%eax
		cmp    $0x00000a,%ax
		ja     _07acda_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07a41c_switch(,%eax,4)

	_07aafc_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case

	_07ab07_jump:
		mov    $0x00000c,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07ab1d_case:
		mov    $0x000001,%eax
		mov    _094e54_data,%cl
		mov    %ax,_0cf892_data
		test   $0x000001,%cl
		jne    _07acda_case
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094e54_data
		jmp    _07acda_case

	_07ab47_case:
		mov    $0x000001,%edi
		mov    _094e68_data,%bl
		mov    %di,_0cf892_data
		test   $0x000001,%bl
		jne    _07acda_case
		mov    %bl,%bh
		or     $0x000004,%bh
		mov    %bh,_094e68_data
		jmp    _07acda_case

	_07ab72_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07acda_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07ab93_case:
		mov    $0x000001,%eax
		mov    _094e7c_data,%ch
		mov    %ax,_0cf892_data
		test   $0x000001,%ch
		jne    _07acda_case
		call   _0354a4_func
		orb    $0x000004,_094e7c_data
		orb    $0x000004,_094f1c_data
		jmp    _07acda_case

	_07abc5_case:
		mov    $0x000003,%edi
		mov    $0x000001,%edx
		mov    %di,_0cf82e_data
		jmp    _07acda_case

	_07abdb_case:
		mov    $0x000009,%esi
		mov    $0x000001,%edx
		mov    %si,_0cf82e_data
		jmp    _07acda_case

	_07abf1_case:
		mov    _0cf87c_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000a,%ax
		ja     _07acda_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07a448_switch(,%eax,4)

	_07ac11_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07ac2e_jump
		mov    $0x00000c,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf82e_data
		jmp    _07acda_case

	_07ac2e_jump:
		movw   $0x000001,_0cf892_data
		mov    _094e90_data,%bl
		test   $0x000001,%bl
		jne    _07acda_case
		mov    %bl,%bh
		mov    _094f1c_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094e90_data
		mov    %cl,_094f1c_data
		jmp    _07acda_case

	_07ac65_case:
		mov    $0x000001,%edi
		mov    _094ea4_data,%ch
		mov    %di,_0cf892_data
		test   $0x000001,%ch
		jne    _07acda_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094ea4_data
		orb    $0x000004,_094f30_data
		jmp    _07acda_case

	_07ac8e_case:
		movw   $0x000001,_0cf892_data
		call   _0354a4_func
		jmp    _07acda_case

	_07ac9e_case:
		mov    $0x000002,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cf82e_data
		jmp    _07acda_case

	_07acb1_case:
		mov    _0cf87c_data,%ax
		cmp    $0x000004,%ax
		jne    _07acda_case
		movw   $0x000001,_0cf892_data
		mov    $0x000001,%bl
		mov    %bl,_0cfa46_data
		mov    %bl,_0cfa3c_data
		mov    %bl,_0cfa7a_data

	_07acda_case:
		mov    _094eb8_data,%bl
		test   $0x000001,%bl
		jne    _07acf9_jump
		cmpb   $0x000066,_0cfa5b_data
		jb     _07acf9_jump
		mov    %bl,%cl
		or     $0x000004,%cl
		mov    %cl,_094eb8_data

	_07acf9_jump:
		cmpw   $0x000000,_0cf892_data
		jne    _07ad0f_jump
		test   %dx,%dx
		jne    _07ad0f_jump
		incw   _0cf82e_data

	_07ad0f_jump:
		movw   $0x000001,_0cf880_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ad20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07ae15_jump

	_07ad3f_jump:
		cmpw   $0x000013,0x000060(%ecx)
		jne    _07ae05_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07ae05_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		call   _055fbc_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _07ad79_jump
		mov    %ecx,%eax
		call   _01f8e8_func

	_07ad79_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x000062(%esi),%dl
		cmp    $0x00000a,%dl
		jne    _07ada6_jump
		mov    0x00002c(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%al
		add    %ebp,%edx
		jmp    _07addd_jump

	_07ada6_jump:
		xor    %eax,%eax
		mov    %dl,%al
		testb  $0x000002,_09253c_data(%eax)
		jne    _07adc9_jump
		mov    _0ce638_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%edx
		jmp    _07addd_jump

	_07adc9_jump:
		mov    _0ce638_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000006,%edx

	_07addd_jump:
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01e030_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d818_func
		movb   $0x000000,0x00006b(%ecx)
		orb    $0x000040,0x000081(%esi)
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ae05_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07ad3f_jump

	_07ae15_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ae1c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000060(%edx),%bx
		cmp    $0x00000f,%bx
		jne    _07ae5e_jump
		mov    0x000005(%eax),%dh
		movb   $0x0000ff,0x000001(%eax)
		and    $0x00000f,%dh
		movb   $0x000001,(%eax)
		mov    %dh,%bl
		mov    %dh,0x000005(%eax)
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_07ae5e_jump:
		cmp    $0x00000d,%bx
		jne    _07ae74_jump
		movb   $0x0000fe,0x000001(%eax)
		mov    0x000005(%eax),%dl
		movb   $0x000002,(%eax)
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)

	_07ae74_jump:
		pop    %edx
		pop    %ebx
		ret    



_07ae78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _07b047_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _07b047_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _07b059_jump
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _07b03a_jump

	_07aeb8_jump:
		mov    0x000060(%ecx),%bx
		cmp    $0x00000d,%bx
		je     _07aecc_jump
		cmp    $0x00000f,%bx
		jne    _07b02a_jump

	_07aecc_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07b02a_jump
		mov    0x000081(%esi),%al
		mov    0x000081(%ecx),%bh
		and    $0x000008,%al
		and    $0x0000f7,%bh
		movl   $0x000001,0x000024(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f8e8_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _07af51_jump
		mov    $0x000040,%eax
		jmp    _07af56_jump

	_07af51_jump:
		mov    $0xffffffc0,%eax

	_07af56_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		testb  $0x000008,0x000081(%ecx)
		je     _07af9f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _07afa8_jump

	_07af9f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_07afa8_jump:
		call   _061220_func
		cmpw   $0x00000e,0x000060(%esi)
		jne    _07b00a_jump
		mov    _0ce678_data,%edi
		mov    0x000028(%esi),%eax
		sub    %edi,%eax
		test   %eax,%eax
		jge    _07afc5_jump
		neg    %eax

	_07afc5_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000060(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0ce67c_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce678_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _07aff2_jump
		neg    %eax

	_07aff2_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000072(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _07b016_jump

	_07b00a_jump:
		movw   $0x00000d,0x000060(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07b016_jump:
		mov    %ecx,%eax
		call   _01e030_func
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b02a_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07aeb8_jump

	_07b03a_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b047_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _07b059_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _07b059_jump
		movw   $0x000000,0x000052(%esi)

	_07b059_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b060_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000032(%eax),%edx
		mov    _0cee58_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%dx
		cmp    0x000034(%eax),%dx
		je     _07b0db_jump
		movswl %dx,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    0x000081(%edx),%bl
		movw   $0x000018,0x000060(%edx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		mov    0x00002c(%eax),%si
		add    %ecx,%ebx
		mov    0x000069(%eax),%al
		sub    %esi,%ebx
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		setle  %bl
		and    $0x0000ff,%ebx
		add    $0x000003,%ebx
		cwtl   
		mov    %bl,0x000070(%edx)
		test   %eax,%eax
		jge    _07b0d7_jump
		neg    %eax

	_07b0d7_jump:
		mov    %ax,0x000048(%edx)

	_07b0db_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b0e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0ccdf0_data,%eax
		mov    _0ccdf4_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jle    _07b135_jump

	_07b0fe_jump:
		cmpw   $0x000027,0x000060(%eax)
		jne    _07b12a_jump
		movzbl %dl,%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,2)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _07b121_jump
		movw   $0x00000a,0x000056(%eax)
		jmp    _07b125_jump

	_07b121_jump:
		incw   0x000056(%eax)

	_07b125_jump:
		cmp    $0x000002,%dl
		jae    _07b135_jump

	_07b12a_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _07b0fe_jump

	_07b135_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		mov    (%esp),%esi
		lea    (%eax,%edx,1),%ebp
		mov    %esi,%ebx
		xor    %al,%al

	_07b155_jump:
		movswl %bx,%edx
		imul   $0x000084,%edx,%edx
		movswl %si,%edi
		imul   $0x000084,%edi,%edi
		mov    _0ccdf0_data,%ecx
		add    %ecx,%edx
		add    %ecx,%edi
		mov    0x000056(%edx),%cx
		cmp    0x000056(%edi),%cx
		jle    _07b17f_jump
		mov    %ebx,%esi
		mov    %edx,%ebp

	_07b17f_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    (%esp,%edx,2),%bx
		cmp    $0x000002,%al
		jb     _07b155_jump
		mov    %ebp,%eax
		movw   $0x000001,0x000056(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b1a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		cmpl   $0x000001,_0bd96c_data
		je     _07b1b6_jump
		xor    %ebx,%ebx
		mov    %ebx,_0bd96c_data

	_07b1b6_jump:
		xor    %eax,%eax
		mov    _0ce6ba_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0ce654_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0ce6bb_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _07b28c_jump
		cmpl   $0x000000,_0bd96c_data
		jne    _07b294_jump
		call   _07b0e0_func
		mov    0x000024(%eax),%edi
		mov    %eax,%ecx
		test   %edi,%edi
		je     _07b208_jump
		call   _07b628_func
		jmp    _07b20d_jump

	_07b208_jump:
		call   _01f8e8_func

	_07b20d_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000026,%ebx
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01d818_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%eax
		mov    0x000132(%eax),%al
		mov    _0ce678_data,%ebp
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce6b8_data,%al
		mov    0x000068(%ecx),%dl
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    _0ce67c_data,%edx
		mov    _0ce6b9_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e030_func
		movl   $0x000001,_0bd96c_data
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b28c_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0bd96c_data

	_07b294_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b29c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07b367_jump

	_07b2bc_jump:
		cmpw   $0x000053,0x000060(%ecx)
		jne    _07b357_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07b357_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01f8e8_func
		mov    0x000068(%esi),%bl
		mov    0x000028(%esi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%esi),%al
		mov    0x00002c(%esi),%esi
		mov    0x000069(%ecx),%bl
		add    %eax,%esi
		sub    %ebx,%esi
		mov    %ecx,%eax
		add    $0x00000a,%esi
		xor    %ebx,%ebx
		mov    %esi,0x00002c(%ecx)
		call   _01e030_func
		mov    0x00006d(%ecx),%bl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%ebx,%eax,8),%al
		movb   $0x000000,0x00006b(%ecx)
		movb   $0x000002,0x000073(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b357_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07b2bc_jump

	_07b367_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b370_func:
		push   %edx
		mov    %eax,%edx
		call   _07b29c_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %edx
		ret    



_07b390_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07b433_jump

	_07b3ae_jump:
		cmpw   $0x00008b,0x000060(%ecx)
		jne    _07b423_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07b423_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f8e8_func
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000007,0x000072(%ecx)
		jmp    _07b433_jump

	_07b423_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07b3ae_jump

	_07b433_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _061220_func
		cmpb   $0x000014,0x000070(%esi)
		jne    _07b45a_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_07b45a_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d818_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b470_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0ce678_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce6b8_data,%al
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0ce67c_data,%bx
		mov    0x000069(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0ce6b9_data,%dl
		add    %ebx,%edx
		test   %ax,%ax
		setg   %cl
		test   %dx,%dx
		setg   %ch
		test   %cl,%cl
		jne    _07b4c2_jump
		neg    %eax

	_07b4c2_jump:
		test   %ch,%ch
		jne    _07b4c8_jump
		neg    %edx

	_07b4c8_jump:
		cmp    $0x0000c8,%ax
		jle    _07b4d6_jump
		cwtl   
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_07b4d6_jump:
		test   %dx,%dx
		jne    _07b4f3_jump
		test   %cl,%cl
		je     _07b4e9_jump
		mov    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b4e9_jump:
		mov    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b4f3_jump:
		cmp    %ax,%dx
		jle    _07b513_jump
		movswl %ax,%ebx
		shl    $0x000006,%ebx
		movswl %dx,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		mov    _094d18_data(%eax),%al
		jmp    _07b530_jump

	_07b513_jump:
		movswl %dx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000080,%dl
		mov    _094d18_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_07b530_jump:
		test   %cl,%cl
		je     _07b54b_jump
		test   %ch,%ch
		je     _07b53f_jump
		mov    $0x000180,%edx
		jmp    _07b560_jump

	_07b53f_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b54b_jump:
		test   %ch,%ch
		je     _07b55b_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07b55b_jump:
		mov    $0x000080,%edx

	_07b560_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b56c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ccde8_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0ccdec_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07b61f_jump
		mov    _0ccdec_data,%si

	_07b5a6_jump:
		cmpw   $0x00008f,0x000060(%ecx)
		jne    _07b5fe_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07b5fe_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d818_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f8e8_func
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006b(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		jmp    _07b61f_jump

	_07b5fe_jump:
		inc    %eax
		mov    _0ccde8_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0ccdf0_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _07b5a6_jump

	_07b61f_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b628_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _07b56c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _07b6e9_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x00001c(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		call   _01d738_func
		lea    0x000018(%esp),%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d738_func
		movl   $0x000001,0x000024(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    $0x000010,%ecx
		add    %edx,%ebx
		mov    0x000012(%esp),%edx
		sar    %ecx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x000016(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		lea    (%ebx,%edx,1),%ecx
		mov    0x00001a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		movb   $0x000001,0x00007e(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01e030_func

	_07b6e9_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07b6f4_switch:
		.long   _07b7f0_case
		.long   _07b7bc_case
		.long   _07b7c2_case
		.long   _07b7d0_case
		.long   _07b7d6_case




_07b708_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    %edx,0x000020(%esp)

	_07b719_jump:
		call   _07b56c_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _07b818_jump
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		mov    %esp,%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01d738_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		movl   $0x000001,0x000024(%esi)
		sub    %edx,%ebx
		mov    0x000020(%esp),%esi
		mov    %ebx,%edx
		cmp    $0x000004,%si
		ja     _07b7f0_case
		xor    %ebx,%ebx
		mov    %si,%bx
		jmp    *%cs:_07b6f4_switch(,%ebx,4)

	_07b7bc_case:
		add    0x000018(%esp),%eax
		jmp    _07b7f0_case

	_07b7c2_case:
		mov    0x000018(%esp),%ecx
		mov    0x000014(%esp),%esi
		add    %ecx,%eax
		add    %esi,%edx
		jmp    _07b7f0_case

	_07b7d0_case:
		add    0x000014(%esp),%edx
		jmp    _07b7f0_case

	_07b7d6_case:
		mov    0x000016(%esp),%ebx
		sar    $0x000010,%ebx
		cwtl   
		sar    %ebx
		add    %ebx,%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		sar    %ebx
		add    %ebx,%edx

	_07b7f0_case:
		cwtl   
		mov    0x000028(%edi),%ebx
		mov    0x00002c(%edi),%ecx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		imul   $0x000005,0x000020(%esp),%eax
		movb   $0x000000,0x00007e(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ebx,0x000028(%edi)
		call   _01e030_func

	_07b818_jump:
		mov    0x000020(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x000020(%esp)
		cmp    $0x000004,%bx
		jle    _07b719_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b838_func:
		push   %ebx
		push   %edx
		call   _07b56c_func
		test   %eax,%eax
		je     _07b885_jump
		movb   $0x000000,0x00007e(%eax)
		mov    _0cf89c_data,%edx
		movb   $0x00000a,0x00007f(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%eax),%bl
		movw   $0x0000ff,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0cf8a4_data,%edx
		mov    0x000069(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_07b885_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_07b890_switch:
		.long   _07bbc3_case
		.long   _07b98b_case
		.long   _07b99c_case
		.long   _07b9ad_case
		.long   _07b9be_case
		.long   _07b9cf_case
		.long   _07b9e0_case
		.long   _07b9f1_case
		.long   _07ba02_case
		.long   _07ba13_case
		.long   _07ba24_case
		.long   _07ba35_case
		.long   _07ba46_case
		.long   _07ba57_case
		.long   _07ba68_case
		.long   _07ba79_case
		.long   _07ba8a_case
		.long   _07ba9b_case
		.long   _07baac_case
		.long   _07bab7_case
		.long   _07bac8_case
		.long   _07bad9_case
		.long   _07baea_case
		.long   _07bafb_case
		.long   _07bb0c_case
		.long   _07bb1d_case
		.long   _07bb2e_case
		.long   _07bb3f_case
		.long   _07bb50_case
		.long   _07bb61_case
		.long   _07bb6f_case
		.long   _07bb7d_case
		.long   _07bb8b_case
		.long   _07bb99_case
		.long   _07bba7_case
		.long   _07bbb5_case




_07b920_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    _0ccdf0_data,%ebx
		mov    _0ccdf4_data,%ax
		xor    %ecx,%ecx
		test   %ax,%ax
		jle    _07bc56_jump

	_07b946_jump:
		cmpw   $0x000092,0x000060(%ebx)
		jne    _07bc46_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _07bc46_jump
		mov    0x000081(%ebx),%ah
		mov    $0x000024,%ebp
		and    $0x0000f7,%ah
		movswl %si,%edx
		mov    %ah,0x000081(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		cmp    $0x000023,%edx
		ja     _07bbc3_case
		jmp    *%cs:_07b890_switch(,%edx,4)

	_07b98b_case:
		movw   $0x0000fc,0x000056(%ebx)
		movw   $0x00ffd4,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07b99c_case:
		movw   $0x0000f0,0x000056(%ebx)
		movw   $0x00ffa9,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07b9ad_case:
		movw   $0x0000dd,0x000056(%ebx)
		movw   $0x00ff80,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07b9be_case:
		movw   $0x0000c4,0x000056(%ebx)
		movw   $0x00ff5c,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07b9cf_case:
		movw   $0x0000a4,0x000056(%ebx)
		movw   $0x00ff3c,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07b9e0_case:
		movw   $0x000080,0x000056(%ebx)
		movw   $0x00ff23,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07b9f1_case:
		movw   $0x000057,0x000056(%ebx)
		movw   $0x00ff10,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba02_case:
		movw   $0x00002c,0x000056(%ebx)
		movw   $0x00ff04,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba13_case:
		movw   $0x00ff04,0x000056(%ebx)
		movw   $0x00ffd4,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba24_case:
		movw   $0x00ff10,0x000056(%ebx)
		movw   $0x00ffa9,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba35_case:
		movw   $0x00ff23,0x000056(%ebx)
		movw   $0x00ff80,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba46_case:
		movw   $0x00ff3c,0x000056(%ebx)
		movw   $0x00ff5c,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba57_case:
		movw   $0x00ff5c,0x000056(%ebx)
		movw   $0x00ff3c,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba68_case:
		movw   $0x00ff80,0x000056(%ebx)
		movw   $0x00ff23,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba79_case:
		movw   $0x00ffa9,0x000056(%ebx)
		movw   $0x00ff10,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba8a_case:
		movw   $0x00ffd4,0x000056(%ebx)
		movw   $0x00ff04,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07ba9b_case:
		movw   $0x000000,0x000056(%ebx)
		movw   $0x00ff00,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07baac_case:
		movw   $0x00ff00,0x000056(%ebx)
		jmp    _07bbc9_jump

	_07bab7_case:
		movw   $0x00ff04,0x000056(%ebx)
		movw   $0x00002c,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bac8_case:
		movw   $0x00ff10,0x000056(%ebx)
		movw   $0x000057,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bad9_case:
		movw   $0x00ff23,0x000056(%ebx)
		movw   $0x000080,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07baea_case:
		movw   $0x00ff3c,0x000056(%ebx)
		movw   $0x0000a4,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bafb_case:
		movw   $0x00ff5c,0x000056(%ebx)
		movw   $0x0000c4,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb0c_case:
		movw   $0x00ff80,0x000056(%ebx)
		movw   $0x0000dd,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb1d_case:
		movw   $0x00ffa9,0x000056(%ebx)
		movw   $0x0000f0,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb2e_case:
		movw   $0x00ffd4,0x000056(%ebx)
		movw   $0x0000fc,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb3f_case:
		movw   $0x0000fc,0x000056(%ebx)
		movw   $0x00002c,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb50_case:
		movw   $0x0000f0,0x000056(%ebx)
		movw   $0x000057,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb61_case:
		movw   $0x0000dd,0x000056(%ebx)
		movw   $0x000080,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb6f_case:
		movw   $0x0000c4,0x000056(%ebx)
		movw   $0x0000a4,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb7d_case:
		movw   $0x0000a4,0x000056(%ebx)
		movw   $0x0000c4,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb8b_case:
		movw   $0x000080,0x000056(%ebx)
		movw   $0x0000dd,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bb99_case:
		movw   $0x000057,0x000056(%ebx)
		movw   $0x0000f0,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bba7_case:
		movw   $0x00002c,0x000056(%ebx)
		movw   $0x0000fc,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bbb5_case:
		movw   $0x000000,0x000056(%ebx)
		movw   $0x000100,0x00004a(%ebx)
		jmp    _07bbcf_jump

	_07bbc3_case:
		movw   $0x000100,0x000056(%ebx)

	_07bbc9_jump:
		movw   $0x000000,0x00004a(%ebx)

	_07bbcf_jump:
		movswl %si,%edx
		mov    $0x000024,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movw   $0x000000,0x000040(%ebx)
		movswl %di,%eax
		mov    %eax,0x000028(%ebx)
		mov    -0x000002(%esp),%eax
		movw   $0x000000,0x000042(%ebx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ebx)
		mov    0x000056(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00004a(%ebx),%ax
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		mov    %dl,0x000076(%ebx)
		call   _01e030_func
		mov    0x000081(%ebx),%dl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%dl
		mov    %ebx,%eax
		mov    %dl,0x000081(%ebx)
		call   _01f8e8_func
		mov    $0x0000cd,%eax
		movswl %cx,%edx
		call   _07228c_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07bc46_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %ax,%cx
		jl     _07b946_jump

	_07bc56_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07bc60_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0ce6dc_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _07bca1_jump
		mov    _0cf862_data,%edx
		mov    _0cf85e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %eax,%edx
		mov    _0cf874_data,%eax
		mov    _0cf860_data,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edi
		sar    %eax
		jmp    _07bcb7_jump

	_07bca1_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		add    %edi,%edx
		movzbl 0x000069(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_07bcb7_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x000068(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000074(%esi),%edi
		mov    0x000069(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _07bced_jump
		neg    %eax

	_07bced_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07bd04_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax

	_07bd0e_jump:
		movswl %ax,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c9d00_data(%edx)
		jne    _07bd31_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0c9d00_data(%edx)
		jmp    _07bd38_jump

	_07bd31_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _07bd0e_jump

	_07bd38_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_07bd40_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		mov    %edx,%ebx
		call   _07bd04_func
		movswl %ax,%edx
		mov    %ax,0x00000c(%esp)
		cmp    $0xffffffff,%edx
		je     _07be38_jump
		mov    $0x000100,%edi
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%ecx
		xor    %esi,%esi
		shl    $0x000006,%ebx
		mov    %si,0x000010(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    $0x000040,%esi
		shl    $0x000006,%eax
		mov    $0x000020,%ecx
		add    %edx,%eax
		mov    $_0c9a80_data,%edx
		add    %eax,%eax
		mov    $0x000080,%ebx
		add    %eax,%edx
		jmp    _07be16_jump

	_07bda4_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000002(%edx)
		movswl %bx,%eax
		add    $0x000002,%edx
		call   _06bf60_func
		sub    %edi,%eax
		add    $0x000002,%edx
		mov    %eax,(%esp)
		movswl %si,%eax
		add    $0x000002,%edx
		call   _06bf60_func
		sub    %ecx,%eax
		add    $0x000002,%edx
		mov    %ax,-0x000004(%edx)
		mov    (%esp),%eax
		mov    %ax,-0x000002(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _06bf60_func
		mov    %ax,0x000014(%esp)
		add    $0x000004,%ebx
		mov    0x000014(%esp),%al
		add    $0x000002,%edi
		add    $0x000008,%al
		add    $0x000004,%esi
		mov    %al,-0x000002(%edx)
		mov    0x000010(%esp),%eax
		add    $0x000002,%ecx
		inc    %eax
		movb   $0x000080,-0x000001(%edx)
		mov    %ax,0x000010(%esp)

	_07be16_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000040,%ebp
		shl    $0x000003,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jg     _07bda4_jump

	_07be38_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07be44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cd084_data,%ebp
		mov    _0cf8b2_data,%ax
		mov    _0cf8b4_data,%di
		xor    %edx,%edx
		shl    $0x000006,%eax
		shl    $0x000006,%edi
		mov    %dx,0x000004(%esp)
		mov    %eax,(%esp)

	_07be70_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		cmpw   $0x000001,_0c9d00_data(%eax)
		jne    _07bf19_jump
		add    $_0c9a80_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx

	_07be94_jump:
		cmpb   $0x000080,0x000009(%eax)
		jb     _07befb_jump
		mov    (%esp),%ecx
		mov    0x000004(%eax),%bx
		sub    %ecx,%ebx
		add    %bx,(%eax)
		mov    0x000006(%eax),%bx
		mov    0x000002(%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    %cx,0x000002(%eax)
		mov    _0cd060_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _07bee1_jump
		mov    _0cd064_data,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _07bee1_jump
		mov    (%eax),%ecx
		mov    %ebp,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jl     _07bee7_jump

	_07bee1_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _07beec_jump

	_07bee7_jump:
		mov    $0x000001,%esi

	_07beec_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_07befb_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x000040,%dx
		jl     _07be94_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0c9d00_data(%eax)

	_07bf19_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000008,%bx
		jl     _07be70_jump
		mov    %ebp,_0cd084_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bf40_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _061220_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0cee58_data,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,1),%ax
		cmp    0x000034(%ecx),%ax
		je     _07bfaa_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0ccdf0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _07bfaa_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _061220_func
		movw   $0x000001,0x000052(%ecx)

	_07bfaa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bfb0_func:
		push   %edx
		mov    $_0ce650_data,%eax
		mov    $0x000001,%edx
		call   _07a474_func
		mov    %dx,_0cf880_data
		pop    %edx
		ret    



_07bfcc_func:
		push   %edx
		cmpb   $0x000000,_0cfa7a_data
		jne    _07bff1_jump
		mov    _0cf892_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0cfa49_data
		mov    %al,_0cfa86_data

	_07bff1_jump:
		pop    %edx
		ret    



_07bff4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000015,%edx
		call   _01d808_func
		mov    _0cf88c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpb   $0x00000a,0x000076(%eax)
		jne    _07c028_jump
		movb   $0x000005,0x000076(%eax)
		jmp    _07c038_jump

	_07c028_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x000076(%eax)
		call   _01d818_func

	_07c038_jump:
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07c09d_jump

	_07c04c_jump:
		cmpw   $0x0000de,0x000060(%edx)
		jne    _07c091_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07c091_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		movw   $0x000001,0x000042(%edx)
		mov    0x000081(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f8e8_func
		movb   $0x000004,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c091_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _07c04c_jump

	_07c09d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c0a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    _0ccdf0_data,%edx
		mov    _0ccdf4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07c108_jump

	_07c0bf_jump:
		cmpw   $0x0000dd,0x000060(%edx)
		jne    _07c0fc_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07c0fc_jump
		movswl %cx,%eax
		sub    $0x00008e,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f8e8_func
		orb    $0x000004,0x000081(%edx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07c0fc_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _07c0bf_jump

	_07c108_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07c10c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cf880_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _07c126_jump
		xor    %eax,%eax
		jmp    _07c1bc_jump

	_07c126_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _07c160_jump
		neg    %eax

	_07c160_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		mov    _094d0e_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _094cf2_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_07c1bc_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c1c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07c26c_jump

	_07c1e2_jump:
		cmpw   $0x000085,0x000060(%ecx)
		jne    _07c25c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07c25c_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f8e8_func
		mov    0x000028(%ebx),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000002,%edx
		mov    0x00002c(%ebx),%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000012,%ebx
		call   _01d818_func
		mov    _0cf89e_data,%di
		mov    0x000028(%ecx),%ax
		sub    %edi,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0cf8a6_data,%dx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01e030_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07c25c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07c1e2_jump

	_07c26c_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c274_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0ccdf0_data,%eax
		mov    _0ccdf4_data,%cx
		xor    %ebx,%ebx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _07c2ab_jump

	_07c28f_jump:
		cmpw   $0x00004b,0x000060(%eax)
		jne    _07c2a0_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _07c2a0_jump
		mov    %eax,%ebx
		jmp    _07c2ab_jump

	_07c2a0_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _07c28f_jump

	_07c2ab_jump:
		test   %ebx,%ebx
		jne    _07c2bd_jump
		mov    $0x00004b,%eax
		call   _01d4c4_func
		mov    %eax,%ebx
		jmp    _07c2c4_jump

	_07c2bd_jump:
		mov    %ebx,%eax
		call   _01f8e8_func

	_07c2c4_jump:
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x00005e(%ebx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ebx)
		mov    0x000028(%esi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006a(%ebx)
		movb   $0x000001,0x00006b(%ebx)
		movb   $0x000000,0x00006d(%ebx)
		movb   $0x000000,0x00006f(%ebx)
		sub    $0x000014,%eax
		movb   $0x000000,0x00006e(%ebx)
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movb   $0x000000,0x00006c(%ebx)
		call   _01e030_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c328_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cf82a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07c364_jump
		movw   $0x00ffff,_0cf82c_data
		call   _058644_func
		mov    _0cf82a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_07c364_jump:
		mov    _0cf844_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _07c3a1_jump
		mov    $0xffffffff,%ebx
		mov    _0ccdf0_data,%eax
		mov    %bx,_0cf846_data
		mov    -0x000003(%eax),%ch
		sub    $0x000084,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0ce6c6_data
		mov    %bh,_0cef5b_data
		mov    %ch,0x000081(%eax)

	_07c3a1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c3b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%edx
		mov    _0e7460_data,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    0x000030(%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07c3e5_jump
		mov    %ebx,%eax

	_07c3e5_jump:
		mov    0x000030(%esp),%ebx
		mov    %ax,0x000002(%ebx)
		test   %dx,%dx
		jl     _07c402_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _07c400_jump
		mov    %ebx,%eax

	_07c400_jump:
		jmp    _07c414_jump

	_07c402_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07c412_jump
		mov    %ebx,%eax

	_07c412_jump:
		neg    %eax

	_07c414_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000c(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _07c428_jump
		mov    %di,0x000004(%edx)

	_07c428_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07c438_jump
		mov    0x000030(%esp),%eax
		mov    %si,0x000006(%eax)

	_07c438_jump:
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000030(%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07c45b_jump
		mov    %ebx,%eax

	_07c45b_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07c473_jump
		mov    %ebx,%eax

	_07c473_jump:
		xor    %ebx,%ebx
		mov    0x00000e(%edx),%bx
		mov    %ax,0x000004(%edx)
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _07c492_jump
		mov    %ebx,%eax

	_07c492_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07c4aa_jump
		mov    %ebx,%eax

	_07c4aa_jump:
		mov    %ax,0x000006(%edx)
		call   _081396_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _07c4c1_jump
		mov    0x00000c(%edx),%ax
		jmp    _07c4c7_jump

	_07c4c1_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_07c4c7_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x000008(%edx)
		call   _081396_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _07c4e2_jump
		mov    0x00000c(%edx),%ax
		jmp    _07c4e8_jump

	_07c4e2_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_07c4e8_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000a(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _07c796_jump
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _07c796_jump
		xor    %esi,%esi
		mov    0x00000e(%edx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _07fd04_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _0808e0_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07ff01_func
		mov    %eax,0x000020(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x000024(%esp)
		call   _07fd04_func
		jmp    _07c768_jump

	_07c552_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07ff01_func
		mov    %edx,0x00002c(%esp)
		mov    0x000030(%esp),%edx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _07fd04_func
		jmp    _07c72e_jump

	_07c581_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07ff01_func
		mov    0x000028(%esp),%ebx
		mov    0x00002c(%esp),%ecx
		call   _07fd4a_func
		call   _080552_func
		mov    %eax,0x00004c(%esp)
		mov    %edx,%ebp
		mov    0x000020(%esp),%eax
		mov    0x000024(%esp),%edx
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _080ae6_func
		call   _07ff01_func
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _07ff01_func
		call   _085735_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07ff01_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,0x000038(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _085bd2_func
		jne    _07c620_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _085bd2_func
		jne    _07c620_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%ebp
		mov    %esi,0x000034(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000040(%esp)
		jmp    _07c6dc_jump

	_07c620_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _085f19_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _080899_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _080872_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07ff01_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07ff01_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _07fd44_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000034(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07ff01_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    %edx,%ebp
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07ff01_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _07fd4a_func
		mov    %eax,0x000040(%esp)
		mov    %edx,%ebp

	_07c6dc_jump:
		mov    0x000034(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07fd44_func
		call   _0805b4_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    %al,(%edx)
		mov    0x000040(%esp),%eax
		mov    %ebp,%edx
		call   _07fd44_func
		call   _0805b4_func
		mov    0x000044(%esp),%edx
		add    $0x000002,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %al,-0x000001(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07fd4a_func

	_07c72e_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07fd11_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _085bd2_func
		jle    _07c581_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _07fd4a_func

	_07c768_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x000018(%esp)
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07fd11_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		call   _085bd2_func
		jle    _07c552_jump

	_07c796_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi

	_07c79c_jump:
		ret    

	_07c7a0_case:
		mov    _0e7460_data,%eax
		test   %eax,%eax
		je     _07c79c_jump
		cmpl   $0x000000,0x000014(%eax)
		je     _07c7b7_jump
		add    $0x000014,%eax
		call   _07fbcc_func

	_07c7b7_jump:
		cmpl   $0x000000,_0e7460_data
		je     _07c79c_jump
		mov    $_0e7460_data,%eax
		jmp    _07fbcc_func



_07c7cc_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _07c897_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _07c897_jump
		mov    $0x000020,%eax
		call   _07fbb4_func
		mov    %eax,%edx
		mov    %eax,_0e7460_data
		test   %eax,%eax
		je     _07c897_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _07c825_jump
		mov    %ebx,%eax

	_07c825_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07c832_jump
		mov    %ebx,%eax

	_07c832_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0cd130_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07c85d_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07c85d_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07c866_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07c866_jump:
		mov    _0cd130_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000012(%edx),%bx
		mov    0x000010(%edx),%ax
		imul   %ebx,%eax
		add    %eax,%eax
		call   _07fbb4_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _07c897_jump
		movb   $0x000001,0x00000c(%esp)

	_07c897_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _07c8c1_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _07c3b0_func
		jmp    _07c8c6_jump

	_07c8c1_jump:
		call   _07c7a0_case

	_07c8c6_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_07c8d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e7460_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _07c923_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_07c923_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07c943_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_07c943_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _07c971_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_07c971_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07c991_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_07c991_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07c99d_jump
		neg    %eax

	_07c99d_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _07c9b3_jump
		movw   $0x000000,(%edx)

	_07c9b3_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c9bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e7460_data,%ebp
		mov    $0x00fa00,%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%ebp),%edi
		mov    0x000018(%ebp),%esi
		mov    0x000014(%ebp),%edx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07c9e5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07c9e5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07c9ee_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07c9ee_jump:
		mov    0x000002(%ebp),%eax
		mov    0x000004(%ebp),%ecx
		mov    0x00000e(%ebp),%bx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ebx,%ecx
		sub    %ebx,%eax
		mov    %ecx,%ebx
		mov    %ecx,0x000004(%esp)
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000018(%ebp),%esi
		mov    0x00001c(%ebp),%ecx
		add    %eax,%esi
		add    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000140,%ebx
		mov    0x000010(%ebp),%ax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    %ebx,0x000004(%esp)
		jmp    _07ca70_jump

	_07ca34_jump:
		xor    %edi,%edi
		jmp    _07ca56_jump

	_07ca38_jump:
		movsbl 0x000001(%edx),%ebx
		movsbl (%edx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		inc    %esi
		inc    %ecx
		add    $0x000002,%edx
		mov    -0x000001(%esi,%eax,1),%al
		inc    %edi
		mov    %al,-0x000001(%ecx)

	_07ca56_jump:
		xor    %eax,%eax
		mov    0x000010(%ebp),%ax
		cmp    %eax,%edi
		jl     _07ca38_jump
		mov    0x000004(%esp),%edi
		mov    (%esp),%eax
		inc    %edi
		add    %eax,%esi
		add    %eax,%ecx
		mov    %edi,0x000004(%esp)

	_07ca70_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000012(%ebp),%ax
		cmp    %edi,%eax
		jg     _07ca34_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ca90_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		ja     _07cb42_jump
		test   %al,%al
		jne    _07caad_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07cab4_jump

	_07caad_jump:
		orb    $0x000008,0x000081(%ecx)

	_07cab4_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07cacf_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func

	_07cacf_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _07cb34_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07cb07_jump
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000005,%edx
		mov    %ah,0x000081(%ecx)
		jmp    _07cb1f_jump

	_07cb07_jump:
		mov    0x000081(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)

	_07cb1f_jump:
		mov    %ecx,%eax
		call   _061220_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_07cb34_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		mov    %ecx,%eax
		call   _025820_func

	_07cb42_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cb48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000003,0x00006c(%eax)
		jne    _07cb71_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07cb71_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _07cb94_jump
		cmp    $0x000014,%al
		jne    _07cce9_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07cb94_jump:
		test   %al,%al
		jne    _07cba1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07cba8_jump

	_07cba1_jump:
		orb    $0x000008,0x000081(%ecx)

	_07cba8_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07cbc3_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func

	_07cbc3_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		je     _07cbff_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07cbe9_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _07cbf0_jump

	_07cbe9_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_07cbf0_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _07cc70_jump

	_07cbff_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _07cc7f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02f1e0_func
		test   %ax,%ax
		je     _07cc7f_jump
		cmpw   $0x000028,0x000060(%ecx)
		jne    _07cc7f_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _07cc4d_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _07cc54_jump

	_07cc4d_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_07cc54_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _07cc66_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _07cc70_jump

	_07cc66_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07cc70_jump:
		mov    %ecx,%eax
		call   _061220_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07cc7f_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _07cc9b_jump
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000010,_09253c_data(%eax)
		je     _07cc9f_jump

	_07cc9b_jump:
		incw   0x000042(%ecx)

	_07cc9f_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _07ccb7_jump
		mov    %ecx,%eax
		call   _025820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ccb7_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07ccc4_jump
		cmp    $0x000003,%bl
		jne    _07cce9_jump

	_07ccc4_jump:
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07cce9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ccf0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07cd17_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07cd17_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _061220_func
		movb   $0x000007,0x000072(%ecx)
		mov    _0ce6dc_data,%eax
		movb   $0x000002,0x000073(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07cd48_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07cd48_jump:
		jge    _07cd51_jump
		orb    $0x000008,0x000081(%ecx)

	_07cd51_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07cd54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%dx
		jne    _07cd8e_jump
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		je     _07cd7d_jump
		cmpb   $0x000000,_0cf9f8_data
		jne    _07cd7d_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%esi)

	_07cd7d_jump:
		cmpb   $0x000000,0x00007f(%esi)
		jne    _07cd8e_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _07d43c_func
		mov    $0x000001,%al

	_07cd8e_jump:
		test   %al,%al
		jne    _07cdd9_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0251f8_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_09253c_data(%edx)
		je     _07cdb9_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _07d43c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07cdb9_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _07cdd9_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _07cdd9_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01eba0_func

	_07cdd9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07cde0_func:
		push   %ebx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07cdfd_jump
		mov    0x00006c(%eax),%bl
		test   %bl,%bl
		je     _07cdfb_jump
		cmp    $0x00000e,%bl
		je     _07cdfb_jump
		cmp    $0x000008,%bl
		jne    _07cdfd_jump

	_07cdfb_jump:
		mov    $0x000001,%dl

	_07cdfd_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_07ce04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		call   _07cde0_func
		test   %al,%al
		je     _07ce4c_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dfb8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _07ce4c_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _061220_func

	_07ce4c_jump:
		xor    %eax,%eax
		mov    _0ce678_data,%edx
		mov    _0ce6b8_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _07ce6d_jump
		neg    %eax

	_07ce6d_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0ce67c_data,%edi
		mov    _0ce6b9_data,%al
		lea    (%eax,%edi,1),%edx
		mov    0x00002c(%ecx),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _07ce93_jump
		neg    %eax

	_07ce93_jump:
		mov    %eax,%edx
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		je     _07cf51_jump
		cmp    $0x000001,%ah
		je     _07cf51_jump
		test   %ah,%ah
		jne    _07ceec_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _07ceec_jump
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _07ceec_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d818_func
		movw   $0x00fff9,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		mov    0x00002c(%ecx),%eax
		movb   $0x000004,0x000072(%ecx)
		sub    $0x00000e,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _07cf51_jump

	_07ceec_jump:
		mov    0x00007b(%ecx),%ah
		xor    %esi,%esi
		test   %ah,%ah
		je     _07cf43_jump
		cmp    $0x0000aa,%bx
		jge    _07cf06_jump
		cmp    $0x000026,%dx
		jge    _07cf06_jump
		movb   $0x000001,0x00007d(%ecx)

	_07cf06_jump:
		mov    %ecx,%eax
		call   _07cde0_func
		test   %al,%al
		je     _07cf43_jump
		cmp    $0x00005f,%bx
		jge    _07cf2e_jump
		cmp    $0x000032,%dx
		jge    _07cf2e_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _07cf2e_jump
		mov    $0x000001,%esi
		movb   $0x000064,0x00007f(%ecx)
		jmp    _07cf43_jump

	_07cf2e_jump:
		cmpb   $0x000000,0x00007d(%ecx)
		je     _07cf43_jump
		mov    0x00007f(%ecx),%bl
		test   %bl,%bl
		jne    _07cf43_jump
		mov    $0xffffffff,%esi
		mov    %bl,0x00007d(%ecx)

	_07cf43_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _07cf51_jump
		mov    %ecx,%eax
		call   _07dc5c_func

	_07cf51_jump:
		mov    0x00007f(%ecx),%bh
		test   %bh,%bh
		je     _07cf5f_jump
		mov    %bh,%al
		dec    %al
		mov    %al,0x00007f(%ecx)

	_07cf5f_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _07cf6f_jump
		test   %si,%si
		je     _07d055_jump

	_07cf6f_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01dac8_func
		test   %ax,%ax
		je     _07cf9a_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _07d04e_jump

	_07cf9a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0251f8_func
		and    $0x0000ff,%eax
		testb  $0x000001,_09253c_data(%eax)
		jne    _07cfd3_jump
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		cmp    $0x000020,%eax
		jl     _07cfd3_jump
		mov    _0cf88e_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _07d026_jump

	_07cfd3_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _07d026_jump
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    0x00007b(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		test   %al,%al
		je     _07d00d_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _061220_func
		movb   $0x000000,0x00006b(%ecx)
		jmp    _07d01e_jump

	_07d00d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _061220_func

	_07d01e_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _07d055_jump

	_07d026_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07d055_jump
		cmp    $0x000002,%bl
		je     _07d055_jump
		test   %si,%si
		jge    _07d044_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _07d04e_jump

	_07d044_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_07d04e_jump:
		mov    %ecx,%eax
		call   _061220_func

	_07d055_jump:
		mov    %ecx,%eax
		call   _055ee4_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _07d069_jump
		mov    %ecx,%eax
		call   _025820_func

	_07d069_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d070_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07cde0_func
		test   %al,%al
		je     _07d0ce_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dfb8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _07d0b5_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _061220_func

	_07d0b5_jump:
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _07d0c5_jump
		mov    %ecx,%eax
		call   _07dc5c_func
		jmp    _07d0e5_jump

	_07d0c5_jump:
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)
		jmp    _07d0e5_jump

	_07d0ce_jump:
		mov    %ecx,%eax
		call   _07dc5c_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07d0e5_jump
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _07d0e5_jump
		movb   $0x0000fa,0x00007f(%ecx)

	_07d0e5_jump:
		mov    %ecx,%eax
		call   _025820_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d0f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _07d105_jump
		cmp    $0x000001,%al
		je     _07d158_jump
		jmp    _07d19e_jump

	_07d105_jump:
		mov    0x000081(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _055ee4_func
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%al
		jb     _07d130_jump
		jbe    _07d1a4_jump
		cmp    $0x00000d,%al
		je     _07d144_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d130_jump:
		cmp    $0x000009,%al
		jne    _07d1aa_jump

	_07d138_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d144_jump:
		mov    0x000040(%edx),%ax
		mov    %eax,%ecx
		mov    %ax,0x000042(%edx)
		neg    %ecx
		mov    %cx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d158_jump:
		orb    $0x000008,0x000081(%edx)
		mov    %edx,%eax
		call   _055ee4_func
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x00006c(%edx),%al
		mov    %bl,0x000081(%edx)
		cmp    $0x00000c,%al
		jb     _07d186_jump
		jbe    _07d1a4_jump
		cmp    $0x00000e,%al
		je     _07d138_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d186_jump:
		cmp    $0x00000a,%al
		jne    _07d1aa_jump
		mov    0x000040(%edx),%ax
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d19e_jump:
		movw   $0x000000,0x000040(%edx)

	_07d1a4_jump:
		movw   $0x000000,0x000042(%edx)

	_07d1aa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07d1b0_switch:
		.long   _07d21b_case
		.long   _07d257_case
		.long   _07d28b_case
		.long   _07d2b7_case
		.long   _07d2dd_case
		.long   _07d316_case




_07d1c8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _07d376_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000069(%ecx),%al
		sub    %eax,%ebx
		mov    0x00006c(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _07d348_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_07d1b0_switch(,%eax,4)

	_07d21b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07d348_jump

	_07d257_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		jmp    _07d345_jump

	_07d28b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07d348_jump

	_07d2b7_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		jmp    _07d345_jump

	_07d2dd_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _07d348_jump

	_07d316_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi

	_07d345_jump:
		mov    %edi,0x00002c(%ecx)

	_07d348_jump:
		mov    %ecx,%eax
		call   _01e030_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f8e8_func
		andb   $0x0000bf,0x000081(%ecx)
		movb   $0x000001,(%esi)

	_07d376_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07d37c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		mov    %ah,0x000014(%esp)
		cmpw   $0x000000,0x000040(%esi)
		setg   %bl
		test   %bl,%bl
		jbe    _07d3a7_jump
		cmp    $0x000001,%bl
		je     _07d3bb_jump
		jmp    _07d3cd_jump

	_07d3a7_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x000018(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x00000c(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _07d3cd_jump

	_07d3bb_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x00000c(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x000018(%esp)

	_07d3cd_jump:
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _07d430_jump

	_07d3e4_jump:
		cmpw   $0x00004f,0x000060(%ecx)
		jne    _07d421_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07d421_jump
		mov    0x00000c(%esp),%dl
		mov    0x00006c(%ecx),%bl
		cmp    %dl,%bl
		jne    _07d402_jump
		lea    0x000014(%esp),%ebx
		jmp    _07d418_jump

	_07d402_jump:
		cmp    0x000018(%esp),%bl
		jne    _07d40e_jump
		lea    0x000008(%esp),%ebx
		jmp    _07d418_jump

	_07d40e_jump:
		cmp    0x000010(%esp),%bl
		jne    _07d421_jump
		lea    0x000004(%esp),%ebx

	_07d418_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07d1c8_func

	_07d421_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x000084,%ecx
		cmp    %ax,%di
		jl     _07d3e4_jump

	_07d430_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d43c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _07d455_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01d808_func

	_07d455_jump:
		mov    $0x000054,%eax
		call   _072960_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _07d4df_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _07d4a7_jump
		cmpb   $0x000001,0x00006c(%ebx)
		jne    _07d4a7_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _07d37c_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _07d37c_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _07d4ae_jump

	_07d4a7_jump:
		mov    %ebx,%eax
		call   _07d37c_func

	_07d4ae_jump:
		mov    0x000060(%ebx),%dx
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%dx
		jne    _07d4c8_jump
		andb   $0x0000fb,0x000081(%ebx)
		jmp    _07d4d8_jump

	_07d4c8_jump:
		mov    _0cf8a4_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_07d4d8_jump:
		mov    %ebx,%eax
		call   _07b29c_func

	_07d4df_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d4e4_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		cmpw   $0x000023,0x000060(%eax)
		jne    _07d6cc_jump
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d834_jump

	_07d515_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _07d6b5_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07d6b5_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x00007f(%esi)
		test   %bh,%bh
		je     _07d559_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _07d57e_jump

	_07d559_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07d57e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %cx,0x000042(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _07d5a7_jump
		cwtl   
		jmp    _07d5aa_jump

	_07d5a7_jump:
		cwtl   
		neg    %eax

	_07d5aa_jump:
		mov    $0x00007a,%ecx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07d5cc_jump
		cmp    %ecx,%eax
		jg     _07d5cc_jump
		mov    $0x000001,%eax
		jmp    _07d5ce_jump

	_07d5cc_jump:
		xor    %eax,%eax

	_07d5ce_jump:
		test   %eax,%eax
		je     _07d5d9_jump
		mov    $0x000003,%eax
		jmp    _07d604_jump

	_07d5d9_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07d5f5_jump
		cmp    %ecx,%eax
		jg     _07d5f5_jump
		mov    $0x000001,%eax
		jmp    _07d5f7_jump

	_07d5f5_jump:
		xor    %eax,%eax

	_07d5f7_jump:
		test   %eax,%eax
		je     _07d5ff_jump
		xor    %eax,%eax
		jmp    _07d604_jump

	_07d5ff_jump:
		mov    $0xffffffff,%eax

	_07d604_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _07d834_jump
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%ebx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01d818_func
		mov    %esi,%eax
		call   _055ee4_func
		mov    %esi,%eax
		call   _01e030_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f8e8_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07d6b5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _07d515_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07d6cc_jump:
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07d834_jump

	_07d6e4_jump:
		cmpw   $0x00002c,0x000060(%esi)
		jne    _07d824_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07d824_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		cmpb   $0x000000,0x000010(%esp)
		je     _07d733_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _07d758_jump

	_07d733_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07d758_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %cx,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _07d781_jump
		cwtl   
		jmp    _07d784_jump

	_07d781_jump:
		cwtl   
		neg    %eax

	_07d784_jump:
		mov    %ax,0x000040(%esi)
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f8e8_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07d824_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _07d6e4_jump

	_07d834_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07d83c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07ca90_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07d8fe_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _07d85c_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jae    _07d862_jump

	_07d85c_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d862_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _07d86f_jump
		cmp    $0x000002,%bl
		jne    _07d89d_jump

	_07d86f_jump:
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _07d89d_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07d88c_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07d896_jump

	_07d88c_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07d896_jump:
		mov    %ecx,%eax
		call   _061220_func

	_07d89d_jump:
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _07d904_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07d904_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jne    _07d904_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _07d904_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _07d4e4_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d8fe_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d904_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d908_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _07ca90_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07d9b4_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _07d928_jump
		movw   $0x000000,0x000052(%ecx)

	_07d928_jump:
		mov    0x00006c(%ecx),%dh
		cmp    $0x000001,%dh
		je     _07d935_jump
		cmp    $0x000006,%dh
		jne    _07d963_jump

	_07d935_jump:
		mov    %ecx,%eax
		call   _01d074_func
		test   %al,%al
		je     _07d963_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07d952_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07d95c_jump

	_07d952_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07d95c_jump:
		mov    %ecx,%eax
		call   _061220_func

	_07d963_jump:
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _07d9ba_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07d9ba_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0cf9f6_data(%eax),%dl
		cmp    %eax,%edx
		jne    _07d9ba_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _07d4e4_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07d9b4_jump:
		movw   $0x000000,0x000052(%ecx)

	_07d9ba_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d9c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %edx,0x000018(%esp)
		mov    _0ccdf0_data,%esi
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07dc53_jump

	_07d9e5_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _07dc43_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _07dc43_jump
		mov    0x000018(%esp),%ecx
		movb   $0x0000c8,0x00007f(%esi)
		test   %cx,%cx
		je     _07da2a_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _07da4f_jump

	_07da2a_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07da4f_jump:
		mov    0x00006d(%edi),%al
		mov    $0xffffffff,%edx
		test   %al,%al
		jne    _07da87_jump
		cmpb   $0x00000d,0x00006c(%edi)
		jne    _07da87_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07da7f_jump
		cmp    %ecx,%eax
		jg     _07da7f_jump
		mov    $0x000001,%eax
		jmp    _07da81_jump

	_07da7f_jump:
		xor    %eax,%eax

	_07da81_jump:
		test   %eax,%eax
		je     _07dabc_jump
		jmp    _07dab7_jump

	_07da87_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _07dabc_jump
		cmpb   $0x000009,0x00006c(%edi)
		jne    _07dabc_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07dab1_jump
		cmp    %ecx,%eax
		jg     _07dab1_jump
		mov    $0x000001,%eax
		jmp    _07dab3_jump

	_07dab1_jump:
		xor    %eax,%eax

	_07dab3_jump:
		test   %eax,%eax
		je     _07dabc_jump

	_07dab7_jump:
		mov    $0x000003,%edx

	_07dabc_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		je     _07dc53_jump
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %edi,%eax
		call   _01dbb4_func
		mov    0x000018(%esp),%eax
		cmp    $0x000001,%ax
		jb     _07daf5_jump
		jbe    _07db0f_jump
		cmp    $0x000002,%ax
		je     _07db19_jump
		jmp    _07db48_jump

	_07daf5_jump:
		test   %ax,%ax
		jne    _07db48_jump
		mov    $0xfffffffe,%edx
		mov    _0ce77f_data,%al
		mov    %edx,0x000004(%esp)
		dec    %al
		add    %al,0x000076(%edi)
		jmp    _07db48_jump

	_07db0f_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _07db48_jump

	_07db19_jump:
		cmpb   $0x000002,_0ce6bd_data
		jne    _07db34_jump
		mov    _0cf89c_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0cf89a_data,%ax
		jmp    _07db44_jump

	_07db34_jump:
		mov    _0ce678_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0ce67c_data,%ax

	_07db44_jump:
		mov    %ax,0x00004c(%esi)

	_07db48_jump:
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000018(%esp),%ebx
		mov    %ax,0x00003e(%esi)
		cmp    $0x000002,%bx
		je     _07dbd7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000081(%esi),%dl
		movsbw (%ebx,%eax,1),%ax
		test   $0x000008,%dl
		je     _07dbbf_jump
		cwtl   
		jmp    _07dbc2_jump

	_07dbbf_jump:
		cwtl   
		neg    %eax

	_07dbc2_jump:
		mov    %eax,(%esp)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _055ee4_func
		mov    %esi,%eax
		call   _01d808_func
		jmp    _07dbf9_jump

	_07dbd7_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000004(%esp),%ebx
		call   _01d808_func
		push   $0x000003
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01eba0_func

	_07dbf9_jump:
		mov    (%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01e030_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f8e8_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07dc43_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _07d9e5_jump

	_07dc53_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07dc5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07dd6b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _07dc77_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jae    _07dc89_jump

	_07dc77_jump:
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _07dc83_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jae    _07dc89_jump

	_07dc83_jump:
		movw   $0x000000,0x000052(%ecx)

	_07dc89_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _07dc98_jump
		cmp    $0x00000e,%al
		je     _07dc98_jump
		cmp    $0x000008,%al
		jne    _07dcc1_jump

	_07dc98_jump:
		cmpb   $0x000001,0x00006b(%ecx)
		jae    _07dcc1_jump
		cmpb   $0x000002,0x00007b(%ecx)
		jb     _07dcb0_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07dcba_jump

	_07dcb0_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_07dcba_jump:
		mov    %ecx,%eax
		call   _061220_func

	_07dcc1_jump:
		mov    0x00006c(%ecx),%bh
		cmp    $0x00000d,%bh
		jne    _07dd1c_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07dd71_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jne    _07dd71_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _07dd71_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _07d9c0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07dd1c_jump:
		cmp    $0x000009,%bh
		jne    _07dd71_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07dd71_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jne    _07dd71_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cf9f5_data(%eax)
		jne    _07dd71_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _07d9c0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07dd6b_jump:
		movw   $0x000000,0x000052(%ecx)

	_07dd71_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dd78_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ebp
		mov    %edx,%ebx
		cmp    $0x000008,%dx
		jb     _07dd90_jump
		jbe    _07dd9d_jump
		cmp    $0x000009,%dx
		je     _07dda4_jump
		jmp    _07dda9_jump

	_07dd90_jump:
		cmp    $0x000007,%dx
		jne    _07dda9_jump
		mov    $0xfffffffd,%esi
		jmp    _07dda9_jump

	_07dd9d_jump:
		mov    $0x000002,%esi
		jmp    _07dda9_jump

	_07dda4_jump:
		mov    $0xffffffff,%esi

	_07dda9_jump:
		mov    _0ccdf0_data,%ecx
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07de4c_jump

	_07ddc1_jump:
		cmpw   $0x00006e,0x000060(%ecx)
		jne    _07de3c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07de3c_jump
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01d818_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %si,0x000040(%ecx)
		mov    0x000028(%ebp),%ebx
		mov    %ebx,0x000028(%ecx)
		mov    0x00002c(%ebp),%ebx
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func
		mov    %ecx,%eax
		call   _01e030_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f8e8_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000005,0x000072(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07de3c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07ddc1_jump

	_07de4c_jump:
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_07de54_switch:
		.long   _07df24_case
		.long   _07df32_case
		.long   _07df40_case
		.long   _07df4e_case
		.long   _07df5c_case




_07de68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _072960_func
		mov    _0ccdf0_data,%ebp
		mov    _0ccdf4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _07debc_jump

	_07de92_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _07deb0_jump
		mov    %ebp,%edi

	_07de9b_jump:
		mov    0x0000e4(%edi),%cx
		add    $0x000084,%edi
		cmp    $0x00006e,%cx
		je     _07de9b_jump
		jmp    _07debc_jump

	_07deb0_jump:
		inc    %eax
		add    $0x000084,%ebp
		cmp    %dx,%ax
		jl     _07de92_jump

	_07debc_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _07dfe4_jump
		xor    %eax,%eax
		mov    %ax,0x00000c(%esp)

	_07dece_jump:
		mov    %ebp,%esi
		cmp    %edi,%ebp
		ja     _07dee4_jump

	_07ded4_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _07dee4_jump
		add    $0x000084,%esi
		cmp    %edi,%esi
		jbe    _07ded4_jump

	_07dee4_jump:
		cmp    %edi,%esi
		ja     _07dfd0_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x00000c(%esp),%bl
		call   _01d818_func
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x00000c(%esp),%ecx
		mov    %ah,0x000081(%esi)
		cmp    $0x000004,%cx
		ja     _07df68_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_07de54_switch(,%eax,4)

	_07df24_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _07df68_jump

	_07df32_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _07df68_jump

	_07df40_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _07df68_jump

	_07df4e_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _07df68_jump

	_07df5c_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)

	_07df68_jump:
		lea    0x000004(%esp),%eax
		mov    0x00000a(%esp),%edx
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01dbb4_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _061220_func
		mov    %esi,%eax
		call   _01e030_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f8e8_func

	_07dfd0_jump:
		mov    0x00000c(%esp),%edx
		inc    %edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000005,%dx
		jl     _07dece_jump

	_07dfe4_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07dff0_switch:
		.long   _07e0bc_case
		.long   _07e0a2_case
		.long   _07e088_case
		.long   _07e04b_case




_07e000_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e11b_jump
		cmpw   $0x000000,_0cf896_data
		jl     _07e11b_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    %dl,%al
		mov    %dl,0x000076(%ebx)
		cmp    $0x000003,%dl
		ja     _07e11b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_07dff0_switch(,%eax,4)

	_07e04b_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _07dd78_func
		mov    _0cf894_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		add    %eax,%ebx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%ebx
		mov    $0x000006,%edx
		add    %ebx,%eax
		call   _01d808_func
		pop    %ebx
		ret    

	_07e088_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _07dd78_func
		pop    %ebx
		ret    

	_07e0a2_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _07dd78_func
		pop    %ebx
		ret    

	_07e0bc_case:
		mov    _0cf894_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0ccdf0_data,%edx
		cmpb   $0x000006,0x00006c(%edx,%eax,4)
		jne    _07e11b_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d808_func
		mov    _0cf894_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0ccdf0_data,%eax
		shl    $0x000002,%edx
		movb   $0x000003,0x00006c(%edx,%eax,1)
		movb   $0x000004,0x00006e(%edx,%eax,1)
		movb   $0x00000a,0x00006e(%ebx)

	_07e11b_jump:
		pop    %ebx
		ret    



_07e120_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e18c_jump
		mov    %ecx,%eax
		call   _01eb80_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07e17c_jump
		mov    %ecx,%eax
		call   _07de68_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0ce69a_data,%dx
		jne    _07e172_jump
		movw   $0x00ffff,_0ce69a_data
		mov    $0x000002,%ebx
		mov    $_0ce650_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d818_func

	_07e172_jump:
		andb   $0x0000fb,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07e17c_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d808_func
		movb   $0x000000,0x00006b(%ecx)

	_07e18c_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07e190_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e1a3_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _07e1aa_jump

	_07e1a3_jump:
		mov    %ecx,%eax
		call   _01eb80_func

	_07e1aa_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01dfb8_func
		mov    %ecx,%eax
		call   _061220_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		mov    (%esp),%dh
		shr    $0x000007,%al
		cmp    %dh,%al
		je     _07e207_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func
		cmpw   $0x000023,0x000060(%ecx)
		jne    _07e207_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _07d4e4_func

	_07e207_jump:
		cmpb   $0x000003,0x000076(%ecx)
		jae    _07e250_jump
		cmpw   $0x000023,0x000060(%ecx)
		jne    _07e222_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _07d4e4_func

	_07e222_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07e23e_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		call   _061220_func
		jmp    _07e250_jump

	_07e23e_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func
		movb   $0x000002,0x000073(%ecx)

	_07e250_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_07e258_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		movb   $0x000000,0x00007f(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%bl
		call   _01dfb8_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _07228c_func
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _07e2b2_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _07d9c0_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_07e2b2_jump:
		cmpb   $0x00000f,0x000076(%ecx)
		jae    _07e2f6_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07d9c0_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _07e2de_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x000076(%ecx)
		xor    %edx,%edx
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_07e2de_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		je     _07e2f2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _061220_func

	_07e2f2_jump:
		movb   $0x000002,0x000073(%ecx)

	_07e2f6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07e2fc_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e32a_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000001,%dh
		je     _07e339_jump
		cmp    $0x000002,%dh
		je     _07e339_jump
		cmp    $0x000005,%dh
		je     _07e339_jump
		cmp    $0x000006,%dh
		je     _07e339_jump
		cmp    $0x000003,%dh
		je     _07e339_jump
		cmp    $0x000007,%dh
		je     _07e339_jump
		cmp    $0x000004,%dh
		je     _07e339_jump

	_07e32a_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _061220_func

	_07e339_jump:
		pop    %edx
		pop    %ebx
		ret    



_07e33c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e34d_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07e359_jump

	_07e34d_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07e372_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07e372_jump

	_07e359_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _061220_func
		movb   $0x000007,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07e372_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e380_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07e398_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07e3a8_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07e3a8_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07e398_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e3cc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07e3e3_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07e3f3_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07e3f3_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07e3e3_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e420_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e442_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _07e442_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _07e4bc_jump

	_07e442_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _07e474_jump
		jbe    _07e4b5_jump
		cmp    $0x000014,%al
		jb     _07e4bc_jump
		ja     _07e4bc_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _07e650_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e474_jump:
		test   %al,%al
		jne    _07e481_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07e488_jump

	_07e481_jump:
		orb    $0x000008,0x000081(%ecx)

	_07e488_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07e494_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07e4a0_jump

	_07e494_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07e4bc_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07e4bc_jump

	_07e4a0_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d818_func
		mov    %ecx,%eax
		call   _055ee4_func

	_07e4b5_jump:
		mov    %ecx,%eax
		call   _025820_func

	_07e4bc_jump:
		mov    %ecx,%eax
		call   _07e650_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e4c8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		lea    0x000008(%esp),%ecx
		movb   $0x000064,0x00007f(%eax)
		lea    0x000004(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d738_func
		testb  $0x000008,0x000081(%esi)
		je     _07e50c_jump
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _07e520_jump

	_07e50c_jump:
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)

	_07e520_jump:
		mov    0x000008(%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x000004(%esp),%eax
		mov    %cx,0x000008(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _07e53c_jump
		sar    %cl,%ax
		jmp    _07e545_jump

	_07e53c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07e545_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x000004(%esp)
		test   %ax,%ax
		js     _07e55b_jump
		sar    %cl,%ax
		jmp    _07e564_jump

	_07e55b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07e564_jump:
		mov    (%esp),%edi
		add    %eax,%edi
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    _0cf874_data,%ecx
		sar    $0x000010,%eax
		mov    %di,0x000004(%esp)
		push   %eax
		mov    0x000006(%esp),%eax
		mov    _0cf862_data,%ebx
		sar    $0x000010,%eax
		mov    _0cf860_data,%edx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0cf85e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02b430_func
		test   %ax,%ax
		je     _07e61a_jump
		mov    $0x000001,%cl
		mov    _0cf864_data,%ax
		test   %ax,%ax
		js     _07e5cd_jump
		sar    %cl,%ax
		jmp    _07e5d6_jump

	_07e5cd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07e5d6_jump:
		mov    $0x000001,%cl
		mov    _0cf876_data,%ax
		test   %ax,%ax
		js     _07e5e8_jump
		sar    %cl,%ax
		jmp    _07e5f1_jump

	_07e5e8_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07e5f1_jump:
		mov    0x000081(%esi),%dl
		mov    $0x000007,%eax
		test   $0x000008,%dl
		jne    _07e608_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _07e618_jump

	_07e608_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07e61a_jump
		cmpb   $0x000001,0x000010(%esp)
		jne    _07e61a_jump

	_07e618_jump:
		neg    %eax

	_07e61a_jump:
		test   %ax,%ax
		je     _07e647_jump
		mov    _0cf870_data,%dx
		add    %eax,%edx
		mov    _0ce6bd_data,%cl
		mov    %dx,_0cf870_data
		cmp    $0x000005,%cl
		je     _07e647_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0cf866_data

	_07e647_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07e650_func:
		push   %ecx
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _07e660_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)

	_07e660_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e699_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _07e672_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07e67a_jump

	_07e672_jump:
		mov    0x00006c(%eax),%ch
		cmp    $0x000004,%ch
		jne    _07e67e_jump

	_07e67a_jump:
		xor    %edx,%edx
		jmp    _07e694_jump

	_07e67e_jump:
		cmp    $0x000006,%ch
		jne    _07e689_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07e68f_jump

	_07e689_jump:
		cmpb   $0x000007,0x00006c(%eax)
		jne    _07e699_jump

	_07e68f_jump:
		mov    $0x000001,%edx

	_07e694_jump:
		call   _07e4c8_func

	_07e699_jump:
		pop    %edx
		pop    %ecx
		ret    



_07e69c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _061220_func
		mov    %ecx,%eax
		call   _025b30_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e6bc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01eb80_func
		mov    _0ce6dc_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07e6dc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07e6e5_jump

	_07e6dc_jump:
		jge    _07e6e5_jump
		orb    $0x000008,0x000081(%ecx)

	_07e6e5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _07e708_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _061220_func
		pop    %ecx
		pop    %ebx
		ret    

	_07e708_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		mov    0x000081(%ecx),%bl
		movb   $0x000002,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07e72c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _07e75b_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07e740_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _07e74c_jump

	_07e740_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _07e75b_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _07e75b_jump

	_07e74c_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _061220_func

	_07e75b_jump:
		pop    %edx
		pop    %ebx
		ret    



_07e760_func:
		push   %esi
		push   %edi
		push   %ebp
		movswl %bx,%ebx
		movswl %cx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x00002c(%eax),%ebp
		add    %edi,%ebx
		lea    (%ecx,%ebp,1),%edi
		mov    _0ce638_data,%cx
		sar    $0x000004,%edi
		imul   %edi,%ecx
		sar    $0x000004,%ebx
		add    %ebx,%ecx
		xor    %esi,%esi
		mov    %cx,(%edx)
		cmp    0x000058(%eax),%cx
		je     _07e7fb_jump
		mov    %cx,0x000058(%eax)
		mov    _0ce636_data,%ecx
		movswl %bx,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07e7b3_jump
		cmp    %ecx,%eax
		jg     _07e7b3_jump
		mov    $0x000001,%eax
		jmp    _07e7b5_jump

	_07e7b3_jump:
		xor    %eax,%eax

	_07e7b5_jump:
		test   %eax,%eax
		je     _07e7fb_jump
		mov    _0ce638_data,%ecx
		movswl %di,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07e7d7_jump
		cmp    %ecx,%eax
		jg     _07e7d7_jump
		mov    $0x000001,%eax
		jmp    _07e7d9_jump

	_07e7d7_jump:
		xor    %eax,%eax

	_07e7d9_jump:
		test   %eax,%eax
		je     _07e7fb_jump
		movswl (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ce640_data,%edx
		cmpb   $0x000001,0x000002(%edx,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%esi

	_07e7fb_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_07e804_switch:
		.long   _07eac3_case
		.long   _07eb38_case
		.long   _07eb1c_case
		.long   _07eb00_case
		.long   _07ea84_case
		.long   _07eabe_case
		.long   _07eadf_case
		.long   _07eb17_case
		.long   _07e92d_case
		.long   _07e992_case
		.long   _07e992_case
		.long   _07ea0c_case
		.long   _07ea0c_case




_07e838_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    0x000081(%eax),%ah
		and    $0x0000f7,%ah
		mov    0x00006d(%edi),%dl
		mov    %ah,0x000081(%edi)
		test   %dl,%dl
		jne    _07eb79_jump
		cmpb   $0x00000e,0x00006c(%edi)
		jne    _07eb79_jump
		mov    %esp,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000069(%edi),%cl
		mov    0x000068(%edi),%bl
		call   _07e760_func
		test   %ax,%ax
		je     _07eb79_jump
		mov    _0cef5a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0ccdf0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    _0cf024_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07eb79_jump

	_07e8af_jump:
		cmpw   $0x0000a3,0x000060(%edx)
		jne    _07eb4d_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0ce636_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%esi
		mov    0x000068(%edx),%bl
		add    %esi,%ebx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		cmp    (%esp),%bx
		jne    _07eb4d_jump
		mov    0x000042(%edi),%si
		movswl %si,%eax
		mov    0x000040(%edi),%cx
		test   %eax,%eax
		jge    _07e8fe_jump
		neg    %eax

	_07e8fe_jump:
		mov    %eax,%ebx
		movswl %cx,%eax
		test   %eax,%eax
		jge    _07e909_jump
		neg    %eax

	_07e909_jump:
		cmp    %ebx,%eax
		jge    _07e90f_jump
		mov    %ebx,%eax

	_07e90f_jump:
		mov    0x00006c(%edx),%bl
		mov    %eax,0x000004(%esp)
		cmp    $0x00000c,%bl
		ja     _07eb3c_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_07e804_switch(,%ebx,4)

	_07e92d_case:
		test   %cx,%cx
		jne    _07e94d_jump
		test   %si,%si
		jle    _07e940_jump
		mov    %eax,%esi
		neg    %esi
		jmp    _07eb3c_jump

	_07e940_jump:
		jge    _07eb3c_jump
		mov    %eax,%esi
		jmp    _07eb3c_jump

	_07e94d_jump:
		test   %si,%si
		jne    _07e97d_jump
		test   %cx,%cx
		jle    _07e968_jump
		mov    %eax,%ecx
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07eb79_jump

	_07e968_jump:
		jge    _07eb3c_jump
		mov    %eax,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07eb79_jump

	_07e97d_jump:
		neg    %ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e992_case:
		cmpb   $0x000009,0x00006c(%edx)
		jne    _07e99f_jump
		mov    $0x000001,%eax
		jmp    _07e9a4_jump

	_07e99f_jump:
		mov    $0xffffffff,%eax

	_07e9a4_jump:
		test   %si,%si
		jne    _07e9f0_jump
		test   %cx,%cx
		jle    _07e9cc_jump
		mov    0x000004(%esp),%ecx
		add    %eax,%ecx
		cmp    $0x000004,%cx
		jle    _07e9bf_jump
		mov    $0x000004,%ecx

	_07e9bf_jump:
		cmp    $0x000002,%cx
		jge    _07e9f0_jump
		mov    $0x000002,%ecx
		jmp    _07e9f0_jump

	_07e9cc_jump:
		jge    _07e9f0_jump
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		sub    %edx,%ecx
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jle    _07e9e3_jump
		mov    $0xfffffffe,%ecx

	_07e9e3_jump:
		movswl %cx,%eax
		cmp    $0xfffffffc,%eax
		jge    _07e9f0_jump
		mov    $0xfffffffc,%ecx

	_07e9f0_jump:
		test   %cx,%cx
		je     _07eb3c_jump
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ea0c_case:
		cmpb   $0x00000b,0x00006c(%edx)
		jne    _07ea19_jump
		mov    $0x000001,%eax
		jmp    _07ea1e_jump

	_07ea19_jump:
		mov    $0xffffffff,%eax

	_07ea1e_jump:
		test   %cx,%cx
		jne    _07ea68_jump
		test   %si,%si
		jle    _07ea46_jump
		mov    0x000004(%esp),%esi
		add    %eax,%esi
		cmp    $0x000004,%si
		jle    _07ea39_jump
		mov    $0x000004,%esi

	_07ea39_jump:
		cmp    $0x000002,%si
		jge    _07ea68_jump
		mov    $0x000002,%esi
		jmp    _07ea68_jump

	_07ea46_jump:
		jge    _07ea68_jump
		mov    0x000004(%esp),%esi
		sub    %esi,%eax
		mov    %eax,%esi
		cwtl   
		cmp    $0xfffffffe,%eax
		jle    _07ea5b_jump
		mov    $0xfffffffe,%esi

	_07ea5b_jump:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jge    _07ea68_jump
		mov    $0xfffffffc,%esi

	_07ea68_jump:
		test   %si,%si
		je     _07eb3c_jump
		xor    %ecx,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ea84_case:
		test   %cx,%cx
		jne    _07ea9e_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ea9e_jump:
		test   %si,%si
		jne    _07eb3c_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07eabe_case:
		test   %cx,%cx
		jne    _07ead8_jump

	_07eac3_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07ead8_jump:
		test   %si,%si
		jne    _07eb3c_jump
		jmp    _07eb38_case

	_07eadf_case:
		test   %cx,%cx
		jne    _07eafb_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07eafb_jump:
		test   %si,%si
		jne    _07eb3c_jump

	_07eb00_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07eb17_case:
		test   %cx,%cx
		jne    _07eb33_jump

	_07eb1c_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07eb33_jump:
		test   %si,%si
		jne    _07eb3c_jump

	_07eb38_case:
		mov    %eax,%esi
		xor    %ecx,%ecx

	_07eb3c_jump:
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07eb4d_jump:
		inc    %eax
		movswl %ax,%edx
		mov    _0cef5a_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0ccdf0_data,%ebx
		mov    _0cf024_data,%cx
		add    %ebx,%edx
		cmp    %cx,%ax
		jl     _07e8af_jump

	_07eb79_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eb84_func:
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000003,%dl
		ja     _07eba2_jump
		mov    0x000081(%eax),%dl
		movb   $0x000004,0x00007e(%eax)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_07eba2_jump:
		movb   $0x000000,0x00007e(%eax)
		pop    %edx
		ret    

_07eba8_switch:
		.long   _07ec2f_case
		.long   _07ec36_case
		.long   _07ec3d_case
		.long   _07ec44_case




_07ebb8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000005,0x00006d(%eax)
		jne    _07ec4b_jump
		cmpb   $0x000035,0x00006c(%ecx)
		jne    _07ec4b_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000036,%ebx
		call   _07228c_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d818_func
		mov    0x000032(%ecx),%eax
		mov    _0cee58_data,%edx
		sar    $0x000010,%eax
		movswl (%edx,%eax,2),%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0ccdf0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0000a3,0x000060(%eax)
		jne    _07ec4b_jump
		mov    0x00006c(%eax),%cl
		cmp    $0x000003,%cl
		ja     _07ec4b_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_07eba8_switch(,%edx,4)

	_07ec2f_case:
		mov    $0x000001,%edx
		jmp    _07ec46_jump

	_07ec36_case:
		mov    $0x000002,%edx
		jmp    _07ec46_jump

	_07ec3d_case:
		mov    $0x000003,%edx
		jmp    _07ec46_jump

	_07ec44_case:
		xor    %edx,%edx

	_07ec46_jump:
		call   _01d808_func

	_07ec4b_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07ec50_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07ec7b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _07ec7b_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d818_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07ec7b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ec80_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0e7464_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000018(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _07ecd8_jump
		mov    %ebx,%eax

	_07ecd8_jump:
		mov    %ax,0x000006(%esi)
		test   %di,%di
		jl     _07ecf1_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _07ecef_jump
		mov    %ebx,%eax

	_07ecef_jump:
		jmp    _07ed03_jump

	_07ecf1_jump:
		movswl %di,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07ed01_jump
		mov    %ebx,%eax

	_07ed01_jump:
		neg    %eax

	_07ed03_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x00000c(%esp)

	_07ed1a_jump:
		xor    %dl,%dl
		mov    0x00000c(%esp),%al
		mov    0x000018(%esp),%dh
		mov    %al,0x00001c(%esp)

	_07ed28_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x000018(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x00001c(%esp),%bl
		mov    %bl,0x000006(%ecx)
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%ax
		jae    _07ed55_jump
		mov    0x000014(%esi),%edi
		jmp    _07ed5e_jump

	_07ed55_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax

	_07ed5e_jump:
		mov    %edi,0x000008(%ecx)
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    %dh,%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		mov    %al,0x00002f(%ecx)
		inc    %dl
		mov    (%esi),%bl
		add    $0x000034,%ecx
		cmp    %bl,%dl
		jbe    _07ed28_jump
		mov    (%esp),%al
		add    %al,0x00000c(%esp)
		mov    0x000004(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000004(%esp)
		cmp    %bl,%dh
		jbe    _07ed1a_jump
		xor    %bh,%bh
		mov    %bh,0x000008(%esp)
		mov    %bh,0x000010(%esp)

	_07edb6_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		movzbl 0x000010(%esp),%edi
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi,%esi,1)
		call   _05e000_func
		cwtl   
		xor    %ebx,%ebx
		call   _07fd04_func
		call   _07ff01_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _07ff01_func
		call   _0805b4_func
		mov    0x000008(%esp),%ch
		mov    %al,0x00006b(%edi,%esi,1)
		mov    0x000010(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x000008(%esp)
		mov    %al,0x000010(%esp)
		cmp    $0x00004b,%al
		jb     _07edb6_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_07ee26_jump:
		ret    

	_07ee28_case:
		mov    _0e7464_data,%eax
		test   %eax,%eax
		je     _07ee26_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _07ee3f_jump
		add    $0x00001c,%eax
		call   _07fbcc_func

	_07ee3f_jump:
		cmpl   $0x000000,_0e7464_data
		je     _07ee26_jump
		mov    $_0e7464_data,%eax
		jmp    _07fbcc_func



_07ee54_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _07ef0e_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _07ef0e_jump
		mov    $0x0000bc,%eax
		call   _07fbb4_func
		mov    %eax,%edx
		mov    %eax,_0e7464_data
		test   %eax,%eax
		je     _07ef0e_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _07eea7_jump
		mov    %ebx,%eax

	_07eea7_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000008(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07eebb_jump
		mov    %ebx,%eax

	_07eebb_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07fbb4_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _07ef0e_jump
		mov    _0cd130_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_07ef0e_jump:
		test   %cl,%cl
		je     _07ef4b_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07e380_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07e380_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _07ec80_func
		jmp    _07ef50_jump

	_07ef4b_jump:
		call   _07ee28_case

	_07ef50_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07ef5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0e7464_data,%ebp
		mov    %ah,(%esp)
		jmp    _07f092_jump

	_07ef75_jump:
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _07f03f_jump

	_07ef97_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		add    %eax,%ebx
		mov    $0x000001,%ah
		mov    0x000000(%ebp),%dl
		mov    %ah,0x000004(%esp)
		cmp    %ah,%dl
		jbe    _07f02c_jump

	_07efc1_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%eax
		imul   %esi,%eax
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%edx
		imul   %ecx,%edx
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		lea    0x000064(%eax),%ecx
		mov    %cl,0x000006(%ebx)
		mov    0x000004(%esp),%cl
		inc    %cl
		mov    %si,0x000004(%ebx)
		mov    %cl,0x000004(%esp)
		mov    0x000000(%ebp),%ch
		add    $0x000034,%ebx
		cmp    %ch,%cl
		jb     _07efc1_jump

	_07f02c_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jb     _07ef97_jump

	_07f03f_jump:
		mov    0x0000b8(%ebp),%cl
		test   %cl,%cl
		je     _07f05d_jump
		mov    %cl,%ch
		xor    %ebx,%ebx
		dec    %ch
		mov    %ch,%bl
		mov    %ch,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _07f060_jump

	_07f05d_jump:
		mov    0x00006a(%ebp),%bl

	_07f060_jump:
		cmpw   $0x000258,0x0000b6(%ebp)
		jbe    _07f073_jump
		cmpb   $0x000000,0x000020(%ebp)
		jne    _07f073_jump
		xor    %bl,%bl

	_07f073_jump:
		mov    $0x00004a,%al

	_07f075_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al
		test   %al,%al
		ja     _07f075_jump
		mov    (%esp),%dh
		inc    %dh
		mov    %bl,0x000020(%ebp)
		mov    %dh,(%esp)

	_07f092_jump:
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _07f0a3_jump
		neg    %eax

	_07f0a3_jump:
		cmp    %eax,%edx
		jl     _07ef75_jump
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07f0b7_jump
		neg    %eax

	_07f0b7_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _07f0d0_jump
		movw   $0x000000,0x000004(%ebp)

	_07f0d0_jump:
		mov    0x000004(%ebp),%ax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f0e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e7464_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _07f1ed_jump

	_07f10a_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _07f1cc_jump
		lea    0x000008(%edx),%edi

	_07f11c_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _010045_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jb     _07f11c_jump

	_07f1cc_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jb     _07f10a_jump

	_07f1ed_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f200_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _080420_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _0664f8_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _07f252_jump
		jbe    _07f25b_jump
		cmp    $0x000080,%ah
		jb     _07f315_jump
		jbe    _07f268_jump
		cmp    $0x0000ff,%ah
		je     _07f25b_jump
		jmp    _07f315_jump

	_07f252_jump:
		test   %ah,%ah
		je     _07f268_jump
		jmp    _07f315_jump

	_07f25b_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _07f322_jump

	_07f268_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _0664f8_func
		cmpb   $0x000080,(%esp)
		jne    _07f29a_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07f29a_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _080420_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _0664f8_func
		cmpw   $0x000000,0x000004(%esp)
		jne    _07f30c_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001606,%ecx
		call   _080420_func
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		call   _0664f8_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07f30c_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07f315_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al

	_07f322_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07f32c_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000038,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		movb   $0x000000,(%eax)
		lea    0x00001c(%esp),%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _080420_func
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    $0x003000,%edx
		mov    %esp,%ebx
		mov    $0x000021,%eax
		mov    %edx,0x00001c(%esp)
		lea    0x00001c(%esp),%edx
		call   _0813ca_func
		mov    (%esp),%al
		mov    %al,(%ecx)
		mov    0x000001(%esp),%al
		mov    %al,(%esi)
		mov    (%ecx),%ah
		cmp    $0x00000a,%ah
		je     _07f38a_jump
		cmp    $0x000014,%ah
		jne    _07f393_jump

	_07f38a_jump:
		movb   $0x000001,_0cfa14_data
		jmp    _07f39b_jump

	_07f393_jump:
		xor    %dh,%dh
		mov    %dh,_0cfa14_data

	_07f39b_jump:
		mov    0x000005(%esp),%al
		add    $0x000038,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07f3b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _080420_func
		mov    $0x000500,%edx
		mov    $_0c2190_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0c2190_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _085aa3_func
		mov    _0c2190_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		push   $_0c1434_data
		call   _07fce1_func
		add    $0x000004,%esp
		mov    _0cd87c_data,%edx
		push   %edx
		push   $_0c1458_data
		call   _07fce1_func
		mov    _0bd974_data,%eax
		shr    $0x00000a,%eax
		add    $0x000008,%esp
		add    $0x000002,%eax
		push   %eax
		mov    _0bd974_data,%ebx
		xor    %eax,%eax
		push   %ebx
		mov    _0bd97a_data,%ax
		push   %eax
		xor    %eax,%eax
		mov    _0bd978_data,%ax
		push   %eax
		push   $_0c1494_data
		call   _07fce1_func
		add    $0x000014,%esp
		mov    _0cd888_data,%ecx
		push   %ecx
		push   $_0c14dc_data
		call   _07fce1_func
		mov    _0bd97c_data,%eax
		shr    $0x00000a,%eax
		add    $0x000008,%esp
		add    $0x000002,%eax
		push   %eax
		mov    _0bd97c_data,%esi
		xor    %eax,%eax
		push   %esi
		mov    _0bd982_data,%ax
		push   %eax
		xor    %eax,%eax
		mov    _0bd980_data,%ax
		push   %eax
		push   $_0c1518_data
		call   _07fce1_func
		add    $0x000014,%esp
		mov    _0cd854_data,%edi
		push   %edi
		push   $_0c1560_data
		call   _07fce1_func
		mov    _0bd984_data,%eax
		shr    $0x00000a,%eax
		add    $0x000008,%esp
		add    $0x000002,%eax
		push   %eax
		mov    _0bd984_data,%ebp
		xor    %eax,%eax
		push   %ebp
		mov    _0bd98a_data,%ax
		push   %eax
		xor    %eax,%eax
		mov    _0bd988_data,%ax
		push   %eax
		push   $_0c159c_data
		call   _07fce1_func
		add    $0x000014,%esp
		mov    _0cd868_data,%eax
		push   %eax
		push   $_0c15e4_data
		call   _07fce1_func
		mov    _0bd98c_data,%eax
		shr    $0x00000a,%eax
		add    $0x000008,%esp
		add    $0x000002,%eax
		push   %eax
		mov    _0bd98c_data,%edx
		xor    %eax,%eax
		push   %edx
		mov    _0bd992_data,%ax
		push   %eax
		xor    %eax,%eax
		mov    _0bd990_data,%ax
		push   %eax
		push   $_0c1620_data
		call   _07fce1_func
		add    $0x000014,%esp
		push   $_0c1668_data
		call   _07fce1_func
		add    $0x000004,%esp
		push   $_0c166c_data
		call   _07fce1_func
		add    $0x000004,%esp
		mov    _0bd970_data,%ebx
		push   %ebx
		push   $_0c1690_data
		call   _07fce1_func
		add    $0x000008,%esp
		mov    _0bd994_data,%eax
		shr    $0x00000a,%eax
		add    $0x000002,%eax
		push   %eax
		mov    _0bd994_data,%ecx
		push   %ecx
		push   $_0c16c4_data
		call   _07fce1_func
		add    $0x00000c,%esp
		push   $_0c1668_data
		call   _07fce1_func
		add    $0x000004,%esp
		call   _07f3b0_func
		push   %eax
		push   $_0c1704_data
		call   _07fce1_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f5b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _07f5d2_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _07f665_jump

	_07f5d2_jump:
		mov    $0x000064,%eax
		call   _07f8d8_func
		mov    %eax,%ecx
		cmp    $_0cd874_data,%ebx
		jne    _07f5f0_jump
		mov    _0c1718_data,%eax
		mov    %eax,(%esp)
		jmp    _07f637_jump

	_07f5f0_jump:
		cmp    $_0cd880_data,%ebx
		jne    _07f604_jump
		mov    %esp,%edi
		mov    $_0c171c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07f637_jump

	_07f604_jump:
		cmp    $_0cd84c_data,%ebx
		jne    _07f618_jump
		mov    %esp,%edi
		mov    $_0c1724_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07f637_jump

	_07f618_jump:
		cmp    $_0cd860_data,%ebx
		jne    _07f62d_jump
		mov    %esp,%edi
		mov    $_0c172c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _07f637_jump

	_07f62d_jump:
		mov    %esp,%edi
		mov    $_0c1734_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)

	_07f637_jump:
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0c1740_data
		push   %ecx
		call   _08044b_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _01f988_func
		mov    %ecx,%eax
		call   _07fa70_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07f665_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0bd974_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0cd874_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _07f6a0_jump
		mov    _0cf88c_data,%dx
		mov    %dx,_0bd978_data
		mov    _0cf87c_data,%dx
		mov    %ebp,_0bd974_data
		mov    %dx,_0bd97a_data

	_07f6a0_jump:
		mov    _0bd97c_data,%edx
		mov    _0cd880_data,%ebx
		cmp    %ebx,%edx
		jae    _07f6d2_jump
		mov    _0cf88c_data,%dx
		mov    %dx,_0bd980_data
		mov    _0cf87c_data,%dx
		mov    %ebx,_0bd97c_data
		mov    %dx,_0bd982_data

	_07f6d2_jump:
		mov    _0bd984_data,%edx
		mov    _0cd84c_data,%ecx
		cmp    %ecx,%edx
		jae    _07f704_jump
		mov    _0cf88c_data,%dx
		mov    %dx,_0bd988_data
		mov    _0cf87c_data,%dx
		mov    %ecx,_0bd984_data
		mov    %dx,_0bd98a_data

	_07f704_jump:
		mov    _0bd98c_data,%edx
		mov    _0cd860_data,%esi
		cmp    %esi,%edx
		jae    _07f736_jump
		mov    _0cf88c_data,%dx
		mov    %dx,_0bd990_data
		mov    _0cf87c_data,%dx
		mov    %esi,_0bd98c_data
		mov    %dx,_0bd992_data

	_07f736_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07f740_func:
		push   %ebx
		push   %edx
		mov    $_0cd890_data,%eax
		mov    $0x000168,%ebx
		call   _07fbcc_func
		xor    %edx,%edx
		mov    $_0c9688_data,%eax
		mov    %edx,_0cd890_data
		call   _080420_func
		pop    %edx
		pop    %ebx
		ret    



_07f768_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0cd88c_data,%eax
		call   _07f7d0_func
		mov    %eax,%ecx
		mov    %eax,_0bd970_data
		mov    _0cd890_data,%eax
		mov    %eax,_0c968c_data
		mov    _0cd894_data,%eax
		mov    %eax,_0c9688_data
		xor    %ah,%ah
		mov    %ah,_0c9690_data
		mov    $0x000001,%eax

	_07f7a1_jump:
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0cd890_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0c968c_data(%edx)
		xor    %ebx,%ebx
		mov    %ebx,_0c9688_data(%edx)
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0c9690_data(%edx)
		cmp    $0x00001e,%ax
		jl     _07f7a1_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f7d0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _086012_func
		mov    %eax,0x000004(%ecx)
		test   %eax,%eax
		jne    _07f812_jump
		mov    $0x000064,%eax
		call   _07f8d8_func
		push   %edx
		push   $_0c1778_data
		push   %eax
		mov    %eax,%ebx
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _01f988_func
		mov    %ebx,%eax
		call   _07fa70_func

	_07f812_jump:
		mov    0x000004(%ecx),%ebx
		mov    %edx,0x000008(%ecx)
		and    $0x000003,%ebx
		mov    %edx,%eax
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07f824_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		xor    %ecx,%ecx

	_07f82b_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		cmpb   $0x000000,_0c9690_data(%edx)
		jne    _07f8c7_jump
		cmpl   $0x000000,_0c9688_data(%edx)
		je     _07f8c7_jump

	_07f84b_jump:
		xor    %esi,%esi
		xor    %eax,%eax

	_07f84f_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0c968c_data(%edx),%ebx
		mov    _0c9688_data(%edx),%ebp
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		add    %ebp,%ebx
		cmp    _0c968c_data(%edx),%ebx
		jne    _07f87a_jump
		cmpb   $0x000000,_0c9690_data(%edx)
		je     _07f881_jump

	_07f87a_jump:
		inc    %eax
		cmp    $0x00001e,%ax
		jl     _07f84f_jump

	_07f881_jump:
		cmp    $0x00001e,%ax
		jge    _07f8c3_jump
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		movswl %cx,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c9688_data(%edx),%esi
		mov    _0c9688_data(%ebx),%eax
		add    %esi,%eax
		mov    _0cd894_data,%ebp
		mov    %eax,_0c9688_data(%ebx)
		mov    _0cd890_data,%ebx
		xor    %eax,%eax
		add    %ebp,%ebx
		mov    %eax,_0c9688_data(%edx)
		mov    %ebx,_0c968c_data(%edx)

	_07f8c3_jump:
		test   %esi,%esi
		jne    _07f84b_jump

	_07f8c7_jump:
		inc    %ecx
		cmp    $0x00001e,%cx
		jl     _07f82b_jump
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f8d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0cd894_data,%edi
		and    $0x000003,%eax
		mov    %edx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx

	_07f8f9_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		cmpb   $0x000000,_0c9690_data(%esi)
		jne    _07f931_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0c9688_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _07f921_jump
		cmp    %ecx,%eax
		jg     _07f921_jump
		mov    $0x000001,%eax
		jmp    _07f923_jump

	_07f921_jump:
		xor    %eax,%eax

	_07f923_jump:
		test   %eax,%eax
		je     _07f931_jump
		mov    %edx,0x000064(%esp)
		mov    _0c9688_data(%esi),%edi

	_07f931_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f8f9_jump
		mov    0x000064(%esp),%edi
		cmp    $0x00001e,%di
		jge    _07fa24_jump
		xor    %edx,%edx

	_07f948_jump:
		movswl %di,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c968c_data(%esi),%eax
		mov    _0c9688_data(%esi),%esi
		add    %eax,%esi
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		cmp    _0c968c_data(%eax),%esi
		je     _07f971_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f948_jump

	_07f971_jump:
		movswl %dx,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		cmpb   $0x000000,_0c9690_data(,%eax,4)
		je     _07f9ab_jump
		mov    _0cd894_data,%ecx
		xor    %edx,%edx

	_07f98f_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0cd890_data,%eax
		add    %ecx,%eax
		cmp    _0c968c_data(%esi),%eax
		je     _07f9ab_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07f98f_jump

	_07f9ab_jump:
		movswl %di,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		movswl %dx,%edi
		lea    0x000000(,%eax,4),%esi
		lea    0x000000(,%edi,4),%eax
		mov    _0c968c_data(%esi),%ebx
		sub    %edi,%eax
		add    %ebp,%ebx
		mov    %ebx,_0c968c_data(,%eax,4)
		mov    _0c9688_data(%esi),%ebx
		mov    _0c9688_data(,%eax,4),%ecx
		sub    %ebp,%ebx
		mov    _0cd88c_data,%edi
		add    %ebx,%ecx
		add    %ebp,%edi
		mov    %ecx,_0c9688_data(,%eax,4)
		mov    $0x000001,%bh
		mov    %ebp,_0c9688_data(%esi)
		mov    %edi,_0cd88c_data
		mov    %bh,_0c9690_data(%esi)
		mov    _0bd994_data,%eax
		mov    _0c968c_data(%esi),%esi
		cmp    %edi,%eax
		jae    _07fa61_jump
		mov    %edi,_0bd994_data
		jmp    _07fa61_jump

	_07fa24_jump:
		mov    %ebp,%eax
		call   _086012_func
		mov    %eax,%esi
		mov    _0bd970_data,%eax
		mov    _0bd994_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _07fa43_jump
		mov    %eax,_0bd994_data

	_07fa43_jump:
		test   %esi,%esi
		jne    _07fa61_jump
		push   %ebp
		push   $_0c17a0_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _08044b_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _01f988_func

	_07fa61_jump:
		mov    %esi,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fa70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    (%esp),%esi
		xor    %cl,%cl
		xor    %edx,%edx

	_07fa82_jump:
		movswl %dx,%ebx
		imul   $0x00000c,%ebx,%ebx
		cmp    _0c968c_data(%ebx),%esi
		jne    _07fabe_jump
		cmpb   $0x000000,_0c9690_data(%ebx)
		je     _07fac5_jump
		mov    $0x000001,%cl
		mov    _0cd88c_data,%edi
		mov    _0c9688_data(%ebx),%eax
		xor    %dl,%dl
		sub    %eax,%edi
		mov    %dl,_0c9690_data(%ebx)
		mov    %edi,_0cd88c_data
		call   _07f824_func
		jmp    _07fac5_jump

	_07fabe_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07fa82_jump

	_07fac5_jump:
		test   %cl,%cl
		jne    _07fad0_jump
		mov    %esp,%eax
		call   _07fbcc_func

	_07fad0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fadc_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0cd874_data,%eax
		lea    0x000004(%edx),%eax
		call   _07fbcc_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_07fb04_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cfa9b_data,%bl
		xor    %eax,%eax
		mov    _0cfa9a_data,%al
		jmp    _07fb23_jump

	_07fb16_jump:
		movswl %ax,%edx
		xor    %ecx,%ecx
		inc    %eax
		mov    %ecx,_0cce48_data(,%edx,4)

	_07fb23_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    %dx,%ax
		jl     _07fb16_jump
		mov    _0cfa9a_data,%bl
		mov    _09251e_data,%ax
		mov    %bl,_0cfa9b_data
		mov    %ax,_09251c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fb48_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e7474_data
		pop    %edx
		pop    %ebx
		ret    



_07fb60_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e7470_data
		pop    %edx
		pop    %ebx
		ret    



_07fb78_func:
		push   %edx
		mov    _0e7474_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07fb84_func:
		push   %edx
		mov    _0e7470_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07fb90_func:
		push   %edx
		mov    %eax,%edx
		call   _07fb04_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07fba4_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07fbb4_func:
		jmp    _086012_func



_07fbbc_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _0860f5_func
		pop    %ebx
		ret    



_07fbcc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    (%eax),%ebx
		test   %ebx,%ebx
		je     _07fbe3_jump
		mov    %ebx,%eax
		call   _08610d_func
		movl   $0x000000,(%edx)

	_07fbe3_jump:
		pop    %edx
		pop    %ebx
		ret    



_07fbe6_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx

	_07fbed_jump:
		mov    (%edx),%al
		test   %al,%al
		je     _07fc05_jump
		sub    $0x000061,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000019,%ebx
		jg     _07fc02_jump
		add    $0x000041,%al
		mov    %al,(%edx)

	_07fc02_jump:
		inc    %edx
		jmp    _07fbed_jump

	_07fc05_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fc0b_func:
		push   %ecx

	_07fc0c_jump:
		test   %ebx,%ebx
		jne    _07fc14_jump

	_07fc10_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

	_07fc14_jump:
		mov    (%eax),%cl
		mov    (%edx),%ch
		cmp    %ch,%cl
		je     _07fc2a_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    %cl,%bl
		mov    %ch,%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		pop    %ecx
		ret    

	_07fc2a_jump:
		cmpb   $0x000000,(%eax)
		je     _07fc10_jump
		inc    %eax
		inc    %edx
		dec    %ebx
		jmp    _07fc0c_jump



_07fc40_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _07fcb4_jump

	_07fc48_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _07fcb9_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07fcb4_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07fcb9_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07fcb4_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07fcb9_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07fcb4_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07fcb9_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _07fc48_jump

	_07fcb4_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_07fcb9_jump:
		cmp    %cl,%al
		jne    _07fcda_jump
		cmp    $0x000000,%al
		je     _07fcb4_jump
		cmp    %ch,%ah
		jne    _07fcda_jump
		cmp    $0x000000,%ah
		je     _07fcb4_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _07fcda_jump
		cmp    $0x000000,%al
		je     _07fcb4_jump
		cmp    %ch,%ah

	_07fcda_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_07fce1_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%eax
		mov    %esp,%ebx
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		mov    $_0bd9de_data,%eax
		call   _0861a0_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_07fd04_func:
		or     %eax,%eax
		jns    _07fd11_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _07fd16_jump



_07fd11_func:
		mov    $0x0003ff,%edx

	_07fd16_jump:
		or     %eax,%eax
		je     _07fd41_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_07fd41_jump:
		sub    %edx,%edx
		ret    



_07fd44_func:
		xor    $0x80000000,%ecx



_07fd4a_func:
		or     %ebx,%ebx
		jne    _07fd54_jump
		add    %ecx,%ecx
		je     _07fd60_jump
		rcr    %ecx

	_07fd54_jump:
		or     %eax,%eax
		jne    _07fd63_jump
		add    %edx,%edx
		jne    _07fd61_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_07fd60_jump:
		ret    

	_07fd61_jump:
		rcr    %edx

	_07fd63_jump:
		cmpb   $0x000000,_0bdbd9_data
		je     _07fd8d_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_07fd76_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07fd8c_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07fd8c_jump:
		ret    

	_07fd8d_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07fdce_jump
		or     $0x100000,%edx

	_07fdce_jump:
		or     %cx,%cx
		je     _07fdd9_jump
		or     $0x100000,%esi

	_07fdd9_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _07fe15_jump
		jae    _07fdf0_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_07fdf0_jump:
		cmp    $0x000036,%cx
		jbe    _07fe15_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07fe15_jump:
		or     %ecx,%ecx
		jns    _07fe26_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_07fe26_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _07fe50_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _07fe42_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_07fe42_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_07fe50_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _07fe79_jump
		cmp    $0x000035,%cl
		jb     _07fe6c_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_07fe6c_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_07fe79_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _07fee9_jump
		or     %bp,%bp
		je     _07feed_jump

	_07fe84_jump:
		test   $0x7fe00000,%edx
		jne    _07fe96_jump
		dec    %bp
		je     _07feed_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _07fe84_jump

	_07fe96_jump:
		test   $0x400000,%edx
		je     _07feae_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07fef7_jump

	_07feae_jump:
		shr    %edx
		rcr    %eax
		jae    _07fed8_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07fed8_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07fef7_jump

	_07fed8_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_07fee9_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07feed_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07fef7_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08623d_jump



_07ff01_func:
		or     %eax,%eax
		jne    _07ff0c_jump
		add    %edx,%edx
		jne    _07ff0a_jump
		ret    

	_07ff0a_jump:
		rcr    %edx

	_07ff0c_jump:
		or     %ebx,%ebx
		jne    _07ff1b_jump
		add    %ecx,%ecx
		jne    _07ff19_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_07ff19_jump:
		rcr    %ecx

	_07ff1b_jump:
		cmpb   $0x000000,_0bdbd9_data
		je     _07ff33_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _07fd76_jump

	_07ff33_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _07ff7c_jump
		inc    %di

	_07ff6e_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _07ff6e_jump

	_07ff7c_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _07ff97_jump
		inc    %cx

	_07ff89_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _07ff89_jump

	_07ff97_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _07ffb8_jump
		cmp    $0x0007ff,%cx
		jb     _07ffb8_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08623d_jump

	_07ffb8_jump:
		cmp    $0x00ffcb,%cx
		jge    _07ffc6_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _086220_jump

	_07ffc6_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_080017_jump:
		test   $0x200000,%edx
		je     _080030_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _080094_jump
		jmp    _080017_jump

	_080030_jump:
		add    %ebx,%ebx
		jae    _08005e_jump
		jne    _080043_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _080043_jump
		mov    %eax,%esi
		shr    %esi

	_080043_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _08005e_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _080094_jump

	_08005e_jump:
		or     %cx,%cx
		jg     _080079_jump
		jne    _080069_jump
		mov    $0x000001,%cl
		jmp    _08006e_jump

	_080069_jump:
		neg    %cx
		dec    %cx

	_08006e_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_080079_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_080094_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08623d_jump



_08009e_func:
		jmp    _0862b7_jump



_0800a3_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0800c0_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _0862f8_func
		pop    %edx
		ret    

	_0800c0_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0800c4_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    _0e74f8_data,%ebx
		cmp    $0x000021,%ebx
		je     _0800f9_jump
		movl   $0x000021,_0e74f8_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_0800e3_jump:
		test   %edx,%edx
		je     _0800f9_jump
		mov    _0e7474_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _0800e3_jump

	_0800f9_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_0800ff_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0800c4_func,%edx
		mov    _0e74f8_data,%ecx
		mov    %edx,_0bd9a8_data
		cmp    $0x000020,%ecx
		jge    _080132_jump
		mov    %ecx,%eax
		xor    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0e7478_data(,%ecx,4)
		mov    %edx,_0e74f8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_080132_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08013c_func:
		jmp    _0801b4_jump



_0801b0_func:
		arpl   %bp,0x00006e(%edi)
	_0801b4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0bdc08_data
		mov    %ebx,_0bdbf4_data
		mov    $0x000024,%ax
		mov    %ax,_0bdc00_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0bdc2b_data
		mov    %ah,_0bdc2c_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _080236_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0bdc00_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0bdbf4_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _08026e_jump

	_080236_jump:
		cmp    $0x004243,%ax
		jne    _080270_jump
		mov    %edx,_0bd998_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0bdc00_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_08026e_jump:
		jmp    _0802c9_jump

	_080270_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _0802b2_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _08028d_jump
		mov    %ax,_0bd99c_data

	_08028d_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _0802a1_jump
		mov    $0x000001,%ah

	_0802a1_jump:
		data16 mov %es,_0bdc00_data
		mov    %es:0x00002c,%cx
		jmp    _0802c9_jump

	_0802b2_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_0802c9_jump:
		mov    %al,_0bdc22_data
		mov    %ah,_0bdc23_data
		mov    %ebx,%es
		data16 mov %ds,%es:_080411_jump
		mov    %esi,_0bdc25_data
		mov    %cx,_0bdc29_data
		push   %esi
		data16 mov _0bdc00_data,%es
		ds mov $_0e795c_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _08031e_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_08031e_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0bdc29_data,%ds
		sub    %ebp,%ebp

	_080330_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _080345_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _080345_jump
		inc    %ebp

	_080345_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _080345_jump
		cmpb   $0x000000,(%esi)
		jne    _080330_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_080353_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _080353_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0bdc20_data
		mov    %edi,_0bdc04_data
		mov    %ebx,_0bdbf0_data
		ds mov $_0e795c_data,%ecx
		ds mov $_0c2190_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0bdc22_data
		jne    _080394_jump
		cmp    $0x001000,%ecx
		jbe    _080394_jump
		mov    $0x001000,%ecx

	_080394_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0e795c_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0bdbf8_data
		mov    %esi,_0bdbfc_data
		mov    $0x0000ff,%eax
		call   _0863b8_func
		sub    %ebp,%ebp
		call   _086369_func

	_0803cb_jump:
		jmp    _0803f0_jump



_0803cd_func:
		push   %edx
		push   %eax
		mov    $_0801b0_func,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_0803e1_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _0803e1_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_0803f0_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $0x0000ff,%edx
		call   _086403_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		lea    0x000000(%eax),%eax



_080408_func:
		data16 mov %cs:_080411_jump,%ds
		ret    

	_080411_jump:
		add    %al,(%eax)

_080413_switch:
		.long   0
		.long   0
		.long   0




_080420_func:
		push   %eax
		push   %ecx
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _085a00_func
		pop    %ecx
		pop    %eax
		ret    



_080438_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_08044b_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    $_080438_func,%ecx
		mov    %esp,%ebx
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _08663e_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08047b_func:
		push   %ebx
		push   %ecx
		push   %edx

	_08047e_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		mov    _0c1c40_data(%edx),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _08049c_jump
		inc    %eax
		jmp    _08047e_jump

	_08049c_jump:
		mov    (%eax),%cl
		mov    %cl,%dl
		cmp    $0x00002b,%edx
		je     _0804aa_jump
		cmp    $0x00002d,%edx
		jne    _0804ab_jump

	_0804aa_jump:
		inc    %eax

	_0804ab_jump:
		xor    %ebx,%ebx

	_0804ad_jump:
		mov    (%eax),%dl
		inc    %dl
		and    $0x0000ff,%edx
		mov    _0c1c40_data(%edx),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _0804d7_jump
		imul   $0x00000a,%ebx,%ebx
		xor    %edx,%edx
		mov    (%eax),%dl
		add    %edx,%ebx
		inc    %eax
		sub    $0x000030,%ebx
		jmp    _0804ad_jump

	_0804d7_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x00002d,%eax
		jne    _0804e2_jump
		neg    %ebx

	_0804e2_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0804e8_func:
		mov    $_0e74fc_data,%eax
		ret    



_0804ee_func:
		mov    $_0e7500_data,%eax
		ret    



_0804f4_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bdc14_data,%eax
		mov    %edx,_0bdc14_data
		test   %eax,%eax
		jne    _08050f_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_08050f_jump:
		pop    %edx
		ret    

	_080511_jump:
		ret    



_080512_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd9a8_data
		call   *_0bd9ac_data
		mov    %edx,%eax
		call   _08052a_func
		pop    %edx
		ret    



_08052a_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd9ac_data
		call   *_0bd9b0_data
		mov    %edx,%eax
		jmp    _0803cb_jump



_080552_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _080571_jump
		lea    -0x000008(%ebp),%edx
		mov    $0x002043,%eax
		call   _0872be_func
		jmp    _08059c_jump

	_080571_jump:
		cmpb   $0x000000,_0bdbd9_data
		je     _080590_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _08059c_jump

	_080590_jump:
		test   %edx,%edx
		je     _0805a2_jump
		mov    -0x000008(%ebp),%eax
		call   _0873ae_func

	_08059c_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_0805a2_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_0805b4_func:
		mov    $0x00001f,%al
		jmp    _0805ba_jump



_0805b8_func:
		mov    $0x000020,%al

	_0805ba_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _080629_jump
		cmp    $0x000020,%cx
		jg     _080622_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _080622_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _080604_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _08060f_jump

	_080604_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_08060f_jump:
		mov    $0x0000ff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _080620_jump
		neg    %eax

	_080620_jump:
		pop    %ecx
		ret    

	_080622_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_080629_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_08062d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _0875e0_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _080663_jump
		mov    _0c1c14_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _0872be_func
		jmp    _080858_jump

	_080663_jump:
		lea    -0x000034(%ebp),%eax
		push   %eax
		lea    -0x000028(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _087634_func
		mov    %esi,%eax
		mov    -0x000028(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000028(%ebp)
		testb  $0x000001,-0x000028(%ebp)
		je     _0806b3_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _07fd44_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_0806b3_jump:
		lea    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _0875e0_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _0806e4_jump
		mov    -0x000034(%ebp),%edi
		mov    -0x000030(%ebp),%eax
		xor    %ecx,%ecx
		mov    %eax,-0x000014(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000018(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _080787_jump

	_0806e4_jump:
		test   %ebx,%ebx
		jle    _0806ed_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_0806ed_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _080701_jump
		movl   $0x000008,-0x00001c(%ebp)

	_080701_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0c1bf0_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _08071b_jump
		cmp    $0x000001,%esi
		jne    _080757_jump

	_08071b_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%eax
		mov    $_0c1ba8_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x000034(%ebp),%eax
		mov    %edx,-0x000020(%ebp)
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07ff01_func
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%ebx
		call   _08772d_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000010(%ebp)

	_080757_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _080764_jump
		cmp    $0x000001,%esi
		jne    _080787_jump

	_080764_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000030(%ebp),%edx
		add    $_0c1b60_data,%ebx
		call   _087762_func
		mov    %eax,%edi
		mov    %edx,-0x000014(%ebp)

	_080787_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _08079a_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00003c(%ebp)
		mov    -0x000010(%ebp),%eax
		jmp    _0807a0_jump

	_08079a_jump:
		mov    -0x000014(%ebp),%eax
		mov    %edi,-0x00003c(%ebp)

	_0807a0_jump:
		mov    %eax,-0x000038(%ebp)
		testb  $0x000004,-0x000028(%ebp)
		je     _0807ba_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _080ae6_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0807ba_jump:
		cmp    $0x000001,%esi
		jne    _080835_jump
		mov    -0x000028(%ebp),%edx
		mov    -0x000028(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000028(%ebp)
		test   $0x000002,%al
		je     _0807de_jump
		mov    -0x000018(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _0807e3_jump

	_0807de_jump:
		mov    -0x000014(%ebp),%ecx
		mov    %edi,%ebx

	_0807e3_jump:
		testb  $0x000004,-0x000028(%ebp)
		je     _0807f6_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _080ae6_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_0807f6_jump:
		test   %ecx,%ecx
		jne    _080824_jump
		call   _0877a9_func
		cmpl   $0x000000,-0x000038(%ebp)
		jle    _080812_jump
		mov    _0c1d44_data,%eax
		mov    _0c1d48_data,%edx
		jmp    _080858_jump

	_080812_jump:
		mov    _0c1d44_data,%eax
		mov    _0c1d48_data,%edx
		call   _080ae6_func
		jmp    _080858_jump

	_080824_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _0808e0_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_080835_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _080852_jump
		lea    -0x00003c(%ebp),%ebx
		mov    _0c1c14_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000002,%ah
		call   _0872c8_func
		jmp    _080858_jump

	_080852_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx

	_080858_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_080872_func:
		push   %ebx
		cmpb   $0x000000,_0bdbd9_data
		je     _080883_jump
		call   _0877d5_func
		pop    %ebx
		ret    

	_080883_jump:
		xor    %ebx,%ebx
		call   _08062d_func
		pop    %ebx
		ret    



_080899_func:
		push   %ebx
		cmpb   $0x000000,_0bdbd9_data
		je     _0808aa_jump
		call   _0877cc_func
		pop    %ebx
		ret    

	_0808aa_jump:
		mov    $0x000002,%ebx
		call   _08062d_func
		pop    %ebx
		ret    



_0808e0_func:
		or     %ebx,%ebx
		jne    _0808ef_jump
		add    %ecx,%ecx
		jne    _0808ed_jump
		jmp    _086231_jump

	_0808ed_jump:
		rcr    %ecx

	_0808ef_jump:
		or     %eax,%eax
		jne    _0808fa_jump
		add    %edx,%edx
		jne    _0808f8_jump
		ret    

	_0808f8_jump:
		rcr    %edx

	_0808fa_jump:
		cmpb   $0x000000,_0bdbd9_data
		je     _080933_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		testb  $0x000001,_0bdcb0_data
		je     _08091a_jump
		call   _087f5c_func
		jmp    _080920_jump

	_08091a_jump:
		fdivl  (%esp)
		add    $0x000008,%esp

	_080920_jump:
		fstpl  (%esp)
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _080932_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_080932_jump:
		ret    

	_080933_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _080976_jump
		or     $0x100000,%edx
		jmp    _080984_jump

	_080976_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _080976_jump

	_080984_jump:
		or     %cx,%cx
		je     _080991_jump
		or     $0x100000,%esi
		jmp    _08099f_jump

	_080991_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _080991_jump

	_08099f_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _0809ba_jump
		cmp    $0x0007ff,%di
		jb     _0809ba_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _08623d_jump

	_0809ba_jump:
		cmp    $0x00ffcc,%di
		jge    _0809c8_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _086220_jump

	_0809c8_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _0809f3_jump
		sub    %ecx,%edx
		inc    %eax

	_0809f3_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _080a14_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_080a14_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _080a2e_jump

	_080a1c_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _080a1c_jump

	_080a2e_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _080a43_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_080a43_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _080a7a_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _080a7a_jump

	_080a63_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _080a63_jump

	_080a7a_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _080a8c_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_080a8c_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _080acb_jump
		jne    _080ab4_jump
		mov    $0x000001,%cl
		jmp    _080aba_jump

	_080ab4_jump:
		neg    %di
		mov    %di,%cx

	_080aba_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_080acb_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_080ae6_func:
		test   %edx,%edx
		jne    _080aec_jump
		test   %eax,%eax

	_080aec_jump:
		je     _080af4_jump
		xor    $0x80000000,%edx

	_080af4_jump:
		ret    



_080af5_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _080b1f_jump
		mov    $0x000004,%eax
		call   _08779d_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _080cc9_jump

	_080b1f_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _080b2d_jump
		mov    %ebx,%eax
		jmp    _080cc9_jump

	_080b2d_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _080b3a_jump
		mov    %ebp,%eax
		call   _088040_func

	_080b3a_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x000008(%esp)
		test   $0x000040,%dl
		je     _080c4a_jump
		mov    %ebx,0x00000c(%esp)

	_080b50_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _080bab_jump
		mov    0x00000c(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _080b61_jump
		mov    %ebx,%edx

	_080b61_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x000008(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x00000c(%esp)
		mov    %edi,0x000004(%ebp)

	_080bab_jump:
		mov    0x00000c(%esp),%ecx
		test   %ecx,%ecx
		je     _080cbe_jump
		cmp    0x000014(%ebp),%ecx
		jae    _080bc6_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _080c36_jump

	_080bc6_jump:
		movl   $0x000000,0x000004(%ebp)
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%ebp),%eax
		mov    0x00000d(%ebp),%cl
		mov    %eax,0x000000(%ebp)
		test   $0x000004,%cl
		jne    _080bec_jump
		cmp    $0x000200,%ebx
		jbe    _080bec_jump
		xor    %bl,%bl
		and    $0x0000fe,%bh

	_080bec_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _0880b7_func
		cmp    $0xffffffff,%eax
		jne    _080c06_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _080cbe_jump

	_080c06_jump:
		test   %eax,%eax
		jne    _080c13_jump

	_080c0a_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _080cbe_jump

	_080c13_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _080b50_jump

	_080c36_jump:
		mov    %ebp,%eax
		call   _081086_func
		test   %eax,%eax
		je     _080cbe_jump
		jmp    _080b50_jump

	_080c4a_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_080c50_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _080c61_jump
		mov    %ebp,%eax
		call   _081086_func
		test   %eax,%eax
		je     _080cbe_jump

	_080c61_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000d,%eax
		jne    _080ca5_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _080c8e_jump
		mov    %ebp,%eax
		call   _081086_func
		test   %eax,%eax
		je     _080cbe_jump

	_080c8e_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax

	_080ca5_jump:
		cmp    $0x00001a,%eax
		je     _080c0a_jump
		mov    %al,(%edx)
		mov    0x000008(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x000008(%esp)
		cmp    %ebx,%edx
		jne    _080c50_jump

	_080cbe_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_080cc9_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_080cd0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _080cfc_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _080cfc_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_080cfc_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_080d12_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _080d7a_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _080d4b_jump
		mov    %ecx,%eax
		call   _0880d6_func
		test   %eax,%eax
		je     _080d5f_jump
		test   %ebx,%ebx
		jne    _080d42_jump
		test   %esi,%esi
		jge    _080d42_jump

	_080d38_jump:
		mov    $0x000009,%eax
		call   _08779d_func

	_080d42_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080d4b_jump:
		cmp    $0x000001,%ebx
		jne    _080d53_jump
		sub    0x000004(%ecx),%esi

	_080d53_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_080d5f_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _0816ab_func
		cmp    $0xffffffff,%eax
		jne    _080e08_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080d7a_jump:
		cmp    $0x000001,%ebx
		jb     _080d88_jump
		jbe    _080d8e_jump
		cmp    $0x000002,%ebx
		je     _080de4_jump
		jmp    _080d38_jump

	_080d88_jump:
		test   %ebx,%ebx
		je     _080db3_jump
		jmp    _080d38_jump

	_080d8e_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		mov    0x000004(%ecx),%edi
		call   _080cd0_func
		test   %eax,%eax
		je     _080e08_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _0816ab_func
		cmp    $0xffffffff,%eax
		jne    _080e08_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080db3_jump:
		mov    0x000010(%ecx),%eax
		call   _0881af_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _080cd0_func
		test   %eax,%eax
		je     _080e08_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _0816ab_func
		cmp    $0xffffffff,%eax
		jne    _080e08_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080de4_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _0816ab_func
		cmp    $0xffffffff,%eax
		je     _080e0a_jump

	_080e08_jump:
		xor    %eax,%eax

	_080e0a_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080e0e_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000002,0x00000c(%ecx)
		jne    _080e33_jump
		mov    $0x000004,%eax
		call   _08779d_func
		orb    $0x000020,0x00000c(%ecx)
		xor    %eax,%eax
		jmp    _080fc7_jump

	_080e33_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _080e41_jump
		mov    %ebx,%eax
		jmp    _080fc7_jump

	_080e41_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _080e4e_jump
		mov    %ebp,%eax
		call   _088040_func

	_080e4e_jump:
		mov    0x00000c(%ebp),%eax
		mov    0x00000c(%ebp),%dl
		xor    %esi,%esi
		and    $0x000030,%eax
		and    $0x0000cf,%dl
		mov    %esi,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		mov    %dl,0x00000c(%ebp)
		test   $0x000040,%dl
		je     _080f49_jump
		mov    %ebx,0x000010(%esp)

	_080e74_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _080ebc_jump
		mov    0x000010(%esp),%eax
		cmp    0x000014(%ebp),%eax
		jb     _080ebc_jump
		mov    %eax,%ebx
		xor    %al,%bl
		and    $0x0000fe,%bh
		test   %ebx,%ebx
		jne    _080e90_jump
		mov    %eax,%ebx

	_080e90_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _0881c0_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _080eb6_jump
		test   %eax,%eax
		jne    _080f1d_jump
		call   _0804e8_func
		movl   $0x00000c,(%eax)

	_080eb6_jump:
		orb    $0x000020,0x00000c(%ebp)
		jmp    _080f1d_jump

	_080ebc_jump:
		mov    0x000014(%ebp),%edx
		mov    0x000004(%ebp),%ebx
		mov    0x000010(%esp),%ecx
		sub    %ebx,%edx
		cmp    %ecx,%edx
		jbe    _080ece_jump
		mov    %ecx,%edx

	_080ece_jump:
		mov    0x000004(%esp),%esi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x000004(%ebp),%edi
		add    %edx,%edi
		mov    0x00000d(%ebp),%bh
		mov    %edi,0x000004(%ebp)
		or     $0x000010,%bh
		mov    0x000000(%ebp),%esi
		mov    %bh,0x00000d(%ebp)
		add    %edx,%esi
		mov    0x000004(%ebp),%eax
		mov    0x000014(%ebp),%ebx
		mov    %esi,0x000000(%ebp)
		cmp    %ebx,%eax
		je     _080f16_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _080f1d_jump

	_080f16_jump:
		mov    %ebp,%eax
		call   _0880d6_func

	_080f1d_jump:
		mov    0x000004(%esp),%ecx
		mov    0x00000c(%esp),%esi
		mov    0x000010(%esp),%edi
		add    %edx,%ecx
		add    %edx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		sub    %edx,%edi
		mov    %edi,0x000010(%esp)
		je     _080fa4_jump
		testb  $0x000020,0x00000c(%ebp)
		je     _080e74_jump
		jmp    _080fa4_jump

	_080f49_jump:
		mov    0x00000d(%ebp),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _080f64_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%ebp)

	_080f64_jump:
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		inc    %edx
		mov    %edx,0x000004(%esp)
		mov    %ebp,%edx
		call   _081132_func
		testb  $0x000030,0x00000c(%ebp)
		jne    _080f8b_jump
		mov    0x00000c(%esp),%ecx
		inc    %ecx
		mov    %ecx,0x00000c(%esp)
		cmp    %ecx,%ebx
		jne    _080f64_jump

	_080f8b_jump:
		test   %edi,%edi
		je     _080fa4_jump
		mov    0x00000d(%ebp),%dh
		and    $0x0000fa,%dh
		mov    %dh,%bl
		or     $0x000004,%bl
		mov    %ebp,%eax
		mov    %bl,0x00000d(%ebp)
		call   _0880d6_func

	_080fa4_jump:
		testb  $0x000020,0x00000c(%ebp)
		je     _080fb0_jump
		xor    %edx,%edx
		mov    %edx,0x00000c(%esp)

	_080fb0_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%ecx
		mov    0x00000c(%ebp),%ebx
		xor    %edx,%edx
		or     %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %ebx,0x00000c(%ebp)
		div    %ecx

	_080fc7_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_080fce_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		testb  $0x000001,0x00000c(%eax)
		jne    _080ff4_jump
		mov    $0x000004,%eax
		call   _08779d_func
		mov    0x00000c(%edx),%bl
		or     $0x000020,%bl
		mov    $0xffffffff,%eax
		mov    %bl,0x00000c(%edx)
		jmp    _081014_jump

	_080ff4_jump:
		mov    0x000004(%edx),%ebx
		dec    %ebx
		mov    %ebx,0x000004(%edx)
		test   %ebx,%ebx
		jge    _081008_jump
		mov    %edx,%eax
		call   _081057_func
		jmp    _081014_jump

	_081008_jump:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)

	_081014_jump:
		testb  $0x000040,0x00000c(%edx)
		jne    _081052_jump
		cmp    $0x00000d,%eax
		jne    _08103f_jump
		mov    0x000004(%edx),%esi
		dec    %esi
		mov    %esi,0x000004(%edx)
		test   %esi,%esi
		jge    _081033_jump
		mov    %edx,%eax
		call   _081057_func
		jmp    _08103f_jump

	_081033_jump:
		mov    (%edx),%ebx
		mov    (%ebx),%al
		inc    %ebx
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)

	_08103f_jump:
		cmp    $0x00001a,%eax
		jne    _081052_jump
		mov    0x00000c(%edx),%cl
		or     $0x000010,%cl
		mov    $0xffffffff,%eax
		mov    %cl,0x00000c(%edx)

	_081052_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081057_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _081086_func
		test   %eax,%eax
		jne    _08106e_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08106e_jump:
		mov    0x000004(%edx),%ebx
		mov    (%edx),%ecx
		dec    %ebx
		inc    %ecx
		mov    %ebx,0x000004(%edx)
		mov    %ecx,(%edx)
		mov    -0x000001(%ecx),%al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081086_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _081097_jump
		call   _088040_func

	_081097_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _0810ae_jump
		test   $0x000006,%ah
		je     _0810ae_jump
		mov    $0x002000,%eax
		call   _088239_func

	_0810ae_jump:
		mov    0x000008(%ecx),%edx
		mov    %edx,(%ecx)
		mov    0x00000c(%ecx),%dh
		mov    0x00000c(%ecx),%eax
		and    $0x0000fb,%dh
		and    $0x002400,%eax
		mov    %dh,0x00000c(%ecx)
		cmp    $0x002400,%eax
		jne    _0810ee_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _0810ee_jump
		mov    %ebx,0x000004(%ecx)
		call   _085706_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _08110b_jump
		mov    (%ecx),%eax
		mov    %dl,(%eax)
		movl   $0x000001,0x000004(%ecx)
		jmp    _08110b_jump

	_0810ee_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _0810fb_jump
		mov    $0x000001,%ebx
		jmp    _0810fe_jump

	_0810fb_jump:
		mov    0x000014(%ecx),%ebx

	_0810fe_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _0880b7_func
		mov    %eax,0x000004(%ecx)

	_08110b_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _08112a_jump
		jne    _08111a_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _08112a_jump

	_08111a_jump:
		mov    0x00000c(%ecx),%bh
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%bh
		mov    %bh,0x00000c(%ecx)

	_08112a_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081132_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _081157_jump
		mov    $0x000004,%eax
		call   _08779d_func
		orb    $0x000020,0x00000c(%edx)

	_08114d_jump:
		mov    $0xffffffff,%eax
		jmp    _0811d0_jump

	_081157_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _081164_jump
		mov    %edx,%eax
		call   _088040_func

	_081164_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _0811a1_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _0811a1_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _0811a1_jump
		mov    %edx,%eax
		call   _0880d6_func
		test   %eax,%eax
		jne    _08114d_jump

	_0811a1_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _0811c1_jump
		cmp    0x000014(%edx),%esi
		jne    _0811cc_jump

	_0811c1_jump:
		mov    %edx,%eax
		call   _0880d6_func
		test   %eax,%eax
		jne    _08114d_jump

	_0811cc_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_0811d0_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0811d6_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    $_0bd9de_data,%eax
		call   _0861a0_func
		pop    %ebx
		ret    

.data

_0811e7_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_08120c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_081222_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_0811e7_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _081222_jump

	_081242_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _081242_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081256_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _081268_jump
		test   %eax,%eax
		jge    _081268_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_081268_jump:
		call   _08120c_func
		mov    %ecx,%eax
		pop    %ecx
		ret    

.data

_081271_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_081296_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_0812ac_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000024(%esp),%edx
		mov    %cs:_081271_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _0812ac_jump

	_0812cc_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _0812cc_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0812e0_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _0812f2_jump
		test   %eax,%eax
		jge    _0812f2_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_0812f2_jump:
		call   _081296_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_0812fb_func:
		jmp    _0800a3_func



_081300_func:
		cmpl   $0x000000,_0bdc14_data
		je     _08130f_jump
		mov    $0x000001,%eax
		ret    

	_08130f_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		movsbl %al,%eax
		ret    



_081318_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_081331_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    _0bdc22_data,%dl
		cmp    $0x000002,%edx
		jl     _08134e_jump
		cmp    $0x000008,%edx
		jg     _08134e_jump
		mov    %al,%cl
		mov    $0x002502,%eax
		jmp    _081358_jump

	_08134e_jump:
		and    $0x0000ff,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_081358_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_081363_func:
		push   %edx
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0bdc22_data,%bl
		cmp    $0x000002,%ebx
		jl     _081386_jump
		cmp    $0x000008,%ebx
		jg     _081386_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_081386_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_081390_func:
		mov    $_0bd9b4_data,%eax
		ret    



_081396_func:
		push   %edx
		call   _081390_func
		test   %eax,%eax
		je     _0813b8_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_0813b8_jump:
		pop    %edx
		ret    



_0813ba_func:
		push   %edx
		mov    %eax,%edx
		call   _081390_func
		test   %eax,%eax
		je     _0813c8_jump
		mov    %edx,(%eax)

	_0813c8_jump:
		pop    %edx
		ret    



_0813ca_func:
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    %esp,%ecx
		call   _088268_func
		mov    %esi,%eax
		call   _085aa3_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		ret    



_0813e7_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _08140b_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_08140b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_081417_jump:
		movzbl (%esi),%edi
		cmp    $0x000020,%edi
		jne    _081422_jump
		inc    %esi
		jmp    _081417_jump

	_081422_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ah
		mov    %esi,%edx
		or     %ah,%al
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _081455_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_081455_jump:
		mov    0x000028(%esp),%dl
		test   $0x000003,%dl
		je     _0814d8_jump
		cmp    $0xffffffff,%edi
		je     _0814d8_jump
		mov    %edi,%eax
		call   _088290_func
		test   %eax,%eax
		jne    _0814d8_jump
		testb  $0x000004,0x000029(%esp)
		je     _0814a0_jump
		test   $0x000020,%dl
		je     _0814a0_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _08779d_func
		mov    $0xffffffff,%eax
		jmp    _0815eb_jump

	_0814a0_jump:
		testb  $0x000040,0x000028(%esp)
		je     _0814d8_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _0814d8_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_0814c8_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _0862f8_func
		jmp    _0815eb_jump

	_0814d8_jump:
		cmp    $0xffffffff,%edi
		jne    _08157a_jump
		testb  $0x000020,0x000028(%esp)
		je     _0814c8_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		cmp    $0x000002,%eax
		jne    _0814c8_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _081506_jump
		mov    $0x000180,%eax

	_081506_jump:
		mov    _0bdcb4_data,%edx
		not    %edx
		and    %edx,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _08151b_jump
		mov    $0x000001,%ecx

	_08151b_jump:
		and    $0x0000ff,%ecx
		mov    %esi,%edx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _0814c8_jump
		xor    %edi,%edi
		mov    0x00002c(%esp),%edx
		mov    (%esp),%di
		test   %edx,%edx
		je     _08157a_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _0814c8_jump
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _0814c8_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_08157a_jump:
		mov    %edi,%eax
		call   _0882b7_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _088290_func
		test   %eax,%eax
		je     _081593_jump
		or     $0x000020,%dh

	_081593_jump:
		andb   $0x00007f,0x000004(%esp)
		cmpl   $0x000002,0x000004(%esp)
		jne    _0815a2_jump
		or     $0x000003,%dl

	_0815a2_jump:
		cmpl   $0x000000,0x000004(%esp)
		jne    _0815ac_jump
		or     $0x000001,%dl

	_0815ac_jump:
		cmpl   $0x000001,0x000004(%esp)
		jne    _0815b6_jump
		or     $0x000002,%dl

	_0815b6_jump:
		testb  $0x000010,0x000028(%esp)
		je     _0815c0_jump
		or     $0x000080,%dl

	_0815c0_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _0815d4_jump
		test   $0x000002,%bl
		je     _0815e2_jump
		jmp    _0815e0_jump

	_0815d4_jump:
		cmpl   $0x000200,_0bdbcd_data
		jne    _0815e2_jump

	_0815e0_jump:
		mov    %eax,%edx

	_0815e2_jump:
		mov    %edi,%eax
		call   _08830c_func
		mov    %edi,%eax

	_0815eb_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08165a_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _081678_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_081678_jump:
		call   _088322_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_08168b_func:
		test   %eax,%eax
		jl     _08169b_jump
		cmp    _0bdcb8_data,%eax
		jbe    _088335_func

	_08169b_jump:
		mov    $0x000004,%eax
		call   _08779d_func
		mov    $0xffffffff,%eax
		ret    



_0816ab_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %esp,%edi
		mov    %bl,%al
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0816e5_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _0862f8_func
		mov    $0xffffffff,%eax
		jmp    _0816e8_jump

	_0816e5_jump:
		mov    (%esp),%eax

	_0816e8_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_0816ee_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx

	_0816f2_jump:
		mov    (%ebx),%al
		xor    %ecx,%ecx
		mov    (%edx),%ah
		mov    %al,%cl
		cmp    $0x000041,%ecx
		jl     _081706_jump
		cmp    $0x00005a,%ecx
		jg     _081706_jump
		add    $0x000020,%al

	_081706_jump:
		xor    %ecx,%ecx
		mov    %ah,%cl
		cmp    $0x000041,%ecx
		jl     _081717_jump
		cmp    $0x00005a,%ecx
		jg     _081717_jump
		add    $0x000020,%ah

	_081717_jump:
		cmp    %ah,%al
		jne    _081723_jump
		test   %ah,%ah
		je     _081723_jump
		inc    %ebx
		inc    %edx
		jmp    _0816f2_jump

	_081723_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_081735_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%al
		xor    %edx,%edx
		call   _08836a_func
		mov    %al,(%esp)
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		je     _081771_jump
		cmp    $0x000077,%eax
		je     _081771_jump
		cmp    $0x000061,%eax
		je     _081771_jump
		mov    $0x000009,%eax
		call   _08779d_func
		xor    %eax,%eax
		jmp    _0817fe_jump

	_081771_jump:
		xor    %ecx,%ecx
		mov    %edx,%esi
		mov    0x000001(%ebx),%cl
		or     $0x000003,%si
		cmp    $0x00002b,%ecx
		jne    _0817a6_jump
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000002(%ebx),%al
		or     $0x000040,%si
		cmp    $0x000062,%eax
		je     _0817a2_jump
		cmp    $0x000074,%eax
		je     _0817e0_jump
		cmpl   $0x000200,_0bdbcd_data

	_0817a0_jump:
		jne    _0817e0_jump

	_0817a2_jump:
		mov    %esi,%edx
		jmp    _0817e0_jump

	_0817a6_jump:
		mov    %edx,%eax
		or     $0x000040,%al
		cmp    $0x000062,%ecx
		jne    _0817c3_jump
		mov    %eax,%edx
		mov    0x000002(%ebx),%bl
		and    $0x0000ff,%ebx
		cmp    $0x00002b,%ebx
		jne    _0817e0_jump
		or     $0x000003,%al
		jmp    _0817de_jump

	_0817c3_jump:
		cmp    $0x000074,%ecx
		jne    _0817d2_jump
		xor    %eax,%eax
		mov    0x000002(%ebx),%al
		cmp    $0x00002b,%eax
		jmp    _0817a0_jump

	_0817d2_jump:
		cmpl   $0x000200,_0bdbcd_data
		jne    _0817e0_jump

	_0817de_jump:
		mov    %eax,%edx

	_0817e0_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000077,%eax
		jne    _0817ef_jump
		or     $0x000002,%dl
		jmp    _0817fc_jump

	_0817ef_jump:
		cmp    $0x000061,%eax
		jne    _0817f9_jump
		or     $0x000082,%dl
		jmp    _0817fc_jump

	_0817f9_jump:
		or     $0x000001,%dl

	_0817fc_jump:
		mov    %edx,%eax

	_0817fe_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081806_func:
		push   %esi
		mov    %eax,%esi
		mov    %dl,%al
		mov    %ecx,%edx
		mov    0x000008(%esp),%ecx
		andb   $0x0000fc,0x00000c(%ecx)
		or     %ebx,0x00000c(%ecx)
		and    $0x0000ff,%eax
		call   _08836a_func
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		jne    _081849_jump
		xor    %eax,%eax
		test   $0x000002,%bl
		je     _081838_jump
		mov    $0x000002,%eax

	_081838_jump:
		test   $0x000040,%bl
		je     _081842_jump
		or     $0x000002,%ah
		jmp    _081845_jump

	_081842_jump:
		or     $0x000001,%ah

	_081845_jump:
		push   $0x000000
		jmp    _081874_jump

	_081849_jump:
		test   $0x000001,%bl
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000021,%eax
		test   $0x000080,%bl
		je     _081860_jump
		or     $0x000010,%al
		jmp    _081862_jump

	_081860_jump:
		or     $0x000040,%al

	_081862_jump:
		test   $0x000040,%bl
		je     _08186c_jump
		or     $0x000002,%ah
		jmp    _08186f_jump

	_08186c_jump:
		or     $0x000001,%ah

	_08186f_jump:
		push   $0x000180

	_081874_jump:
		push   %edx
		push   %eax
		push   %esi
		call   _08140b_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _081895_jump
		mov    %ecx,%eax
		call   _08841e_func
		xor    %eax,%eax
		pop    %esi
		ret    $0x000004

	_081895_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		test   $0x000080,%bl
		je     _0818bd_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _080d12_func

	_0818bd_jump:
		mov    %ecx,%eax
		call   _088475_func
		mov    %ecx,%eax
		pop    %esi
		ret    $0x000004



_0818ca_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%ecx
		mov    %edx,%eax
		call   _081735_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _0818ff_jump
		xor    %eax,%eax
		call   _088378_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _0818fd_jump
		push   %eax
		mov    (%edx),%dl
		and    $0x0000ff,%edx
		mov    %esi,%eax
		call   _081806_func
		mov    %eax,%edi

	_0818fd_jump:
		mov    %edi,%eax

	_0818ff_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081903_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _0818ca_func
		pop    %ebx
		ret    



_0819b7_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0e7520_data,%eax

	_0819c0_jump:
		test   %eax,%eax
		jne    _0819cc_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0819cc_jump:
		cmp    0x000004(%eax),%ebx
		je     _0819d5_jump
		mov    (%eax),%eax
		jmp    _0819c0_jump

	_0819d5_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _0819e4_func
		pop    %edx
		pop    %ebx
		ret    



_0819e4_func:
		push   %ebx
		mov    %eax,%ebx
		call   _081a6a_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _08841e_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_0819f9_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _081a04_jump
		add    $0x000027,%eax

	_081a04_jump:
		ret    



_081a05_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _0884a6_func
		mov    %eax,%ebx
		lea    0x000004(%ecx),%edx
		movb   $0x000074,(%ecx)
		mov    %ecx,%esi

	_081a1c_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _0819f9_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _081a1c_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _0819f9_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _0819f9_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081a6a_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _081a86_jump
		mov    $0xffffffff,%eax
		jmp    _081af1_jump

	_081a86_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _081a99_jump
		mov    %ecx,%eax
		call   _0880d6_func
		mov    %eax,%esi

	_081a99_jump:
		mov    %ecx,%eax
		call   _085967_func
		cmp    $0xffffffff,%eax
		je     _081ab3_jump
		mov    %eax,%edx
		mov    0x000010(%ecx),%ebp
		xor    %ebx,%ebx
		mov    %ebp,%eax
		call   _0816ab_func

	_081ab3_jump:
		test   %edi,%edi
		je     _081ac1_jump
		mov    0x000010(%ecx),%eax
		call   _088335_func
		or     %eax,%esi

	_081ac1_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _081ad6_jump
		mov    0x000008(%ecx),%eax
		call   _08610d_func
		movl   $0x000000,0x000008(%ecx)

	_081ad6_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _081aef_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _081a05_func
		mov    %esp,%eax
		call   _0812fb_func

	_081aef_jump:
		mov    %esi,%eax

	_081af1_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081afa_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081b0f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_081b2e_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _081b3b_jump
		jmp    _081b5e_jump

	_081b36_jump:
		incl   -0x000004(%ebp)
		jmp    _081b2e_jump

	_081b3b_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _081b5c_jump
		incl   -0x000008(%ebp)

	_081b5c_jump:
		jmp    _081b36_jump

	_081b5e_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081b6e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081b83_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081b98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _081bba_jump
		movb   $0x000001,_0bfc64_data
		jmp    _081bc1_jump

	_081bba_jump:
		movb   $0x000000,_0bfc64_data

	_081bc1_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _081bf3_jump
		movb   $0x000001,_0bfc60_data
		call   _088631_func
		mov    %cs,%eax
		mov    $_082241_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _08856f_func
		add    $0x00000c,%esp
		call   _08865d_func
		jmp    _081bfa_jump

	_081bf3_jump:
		movb   $0x000000,_0bfc60_data

	_081bfa_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _081c06_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _081c08_jump

	_081c06_jump:
		jmp    _081c5a_jump

	_081c08_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _081c27_jump
		mov    $0x00ffff,%eax
		call   _08220c_func
		movl   $0x00ff00,_0be7a7_data
		jmp    _081c3e_jump

	_081c27_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _08220c_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be7a7_data

	_081c3e_jump:
		mov    %cs,_0be769_data
		movl   $_08230b_func,_0be765_data
		movl   $0x010000,_0be7e7_data
		jmp    _081c64_jump

	_081c5a_jump:
		movl   $0x00ffff,_0be707_data

	_081c64_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081c74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0bfc60_data
		je     _081c9d_jump
		call   _088631_func
		call   _088689_func
		call   _08865d_func

	_081c9d_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081cae_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_081cd2_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _081cdf_jump
		jmp    _081cf8_jump

	_081cda_jump:
		incl   -0x000004(%ebp)
		jmp    _081cd2_jump

	_081cdf_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be70b_data(%eax)
		jne    _081cf6_jump
		cmpw   $0x000000,_0be70f_data(%eax)
		je     _081cf8_jump

	_081cf6_jump:
		jmp    _081cda_jump

	_081cf8_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _081d0a_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _081eb1_jump

	_081d0a_jump:
		cmpb   $0x000000,_0bfc60_data
		je     _081d18_jump
		call   _088631_func

	_081d18_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0be70f_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0be70b_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be76b_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0be707_data,%eax
		jae    _081d83_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _08220c_func
		mov    _0be707_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_081d83_jump:
		movl   $0x000000,-0x000004(%ebp)

	_081d8a_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _081d9a_jump
		jmp    _081e92_jump

	_081d95_jump:
		incl   -0x000004(%ebp)
		jmp    _081d8a_jump

	_081d9a_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be70b_data(%eax)
		jne    _081db5_jump
		cmpw   $0x000000,_0be70f_data(%eax)
		je     _081e8d_jump

	_081db5_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be76b_data(%eax)
		jne    _081e0d_jump
		cmpl   $0x00ffff,_0be707_data
		jne    _081de5_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be7ab_data(%eax)
		jmp    _081e0b_jump

	_081de5_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be707_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be7ab_data(%eax)

	_081e0b_jump:
		jmp    _081e3f_jump

	_081e0d_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be76b_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be707_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be7ab_data(%eax)

	_081e3f_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _081e8d_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0be7eb_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0be7eb_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be7eb_data(%edx)

	_081e8d_jump:
		jmp    _081d95_jump

	_081e92_jump:
		cmpb   $0x000000,_0bfc60_data
		je     _081ea0_jump
		call   _08865d_func

	_081ea0_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_081eb1_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_082033_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0be70f_data(%eax)
		movl   $0x000000,_0be70b_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_082069_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _082076_jump
		jmp    _0820c3_jump

	_082071_jump:
		incl   -0x000004(%ebp)
		jmp    _082069_jump

	_082076_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be70b_data(%eax)
		jne    _08208d_jump
		cmpw   $0x000000,_0be70f_data(%eax)
		je     _0820c1_jump

	_08208d_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be76b_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _0820b0_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be76b_data(%eax)
		jne    _0820b2_jump

	_0820b0_jump:
		jmp    _0820c1_jump

	_0820b2_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be76b_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_0820c1_jump:
		jmp    _082071_jump

	_0820c3_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _0820da_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _08220c_func
		jmp    _0820e4_jump

	_0820da_jump:
		mov    $0x00ffff,%eax
		call   _08220c_func

	_0820e4_jump:
		cmpb   $0x000000,_0bfc60_data
		je     _0820f2_jump
		call   _088631_func

	_0820f2_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0820f9_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _082109_jump
		jmp    _0821c3_jump

	_082104_jump:
		incl   -0x000004(%ebp)
		jmp    _0820f9_jump

	_082109_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be70b_data(%eax)
		jne    _082124_jump
		cmpw   $0x000000,_0be70f_data(%eax)
		je     _0821be_jump

	_082124_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be76b_data(%eax)
		jne    _08217c_jump
		cmpl   $0x00ffff,_0be707_data
		jne    _082154_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be7ab_data(%eax)
		jmp    _08217a_jump

	_082154_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be707_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be7ab_data(%eax)

	_08217a_jump:
		jmp    _0821ae_jump

	_08217c_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be76b_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be707_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be7ab_data(%eax)

	_0821ae_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be7eb_data(%eax)

	_0821be_jump:
		jmp    _082104_jump

	_0821c3_jump:
		cmpb   $0x000000,_0bfc60_data
		je     _0821d1_jump
		call   _08865d_func

	_0821d1_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08220c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0be707_data
		pushl  -0x000008(%ebp)
		call   _088529_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082241_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0bea3a_data
		movl   $0x000000,_0bec24_data

	_08225f_jump:
		cmpl   $0x000010,_0bec24_data
		jb     _082275_jump
		jmp    _0822fe_jump

	_08226d_jump:
		incl   _0bec24_data
		jmp    _08225f_jump

	_082275_jump:
		imul   $0x000006,_0bec24_data,%eax
		cmpl   $0x000000,_0be70b_data(%eax)
		jne    _08228f_jump
		cmpw   $0x000000,_0be70f_data(%eax)
		je     _0822f9_jump

	_08228f_jump:
		mov    _0bec24_data,%eax
		shl    $0x000002,%eax
		mov    _0bec24_data,%edx
		shl    $0x000002,%edx
		mov    _0be7ab_data(%edx),%edx
		add    %edx,_0be7eb_data(%eax)
		mov    _0bec24_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0be7ed_data(%eax)
		je     _0822f9_jump
		mov    _0bec24_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0be7ed_data(%eax)
		mov    _0bec24_data,%eax
		cmpb   $0x0000ff,_0be82b_data(%eax)
		je     _0822ec_jump
		mov    _0bec24_data,%eax
		mov    _0be82b_data(%eax),%al
		mov    %al,_0be83b_data

	_0822ec_jump:
		imul   $0x000006,_0bec24_data,%eax
		lcall  *_0be70b_data(%eax)

	_0822f9_jump:
		jmp    _08226d_jump

	_0822fe_jump:
		decl   _0bea3a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_08230b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _088705_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_082325_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08233a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08300e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083023_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083038_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_089099_func,%edx
		mov    $_0890d8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_089099_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083071_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_083071_jump:
		mov    $_0890ed_func,%edx
		mov    $_089193_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0890ed_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08309c_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_08309c_jump:
		mov    $_0854ce_func,%edx
		mov    $_0855b9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0854ce_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0830c7_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_0830c7_jump:
		mov    $_083023_func,%edx
		mov    $_0843cd_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083023_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0830f2_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_0830f2_jump:
		mov    $_0891a8_func,%edx
		mov    $_089754_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0891a8_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08311d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_08311d_jump:
		mov    $_081afa_func,%edx
		mov    $_081b6e_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081afa_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083148_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_083148_jump:
		mov    $_089769_func,%edx
		mov    $_0897e0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_089769_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083173_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_083173_jump:
		mov    $_0843e2_func,%edx
		mov    $_084e35_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0843e2_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08319e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_08319e_jump:
		mov    $_081b83_func,%edx
		mov    $_082325_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081b83_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0831c9_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_0831c9_jump:
		mov    $_084e4a_func,%edx
		mov    $_0854b9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084e4a_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0831f4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_0831f4_jump:
		mov    $_08233a_func,%edx
		mov    $_08300e_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08233a_func,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08321f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_08321f_jump:
		mov    $_0884ac_jump,%edx
		mov    $_08875e_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0884ac_jump,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08324a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_08324a_jump:
		mov    $_0887b4_jump,%edx
		mov    $_089037_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0887b4_jump,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083275_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_083275_jump:
		mov    $_0bdd10_data,%edx
		mov    $_0bec28_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bdd10_data,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08329d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_08329d_jump:
		mov    $_0bec2c_data,%edx
		mov    $_0bfc68_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bec2c_data,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0832c5_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_0832c5_jump:
		mov    $_0bfc6c_data,%edx
		mov    $_0bfd6c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bfc6c_data,%eax
		push   %eax
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0832ed_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0832f4_jump

	_0832ed_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0832f4_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0832fe_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_089099_func,%edx
		mov    $_0890d8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_089099_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083337_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_083337_jump:
		mov    $_0890ed_func,%edx
		mov    $_089193_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0890ed_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083362_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_083362_jump:
		mov    $_0854ce_func,%edx
		mov    $_0855b9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0854ce_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08338d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_08338d_jump:
		mov    $_083023_func,%edx
		mov    $_0843cd_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083023_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0833b8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_0833b8_jump:
		mov    $_0891a8_func,%edx
		mov    $_089754_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0891a8_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0833e3_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_0833e3_jump:
		mov    $_081afa_func,%edx
		mov    $_081b6e_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081afa_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08340e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_08340e_jump:
		mov    $_089769_func,%edx
		mov    $_0897e0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_089769_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083439_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_083439_jump:
		mov    $_0843e2_func,%edx
		mov    $_084e35_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0843e2_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083464_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_083464_jump:
		mov    $_081b83_func,%edx
		mov    $_082325_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081b83_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08348f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_08348f_jump:
		mov    $_084e4a_func,%edx
		mov    $_0854b9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084e4a_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0834ba_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_0834ba_jump:
		mov    $_08233a_func,%edx
		mov    $_08300e_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08233a_func,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0834e5_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_0834e5_jump:
		mov    $_0884ac_jump,%edx
		mov    $_08875e_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0884ac_jump,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083510_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_083510_jump:
		mov    $_0887b4_jump,%edx
		mov    $_089037_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0887b4_jump,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08353b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_08353b_jump:
		mov    $_0bdd10_data,%edx
		mov    $_0bec28_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bdd10_data,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _083563_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_083563_jump:
		mov    $_0bec2c_data,%edx
		mov    $_0bfc68_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bec2c_data,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08358b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_08358b_jump:
		mov    $_0bfc6c_data,%edx
		mov    $_0bfd6c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bfc6c_data,%eax
		push   %eax
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0835b3_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0835ba_jump

	_0835b3_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0835ba_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0835c4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _083038_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _0835f0_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _083635_jump

	_0835f0_jump:
		movl   $0x000001,_0beb94_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _083607_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _083627_jump

	_083607_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0be83c_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _0897f5_func
		jmp    _08362e_jump

	_083627_jump:
		movb   $0x000000,_0be83c_data

	_08362e_jump:
		movl   $0x000000,-0x000008(%ebp)

	_083635_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08363d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _0832fe_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _083662_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _083673_jump

	_083662_jump:
		movl   $0x000000,_0beb94_data
		movl   $0x000000,-0x000008(%ebp)

	_083673_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08367d_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_0836fa_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _083707_jump
		jmp    _083720_jump

	_083702_jump:
		incl   -0x000028(%ebp)
		jmp    _0836fa_jump

	_083707_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0be2c2_data(%eax)
		jne    _08371e_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _083720_jump

	_08371e_jump:
		jmp    _083702_jump

	_083720_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _083732_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _083f33_jump

	_083732_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0be2c2_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _083758_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _0837bb_jump

	_083758_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bdd40_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bdd3c_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bdd5e_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bdd5a_data(%edx)
		jmp    _083879_jump

	_0837bb_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd14_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd78_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bdddc_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _0891bd_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _08381d_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _083f33_jump

	_08381d_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bdd40_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bdd3c_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bdd5e_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bdd5a_data(%edx)

	_083879_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0be2da_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _089102_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _0838a8_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _083f33_jump

	_0838a8_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0be2c2_data(%eax)
		jae    _083cb7_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0bde54_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _0839f2_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0beb80_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0bde9a_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _084155_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _083952_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _083952_jump
		mov    -0x00002c(%ebp),%eax
		call   _0893e0_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be2c2_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _083f33_jump

	_083952_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bde6c_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bde68_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0be2fe_data(%eax)
		jne    _0839cd_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0be317_data(%eax)
		je     _0839a8_jump
		movl   $0x000000,-0x000044(%ebp)

	_08398a_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _083999_jump
		jmp    _0839a6_jump

	_083994_jump:
		incl   -0x000044(%ebp)
		jmp    _08398a_jump

	_083999_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _083994_jump

	_0839a6_jump:
		jmp    _0839cb_jump

	_0839a8_jump:
		movl   $0x000000,-0x000044(%ebp)

	_0839af_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _0839be_jump
		jmp    _0839cb_jump

	_0839b9_jump:
		incl   -0x000044(%ebp)
		jmp    _0839af_jump

	_0839be_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _0839b9_jump

	_0839cb_jump:
		jmp    _0839f0_jump

	_0839cd_jump:
		movl   $0x000000,-0x000044(%ebp)

	_0839d4_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _0839e3_jump
		jmp    _0839f0_jump

	_0839de_jump:
		incl   -0x000044(%ebp)
		jmp    _0839d4_jump

	_0839e3_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _0839de_jump

	_0839f0_jump:
		jmp    _083a14_jump

	_0839f2_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bde6c_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bde68_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_083a14_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _083b2e_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _083b2e_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _083ac6_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd28_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd8c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bddf0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _0894b8_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _083ac4_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _083f33_jump

	_083ac4_jump:
		jmp    _083b2c_jump

	_083ac6_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd28_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bdd8c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bddf0_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0be342_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _0894b8_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _083b2c_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _083f33_jump

	_083b2c_jump:
		jmp    _083b5e_jump

	_083b2e_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_083b5e_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0be317_data(%eax)
		je     _083b93_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _088de0_func
		add    $0x000020,%esp

	_083b93_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0bdda4_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0bdda0_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0bddc2_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0bddbe_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bde18_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be562_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0beba8_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _088b8f_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bebac_data,%dx
		mov    _0beba8_data,%ebx
		mov    %dx,_0bdec6_data(%eax)
		mov    %ebx,_0bdec2_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bebb4_data,%dx
		mov    _0bebb0_data,%ebx
		mov    %dx,_0be2a4_data(%eax)
		mov    %ebx,_0be2a0_data(%eax)
		mov    _0bebbc_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0bebb8_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0bdee0_data,%edx
		add    %edx,%eax
		push   %eax
		call   _088950_func
		add    $0x00000c,%esp
		jmp    _083cce_jump

	_083cb7_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0bdec6_data(%eax)
		movl   $0x000000,_0bdec2_data(%eax)

	_083cce_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bdec6_data(%eax),%dx
		mov    _0bdec2_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _088cb7_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0bde86_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0be582_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088be2_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088c66_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088c40_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bde86_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _088c17_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bde04_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bde2c_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0be587_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0be58f_data(%eax)
		mov    %ebx,_0be58b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0be593_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0be597_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0be59b_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0be59f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0be5a7_data(%eax)
		mov    %ebx,_0be5a3_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0be5af_data(%eax)
		mov    %ebx,_0be5ab_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0be5bf_data(%eax)
		mov    %ebx,_0be5bb_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0be5b7_data(%eax)
		mov    %ebx,_0be5b3_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0be5c7_data(%eax)
		mov    %ebx,_0be5c3_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0be5cb_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_083f33_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_083f3d_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bde04_data(%eax)
		jne    _083f6d_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _08414d_jump

	_083f6d_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde2c_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bdeae_data(%eax)
		jae    _08402a_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0beb80_data(%eax)
		je     _083fa8_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _083fad_jump

	_083fa8_jump:
		jmp    _08402a_jump

	_083fad_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bde6c_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0bde68_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _088e40_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _084004_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bde86_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bde9a_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _084351_func
		jmp    _08401a_jump

	_084004_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _0889b6_func
		add    $0x000004,%esp

	_08401a_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0beb80_data(%eax)

	_08402a_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bdd40_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bdd3c_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bdd5e_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0bdd5a_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _088a64_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _088b6c_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0be582_data(%eax),%eax
		push   %eax
		call   _088cec_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _0840b3_jump
		mov    -0x000010(%ebp),%eax
		call   _0893e0_func
		mov    -0x000010(%ebp),%eax
		call   _089692_func

	_0840b3_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdd40_data(%eax)
		movl   $0x000000,_0bdd3c_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdd5e_data(%eax)
		movl   $0x000000,_0bdd5a_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdec6_data(%eax)
		movl   $0x000000,_0bdec2_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdda4_data(%eax)
		movl   $0x000000,_0bdda0_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bddc2_data(%eax)
		movl   $0x000000,_0bddbe_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be2c2_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde04_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_08414d_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084155_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _088e40_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _0841c3_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _084235_func
		test   %eax,%eax
		je     _0841a4_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _08422a_jump

	_0841a4_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _08422a_jump

	_0841c3_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _088980_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_0841e5_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _08421e_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _088980_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _0841e5_jump

	_08421e_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_08422a_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084235_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _088e5d_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _0842a5_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _084349_jump

	_0842a5_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _088ecc_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0beb98_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _089824_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _088e9e_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _084342_jump
		andw   $0x00f000,_0beba4_data
		pushl  _0beba4_data
		call   _088f85_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0beba4_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _084349_jump

	_084342_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_084349_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_084351_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _089005_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _088e5d_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0beb98_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _089824_func
		pushl  -0x00000c(%ebp)
		call   _088f38_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _088e9e_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0843cd_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0843e2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0843f7_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bdd40_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bdd3c_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bdeae_data(%eax)
		jb     _08445e_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _084a01_jump

	_08445e_jump:
		movl   $0x000000,-0x000004(%ebp)

	_084465_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _084475_jump
		jmp    _0849f8_jump

	_084470_jump:
		incl   -0x000004(%ebp)
		jmp    _084465_jump

	_084475_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _0849f3_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _084617_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _084671_jump

	_084617_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_084671_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0bdee0_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdee4_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdee0_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _084a08_jump

	_0849f3_jump:
		jmp    _084470_jump

	_0849f8_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _084a08_jump

	_084a01_jump:
		movl   $0x000000,-0x000008(%ebp)

	_084a08_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_084a10_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _084aae_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _084a66_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _084a68_jump

	_084a66_jump:
		jmp    _084aa5_jump

	_084a68_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _084ab5_jump

	_084aa5_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _084ab5_jump

	_084aae_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_084ab5_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_084e35_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084e4a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084e8b_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _084ef8_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _084f01_jump

	_084ef8_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _084f07_jump

	_084f01_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_084f07_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08512e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _08519b_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _0851a4_jump

	_08519b_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _0851aa_jump

	_0851a4_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_0851aa_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0854b9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0854ce_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0854e3_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _08552c_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdee0_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _085523_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _085533_jump

	_085523_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _085533_jump

	_08552c_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_085533_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0855b9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0855ce_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _0816ab_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _085605_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0816ab_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _0816ab_func
		mov    %edi,%eax

	_085605_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08560b_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		push   %eax
		mov    %edx,%ebp
		call   _0882b7_func
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jne    _085636_jump
		mov    $0x000004,%eax

	_085627_jump:
		call   _08779d_func
		mov    $0xffffffff,%eax
		jmp    _0856fe_jump

	_085636_jump:
		test   $0x000001,%al
		jne    _085641_jump
		mov    $0x000006,%eax
		jmp    _085627_jump

	_085641_jump:
		test   $0x000040,%al
		je     _08566d_jump
		mov    %ebx,%ecx
		mov    (%esp),%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jge    _0856fc_jump
		xor    %eax,%eax
		mov    %di,%ax

	_085663_jump:
		call   _0862f8_func
		jmp    _0856fe_jump

	_08566d_jump:
		mov    %ebx,0x00000c(%esp)
		xor    %esi,%esi

	_085673_jump:
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _085697_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _085663_jump

	_085697_jump:
		je     _0856fc_jump
		xor    %eax,%edi
		mov    %ebp,%eax
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000010(%esp)
		jmp    _0856d9_jump

	_0856a8_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00001a,%ebx
		jne    _0856c9_jump
		mov    0x000004(%esp),%ebp
		mov    %edi,%edx
		mov    $0x000001,%ebx
		sub    %ebp,%edx
		mov    (%esp),%eax
		inc    %edx
		call   _0816ab_func
		jmp    _0856fc_jump

	_0856c9_jump:
		cmp    $0x00000d,%ebx
		je     _0856d7_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_0856d7_jump:
		inc    %eax
		inc    %edi

	_0856d9_jump:
		cmp    0x000010(%esp),%eax
		jb     _0856a8_jump
		mov    0x00000c(%esp),%ecx
		mov    0x000009(%esp),%ah
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x00000c(%esp)
		test   $0x000020,%ah
		jne    _0856fc_jump
		test   %ecx,%ecx
		jne    _085673_jump

	_0856fc_jump:
		mov    %esi,%eax

	_0856fe_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085706_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bdc14_data,%eax
		mov    %edx,_0bdc14_data
		test   %eax,%eax
		jne    _085721_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_085721_jump:
		pop    %edx
		ret    



_085735_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _089855_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _085bd2_func
		jge    _085771_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x00003c(%ebp)
		mov    %edi,-0x000038(%ebp)
		jmp    _085958_jump

	_085771_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _085bd2_func
		jle    _0857ab_jump
		cmpl   $0x000000,-0x000038(%ebp)
		jge    _085799_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x00003c(%ebp)
		mov    %ebx,-0x000038(%ebp)
		jmp    _085958_jump

	_085799_jump:
		lea    -0x00003c(%ebp),%edx
		mov    $0x008104,%eax
		call   _0872be_func
		jmp    _085952_jump

	_0857ab_jump:
		cmpb   $0x000000,_0bdbd9_data
		je     _0857c4_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _08985e_func
		jmp    _085952_jump

	_0857c4_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _07ff01_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _089907_func
		mov    -0x000038(%ebp),%edx
		mov    %eax,%esi
		mov    -0x00003c(%ebp),%eax
		lea    -0x000034(%ebp),%ebx
		call   _089855_func
		call   _08991c_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _0805b4_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _085838_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _085838_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _07fd44_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_085838_jump:
		mov    -0x000038(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _085880_jump
		mov    $0x000004,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _089948_func
		lea    -0x000034(%ebp),%ebx
		call   _08991c_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		test   %edx,%edx
		je     _085873_jump
		mov    $0xfffffffc,%ebx
		call   _089948_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_085873_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _0805b4_func
		mov    %eax,%edi

	_085880_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07ff01_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,%esi
		mov    %edx,-0x00002c(%ebp)
		call   _07fd4a_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000024(%ebp)
		mov    -0x00002c(%ebp),%edx
		mov    %esi,%eax
		call   _07ff01_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _07fd4a_func
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _07ff01_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		mov    -0x000020(%ebp),%ebx
		mov    %esi,%ecx
		call   _07fd4a_func
		mov    -0x000020(%ebp),%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ecx
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		call   _07fd44_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0c1c20_data,%esi
		call   _0808e0_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08591c_jump:
		test   %edi,%edi
		je     _085944_jump
		test   $0x000001,%di
		je     _08593d_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _07ff01_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_08593d_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _08591c_jump

	_085944_jump:
		mov    -0x000014(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _089948_func

	_085952_jump:
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_085958_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_085967_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _0881af_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _0859a4_jump
		testb  $0x000080,0x00000c(%edx)
		je     _08598d_jump
		testb  $0x000010,0x00000d(%edx)
		je     _08598d_jump
		mov    %edx,%eax
		call   _0899e6_func

	_08598d_jump:
		cmpl   $0x000000,0x000004(%edx)
		je     _0859a4_jump
		testb  $0x000010,0x00000d(%edx)
		je     _0859a1_jump
		add    0x000004(%edx),%ebx
		mov    %ebx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_0859a1_jump:
		sub    0x000004(%edx),%ebx

	_0859a4_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ebx
		ret    



_0859a9_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %esp,%eax
		call   _089a11_func
		mov    0x000003(%esp),%dh
		xor    %eax,%eax
		mov    %dh,%al
		cmp    $0x00005a,%eax
		jle    _0859da_jump
		mov    $0x00005a,%dh
		jmp    _0859da_jump

	_0859c8_jump:
		mov    0x000002(%esp),%dl

	_0859cc_jump:
		mov    %esp,%eax
		call   _089a11_func
		cmp    0x000002(%esp),%dl
		je     _0859cc_jump
		dec    %ebx

	_0859da_jump:
		test   %ebx,%ebx
		jne    _0859c8_jump

	_0859de_jump:
		mov    %esp,%eax
		call   _089a11_func
		cmp    0x000003(%esp),%dh
		ja     _0859de_jump
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_085a00_func:
		or     %ecx,%ecx
		je     _085a30_jump
		cmp    %dl,(%eax)

	_085a06_jump:
		test   $0x000003,%al
		je     _085a13_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _085a06_jump

	_085a13_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _085a37_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _085a30_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _085a30_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _085a30_jump
		mov    %dl,0x000002(%eax)

	_085a30_jump:
		ret    



_085a37_func:
		or     %ecx,%ecx
		je     _085aa2_jump

	_085a3b_jump:
		test   $0x00001f,%al
		je     _085a47_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _085a3b_jump

	_085a47_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _085a87_jump
		dec    %ecx
		je     _085a79_jump

	_085a50_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _085a76_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _085a50_jump
		lea    -0x000010(%eax),%eax

	_085a76_jump:
		lea    0x000010(%eax),%eax

	_085a79_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_085a87_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _085aa2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _085aa2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _085aa2_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_085aa2_jump:
		ret    



_085aa3_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %ebp,%edx
		mov    %eax,%esi
		call   _089a2c_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_085abc_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _089e0a_func
		cmp    $0x0001f4,%eax
		jl     _085ad4_jump
		incl   (%esp)

	_085ad4_jump:
		mov    %esp,%eax
		call   _089ecd_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _085ae3_jump
		mov    %eax,(%edx)

	_085ae3_jump:
		mov    %ebx,%eax
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_085aeb_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _085b34_jump
		jae    _085b1e_jump
		lea    (%edx,%ebx,1),%edi
		cmp    %eax,%edi
		jbe    _085b1e_jump
		lea    -0x000001(%edi),%esi
		lea    (%eax,%ebx,1),%edi
		mov    %ds,%edx
		dec    %edi
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_085b1e_jump:
		mov    %edx,%esi
		mov    %eax,%edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_085b34_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085b4a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07ff01_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _07fd44_func
		test   %edx,%edx
		jge    _085b84_jump
		lea    -0x000010(%ebp),%edx
		mov    $0x002041,%eax
		call   _0872be_func
		jmp    _085bca_jump

	_085b84_jump:
		jne    _085b9e_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _085b98_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _085bca_jump

	_085b98_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _085bca_jump

	_085b9e_jump:
		call   _080552_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _0808e0_func
		call   _08a033_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		call   _07fd44_func

	_085bca_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_085bd2_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _085bdd_jump
		sub    %edx,%edx

	_085bdd_jump:
		test   $0x7ff00000,%ecx
		jne    _085be7_jump
		sub    %ecx,%ecx

	_085be7_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _085bfe_jump
		cmp    %ecx,%edx
		jne    _085bf8_jump
		cmp    %ebx,%eax

	_085bf8_jump:
		je     _085c06_jump
		rcr    %ecx
		xor    %ecx,%edx

	_085bfe_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_085c06_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_085c0a_func:
		push   %ebx
		mov    %edx,%ebx
		cmp    $0x00001f,%edx
		jbe    _085c1d_jump
		shr    $0x000005,%edx
		call   _085c0a_func
		and    $0x00001f,%ebx

	_085c1d_jump:
		cmp    $0x00000a,%ebx
		jb     _085c2a_jump
		add    $0x000037,%bl
		mov    %bl,(%eax)
		inc    %eax
		pop    %ebx
		ret    

	_085c2a_jump:
		add    $0x000030,%bl
		mov    %bl,(%eax)
		inc    %eax
		pop    %ebx
		ret    



_085c32_func:
		push   %ebx
		push   %edx
		mov    $0x00005f,%ah
		mov    $_0e7504_data,%ebx
		mov    %ah,_0e7504_data
		inc    %ebx
		call   _0884a6_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _085c0a_func
		lea    0x000001(%eax),%ebx
		movb   $0x00002e,(%eax)
		movb   $0x000041,(%ebx)
		inc    %ebx
		movb   $0x000041,(%ebx)
		inc    %ebx
		mov    %ebx,%eax
		movb   $0x000040,(%ebx)
		sub    $_0e7504_data,%eax
		pop    %edx
		pop    %ebx
		ret    



_085c6b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		call   _0804e8_func
		mov    (%eax),%ebp
		cmpb   $0x000000,_0e7504_data
		jne    _085c8c_jump

	_085c83_jump:
		call   _085c32_func
		mov    %eax,%esi
		jmp    _085ca4_jump

	_085c8c_jump:
		mov    $_0e7504_data,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		lea    -0x000001(%ecx),%esi

	_085ca4_jump:
		xor    %eax,%eax
		mov    _0e7504_data(%esi),%al
		cmp    $0x00005a,%eax
		jne    _085cc9_jump
		mov    $0x000041,%dh
		xor    %eax,%eax
		mov    %dh,_0e7504_data(%esi)
		mov    _0e7503_data(%esi),%al
		dec    %esi
		cmp    $0x00002e,%eax
		jne    _085ca4_jump
		jmp    _085c83_jump

	_085cc9_jump:
		mov    %al,%dl
		inc    %dl
		mov    $_0e7504_data,%eax
		mov    %dl,_0e7504_data(%esi)
		xor    %edx,%edx
		call   _08a1a4_func
		test   %eax,%eax
		je     _085ca4_jump
		test   %ebx,%ebx
		je     _085d0a_jump
		mov    $_0e7504_data,%esi
		mov    %ebx,%edi
		push   %edi

	_085cef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _085d07_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _085cef_jump

	_085d07_jump:
		pop    %edi
		jmp    _085d0f_jump

	_085d0a_jump:
		mov    $_0e7504_data,%ebx

	_085d0f_jump:
		mov    %ebp,%eax
		call   _08779d_func
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085d1f_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000018,%esp
		push   %eax
		push   %edx
		push   %ebx
		call   _0882b7_func
		mov    %eax,-0x000014(%ebp)
		test   %eax,%eax
		jne    _085d4b_jump
		mov    $0x000004,%eax

	_085d3c_jump:
		call   _08779d_func
		mov    $0xffffffff,%eax
		jmp    _085eed_jump

	_085d4b_jump:
		test   $0x000002,%al
		jne    _085d56_jump
		mov    $0x000006,%eax
		jmp    _085d3c_jump

	_085d56_jump:
		test   $0x000080,%al
		je     _085d8d_jump
		mov    $0x000002,%al
		mov    -0x00001c(%ebp),%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,-0x00000c(%ebp)
		test   %edx,%edx
		jge    _085d8d_jump

	_085d7d_jump:
		xor    %eax,%eax
		mov    -0x00000c(%ebp),%ax
		call   _0862f8_func
		jmp    _085eed_jump

	_085d8d_jump:
		testb  $0x000040,-0x000014(%ebp)
		je     _085dc8_jump
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _085d7d_jump
		cmp    -0x000024(%ebp),%eax
		je     _085eea_jump
		mov    $0x00000c,%eax
		call   _08779d_func
		mov    %esi,-0x000024(%ebp)
		jmp    _085eea_jump

	_085dc8_jump:
		call   _08a1df_func
		mov    %eax,%edx
		cmp    $0x0000b0,%eax
		jae    _085ddb_jump
		call   _08a221_func

	_085ddb_jump:
		mov    $0x000200,%edi
		cmp    $0x000230,%edx
		jae    _085ded_jump
		mov    $0x000080,%edi

	_085ded_jump:
		lea    0x000003(%edi),%eax
		xor    %edx,%edx
		and    $0x0000fc,%al
		xor    %esi,%esi
		sub    %eax,%esp
		mov    %esp,%eax
		mov    %edx,-0x000004(%ebp)
		mov    %eax,-0x000010(%ebp)
		mov    -0x000020(%ebp),%eax
		mov    %edx,-0x000018(%ebp)
		mov    %eax,-0x000008(%ebp)

	_085e09_jump:
		mov    -0x000004(%ebp),%eax
		cmp    -0x000024(%ebp),%eax
		jae    _085eb4_jump
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00000a,%eax
		jne    _085e69_jump
		mov    -0x000010(%ebp),%eax
		movb   $0x00000d,(%esi,%eax,1)
		inc    %esi
		cmp    %edi,%esi
		jne    _085e69_jump
		mov    -0x00001c(%ebp),%ebx
		mov    %edi,%ecx
		mov    %eax,%edx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _085d7d_jump
		cmp    %edi,%eax
		je     _085e61_jump

	_085e4d_jump:
		mov    $0x00000c,%eax
		call   _08779d_func
		mov    -0x000018(%ebp),%eax
		add    %esi,%eax
		jmp    _085eed_jump

	_085e61_jump:
		mov    -0x000004(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x000018(%ebp)

	_085e69_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000008(%ebp),%ebx
		mov    -0x000004(%ebp),%ecx
		inc    %ebx
		inc    %ecx
		mov    (%edx),%dl
		mov    %ebx,-0x000008(%ebp)
		mov    %dl,(%esi,%eax,1)
		inc    %esi
		mov    %ecx,-0x000004(%ebp)
		cmp    %edi,%esi
		jne    _085e09_jump
		mov    -0x00001c(%ebp),%ebx
		mov    %edi,%ecx
		mov    %eax,%edx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _085d7d_jump
		cmp    %edi,%eax
		jne    _085e4d_jump
		mov    -0x000004(%ebp),%eax
		xor    %edi,%esi
		mov    %eax,-0x000018(%ebp)
		jmp    _085e09_jump

	_085eb4_jump:
		test   %esi,%esi
		je     _085eea_jump
		mov    -0x000010(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		mov    %esi,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,-0x00000c(%ebp)
		test   %eax,%eax
		jl     _085d7d_jump
		cmp    %esi,%eax
		je     _085eea_jump
		mov    $0x00000c,%eax
		call   _08779d_func
		mov    -0x000018(%ebp),%eax
		add    %edi,%eax
		jmp    _085eed_jump

	_085eea_jump:
		mov    -0x000024(%ebp),%eax

	_085eed_jump:
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_085f19_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _089907_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _089907_func
		test   %esi,%esi
		jne    _085f80_jump
		test   %eax,%eax
		jne    _085f5c_jump
		lea    -0x000010(%ebp),%ebx
		lea    -0x000018(%ebp),%edx
		mov    $0x00204d,%eax
		call   _0872c8_func
		jmp    _085fff_jump

	_085f5c_jump:
		jge    _085f73_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_085f68_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _086005_jump

	_085f73_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _086005_jump

	_085f80_jump:
		test   %eax,%eax
		jne    _085fa6_jump
		test   %esi,%esi
		jge    _085f9a_jump
		mov    $0x54442d15,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _086005_jump

	_085f9a_jump:
		mov    $0x54442d15,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _085f68_jump

	_085fa6_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _0808e0_func
		call   _08a033_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _089907_func
		test   %esi,%esi
		jl     _085fe6_jump
		test   %eax,%eax
		jge    _086005_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _07fd4a_func
		jmp    _085fff_jump

	_085fe6_jump:
		test   %eax,%eax
		jle    _086005_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _07fd4a_func

	_085fff_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_086005_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_086012_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _08602b_jump
		cmp    $0xffffffd4,%eax
		jbe    _086032_jump

	_08602b_jump:
		xor    %eax,%eax
		jmp    _0860e6_jump

	_086032_jump:
		mov    $_0bd9b8_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_086045_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _086051_jump
		mov    $0x00000c,%eax

	_086051_jump:
		cmp    _0bd9c0_data,%eax
		jbe    _086071_jump
		mov    _0bd9bc_data,%ecx
		test   %ecx,%ecx
		jne    _0860a9_jump

	_086063_jump:
		mov    %ecx,_0bd9c0_data
		mov    _0bd9b8_data,%ecx
		jmp    _0860a9_jump

	_086071_jump:
		xor    %ecx,%ecx
		jmp    _086063_jump

	_086075_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0bd9bc_data
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _08a230_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _0860dc_jump
		mov    _0bd9c0_data,%ebx
		mov    0x000014(%ecx),%eax
		cmp    %ebx,%eax
		jbe    _0860a6_jump
		mov    %eax,_0bd9c0_data

	_0860a6_jump:
		mov    0x000008(%ecx),%ecx

	_0860a9_jump:
		test   %ecx,%ecx
		jne    _086075_jump
		cmpb   $0x000000,(%esp)
		jne    _0860be_jump
		mov    %esi,%eax
		call   _08a7d4_func
		test   %eax,%eax
		jne    _0860d3_jump

	_0860be_jump:
		mov    %esi,%eax
		call   _08a99d_func
		test   %eax,%eax
		je     _0860dc_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _086045_jump

	_0860d3_jump:
		movb   $0x000001,(%esp)
		jmp    _086045_jump

	_0860dc_jump:
		xor    %ch,%ch
		mov    %edx,%eax
		mov    %ch,_0e7524_data

	_0860e6_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0860f5_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _086012_func
		test   %eax,%eax
		je     _08610b_jump
		xor    %edx,%edx
		call   _080420_func

	_08610b_jump:
		pop    %ebx
		ret    



_08610d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		test   %eax,%eax
		je     _086189_jump
		mov    _0e7514_data,%ecx
		test   %ecx,%ecx
		je     _08612f_jump
		cmp    %eax,%ecx
		ja     _08612f_jump
		cmp    0x000008(%ecx),%eax
		jb     _086149_jump

	_08612f_jump:
		mov    _0bd9b8_data,%ecx
		jmp    _086142_jump

	_086137_jump:
		cmp    %esi,%ecx
		ja     _08613f_jump
		cmp    %ebx,%esi
		jb     _086149_jump

	_08613f_jump:
		mov    0x000008(%ecx),%ecx

	_086142_jump:
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		jne    _086137_jump

	_086149_jump:
		mov    $_0bd9b8_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _08a2d8_func
		mov    _0bd9bc_data,%ebp
		mov    %ecx,_0e7514_data
		cmp    %ebp,%ecx
		jae    _086181_jump
		mov    _0bd9c0_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _086181_jump
		mov    %edx,_0bd9c0_data

	_086181_jump:
		xor    %ah,%ah
		mov    %ah,_0e7524_data

	_086189_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08618f_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _081132_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_0861a0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _0861c3_jump
		mov    %esi,%eax
		call   _088040_func

	_0861c3_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _0861de_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_0861de_jump:
		mov    $_08618f_func,%ecx
		mov    %esi,%eax
		call   _08663e_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _086205_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _0880d6_func

	_086205_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _086210_jump
		mov    $0xffffffff,%edx

	_086210_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086220_jump:
		sub    %edx,%edx
		sub    %eax,%eax
		ret    

	_086231_jump:
		mov    $0x000083,%eax
		call   _08aa2e_func
		jmp    _08624e_jump

	_08623d_jump:
		push   %eax
		call   _0877a9_func
		mov    $0x000084,%eax
		call   _08aa2e_func
		pop    %eax

	_08624e_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    



_086285_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_086293_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _086293_jump
		xor    %esi,%esi
		mov    %al,%bl

	_0862a3_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _0862a3_jump
		mov    %esi,_0e751c_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0862b7_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _0862e8_jump
		imul   _0e751c_data,%eax
		mov    $0x0003e8,%ebx
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %ebx
		test   %eax,%eax
		jne    _0862d9_jump
		inc    %eax

	_0862d9_jump:
		mov    %eax,%esi
		xor    %eax,%eax
		mov    %al,%bl

	_0862df_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _0862df_jump

	_0862e8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0862ed_func:
		test   %edx,%edx
		jne    _0862f4_jump
		xor    %eax,%eax

	_0862f3_jump:
		ret    

	_0862f4_jump:
		test   %edx,%edx
		je     _0862f3_jump



_0862f8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    %bl,%al
		call   _0877c0_func
		cmp    $0x000100,%ebx
		jae    _086352_jump
		xor    %eax,%eax
		mov    _0bdc2b_data,%al
		cmp    $0x000003,%eax
		jl     _086338_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000050,%ebx
		jne    _086328_jump
		mov    $0x00000e,%dl
		jmp    _086338_jump

	_086328_jump:
		cmp    $0x000022,%ebx
		jl     _086331_jump
		mov    $0x000013,%dl
		jmp    _086338_jump

	_086331_jump:
		cmp    $0x000020,%ebx
		jl     _086338_jump
		mov    $0x000005,%dl

	_086338_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000013,%eax
		jle    _086343_jump
		mov    $0x000013,%dl

	_086343_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    _0bdbd9_data(%ebx),%eax
		sar    $0x000018,%eax
		jmp    _08635c_jump

	_086352_jump:
		mov    %ebx,%eax
		shr    $0x000008,%eax
		and    $0x0000ff,%eax

	_08635c_jump:
		call   _08779d_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_086369_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0bdc0c_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _08a1df_func
		cmp    %eax,%edx
		jae    _08638a_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _08638c_jump

	_08638a_jump:
		xor    %eax,%eax

	_08638c_jump:
		mov    _0bdc0c_data,%edx
		add    %edx,%eax
		mov    %eax,_0bdc10_data
		call   _08aa35_func
		mov    _0e752c_data,%edx
		mov    _0e7528_data,%eax
		call   _01836c_func
		call   _080512_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_0863b8_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_0863bf_jump:
		ds mov $_0c1e8c_data,%esi
		ds mov $_0c1ebc_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_0863cf_jump:
		cmp    %edi,%esi
		jae    _0863e7_jump
		cmpb   $0x000002,(%esi)
		je     _0863e2_jump
		cmp    %al,0x000001(%esi)
		ja     _0863e2_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_0863e2_jump:
		add    $0x000006,%esi
		jmp    _0863cf_jump

	_0863e7_jump:
		cmp    %edi,%ebx
		je     _0863fd_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _0863f8_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_0863f8_jump:
		movb   $0x000002,(%ebx)
		jmp    _0863bf_jump

	_0863fd_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_086403_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_08640b_jump:
		ds mov $_0c1ebc_data,%esi
		ds mov $_0c1ec2_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_08641b_jump:
		cmp    %edi,%esi
		jae    _086433_jump
		cmpb   $0x000002,(%esi)
		je     _08642e_jump
		cmp    0x000001(%esi),%al
		ja     _08642e_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_08642e_jump:
		add    $0x000006,%esi
		jmp    _08641b_jump

	_086433_jump:
		cmp    %edi,%ebx
		je     _08644d_jump
		cmp    %dh,%al
		ja     _086448_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _086448_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_086448_jump:
		movb   $0x000002,(%ebx)
		jmp    _08640b_jump

	_08644d_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_086452_func:
		ret    



_086453_func:
		push   %ebx
		push   %edx
		mov    $_08aa9e_func,%edx
		mov    $_08abe7_func,%ebx
		mov    %edx,_0bfd84_data
		mov    %ebx,_0bfd88_data
		pop    %edx
		pop    %ebx
		ret    



_08646e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		mov    _0bdbf8_data,%eax
		xor    %edx,%edx
		call   _08652f_func
		mov    (%esp),%ecx
		inc    %eax
		mov    _0bdbf8_data,%edx
		mov    %eax,0x000008(%esp)
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _086012_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _086508_jump
		mov    %esp,%ebx
		mov    _0bdbf8_data,%esi
		add    %ecx,%eax
		mov    %ebp,%edi
		mov    %eax,_0bd9a4_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0bd9a4_data,%ecx
		mov    _0bdbfc_data,%eax
		lea    0x000004(%ecx),%edx
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		mov    0x000004(%esp),%esi
		call   _08652f_func
		mov    _0bd9a4_data,%ecx
		mov    0x000008(%esp),%eax
		add    %esi,%ecx
		mov    %eax,_0bd9a0_data
		movl   $0x000000,(%ecx)
		jmp    _086512_jump

	_086508_jump:
		mov    %eax,_0bd9a4_data
		mov    %eax,_0bd9a0_data

	_086512_jump:
		mov    0x000008(%esp),%eax
		mov    %eax,_0e7528_data
		mov    _0bd9a4_data,%eax
		mov    %eax,_0e752c_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08652f_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e7530_data,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		xor    %edx,%edx
		mov    %edx,0x000004(%esp)

	_086546_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000020,%ebx
		je     _086554_jump
		cmp    $0x000009,%ebx
		jne    _086557_jump

	_086554_jump:
		inc    %eax
		jmp    _086546_jump

	_086557_jump:
		test   %bl,%bl
		je     _086629_jump
		xor    %dl,%dl
		cmp    $0x000022,%ebx
		jne    _086569_jump
		mov    $0x000001,%dl
		inc    %eax

	_086569_jump:
		mov    %eax,(%esp)
		mov    %eax,%ebx

	_08656e_jump:
		xor    %ecx,%ecx
		mov    (%eax),%cl
		cmp    $0x000022,%ecx
		jne    _086597_jump
		cmp    $0x000001,%dl
		je     _0865f6_jump
		test   %esi,%esi
		jne    _086597_jump
		test   %dl,%dl
		jne    _08658d_jump
		mov    $0x000002,%dl

	_08658a_jump:
		inc    %eax
		jmp    _08656e_jump

	_08658d_jump:
		cmp    $0x000002,%dl
		jne    _086597_jump
		inc    %eax
		xor    %dl,%dl
		jmp    _08656e_jump

	_086597_jump:
		xor    %ecx,%ecx
		mov    (%eax),%cl
		cmp    $0x000020,%ecx
		je     _0865a5_jump
		cmp    $0x000009,%ecx
		jne    _0865a9_jump

	_0865a5_jump:
		test   %dl,%dl
		je     _0865f6_jump

	_0865a9_jump:
		mov    (%eax),%dh
		test   %dh,%dh
		je     _0865f6_jump
		xor    %ecx,%ecx
		mov    %dh,%cl
		cmp    $0x00005c,%ecx
		jne    _0865e7_jump
		test   %esi,%esi
		jne    _0865c8_jump
		xor    %ecx,%ecx
		mov    0x000001(%eax),%cl
		cmp    $0x000022,%ecx

	_0865c4_jump:
		jne    _0865e7_jump
		jmp    _0865e6_jump

	_0865c8_jump:
		cmp    $0x000001,%dl
		jne    _0865dc_jump
		xor    %ecx,%ecx
		mov    0x000001(%eax),%cl
		cmp    $0x000022,%ecx
		je     _0865e6_jump
		cmp    $0x00005c,%ecx
		jmp    _0865c4_jump

	_0865dc_jump:
		xor    %ecx,%ecx
		mov    0x000001(%eax),%cl
		cmp    $0x000022,%ecx
		jne    _0865e7_jump

	_0865e6_jump:
		inc    %eax

	_0865e7_jump:
		test   %edi,%edi
		je     _08658a_jump
		mov    (%eax),%cl
		inc    %eax
		mov    %cl,(%ebx)
		inc    %ebx
		jmp    _08656e_jump

	_0865f6_jump:
		test   %edi,%edi
		je     _08661c_jump
		mov    0x000004(%esp),%ecx
		mov    (%esp),%edx
		mov    %edx,(%edi,%ecx,4)
		inc    %ecx
		mov    %ecx,0x000004(%esp)
		mov    (%eax),%cl
		test   %cl,%cl
		jne    _086613_jump
		mov    %cl,(%ebx)
		jmp    _086629_jump

	_086613_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		jmp    _086546_jump

	_08661c_jump:
		incl   0x000004(%esp)
		cmpb   $0x000000,(%eax)
		jne    _086554_jump

	_086629_jump:
		mov    %eax,0x000000(%ebp)
		mov    0x000004(%esp),%eax
		mov    %esi,_0e7530_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08663e_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x000124,%esp
		mov    %ebx,%esi
		mov    %ecx,0x00011c(%esp)
		xor    %bl,%bl
		mov    %eax,0x000100(%esp)
		mov    %bl,0x000120(%esp)
		mov    %bl,0x000114(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000110(%esp)
		mov    $0x000004,%ebp
		jmp    _086710_jump

	_08667d_jump:
		lea    0x000100(%esp),%ebx
		mov    %esi,%edx
		call   _0869dd_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x000115(%esp)
		test   %al,%al
		je     _0869cb_jump
		xor    %eax,%eax
		mov    0x000115(%esp),%al
		cmp    $0x00006e,%eax
		jne    _0867da_jump
		mov    0x000114(%esp),%al
		xor    %edx,%edx
		and    $0x000020,%al
		mov    %al,%dl
		mov    0x000114(%esp),%al
		and    $0x000040,%al
		mov    0x000114(%esp),%ah
		and    $0x000080,%ah
		test   %edx,%edx
		je     _086747_jump
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _0866f7_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_0866eb_jump:
		mov    0x000110(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _086710_jump

	_0866f7_jump:
		and    $0x0000ff,%eax
		je     _08673c_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_086707_jump:
		mov    0x000110(%esp),%eax
		mov    %eax,(%edx)

	_086710_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _0869cb_jump
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%edx
		je     _08667d_jump
		mov    %eax,%edi
		lea    0x000100(%esp),%eax
		call   *0x00011c(%esp)
		jmp    _086710_jump

	_08673c_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _086707_jump

	_086747_jump:
		mov    0x000114(%esp),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _0867a2_jump
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _086778_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000110(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _086710_jump

	_086778_jump:
		and    $0x0000ff,%eax
		je     _086797_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_086788_jump:
		mov    0x000110(%esp),%eax
		mov    %ax,(%edx)
		jmp    _086710_jump

	_086797_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _086788_jump

	_0867a2_jump:
		mov    %ah,%dl
		test   %edx,%edx
		je     _0867b7_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _0866eb_jump

	_0867b7_jump:
		and    $0x0000ff,%eax
		je     _0867cc_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _086707_jump

	_0867cc_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _086707_jump

	_0867da_jump:
		lea    0x000120(%esp),%ecx
		lea    0x000100(%esp),%ebx
		mov    %esp,%eax
		mov    %esi,%edx
		call   _086d1b_func
		mov    %eax,%ebx
		mov    0x000114(%esp),%al
		mov    %edx,%es
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _08683d_jump
		mov    0x000116(%esp),%al
		cmp    $0x000020,%eax
		jne    _08683d_jump

	_086811_jump:
		mov    0x000104(%esp),%eax
		dec    %eax
		mov    %eax,0x000104(%esp)
		test   %eax,%eax
		jl     _08683d_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    0x000116(%esp),%dl
		call   *0x00011c(%esp)
		jmp    _086811_jump

	_08683d_jump:
		lea    0x000117(%esp),%ecx

	_086844_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _08685f_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000100(%esp),%eax
		inc    %ecx
		call   *0x00011c(%esp)
		jmp    _086844_jump

	_08685f_jump:
		mov    0x00010c(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x00010c(%esp)
		test   %eax,%eax
		je     _086889_jump
		mov    $0x000030,%edx
		lea    0x000100(%esp),%eax
		call   *0x00011c(%esp)
		jmp    _08685f_jump

	_086889_jump:
		mov    0x000114(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _0868d1_jump
		mov    0x000116(%esp),%al
		cmp    $0x000020,%eax
		je     _0868d1_jump

	_0868a5_jump:
		mov    0x000104(%esp),%eax
		dec    %eax
		mov    %eax,0x000104(%esp)
		test   %eax,%eax
		jl     _0868d1_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    0x000116(%esp),%dl
		call   *0x00011c(%esp)
		jmp    _0868a5_jump

	_0868d1_jump:
		xor    %eax,%eax
		mov    0x000115(%esp),%al
		cmp    $0x000073,%eax
		je     _0868e4_jump
		cmp    $0x000053,%eax
		jne    _086950_jump

	_0868e4_jump:
		mov    0x000114(%esp),%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _086925_jump

	_0868f4_jump:
		mov    0x000108(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000108(%esp)
		test   %eax,%eax
		je     _08697b_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x00011c(%esp)
		add    $0x000002,%ebx
		jmp    _0868f4_jump

	_086925_jump:
		mov    0x000108(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000108(%esp)
		test   %eax,%eax
		je     _08697b_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x00011c(%esp)
		inc    %ebx
		jmp    _086925_jump

	_086950_jump:
		mov    0x000108(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000108(%esp)
		test   %eax,%eax
		je     _08697b_jump
		xor    %edx,%edx
		lea    0x000100(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x00011c(%esp)
		inc    %ebx
		jmp    _086950_jump

	_08697b_jump:
		mov    0x000114(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		je     _086710_jump
		cmpl   $0x000000,0x000104(%esp)
		jle    _086710_jump

	_08699d_jump:
		mov    0x000104(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000104(%esp)
		test   %eax,%eax
		je     _086710_jump
		mov    $0x000020,%edx
		lea    0x000100(%esp),%eax
		call   *0x00011c(%esp)
		jmp    _08699d_jump

	_0869cb_jump:
		mov    0x000110(%esp),%eax
		add    $0x000124,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_0869dd_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _086b1b_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _086a2b_jump
		cmp    $0x000039,%edx
		jg     _086a2b_jump

	_086a0a_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		inc    %eax
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _086a56_jump
		cmp    $0x000039,%edx
		jle    _086a0a_jump
		jmp    _086a56_jump

	_086a2b_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _086a56_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _086a55_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dl
		neg    %edi
		or     $0x000008,%dl
		mov    %edi,0x000004(%ebx)
		mov    %dl,0x000014(%ebx)

	_086a55_jump:
		inc    %eax

	_086a56_jump:
		movl   $0xffffffff,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002e,%edx
		jne    _086aaf_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _086a92_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _086a8f_jump
		movl   $0xffffffff,0x000008(%ebx)

	_086a8f_jump:
		inc    %eax
		jmp    _086aaf_jump

	_086a92_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _086aaf_jump
		cmp    $0x000039,%edx
		jg     _086aaf_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _086a92_jump

	_086aaf_jump:
		mov    (%eax),%dl
		lea    0x000001(%eax),%ecx
		cmp    $0x00004e,%dl
		jb     _086ad4_jump
		jbe    _086b11_jump
		cmp    $0x00006c,%dl
		jb     _086acb_jump
		jbe    _086ae4_jump
		cmp    $0x000077,%dl
		je     _086ae4_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086acb_jump:
		cmp    $0x000068,%dl
		je     _086af2_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086ad4_jump:
		cmp    $0x000046,%dl
		jb     _086b17_jump
		jbe    _086b07_jump
		cmp    $0x00004c,%dl
		je     _086af8_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086ae4_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000020,%dh
		inc    %eax

	_086aeb_jump:
		mov    %dh,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086af2_jump:
		orb    $0x000010,0x000014(%ebx)
		jmp    _086b15_jump

	_086af8_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000040,%dl
		mov    %ecx,%eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_086b07_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000080,%dh
		mov    %ecx,%eax
		jmp    _086aeb_jump

	_086b11_jump:
		orb    $0x000040,0x000014(%ebx)

	_086b15_jump:
		mov    %ecx,%eax

	_086b17_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086b1b_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movb   $0x000000,0x000014(%edx)

	_086b23_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00002d,%eax
		jne    _086b32_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _086b72_jump

	_086b32_jump:
		cmp    $0x000023,%eax
		jne    _086b3d_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _086b72_jump

	_086b3d_jump:
		cmp    $0x00002b,%eax
		jne    _086b52_jump
		mov    0x000014(%edx),%cl
		or     $0x000004,%cl
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000014(%edx)
		jmp    _086b72_jump

	_086b52_jump:
		cmp    $0x000020,%eax
		jne    _086b69_jump
		mov    0x000014(%edx),%al
		and    $0x000004,%al
		and    $0x0000ff,%eax
		jne    _086b72_jump
		orb    $0x000002,0x000014(%edx)
		jmp    _086b72_jump

	_086b69_jump:
		cmp    $0x000030,%eax
		jne    _086b75_jump
		movb   $0x000030,0x000016(%edx)

	_086b72_jump:
		inc    %ebx
		jmp    _086b23_jump

	_086b75_jump:
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_086b7a_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    %eax,%edx
		mov    %ecx,%es
		xor    %eax,%eax

	_086b88_jump:
		mov    %edx,%esi
		mov    %es:(%esi),%bl
		inc    %edx
		test   %bl,%bl
		je     _086b99_jump
		cmp    %edi,%eax
		je     _086b99_jump
		inc    %eax
		jmp    _086b88_jump

	_086b99_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086b9e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %ecx,%ebx
		mov    %edx,%es
		xor    %eax,%eax

	_086bac_jump:
		mov    %ebx,%ecx
		mov    %es:(%ecx),%di
		add    $0x000002,%ebx
		test   %di,%di
		je     _086b99_jump
		cmp    %esi,%eax
		je     _086b99_jump
		inc    %eax
		jmp    _086bac_jump



_086bc1_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _081256_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ebp,%esi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _086bfe_jump

	_086bf7_jump:
		dec    %edx
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_086bfe_jump:
		cmp    %esi,%edx
		jne    _086bf7_jump
		lea    (%eax,%ebp,1),%edx

	_086c05_jump:
		test   %eax,%eax
		jl     _086c10_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _086c05_jump

	_086c10_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086c1f_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _086c3b_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_086c3b_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _086c48_jump
		movl   $0x000004,0x000008(%esi)

	_086c48_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _081256_func
		mov    %ecx,%ebx

	_086c5d_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _086c6a_jump
		mov    %edx,%ecx
		jmp    _086c5d_jump

	_086c6a_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _086c9c_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _086c94_jump

	_086c79_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_086c94_jump:
		cmp    0x000008(%esi),%eax
		jl     _086c79_jump
		movb   $0x000000,(%ecx)

	_086c9c_jump:
		mov    (%esp),%eax
		xor    %al,%al
		and    $0x000080,%ah
		and    $0x00ffff,%eax
		je     _086d0d_jump

	_086caf_jump:
		cmp    %ebx,%ecx
		jne    _086cec_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_086cb9_jump:
		xor    %edx,%edx
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%edx
		jne    _086cc9_jump
		mov    %eax,%ecx
		jmp    _086cb9_jump

	_086cc9_jump:
		cmp    $0x00002e,%edx
		jne    _086ce3_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		movb   $0x00002e,(%eax)

	_086cd7_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000030,%eax
		jne    _086ce3_jump
		inc    %ecx
		jmp    _086cd7_jump

	_086ce3_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _086d0d_jump

	_086cec_jump:
		dec    %ecx
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x00002e,%eax
		jne    _086cf7_jump
		dec    %ecx

	_086cf7_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000039,%eax
		je     _086d08_jump
		mov    %al,%dl
		inc    %dl
		mov    %dl,(%ecx)
		jmp    _086d0d_jump

	_086d08_jump:
		movb   $0x000030,(%ecx)
		jmp    _086caf_jump

	_086d0d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086d14_func:
		call   *_0bfd84_data
		ret    



_086d1b_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %edx,%eax
		movl   $0x000001,(%esp)
		mov    %ds,%edx
		mov    %edi,%ecx
		mov    %edx,%es
		mov    0x000015(%ebx),%dl
		movl   $0x000000,0x00000c(%ebx)
		cmp    $0x000069,%dl
		jb     _086d64_jump
		jbe    _086db5_jump
		cmp    $0x000075,%dl
		jb     _086d5f_jump
		jbe    _086d72_jump
		cmp    $0x000078,%dl

	_086d58_jump:
		je     _086d72_jump
		jmp    _086dbf_jump

	_086d5f_jump:
		cmp    $0x00006f,%dl
		jmp    _086d58_jump

	_086d64_jump:
		cmp    $0x000058,%dl
		jb     _086dbf_jump
		jbe    _086d72_jump
		cmp    $0x000064,%dl
		je     _086db5_jump
		jmp    _086dbf_jump

	_086d72_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _086d8c_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%ebp
		jmp    _086db1_jump

	_086d8c_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _086da7_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		movzwl -0x000004(%ebp),%ebp
		jmp    _086db1_jump

	_086da7_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ebp

	_086db1_jump:
		andb   $0x0000f9,0x000014(%esi)

	_086db5_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _086dbf_jump
		movb   $0x000020,0x000016(%esi)

	_086dbf_jump:
		mov    0x000015(%esi),%dl
		mov    $0x00000a,%ebx
		cmp    $0x000065,%dl
		jb     _086e2c_jump
		jbe    _086eac_jump
		cmp    $0x00006f,%dl
		jb     _086e13_jump
		jbe    _086ec2_jump
		cmp    $0x000073,%dl
		jb     _086e05_jump
		jbe    _086f57_jump
		cmp    $0x000075,%dl
		jb     _087129_jump
		jbe    _087043_jump
		cmp    $0x000078,%dl
		je     _087020_jump
		jmp    _087129_jump

	_086e05_jump:
		cmp    $0x000070,%dl
		je     _087066_jump
		jmp    _087129_jump

	_086e13_jump:
		cmp    $0x000067,%dl
		jb     _086e7a_jump
		jbe    _086eac_jump
		cmp    $0x000069,%dl
		je     _086f06_jump
		jmp    _087129_jump

	_086e2c_jump:
		cmp    $0x000050,%dl
		jb     _086e64_jump
		jbe    _087066_jump
		cmp    $0x000058,%dl
		jb     _086e56_jump
		jbe    _087020_jump
		cmp    $0x000063,%dl
		jb     _087129_jump
		jbe    _0870fd_jump
		jmp    _086f06_jump

	_086e56_jump:
		cmp    $0x000053,%dl
		je     _086f57_jump
		jmp    _087129_jump

	_086e64_jump:
		cmp    $0x000046,%dl
		jb     _086e75_jump
		jbe    _086e7a_jump
		cmp    $0x000047,%dl

	_086e6e_jump:
		je     _086eac_jump
		jmp    _087129_jump

	_086e75_jump:
		cmp    $0x000045,%dl
		jmp    _086e6e_jump

	_086e7a_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _086eac_jump
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _086c1f_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _086efc_jump

	_086eac_jump:
		mov    %esi,%ebx
		mov    %eax,%edx
		mov    %edi,%eax
		call   _086d14_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _086efc_jump

	_086ec2_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _086ed7_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_086ed7_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _0812e0_func

	_086ee0_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _086ef3_jump
		xor    %eax,%eax
		mov    (%edi),%al
		cmp    $0x000030,%eax
		jne    _086ef3_jump
		movb   $0x000000,%es:(%ecx)

	_086ef3_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_086efc_jump:
		call   _086b7a_func
		jmp    _087152_jump

	_086f06_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _086f27_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx

	_086f20_jump:
		call   _0812e0_func
		jmp    _086ee0_jump

	_086f27_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _086f44_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    %edi,%edx
		movswl -0x000004(%ebp),%eax
		jmp    _086f20_jump

	_086f44_jump:
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx
		call   _081256_func
		jmp    _086ee0_jump

	_086f57_jump:
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _086f88_jump
		mov    (%eax),%edi
		add    $0x000008,%edi
		mov    %edi,(%eax)
		mov    -0x000008(%edi),%ecx
		mov    -0x000004(%edi),%dx
		test   %ecx,%ecx
		jne    _086f7c_jump
		test   %dx,%dx
		je     _086f80_jump

	_086f7c_jump:
		mov    %edx,%es
		jmp    _086fbe_jump

	_086f80_jump:
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx
		jmp    _086fbc_jump

	_086f88_jump:
		mov    0x000014(%esi),%dl
		and    $0x000040,%dl
		and    $0x0000ff,%edx
		je     _086fa8_jump
		mov    (%eax),%ecx
		add    $0x000004,%ecx
		mov    %ecx,(%eax)
		mov    -0x000004(%ecx),%ecx
		test   %ecx,%ecx
		je     _086f80_jump

	_086fa4_jump:
		mov    %ds,%eax
		jmp    _086fbc_jump

	_086fa8_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _086fa4_jump
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx

	_086fbc_jump:
		mov    %eax,%es

	_086fbe_jump:
		mov    0x000014(%esi),%bl
		xor    %ebp,%ebp
		xor    %eax,%eax
		and    $0x0000f9,%bl
		mov    %ebp,(%esp)
		mov    0x000015(%esi),%al
		mov    %bl,0x000014(%esi)
		cmp    $0x000053,%eax
		jne    _086ff8_jump
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _086fef_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _087152_jump

	_086fef_jump:
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _087152_jump

	_086ff8_jump:
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _087014_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _086b9e_func
		jmp    _087152_jump

	_087014_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _086efc_jump

	_087020_jump:
		mov    0x000014(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _08703e_jump
		test   %ebp,%ebp
		je     _08703e_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_08703e_jump:
		mov    $0x000010,%ebx

	_087043_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _081296_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000058,%eax
		jne    _086ee0_jump
		mov    %edi,%eax
		call   _087204_func
		jmp    _086ee0_jump

	_087066_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _08708a_jump
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _087083_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _08708a_jump

	_087083_jump:
		movl   $0x000008,0x000004(%esi)

	_08708a_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		mov    -0x000004(%ebx),%ebp
		test   %edx,%edx
		je     _0870d5_jump
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%edx
		mov    -0x000004(%ebx),%eax
		mov    $0x000004,%ebx
		and    $0x00ffff,%eax
		call   _086bc1_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _0870de_jump

	_0870d5_jump:
		mov    $0x000008,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax

	_0870de_jump:
		call   _086bc1_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000050,%eax
		jne    _086ef3_jump
		mov    %edi,%eax
		call   _087204_func
		jmp    _086ef3_jump

	_0870fd_jump:
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    -0x000004(%ebp),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f9,%dh
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		mov    %dh,0x000014(%esi)
		jmp    _087152_jump

	_087129_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_087152_jump:
		cmpl   $0x000000,(%esp)
		je     _0871a7_jump
		xor    %edx,%edx
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%edx
		jne    _08716a_jump
		inc    %ecx
		movb   $0x00002d,0x000017(%esi)
		dec    %eax
		jmp    _087190_jump

	_08716a_jump:
		mov    0x000014(%esi),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _08717e_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _087190_jump

	_08717e_jump:
		mov    0x000014(%esi),%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		je     _087194_jump
		movb   $0x00002b,0x000017(%esi)

	_087190_jump:
		movb   $0x000000,0x000018(%esi)

	_087194_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _0871a0_jump
		mov    %eax,0x000008(%esi)
		jmp    _0871a7_jump

	_0871a0_jump:
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esi)

	_0871a7_jump:
		xor    %edx,%edx
		mov    0x000016(%esi),%dl
		cmp    $0x00002a,%edx
		jne    _0871be_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_0871be_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _0871ca_jump
		cmp    %ebx,%eax
		jge    _0871d7_jump

	_0871ca_jump:
		xor    %edx,%edx
		mov    0x000015(%esi),%dl
		cmp    $0x000063,%edx
		je     _0871d7_jump
		mov    %eax,0x000008(%esi)

	_0871d7_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _086b7a_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_087204_func:
		push   %edx
		mov    %eax,%edx

	_087207_jump:
		cmpb   $0x000000,(%edx)
		je     _08721a_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _08ac0a_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _087207_jump

	_08721a_jump:
		pop    %edx
		ret    



_0872be_func:
		push   %ebx
		mov    %edx,%ebx
		call   _0872c8_func
		pop    %ebx
		ret    



_0872c8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _0872f4_jump
		mov    $0x000001,%esi
		jmp    _08732e_jump

	_0872f4_jump:
		test   $0x000080,%cl
		je     _087300_jump
		mov    $0x000002,%esi
		jmp    _08732e_jump

	_087300_jump:
		test   $0x000001,%ch
		je     _08730c_jump
		mov    $0x000003,%esi
		jmp    _08732e_jump

	_08730c_jump:
		test   $0x000008,%ch
		je     _087318_jump
		mov    $0x000004,%esi
		jmp    _08732e_jump

	_087318_jump:
		test   $0x000002,%ch
		je     _087324_jump
		mov    $0x000006,%esi
		jmp    _08732e_jump

	_087324_jump:
		test   $0x000004,%ch
		je     _08732e_jump
		mov    $0x000005,%esi

	_08732e_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0bdc30_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _08735d_jump
		mov    _0c1d44_data,%eax
		mov    _0c1d48_data,%edx
		call   _080ae6_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _08739f_jump

	_08735d_jump:
		test   $0x000020,%ch
		je     _08736c_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _08739f_jump

	_08736c_jump:
		test   $0x000040,%ch
		je     _087380_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _08739f_jump

	_087380_jump:
		test   $0x000080,%ch
		je     _087394_jump
		mov    _0c1d44_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0c1d48_data,%eax
		jmp    _08739c_jump

	_087394_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_08739c_jump:
		mov    %eax,-0x00000c(%ebp)

	_08739f_jump:
		lea    -0x000028(%ebp),%eax
		call   _08ac66_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_0873ae_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _087499_func
		mov    %esp,%eax
		call   _0873cd_func
		mov    %esp,%eax
		call   _087519_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_0873cc_func:
		ret    



_0873cd_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _087413_jump
		or     %edx,%edx
		jne    _087408_jump
		add    %cx,%cx
		je     _087493_jump

	_0873ec_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_0873ff_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _087493_jump

	_087408_jump:
		cmp    $0x007fff,%cx
		je     _087493_jump

	_087413_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _0873ff_jump
		add    %cx,%cx
		jb     _0873ff_jump
		shr    %cx
		je     _087430_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _0873ec_jump

	_087430_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _087446_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_087446_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _087479_jump
		dec    %edx

	_08745c_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _08746e_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _08745c_jump

	_08746e_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _087482_jump

	_087479_jump:
		cmp    %esi,%eax
		je     _08748b_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_087482_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_08748b_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_087493_jump:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_087499_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _0874e4_jump
		cmp    $0x0007ff,%cx
		je     _0874bb_jump
		add    $0x003c00,%cx
		jmp    _0874dc_jump

	_0874bb_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _0874c9_jump
		or     %eax,%eax

	_0874c9_jump:
		je     _0874dc_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _0873cc_func
		pop    %eax
		or     $0x40000000,%edx

	_0874dc_jump:
		or     $0x80000000,%edx
		jmp    _087509_jump

	_0874e4_jump:
		or     %edx,%edx
		jne    _0874f0_jump
		or     %eax,%eax
		jne    _0874f0_jump
		sub    %ecx,%ecx
		jmp    _087509_jump

	_0874f0_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _0874fd_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_0874fd_jump:
		or     %edx,%edx
		js     _087509_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _0874fd_jump

	_087509_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_087519_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _087546_jump
		jne    _087535_jump
		add    %esi,%esi

	_087535_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _087546_jump
		mov    $0x80000000,%edx
		inc    %cx

	_087546_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _08757c_jump
		or     %cx,%cx
		jne    _08756b_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _087575_jump

	_08756b_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_087575_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _0875dc_jump

	_08757c_jump:
		cmp    $0x00c400,%cx
		jb     _0875b6_jump
		cmp    $0x00ffcc,%cx
		jl     _0875b0_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _08759e_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_08759e_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _0875b4_jump

	_0875b0_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_0875b4_jump:
		jmp    _0875dc_jump

	_0875b6_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _0875dc_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _0873cc_func
		pop    %eax

	_0875dc_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_0875e0_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _087625_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_087625_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_087634_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _087660_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_087660_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _0876f8_jump
		sub    %edi,%edi

	_087692_jump:
		cmp    %edx,%ecx
		jne    _08769a_jump
		cmp    %eax,%ebx
		je     _08769c_jump

	_08769a_jump:
		jae    _0876a1_jump

	_08769c_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_0876a1_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _0876c2_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _08769c_jump
		cmp    $0x100000,%edx
		jae    _087692_jump
		cmc    
		jmp    _0876a1_jump

	_0876c2_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _0876ce_jump
		or     %edx,%edx
		jne    _0876ce_jump
		jmp    _0876f6_jump

	_0876ce_jump:
		test   $0x200000,%edx
		jne    _0876e2_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _0876ce_jump

	_0876e2_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_0876f6_jump:
		jmp    _0876fc_jump

	_0876f8_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_0876fc_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _087712_jump
		or     %esi,%edx

	_087712_jump:
		xor    %ecx,%esi
		jns    _087718_jump
		neg    %edi

	_087718_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_08772d_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_08773f_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _07ff01_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _07fd4a_func
		dec    %edi
		jne    _08773f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_087762_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07ff01_func
		mov    -0x00000c(%ebp),%ecx
		mov    -0x000010(%ebp),%ebx
		call   _08772d_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07ff01_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_087798_func:
		mov    $0x00000d,%eax



_08779d_func:
		push   %edx
		mov    %eax,%edx
		call   _0804e8_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_0877a9_func:
		mov    $0x00000e,%eax
		jmp    _08779d_func



_0877c0_func:
		push   %edx
		mov    %eax,%edx
		call   _0804ee_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_0877cc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _0877dc_jump



_0877d5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_0877dc_jump:
		mov    %al,%dl
		fldt   _0bdc90_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _0877fe_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _0877fe_jump
		mov    $0x000004,%dl

	_0877fe_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _0877fe_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _087815_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_087815_jump:
		test   $0x000040,%ah
		je     _08781c_jump
		or     $0x000002,%al

	_08781c_jump:
		test   $0x000001,%ah
		je     _087823_jump
		add    $0x000004,%al

	_087823_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _08783d_jump
		fchs   

	_08783d_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _087845_jump
		cmp    $0x000003,%al

	_087845_jump:
		jne    _087862_jump
		fstp   %st(1)
		testb  $0x000001,_0bdcb0_data
		jne    _087856_jump
		fdivrp %st,%st(1)
		jmp    _087860_jump

	_087856_jump:
		mov    $0x00000d,%eax
		call   _087a3b_func

	_087860_jump:
		jmp    _08787b_jump

	_087862_jump:
		testb  $0x000001,_0bdcb0_data
		jne    _08786f_jump
		fdivrp %st,%st(1)
		jmp    _087879_jump

	_08786f_jump:
		mov    $0x00000d,%eax
		call   _087a3b_func

	_087879_jump:
		fstp   %st(1)

	_08787b_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_087924_func:
		fldt   0x000010(%esp)
		fldt   0x000004(%esp)

	_08792c_jump:
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		jae    _0879be_jump
		xor    $0xe000000,%eax
		test   $0xe000000,%eax
		je     _087947_jump
		fdivrp %st,%st(1)
		ret    

	_087947_jump:
		shr    $0x00001c,%eax
		cmpb   $0x000000,_0c1ec4_data(%eax)
		jne    _087956_jump
		fdivrp %st,%st(1)
		ret    

	_087956_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		je     _0879c8_jump
		cmp    $0x007fff,%eax
		je     _0879c8_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		cmp    $0x000001,%eax
		je     _0879a7_jump
		fmuls  _0c1ed4_data
		fxch   %st(1)
		fmuls  _0c1ed4_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_0879a7_jump:
		fmuls  _0c1ed8_data
		fxch   %st(1)
		fmuls  _0c1ed8_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_0879be_jump:
		mov    0x000004(%esp),%eax
		or     0x000008(%esp),%eax
		jne    _0879cb_jump

	_0879c8_jump:
		fdivrp %st,%st(1)
		ret    

	_0879cb_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		jne    _0879c8_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		je     _087a0c_jump
		cmp    $0x007fff,%eax
		je     _087a34_jump
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jae    _087a34_jump
		jmp    _087a14_jump

	_087a0c_jump:
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jb     _087a34_jump

	_087a14_jump:
		fxch   %st(1)
		fstp   %st(0)
		fld    %st(0)
		fmuls  _0c1edc_data
		fstpt  0x000004(%esp)
		fldt   0x000010(%esp)
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		jmp    _08792c_jump

	_087a34_jump:
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    



_087a3b_func:
		sub    $0x00002c,%esp
		jmp    *_0c1ee0_data(,%eax,4)



_087a45_func:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_087a4b_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087a50_jump:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_087a56_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087a5b_jump:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_087a61_func:
		fdivrp %st,%st(0)
		add    $0x00002c,%esp
		ret    



_087a67_func:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_087a6d_func:
		fdivp  %st,%st(0)
		add    $0x00002c,%esp
		ret    



_087a73_func:
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fldt   0x000020(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_087a8f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087a94_jump:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fldt   0x00000c(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_087aaa_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087aaf_jump:
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087acb_func:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _087924_func
		add    $0x00002c,%esp
		ret    



_087adb_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _087924_func
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087aef_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _087924_func
		add    $0x00002c,%esp
		ret    



_087aff_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_087b1f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087b24_jump:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_087b3e_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087b43_jump:
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087b63_func:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_087b77_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087b8f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_087ba3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_087bc3_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087bc8_jump:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_087be2_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087be7_jump:
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087c07_func:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_087c1b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087c33_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_087c47_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_087c67_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087c6c_jump:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_087c86_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087c8b_jump:
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087cab_func:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_087cbf_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087cd7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_087ceb_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_087d0b_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087d10_jump:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_087d2a_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087d2f_jump:
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087d4f_func:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_087d63_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087d7b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_087d8f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_087daf_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087db4_jump:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_087dce_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087dd3_jump:
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087df3_func:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_087e07_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087e1f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_087e33_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_087e53_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087e58_jump:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_087e72_func:
		add    $0x00002c,%esp
		int    $0x000006

	_087e77_jump:
		fxch   %st(7)
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _087924_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_087e97_func:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _087924_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_087eab_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_087ec3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _087924_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_087ed7_func:
		sub    $0x00002c,%esp
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _087924_func
		add    $0x00002c,%esp
		ret    



_087f5c_func:
		push   %eax
		mov    0x00000c(%esp),%eax
		and    $0x7ff00000,%eax
		cmp    $0x7ff00000,%eax
		je     _087fa0_jump
		fnstsw %ax
		and    $0x003800,%eax
		je     _087f83_jump
		fldl   0x000008(%esp)
		call   _087ed7_func
		pop    %eax
		ret    $0x000008

	_087f83_jump:
		fxch   %st(1)
		sub    $0x00000c,%esp
		fstpt  (%esp)
		fldl   0x000014(%esp)
		call   _087ed7_func
		fldt   (%esp)
		fxch   %st(1)
		add    $0x00000c,%esp
		pop    %eax
		ret    $0x000008

	_087fa0_jump:
		fdivl  0x000008(%esp)
		pop    %eax
		ret    $0x000008



_088040_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _088475_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _088075_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _088060_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _088075_jump

	_088060_jump:
		test   $0x000004,%ah
		je     _08806e_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _088075_jump

	_08806e_jump:
		movl   $0x001000,0x000014(%edx)

	_088075_jump:
		mov    0x000014(%edx),%eax
		call   _086012_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _0880a4_jump
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		lea    0x000018(%edx),%eax
		mov    %cl,0x00000d(%edx)
		mov    %cl,%ch
		mov    %eax,0x000008(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _0880a8_jump

	_0880a4_jump:
		orb    $0x000008,0x00000c(%edx)

	_0880a8_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_0880b7_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0880d4_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _0862f8_func

	_0880d4_jump:
		pop    %ecx
		ret    



_0880d6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %ebp,%ebp
		test   $0x000010,%ah
		je     _088162_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _08819a_jump
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		je     _08819a_jump
		mov    %ebx,%edi
		mov    0x000004(%ecx),%esi

	_088110_jump:
		test   %esi,%esi
		je     _08819a_jump
		test   %ebp,%ebp
		jne    _08819a_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    0x000010(%ecx),%eax
		call   _0881c0_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		jne    _088140_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)
		jmp    _08815c_jump

	_088140_jump:
		test   %eax,%eax
		jne    _08815c_jump
		mov    $0x00000c,%eax
		call   _08779d_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%ebp
		mov    %ah,0x00000c(%ecx)

	_08815c_jump:
		add    %edx,%edi
		sub    %edx,%esi
		jmp    _088110_jump

	_088162_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _08819a_jump
		andb   $0x0000ef,0x00000c(%ecx)
		testb  $0x000020,0x00000d(%ecx)
		jne    _08819a_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _08818a_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _0816ab_func

	_08818a_jump:
		cmp    $0xffffffff,%eax
		jne    _08819a_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)

	_08819a_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0881af_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _0816ab_func
		pop    %edx
		pop    %ebx
		ret    



_0881c0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		call   _0882b7_func
		test   $0x000080,%al
		je     _088205_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _088205_jump

	_0881f8_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _0862f8_func
		jmp    _08822c_jump

	_088205_jump:
		mov    %edi,%ecx
		mov    %ebp,%edx
		mov    %esi,%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
		test   %eax,%eax
		jl     _0881f8_jump
		cmp    %edi,%eax
		je     _08822a_jump
		mov    $0x00000c,%eax
		call   _08779d_func

	_08822a_jump:
		mov    %edx,%eax

	_08822c_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_088234_func:
		mov    $0xffffffff,%eax



_088239_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0e7520_data,%edx
		xor    %ebx,%ebx
		jmp    _08825e_jump

	_088248_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _08825c_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _08825c_jump
		call   _0880d6_func

	_08825c_jump:
		mov    (%edx),%edx

	_08825e_jump:
		test   %edx,%edx
		jne    _088248_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_088268_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_088290_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		xor    %dh,%dh
		xor    %eax,%eax
		and    $0x000080,%dl
		mov    %dx,%ax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0882b7_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0bdcb8_data,%eax
		jb     _0882ca_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0882ca_jump:
		cmp    $0x000005,%eax
		jg     _088300_jump
		mov    %eax,%ebx
		mov    _0bdd0c_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _088300_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _088290_func
		test   %eax,%eax
		je     _088300_jump
		mov    _0bdd0c_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_088300_jump:
		mov    _0bdd0c_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08830c_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0bdd0c_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_088322_func:
		jae    _088332_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _0862f8_func
		pop    %eax
		jmp    _088334_jump

	_088332_jump:
		sub    %eax,%eax

	_088334_jump:
		ret    



_088335_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _088357_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _08830c_func
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_088357_jump:
		mov    $0x000004,%eax
		call   _08779d_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08836a_func:
		cmp    $0x000041,%eax
		jl     _088377_jump
		cmp    $0x00005a,%eax
		jg     _088377_jump
		add    $0x000020,%eax

	_088377_jump:
		ret    



_088378_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e7518_data,%esi
		test   %esi,%esi
		je     _0883a0_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0e7518_data
		or     $0x000003,%di
		jmp    _0883e7_jump

	_0883a0_jump:
		mov    $_0bd9c4_data,%ecx
		jmp    _0883c7_jump

	_0883a7_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _0883c4_jump
		mov    $0x000008,%eax
		call   _086012_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _08840c_jump
		mov    $0x000003,%edi
		jmp    _0883e7_jump

	_0883c4_jump:
		add    $0x00001a,%ecx

	_0883c7_jump:
		cmp    $_0bdbcc_data,%ecx
		jb     _0883a7_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _086012_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _08840c_jump
		lea    0x000008(%eax),%ecx

	_0883e7_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _080420_func
		mov    %edi,0x00000c(%ecx)
		mov    _0e7520_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0e7520_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _088418_jump

	_08840c_jump:
		mov    $0x000005,%eax
		call   _08779d_func
		xor    %eax,%eax

	_088418_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08841e_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0e7520_data,%edx

	_088428_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _088453_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _088439_jump
		mov    %eax,%edx
		jmp    _088428_jump

	_088439_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0e7518_data,%edx
		mov    %eax,_0e7518_data
		mov    %edx,(%eax)

	_088453_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_088457_jump:
		push   %edx

	_088458_jump:
		mov    _0e7518_data,%edx
		test   %edx,%edx
		je     _088473_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _08610d_func
		mov    %edx,_0e7518_data
		jmp    _088458_jump

	_088473_jump:
		pop    %edx
		ret    



_088475_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _0884a2_jump
		mov    0x000010(%edx),%eax
		call   _088290_func
		test   %eax,%eax
		je     _0884a2_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _0884a2_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_0884a2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0884a6_func:
		mov    _0bdc00_data,%eax
		ret    

	_0884ac_jump:
		ret    



_0884ad_func:
		push   %ds
		call   _080408_func
		cmpw   $0x000001,_0bfc5e_data
		je     _088508_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0bfc5e_data
		mov    %esp,_0bec4e_data
		data16 mov %ss,_0bec52_data
		lss    _0bec46_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0bfc56_data
		lcall  *_0bec3c_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0bec4e_data,%esp
		movw   $0x000000,_0bfc5e_data

	_088508_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_088529_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfc60_data
		je     _088564_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_088564_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08856f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0bec3c_data
		data16 mov %es,_0bec40_data
		data16 mov %ds,_0bec44_data
		data16 mov %ds,_0bec4a_data
		cmpl   $0x000000,_0bfc60_data
		je     _088626_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bfc64_data
		je     _0885e5_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0bec30_data
		mov    %cx,_0bec34_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_0884ad_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _08860c_jump

	_0885e5_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0bec30_data
		data16 mov %es,_0bec34_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_0884ad_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_08860c_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_088626_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088631_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfc60_data
		je     _088652_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_088652_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08865d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfc60_data
		je     _08867e_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_08867e_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088689_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bfc60_data
		je     _0886fa_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bfc64_data
		je     _0886d1_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0bec34_data,%cx
		mov    _0bec30_data,%edx
		int    $0x000031
		jmp    _0886e8_jump

	_0886d1_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0bec34_data,%cx
		mov    _0bec30_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_0886e8_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_0886fa_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088705_func:
		cmpl   $0x000000,_0bfc60_data
		je     _08875d_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0bfc5e_data
		mov    _0bfc56_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0bec4e_data,%esp
		mov    %eax,_0bfc5a_data
		pop    %eax
		mov    %ax,_0bfc56_data
		push   %eax
		push   %eax
		mov    _0bec30_data,%eax
		mov    %eax,(%esp)
		mov    _0bec34_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0bfc5a_data,%eax
		push   %eax
		mov    _0bfc56_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_08875d_jump:
		ret    

	_08875e_jump:
		ret    



_08875f_func:
		push   %ecx
		push   %eax

	_088761_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _08877b_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _088761_jump

	_08877b_jump:
		pop    %eax
		pop    %ecx
		ret    



_08877e_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_088791_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0887a9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _088791_jump

	_0887a9_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0887b4_jump:
		ret    



_0887b5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _0887e7_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_0887e7_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0887f2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _088824_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_088824_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08882f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0888bd_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0888f3_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088950_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_088967_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _088967_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088980_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0889b6_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088a16_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088a64_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088b6c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088b8f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088be2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088c17_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088c40_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088c66_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088cb7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _088ce1_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_088ce1_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088cec_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _088d16_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_088d16_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088de0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088e40_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088e5d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _088e82_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _088e93_jump

	_088e82_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_088e93_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088e9e_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088ecc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bfd0c_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bfd0c_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0bfd0c_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _088f28_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _088f2d_jump

	_088f28_jump:
		mov    $0x000001,%eax

	_088f2d_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088f38_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bfd0c_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bfd0c_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_088f85_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_089005_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_089037_jump:
		ret    



_089038_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0bfd90_data,%esi
		test   %esi,%esi
		je     _089090_jump
		test   %eax,%eax
		je     _089090_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _08908a_jump

	_089064_jump:
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _08ae7e_func
		test   %eax,%eax
		jne    _089087_jump
		mov    (%ecx,%edi,1),%al
		and    $0x0000ff,%eax
		cmp    $0x00003d,%eax
		jne    _089087_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _089092_jump

	_089087_jump:
		add    $0x000004,%esi

	_08908a_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _089064_jump

	_089090_jump:
		xor    %eax,%eax

	_089092_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089099_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0890d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0890ed_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089102_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0bdd3c_data(%eax)
		jne    _089138_jump
		cmpw   $0x000000,_0bdd40_data(%eax)
		jne    _089138_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _08918b_jump

	_089138_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _089145_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _08917b_jump

	_089145_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdd40_data(%eax),%edx
		push   %edx
		pushl  _0bdd3c_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdd5e_data(%eax),%edx
		push   %edx
		pushl  _0bdd5a_data(%eax)
		call   _088a16_func
		add    $0x000018,%esp
		jmp    _089184_jump

	_08917b_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _08918b_jump

	_089184_jump:
		movl   $0x000000,-0x000004(%ebp)

	_08918b_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_089193_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0891a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0891bd_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _089203_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _0893d7_jump

	_089203_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bde04_data(%eax)
		je     _08921e_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _0893d7_jump

	_08921e_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _089230_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _08923c_jump

	_089230_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _0893d7_jump

	_08923c_jump:
		mov    $_0be83c_data,%edx
		mov    $_0be93b_data,%eax
		call   _08875f_func
		mov    $_0c1a48_data,%edx
		mov    $_0be93b_data,%eax
		call   _08877e_func
		push   $0x000200
		mov    $_0be93b_data,%eax
		push   %eax
		call   _0813e7_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _089282_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _0893d7_jump

	_089282_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0bebc8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _08560b_func

	_089292_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0bebe8_data,%eax
		ja     _0892a3_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _0892a8_jump

	_0892a3_jump:
		jmp    _0893a6_jump

	_0892a8_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0bebf4_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _08560b_func
		mov    _0bec18_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0bec1c_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _0892d3_jump
		testb  $0x000080,_0bec21_data
		jne    _0892d8_jump

	_0892d3_jump:
		jmp    _08938e_jump

	_0892d8_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _08882f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _0888f3_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089335_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _0893d7_jump

	_089335_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _08165a_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _08939e_jump

	_08938e_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _0816ab_func

	_08939e_jump:
		incl   -0x000018(%ebp)
		jmp    _089292_jump

	_0893a6_jump:
		mov    -0x000004(%ebp),%eax
		call   _08168b_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bec1c_data,%edx
		mov    %edx,_0bdeae_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bde04_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_0893d7_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_0893e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _089403_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _0894ae_jump

	_089403_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bde04_data(%eax)
		jne    _08941e_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _0894ae_jump

	_08941e_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde04_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd78_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd14_data(%eax)
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _08945b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _0894ae_jump

	_08945b_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdddc_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdd40_data(%eax),%edx
		push   %edx
		pushl  _0bdd3c_data(%eax)
		call   _0888bd_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdddc_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdd5e_data(%eax),%edx
		push   %edx
		pushl  _0bdd5a_data(%eax)
		call   _0888bd_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_0894ae_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0894b8_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _0894fc_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _089508_jump

	_0894fc_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _089688_jump

	_089508_jump:
		mov    $_0be83c_data,%edx
		mov    $_0be93b_data,%eax
		call   _08875f_func
		mov    $_0c1a48_data,%edx
		mov    $_0be93b_data,%eax
		call   _08877e_func
		push   $0x000200
		mov    $_0be93b_data,%eax
		push   %eax
		call   _0813e7_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _08954e_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _089688_jump

	_08954e_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0bebc8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _08560b_func

	_08955e_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0bebe8_data,%eax
		ja     _08956f_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _089574_jump

	_08956f_jump:
		jmp    _089679_jump

	_089574_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0bebf4_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _08560b_func
		mov    _0bec18_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0bec1c_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _08959f_jump
		testb  $0x000040,_0bec21_data
		jne    _0895a4_jump

	_08959f_jump:
		jmp    _089661_jump

	_0895a4_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _08882f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _0888f3_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _0887b5_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _089608_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _089688_jump

	_089608_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _08165a_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _089671_jump

	_089661_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _0816ab_func

	_089671_jump:
		incl   -0x000018(%ebp)
		jmp    _08955e_jump

	_089679_jump:
		mov    -0x000004(%ebp),%eax
		call   _08168b_func
		movl   $0x000000,-0x000028(%ebp)

	_089688_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_089692_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd8c_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bdd28_data(%eax)
		call   _0887f2_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _0896d0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _089723_jump

	_0896d0_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bddf0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bdda4_data(%eax),%edx
		push   %edx
		pushl  _0bdda0_data(%eax)
		call   _0888bd_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bddf0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bddc2_data(%eax),%edx
		push   %edx
		pushl  _0bddbe_data(%eax)
		call   _0888bd_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_089723_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089769_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0897e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0897f5_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_089804_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _08981e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _089804_jump

	_08981e_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_089824_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		mov    %ebx,%esi
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004

	_089854_jump:
		ret    



_089855_func:
		test   %edx,%edx
		jge    _089854_jump
		jmp    _080ae6_func



_08985e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _089873_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_089873_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _089893_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_089893_jump:
		fld    %st(0)
		call   _0898e4_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _0898b3_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_0898b3_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _0898de_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _0898e0_jump

	_0898de_jump:
		fstp   %st(0)

	_0898e0_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_0898e4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_089907_func:
		test   %edx,%edx
		jne    _08990e_jump
		xor    %eax,%eax
		ret    

	_08990e_jump:
		jge    _089916_jump
		mov    $0xffffffff,%eax
		ret    

	_089916_jump:
		mov    $0x000001,%eax
		ret    



_08991c_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000010(%ebp),%edx
		lea    -0x000008(%ebp),%eax
		call   _08aedc_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_089948_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _0899da_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _089976_jump
		mov    $0x003e80,%ebx

	_089976_jump:
		cmp    $0xffffc180,%ebx
		jge    _089983_jump
		mov    $0xffffc180,%ebx

	_089983_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _08998f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _0899e0_jump

	_08998f_jump:
		cmp    $0x0007ff,%eax
		jl     _0899c2_jump
		mov    -0x000006(%ebp),%ecx
		call   _0877a9_func
		test   %cx,%cx
		jle    _0899b0_jump
		mov    _0c1d44_data,%eax
		mov    _0c1d48_data,%edx
		jmp    _0899e0_jump

	_0899b0_jump:
		mov    _0c1d44_data,%eax
		mov    _0c1d48_data,%edx
		call   _080ae6_func
		jmp    _0899e0_jump

	_0899c2_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_0899da_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_0899e0_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_0899e6_func:
		test   %eax,%eax
		jne    _0880d6_func
		call   _088234_func
		xor    %eax,%eax
		ret    



_089a11_func:
		push   %edx
		push   %ecx
		push   %ebx
		mov    %eax,%ebx
		mov    $0x00002c,%ah
		int    $0x000021
		mov    %ch,(%ebx)
		mov    %cl,0x000001(%ebx)
		mov    %dh,0x000002(%ebx)
		mov    %dl,0x000003(%ebx)
		sub    %eax,%eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		ret    



_089a2c_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _089a64_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_089a64_func:
		lea    (%esi,%esi,2),%esi
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_089b0a_jump:
		int    $0x000000
		ret    



_089e0a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %ecx,%ecx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%cl
		mov    0x000002(%esp),%al
		mov    %ecx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %ecx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x000008(%esp),%ah
		add    %esi,%esi
		cmp    %ah,%al
		je     _089ebc_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _089ebc_jump
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_089ebc_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_089ecd_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0c1db0_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _089f01_jump

	_089ef7_jump:
		mov    $0xffffffff,%eax
		jmp    _08a01a_jump

	_089f01_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_089f12_jump:
		test   %edi,%edi
		jge    _089f1c_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _089f12_jump

	_089f1c_jump:
		test   %esi,%esi
		jl     _089ef7_jump
		lea    0x00076c(%esi),%eax
		call   _08b008_func
		test   %eax,%eax
		je     _089f34_jump
		mov    $_0c1dca_data,%ebx

	_089f34_jump:
		lea    0x000003(%esi),%ecx
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _089f61_jump
		dec    %edi

	_089f61_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_089f82_jump:
		test   %esi,%esi
		jge    _089f8f_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _089f82_jump

	_089f8f_jump:
		mov    %ebp,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _08b44f_func
		call   _08b5fb_func
		mov    _0bfde0_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _089fb7_jump
		mov    %ebp,%eax
		call   _08b15c_func

	_089fb7_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _089fc3_jump
		sub    _0bfde4_data,%esi

	_089fc3_jump:
		test   %esi,%esi
		jge    _089fd0_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _089fc3_jump

	_089fd0_jump:
		cmp    $0x0063de,%edi
		jl     _089ef7_jump
		jne    _089ffa_jump
		mov    _0bfde0_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _089ef7_jump
		test   %esi,%esi
		jge    _08a018_jump
		jmp    _089ef7_jump

	_089ffa_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_08a018_jump:
		mov    %esi,%eax

	_08a01a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a033_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0bdbd9_data,%ah
		test   %ah,%ah
		je     _08a057_jump
		mov    %edi,%eax
		call   _08b960_func
		jmp    _08a19b_jump

	_08a057_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _089907_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _089855_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _085bd2_func
		jne    _08a091_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _08a184_jump

	_08a091_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _085bd2_func
		jle    _08a0bc_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _0808e0_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_08a0bc_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _085bd2_func
		jle    _08a136_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07ff01_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07fd4a_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07fd4a_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07fd4a_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07fd4a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0808e0_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_08a136_jump:
		mov    $0x000008,%ecx
		mov    $_0c1d4c_data,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _087762_func
		mov    -0x000014(%ebp),%cl
		mov    %eax,%edi
		mov    %edx,%esi
		test   %cl,%cl
		je     _08a167_jump
		mov    $0x382d7366,%ebx
		mov    $0x3fe0c152,%ecx
		call   _07fd4a_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08a167_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _08a184_jump
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07fd44_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08a184_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _08a197_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _080ae6_func
		mov    %eax,%edi
		mov    %edx,%esi

	_08a197_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_08a19b_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08a1a4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    $0x000043,%ah
		int    $0x000021
		jb     _08a1c1_jump
		test   $0x000002,%bl
		je     _08a1c1_jump
		test   $0x000001,%cl
		je     _08a1c1_jump
		mov    $0x000000,%al
		mov    $0x000006,%ah
		stc    

	_08a1c1_jump:
		sbb    %ecx,%ecx
		mov    %ax,%cx
		mov    %ecx,%eax
		mov    %eax,%ebx
		mov    %eax,%edx
		and    $0x00ffff,%ebx
		shr    $0x000010,%edx
		mov    %ebx,%eax
		call   _0862ed_func
		pop    %ecx
		pop    %ebx
		ret    



_08a1df_func:
		mov    %esp,%eax
		sub    _0bdc04_data,%eax
		ret    



_08a1e8_func:
		data16 mov %ss,_0bfd70_data
		ret    



_08a221_func:
		mov    $_0bfd72_data,%eax
		mov    $0x000001,%edx
		call   _08b9cc_func



_08a230_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _08a27f_jump
		add    $0x00000b,%eax
		jb     _08a27f_jump
		and    $0x0000f8,%al
		mov    $0x000010,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _08a27f_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _08a263_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_08a263_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _08a283_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _08a263_jump
		mov    %edi,0x000014(%ebx)

	_08a27f_jump:
		sub    %eax,%eax
		jmp    _08a2ce_jump

	_08a283_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x000010,%edx
		jb     _08a2b1_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _08a2c6_jump

	_08a2b1_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_08a2c6_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_08a2ce_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_08a2d3_jump:
		jmp    _08a3de_jump



_08a2d8_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _08a2d3_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _08a2d3_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _08a31a_jump
		cmp    0x00000c(%ebx),%edi
		jne    _08a303_jump
		mov    %esi,0x00000c(%ebx)

	_08a303_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _08a396_jump

	_08a31a_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _08a331_jump
		cmp    0x000004(%edi),%esi
		ja     _08a396_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _08a396_jump
		jmp    _08a340_jump

	_08a331_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _08a396_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _08a396_jump

	_08a340_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _08a375_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _08a35d_jump
		sub    %eax,%eax

	_08a35d_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_08a361_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _08a396_jump
		cmp    $0xffffffff,%edx
		je     _08a375_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _08a361_jump

	_08a375_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _08a37f_jump
		mov    0x000028(%ebx),%edi

	_08a37f_jump:
		cmp    %edi,%esi
		jb     _08a396_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _08a396_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _08a396_jump
		mov    0x000008(%edi),%edi
		jmp    _08a37f_jump

	_08a396_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _08a3b5_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _08a3b1_jump
		mov    %edi,0x00000c(%ebx)

	_08a3b1_jump:
		mov    %edi,%esi
		jmp    _08a3c6_jump

	_08a3b5_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_08a3c6_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _08a3d6_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _08a3d6_jump
		mov    %ecx,0x000010(%ebx)

	_08a3d6_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _08a3de_jump
		mov    %ecx,0x000014(%ebx)

	_08a3de_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_08a3e3_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    _0bd9bc_data,%edx
		cmp    %edx,%eax
		jne    _08a3f9_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0bd9bc_data

	_08a3f9_jump:
		cmp    _0e7514_data,%eax
		jne    _08a409_jump
		xor    %ecx,%ecx
		mov    %ecx,_0e7514_data

	_08a409_jump:
		mov    _0bd9b8_data,%esi
		cmp    %esi,%eax
		jne    _08a41c_jump
		mov    0x000008(%esi),%edx
		mov    %edx,_0bd9b8_data

	_08a41c_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _08a429_jump
		mov    %eax,0x000008(%edx)

	_08a429_jump:
		test   %eax,%eax
		je     _08a430_jump
		mov    %edx,0x000004(%eax)

	_08a430_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_08a434_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bd9b8_data,%edx

	_08a43f_jump:
		test   %edx,%edx
		je     _08a71e_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _08a48b_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _08a3e3_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _08a47b_jump
		mov    (%ebx),%esi
		mov    (%ebx),%di
		shr    $0x000010,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _08a43f_jump

	_08a47b_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _08a43f_jump

	_08a48b_jump:
		mov    0x000008(%edx),%edx
		jmp    _08a43f_jump



_08a58f_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0bd9b8_data,%eax
		xor    %ebx,%ebx
		jmp    _08a5a5_jump

	_08a59c_jump:
		cmp    %eax,%edx
		jb     _08a5a9_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_08a5a5_jump:
		test   %eax,%eax
		jne    _08a59c_jump

	_08a5a9_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _08a5b8_jump
		mov    %edx,0x000008(%ebx)
		jmp    _08a5be_jump

	_08a5b8_jump:
		mov    %edx,_0bd9b8_data

	_08a5be_jump:
		test   %eax,%eax
		je     _08a5c5_jump
		mov    %edx,0x000004(%eax)

	_08a5c5_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_08a603_func:
		push   %ebx
		push   %edx
		mov    _0bd9b8_data,%edx
		test   %edx,%edx
		je     _08a64e_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%eax
		add    %edx,%eax
		lea    0x000004(%eax),%ebx
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000002,%eax
		jl     _08a641_jump
		cmp    $0x000008,%eax
		jg     _08a641_jump
		cmpb   $0x000000,_0bdc24_data
		jne    _08a641_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bdbf4_data

	_08a641_jump:
		cmp    _0bdbf4_data,%ebx
		jne    _08a64e_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_08a64e_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_08a653_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		mov    (%esp),%ebx
		mov    (%esp),%ecx
		shr    $0x000010,%ebx
		call   _08a434_func
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _08a682_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_08a682_jump:
		test   %eax,%eax
		je     _08a69f_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _08a71b_jump

	_08a69f_jump:
		testw  $0x00fff0,_0e755a_data
		je     _08a6b4_jump
		movl   $0x0fffff,_0e7558_data

	_08a6b4_jump:
		cmpl   $0x010000,(%esp)
		ja     _08a719_jump
		mov    _0e7558_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _08a719_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _08a719_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _08a71b_jump

	_08a719_jump:
		xor    %eax,%eax

	_08a71b_jump:
		add    $0x000004,%esp

	_08a71e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a724_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0bfe38_data
		jne    _08a737_jump

	_08a733_jump:
		xor    %eax,%eax
		jmp    _08a71b_jump

	_08a737_jump:
		cmpl   $0xfffffffe,_0bdbf4_data
		je     _08a733_jump
		mov    %esp,%eax
		call   _08a920_func
		test   %eax,%eax
		je     _08a71b_jump
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000001,%eax
		jne    _08a76c_jump
		mov    (%esp),%eax
		call   _08a653_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _08a787_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _08a787_jump

	_08a76c_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_08a787_jump:
		test   %edx,%edx
		je     _08a733_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _08a733_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _08a733_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _08a58f_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _08610d_func
		mov    $0x000001,%eax
		jmp    _08a71b_jump



_08a7d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000001,%eax
		jne    _08a7ef_jump
		cmpb   $0x000000,_0bdc23_data
		je     _08a7fb_jump

	_08a7ef_jump:
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000009,%eax
		jne    _08a808_jump

	_08a7fb_jump:
		mov    (%esp),%eax
		call   _08a724_func
		jmp    _08a917_jump

	_08a808_jump:
		cmpl   $0x000000,_0bfe38_data
		jne    _08a818_jump

	_08a811_jump:
		xor    %eax,%eax
		jmp    _08a917_jump

	_08a818_jump:
		cmpl   $0xfffffffe,_0bdbf4_data
		je     _08a811_jump
		mov    %esp,%eax
		call   _08a920_func
		test   %eax,%eax
		je     _08a917_jump
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000002,%eax
		jl     _08a858_jump
		cmp    $0x000008,%eax
		jg     _08a858_jump
		cmpb   $0x000000,_0bdc24_data
		jne    _08a858_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bdbf4_data

	_08a858_jump:
		mov    (%esp),%edx
		mov    _0bdbf4_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _08a86c_jump
		mov    $0xfffffffe,%edx

	_08a86c_jump:
		mov    %edx,%eax
		call   _08bac1_func
		cmp    $0xffffffff,%eax
		je     _08a811_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _08a811_jump
		cmp    %eax,%edx
		jbe    _08a811_jump
		sub    %eax,%edx
		mov    %edx,(%esp)
		lea    -0x000004(%edx),%eax
		cmp    %edx,%eax
		ja     _08a811_jump
		mov    _0bd9b8_data,%edx
		mov    %eax,(%esp)
		jmp    _08a8ac_jump

	_08a89a_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _08a8b0_jump
		cmp    %ebx,%edx
		ja     _08a8a9_jump
		cmp    %ebp,%ebx
		jb     _08a8b0_jump

	_08a8a9_jump:
		mov    0x000008(%edx),%edx

	_08a8ac_jump:
		test   %edx,%edx
		jne    _08a89a_jump

	_08a8b0_jump:
		test   %edx,%edx
		je     _08a8da_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _08a8da_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		mov    %eax,%ebx
		lea    (%eax,%ebp,1),%ecx
		movl   $0xffffffff,(%ecx)
		jmp    _08a8f9_jump

	_08a8da_jump:
		cmpl   $0x000038,(%esp)
		jb     _08a811_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _08a58f_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_08a8f9_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _08610d_func
		mov    $0x000001,%eax

	_08a917_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08a920_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x00000b,%edx
		and    $0x0000f8,%dl
		test   %edx,%edx
		jne    _08a937_jump

	_08a931_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_08a937_jump:
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000001,%eax
		jne    _08a94c_jump
		cmpb   $0x000000,_0bdc23_data
		je     _08a958_jump

	_08a94c_jump:
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000009,%eax
		jne    _08a95d_jump

	_08a958_jump:
		add    $0x000008,%edx
		jmp    _08a964_jump

	_08a95d_jump:
		call   _08a603_func
		sub    %eax,%edx

	_08a964_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _08a931_jump
		mov    _0bfe3c_data,%esi
		cmp    %esi,%edx
		jae    _08a97c_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_08a97c_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _08a931_jump
		xor    %dl,%dl
		and    $0x0000f0,%dh
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_08a99d_func:
		xor    %eax,%eax
		ret    



_08a9a0_func:
		fsave  (%eax)
		fwait
		ret    



_08a9a5_func:
		frstor (%eax)
		fwait
		ret    



_08a9a9_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bdbd9_data
		je     _08a9ca_jump
		mov    $_08a9a0_func,%edx
		mov    $_08a9a5_func,%ebx
		mov    %edx,_0bfe40_data
		mov    %ebx,_0bfe44_data

	_08a9ca_jump:
		xor    %eax,%eax
		mov    _0bfe48_data,%ax
		call   _08bb8e_func
		pop    %edx
		pop    %ebx
		ret    



_08a9e4_func:
		push   %edx
		mov    _0bdbd8_data,%ah
		test   %ah,%ah
		jne    _08aa2c_jump
		mov    %ah,_0bdbd9_data
		xor    %dl,%dl
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dh,%dh
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _08aa17_jump
		call   _08a9a9_func
		mov    %al,%dl
		mov    %al,%dh

	_08aa17_jump:
		cmpb   $0x000000,_0bdc20_data
		jne    _08aa2c_jump
		mov    %dl,_0bdbd8_data
		mov    %dh,_0bdbd9_data

	_08aa2c_jump:
		pop    %edx
		ret    



_08aa2e_func:
		call   *_0bdc2d_data
		ret    



_08aa35_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    $0x008000,%edx
		mov    _0bdc22_data,%al
		mov    %edx,_0bfe3c_data
		cmp    $0x000002,%eax
		jl     _08aa56_jump
		cmp    $0x000008,%eax
		jle    _08aa5d_jump

	_08aa56_jump:
		mov    $0x000001,%eax
		jmp    _08aa5f_jump

	_08aa5d_jump:
		xor    %eax,%eax

	_08aa5f_jump:
		test   %eax,%eax
		je     _08aa98_jump
		call   _08bcc2_func
		cmp    $0x000001,%eax
		jne    _08aa98_jump
		mov    $_080413_switch,%edx
		mov    $_080408_func,%eax
		sub    $_080408_func,%edx
		mov    %dx,%di
		shr    $0x000010,%edx
		mov    %dx,%si
		mov    %ax,%bx
		shr    $0x000010,%eax
		mov    %ax,%cx
		mov    $0x000600,%ax
		int    $0x000031
		sbb    %ax,%ax

	_08aa98_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08aa9e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %edx,%eax
		mov    %ds,%ebx
		movl   $0x000000,0x00000c(%edi)
		mov    %esi,%ecx
		mov    0x000015(%edi),%dl
		xor    %ebp,%ebp
		cmp    $0x000047,%dl
		jb     _08aadd_jump
		jbe    _08aaea_jump
		cmp    $0x000066,%dl
		jb     _08aad3_jump
		jbe    _08aaff_jump
		cmp    $0x000067,%dl
		je     _08aaea_jump
		jmp    _08ab7c_jump

	_08aad3_jump:
		cmp    $0x000065,%dl
		je     _08aafa_jump
		jmp    _08ab7c_jump

	_08aadd_jump:
		cmp    $0x000045,%dl
		jb     _08ab7c_jump
		jbe    _08aafa_jump
		jmp    _08aaff_jump

	_08aaea_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _08aaf7_jump
		movl   $0x000001,0x000008(%edi)

	_08aaf7_jump:
		sub    $0x000002,%dl

	_08aafa_jump:
		mov    $0x000001,%ebp

	_08aaff_jump:
		mov    (%eax),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%eax)
		mov    -0x000008(%ecx),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ecx),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _08ab20_jump
		movl   $0x000006,0x000008(%edi)

	_08ab20_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		push   $0x000003
		push   %ebp
		mov    0x000008(%edi),%ebx
		xor    %ecx,%ecx
		push   $0x0000ff
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _08c2f7_func
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x00002a,%eax
		jne    _08ab55_jump
		movb   $0x00002a,0x000016(%edi)

	_08ab55_jump:
		movb   $0x000000,0x0000ff(%esi)

	_08ab5c_jump:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x000020,%eax
		jne    _08ab68_jump
		inc    %esi
		jmp    _08ab5c_jump

	_08ab68_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _08ab88_func
		mov    %ds,%ebx
		mov    %esi,%ecx
		movl   $0xffffffff,0x000008(%edi)

	_08ab7c_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08ab88_func:
		push   %ebx
		mov    %edx,%ebx
		mov    0x000014(%edx),%dl
		and    $0x000001,%dl
		and    $0x0000ff,%edx
		jne    _08abe5_jump

	_08ab99_jump:
		cmpb   $0x000000,(%eax)
		je     _08abaf_jump
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000065,%edx
		je     _08abaf_jump
		cmp    $0x000045,%edx
		je     _08abaf_jump
		inc    %eax
		jmp    _08ab99_jump

	_08abaf_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%bl
		and    $0x0000ff,%ebx
		dec    %eax
		cmp    $0x000047,%ebx
		je     _08abc5_jump
		cmp    $0x000067,%ebx
		jne    _08abd1_jump

	_08abc5_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000030,%ebx
		jne    _08abd1_jump
		dec    %eax
		jmp    _08abc5_jump

	_08abd1_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00002e,%ebx
		je     _08abdb_jump
		inc    %eax

	_08abdb_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _08abdb_jump

	_08abe5_jump:
		pop    %ebx
		ret    



_08abe7_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _08c4fe_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_08abf8_func:
		push   %edx
		mov    $0x000001,%edx
		mov    $_0c1a54_data,%eax
		call   _08b9cc_func
		pop    %edx
		ret    



_08ac0a_func:
		cmp    $0x000061,%eax
		jl     _08ac17_jump
		cmp    $0x00007a,%eax
		jg     _08ac17_jump
		sub    $0x000020,%eax

	_08ac17_jump:
		ret    



_08ac1e_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _08c711_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0c1d94_data(,%eax,4),%eax
		call   _08c730_func
		mov    $_0c1afd_data,%eax
		mov    %ebx,%edx
		call   _08c730_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08c730_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _081132_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08ac66_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0bfd8c_data
		test   %eax,%eax
		jne    _08ac8e_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _08ac1e_func
		cmpl   $0x000001,(%ebx)
		jne    _08ac89_jump
		call   _087798_func
		jmp    _08ac8e_jump

	_08ac89_jump:
		call   _0877a9_func

	_08ac8e_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_08ad49_func:
		sub    $0x000010,%esp
		movl   $0xc0000000,0x000008(%esp)
		movl   $0x4150017e,0x00000c(%esp)
		movl   $0x80000000,(%esp)
		movl   $0x4147ffff,0x000004(%esp)
		xor    %eax,%eax
		mov    _0bdbd9_data,%al
		cmp    $0x000003,%eax
		jl     _08ad9a_jump
		fldl   0x000008(%esp)
		fld    %st(0)
		fldl   (%esp)
		fxch   %st(1)
		fdiv   %st(1),%st
		fmulp  %st,%st(1)
		fsubrp %st,%st(1)
		fcompl _0c1b04_data
		fnstsw %ax
		sahf   
		jbe    _08ad9a_jump
		orb    $0x000001,_0bdcb0_data

	_08ad9a_jump:
		add    $0x000010,%esp
		ret    



_08ad9e_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bda05_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0bda05_data
		or     $0x000004,%dl
		mov    $_0bd9c4_data,%ecx
		mov    %dl,_0bda05_data
		jmp    _08ae04_jump

	_08adc2_jump:
		mov    $0x000008,%eax
		call   _086012_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _08adf1_jump
		mov    $0x000008,%eax
		call   _086012_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _08adf1_jump
		mov    $0x000001,%edx
		mov    $_0c1b0c_data,%eax
		call   _08b9cc_func

	_08adf1_jump:
		mov    _0e7520_data,%eax
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0e7520_data
		add    $0x00001a,%ecx
		mov    %eax,(%ebx)

	_08ae04_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _08adc2_jump
		mov    %edx,_0e7518_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08ae15_func:
		xor    %eax,%eax
		call   _08ae26_func
		jmp    _088457_jump



_08ae26_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0bd9c4_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0e7520_data,%eax
		jmp    _08ae73_jump

	_08ae48_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _08ae6b_jump
		testb  $0x000008,0x00000d(%eax)
		jne    _08ae6b_jump
		cmp    %esi,%eax
		jb     _08ae71_jump
		cmp    $_0bda46_data,%eax
		jae    _08ae6b_jump
		xor    %edx,%edx

	_08ae6b_jump:
		call   _0819e4_func
		inc    %ebx

	_08ae71_jump:
		mov    %ecx,%eax

	_08ae73_jump:
		test   %eax,%eax
		jne    _08ae48_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08ae7e_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%esi

	_08ae84_jump:
		test   %esi,%esi
		jne    _08ae8d_jump

	_08ae88_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08ae8d_jump:
		mov    (%ecx),%al
		xor    %ebx,%ebx
		mov    (%edx),%ah
		mov    %al,%bl
		cmp    $0x000041,%ebx
		jl     _08aea1_jump
		cmp    $0x00005a,%ebx
		jg     _08aea1_jump
		add    $0x000020,%al

	_08aea1_jump:
		xor    %ebx,%ebx
		mov    %ah,%bl
		cmp    $0x000041,%ebx
		jl     _08aeb2_jump
		cmp    $0x00005a,%ebx
		jg     _08aeb2_jump
		add    $0x000020,%ah

	_08aeb2_jump:
		cmp    %ah,%al
		je     _08aec8_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08aec8_jump:
		test   %ah,%ah
		je     _08ae88_jump
		inc    %ecx
		inc    %edx
		dec    %esi
		jmp    _08ae84_jump



_08aedc_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _08af07_jump
		cmp    $0x43300000,%ecx
		jb     _08af15_jump
		xchg   %esi,%ebp

	_08af07_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08af15_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _08af07_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _08af3a_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _08af3c_jump

	_08af3a_jump:
		sar    %cl,%edx

	_08af3c_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _08afb7_func
		pop    %esi
		or     %edx,%edx
		je     _08af60_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_08af60_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08af6c_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_08af7a_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _08af9e_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _08af7a_jump

	_08af9e_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _08afb7_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08afb7_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _08b007_jump
		test   $0xfff00000,%edx
		jne    _08afdb_jump

	_08afc7_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _08afc7_jump
		jmp    _08afff_jump

	_08afdb_jump:
		test   $0xffe00000,%edx
		je     _08afff_jump

	_08afe3_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _08afe3_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_08afff_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_08b007_jump:
		ret    



_08b008_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _08b03d_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _08b02b_jump

	_08b022_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08b02b_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _08b022_jump

	_08b03d_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b043_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _08b110_jump
		lea    0x00076c(%edx),%eax
		call   _08b008_func
		test   %eax,%eax
		je     _08b07a_jump
		mov    0x000010(%ebx),%eax
		mov    _0c1dca_data(,%eax,2),%esi
		mov    _0c1dc8_data(,%eax,2),%eax
		jmp    _08b08b_jump

	_08b07a_jump:
		mov    0x000010(%ebx),%eax
		mov    _0c1db0_data(,%eax,2),%esi
		mov    _0c1dae_data(,%eax,2),%eax

	_08b08b_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _089ecd_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _08b0fe_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _08b0fa_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _08b0ff_jump

	_08b0fa_jump:
		mov    %ecx,%eax
		jmp    _08b0ff_jump

	_08b0fe_jump:
		dec    %eax

	_08b0ff_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _08b11f_jump

	_08b110_jump:
		cmp    $0x000001,%ecx
		jne    _08b11c_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _08b11f_jump

	_08b11c_jump:
		mov    0x00001c(%eax),%eax

	_08b11f_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08b128_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		mov    0x000010(%eax),%esi
		cmp    0x000010(%edx),%esi
		jle    _08b13c_jump

	_08b134_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		ret    

	_08b13c_jump:
		cmp    0x000010(%ecx),%esi
		jl     _08b157_jump
		mov    %ebx,%edx
		call   _08b043_func
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08b043_func
		cmp    %eax,%esi
		jg     _08b134_jump

	_08b157_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    



_08b15c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    _0bfe2e_data,%eax
		mov    (%eax),%dl
		xor    %edi,%edi
		test   %dl,%dl
		je     _08b410_jump
		mov    $_0bfdbc_data,%edx
		mov    $_0bfd98_data,%eax
		mov    0x000014(%ecx),%ebx
		call   _08b128_func
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		je     _08b19e_jump
		mov    $_0bfdbc_data,%esi
		mov    $_0bfd98_data,%ebx
		jmp    _08b1a8_jump

	_08b19e_jump:
		mov    $_0bfd98_data,%esi
		mov    $_0bfdbc_data,%ebx

	_08b1a8_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _08b008_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _08b1d0_jump
		mov    _0c1dca_data(%eax),%edx
		mov    _0c1dc8_data(%eax),%eax
		jmp    _08b1dc_jump

	_08b1d0_jump:
		mov    _0c1db0_data(%eax),%edx
		mov    _0c1dae_data(%eax),%eax

	_08b1dc_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx
		mov    0x000020(%esi),%eax
		mov    %edx,0x000010(%esp)
		test   %eax,%eax
		jne    _08b2ac_jump
		mov    0x000010(%esi),%eax
		cmp    %eax,%ebp
		jle    _08b20a_jump
		mov    $0x000001,%edi
		jmp    _08b2e5_jump

	_08b20a_jump:
		jne    _08b2e5_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,(%esp)
		add    $0x000006,%edx
		sub    0x000018(%esi),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000008(%esp)
		cmp    $0x000005,%edx
		jne    _08b285_jump
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _08b2e5_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _08b2e5_jump
		jmp    _08b2e1_jump

	_08b285_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _08b2e5_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _08b2e5_jump
		jmp    _08b2e1_jump

	_08b2ac_jump:
		mov    0x00001c(%esi),%edx
		cmp    $0x000001,%eax
		jne    _08b2d3_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _08b008_func
		test   %eax,%eax
		je     _08b2d2_jump
		mov    _0c1db2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _08b2d2_jump
		inc    %edx

	_08b2d2_jump:
		dec    %edx

	_08b2d3_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _08b2e5_jump
		mov    $0x000001,%edi
		jne    _08b2e5_jump

	_08b2e1_jump:
		mov    %edi,0x000010(%esp)

	_08b2e5_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _08b302_jump
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _08b41f_func
		test   %eax,%eax
		sete   %al
		mov    %eax,%edi
		and    $0x0000ff,%edi

	_08b302_jump:
		test   %edi,%edi
		jne    _08b319_jump
		mov    0x000014(%esp),%edx
		test   %edx,%edx
		je     _08b410_jump
		mov    %edx,%edi
		jmp    _08b410_jump

	_08b319_jump:
		mov    0x000020(%ebx),%eax
		xor    %esi,%esi
		test   %eax,%eax
		jne    _08b3bc_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _08b334_jump
		xor    %edi,%edi
		jmp    _08b3f5_jump

	_08b334_jump:
		jne    _08b3f5_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%ebp
		add    $0x000007,%edx
		sub    %ebp,%edx
		mov    $0x000007,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		mov    0x000018(%ebx),%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%ebx),%ebp
		mov    %eax,%edx
		cmp    $0x000005,%ebp
		jne    _08b39d_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebp
		sub    $0x000007,%eax
		cmp    %ebp,%eax
		jl     _08b397_jump

	_08b38d_jump:
		mov    $0x000001,%edi
		jmp    _08b3f5_jump

	_08b397_jump:
		cmp    %eax,%edx
		jg     _08b3f5_jump
		jmp    _08b3f0_jump

	_08b39d_jump:
		lea    -0x000001(%ebp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%ebp
		shl    $0x000003,%eax
		sub    %ebp,%eax
		mov    0x000004(%esp),%ebp
		inc    %eax
		cmp    %ebp,%eax
		jg     _08b38d_jump
		cmp    %eax,%edx
		jge    _08b3f5_jump
		jmp    _08b3f0_jump

	_08b3bc_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _08b3e3_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _08b008_func
		test   %eax,%eax
		je     _08b3e2_jump
		mov    _0c1db2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _08b3e2_jump
		inc    %edx

	_08b3e2_jump:
		dec    %edx

	_08b3e3_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _08b3f5_jump
		xor    %edi,%edi
		cmp    %eax,%edx
		jne    _08b3f5_jump

	_08b3f0_jump:
		mov    $0x000001,%esi

	_08b3f5_jump:
		test   %esi,%esi
		je     _08b404_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08b41f_func
		mov    %eax,%edi

	_08b404_jump:
		mov    0x000014(%esp),%eax
		test   %eax,%eax
		je     _08b410_jump
		sub    %edi,%eax
		mov    %eax,%edi

	_08b410_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b41f_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _08b443_jump
		jne    _08b448_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _08b443_jump
		jne    _08b448_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _08b448_jump

	_08b443_jump:
		mov    $0x000001,%ebx

	_08b448_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08b44f_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _08b47c_jump
		test   %ebx,%ebx
		jle    _08b47c_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _08b48b_jump

	_08b47c_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_08b48b_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _08b4f2_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_08b4f2_jump:
		lea    0x00076c(%edx),%eax
		call   _08b008_func
		add    $0x00016d,%eax

	_08b502_jump:
		cmp    %eax,%ebx
		jb     _08b50b_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _08b502_jump

	_08b50b_jump:
		mov    $_0c1db0_data,%esi
		mov    %edx,0x000014(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %ebx,0x00001c(%ecx)
		call   _08b008_func
		test   %eax,%eax
		je     _08b52a_jump
		mov    $_0c1dca_data,%esi

	_08b52a_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _08b542_jump
		inc    %eax

	_08b542_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_08b5e3_jump:
		mov    _0bfe32_data,%ah
		test   $0x000001,%ah
		je     _08b5f3_jump
		test   $0x000002,%ah
		jne    _08b5fa_jump

	_08b5f3_jump:
		orb    $0x000002,_0bfe32_data

	_08b5fa_jump:
		ret    



_08b5fb_func:
		mov    $_0c1b3c_data,%eax
		call   _089038_func
		test   %eax,%eax
		je     _08b5e3_jump
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0bfde0_data,%ebx
		mov    %edx,_0bfde8_data
		mov    $_0bfdec_data,%edx
		call   _08b664_func
		mov    %eax,%ecx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _08b891_jump
		mov    %ah,_0bfe0b_data
		jmp    _08b955_jump



_08b640_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_08b646_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _08b65f_jump
		cmp    $0x000039,%edx
		jg     _08b65f_jump
		imul   $0x00000a,%ebx,%ebx
		add    %ebx,%edx
		inc    %eax
		lea    -0x000030(%edx),%ebx
		jmp    _08b646_jump

	_08b65f_jump:
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_08b664_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%al
		cmp    $0x00003a,%eax
		jne    _08b67c_jump
		inc    %ebp

	_08b67c_jump:
		mov    %ebp,%esi

	_08b67e_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _08b6a5_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x00002c,%eax
		je     _08b6a5_jump
		cmp    $0x00002d,%eax
		je     _08b6a5_jump
		cmp    $0x00002b,%eax
		je     _08b6a5_jump
		cmp    $0x000030,%eax
		jl     _08b6a2_jump
		cmp    $0x000039,%eax
		jle    _08b6a5_jump

	_08b6a2_jump:
		inc    %ebp
		jmp    _08b67e_jump

	_08b6a5_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _08b6ba_jump
		movl   $0x00001e,0x00000c(%esp)

	_08b6ba_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		movb   $0x000000,(%eax)
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %dl,%al
		lea    0x000001(%ebp),%edx
		cmp    $0x00002d,%eax
		jne    _08b6f7_jump
		mov    $0x000001,%ecx
		jmp    _08b6fc_jump

	_08b6f7_jump:
		cmp    $0x00002b,%eax
		jne    _08b6fe_jump

	_08b6fc_jump:
		mov    %edx,%ebp

	_08b6fe_jump:
		mov    0x000000(%ebp),%al
		and    $0x0000ff,%eax
		cmp    $0x000030,%eax
		jl     _08b783_jump
		cmp    $0x000039,%eax
		jg     _08b783_jump
		lea    0x000008(%esp),%edx
		xor    %esi,%esi
		mov    %ebp,%eax
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    %esi,0x000008(%esp)
		call   _08b640_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _08b756_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _08b640_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _08b756_jump
		mov    %esp,%edx
		inc    %eax
		call   _08b640_func
		mov    %eax,%ebp

	_08b756_jump:
		mov    0x000008(%esp),%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %ecx,%ecx
		je     _08b783_jump
		neg    %edx
		mov    %edx,(%ebx)

	_08b783_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08b78d_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    (%ebx),%al
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%eax
		jne    _08b7ac_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_08b7ac_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00004d,%eax
		jne    _08b7b8_jump
		inc    %ebx
		xor    %esi,%esi

	_08b7b8_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _08b640_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _08b7d7_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _08b824_jump

	_08b7d7_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _08b81d_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _08b640_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _08b81d_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _08b640_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_08b81d_jump:
		movl   $0x000000,0x00001c(%ecx)

	_08b824_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    (%ebx),%al
		cmp    $0x00002f,%eax
		jne    _08b875_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _08b640_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _08b875_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _08b640_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _08b875_jump
		mov    %esp,%edx
		inc    %eax
		call   _08b640_func
		mov    %eax,%ebx

	_08b875_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_08b891_jump:
		mov    $0x000001,%ebx
		mov    $_0bfe0b_data,%edx
		mov    _0bfde0_data,%eax
		mov    %ebx,_0bfde8_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		call   _08b664_func
		mov    (%esp),%ecx
		mov    _0bfde0_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0bfde4_data
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%ebx
		jne    _08b8e0_jump
		mov    $_0bfd98_data,%edx
		inc    %eax
		call   _08b78d_func
		mov    %eax,%edx

	_08b8e0_jump:
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002c,%eax
		jne    _08b955_jump
		lea    0x000001(%edx),%eax
		mov    $_0bfdbc_data,%edx
		call   _08b78d_func
		mov    _0bfde4_data,%eax
		mov    %eax,%edx
		mov    $0x000e10,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bfdc4_data,%esi
		sub    %eax,%esi
		mov    _0bfde4_data,%eax
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bfdc0_data,%edi
		mov    _0bfde4_data,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bfdbc_data,%ebp
		mov    %esi,_0bfdc4_data
		sub    %edx,%ebp
		mov    %edi,_0bfdc0_data
		mov    %ebp,_0bfdbc_data

	_08b955_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08b960_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _08b975_jump
		fchs   
		not    %dl

	_08b975_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _08b9a6_jump
		fxch   %st(1)
		testb  $0x000001,_0bdcb0_data
		jne    _08b990_jump
		fpatan 
		jmp    _08b995_jump

	_08b990_jump:
		call   _08c880_func

	_08b995_jump:
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _08b9b8_jump

	_08b9a6_jump:
		testb  $0x000001,_0bdcb0_data
		jne    _08b9b3_jump
		fpatan 
		jmp    _08b9b8_jump

	_08b9b3_jump:
		call   _08c880_func

	_08b9b8_jump:
		cmp    $0x000000,%dl
		je     _08b9bf_jump
		fchs   

	_08b9bf_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_08b9cc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _08c8b4_func
		test   %eax,%eax
		jne    _08b9e6_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _0803cd_func

	_08b9e6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_08bac1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0bdc08_data,%eax
		jb     _08bb2c_jump
		cmpb   $0x000000,_0bdc22_data
		jne    _08bb3e_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _08baec_jump
		mov    $0xfffffff,%ebp

	_08baec_jump:
		xor    %ebx,%ebx
		mov    %ds,%ax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		mov    %edi,%eax
		test   %edi,%edi
		jge    _08bb19_jump
		mov    %ebp,%ebx
		mov    %edi,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _08bb2c_jump

	_08bb19_jump:
		mov    %ds,%ax
		mov    %ebp,%ebx

	_08bb1e_jump:
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _08bb73_jump

	_08bb2c_jump:
		call   _0804e8_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _08bb81_jump

	_08bb3e_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _08bb53_jump
		mov    $0x0fffff,%ebx

	_08bb53_jump:
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000001,%eax
		jne    _08bb6e_jump
		xor    %eax,%eax
		mov    _0bdc23_data,%al
		cmp    $0x000001,%eax
		jne    _08bb6e_jump
		shl    $0x000008,%ebx

	_08bb6e_jump:
		mov    %ds,%ax
		jmp    _08bb1e_jump

	_08bb73_jump:
		mov    (%esp),%ebx
		mov    _0bdbf4_data,%eax
		mov    %ebx,_0bdbf4_data

	_08bb81_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08bb8c_jump:
		ret    



_08bb8e_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _08bba8_jump
		mov    $0x000003,%al

	_08bba8_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_08bbb5_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _080408_func
		mov    $_0e854c_data,%eax
		mov    %ds,%edx
		mov    %ss,%bx
		mov    %esp,%ecx
		mov    %edx,%ss
		mov    %eax,%esp
		mov    %bx,%dx
		mov    %ecx,%eax
		mov    _0bdc04_data,%esi
		mov    _0bdc1c_data,%edi
		mov    %edx,%ecx
		mov    $_0e755c_data,%edx
		mov    %eax,%ebx
		mov    %edx,_0bdc04_data
		test   %edi,%edi
		jne    _08bc19_jump
		mov    _0bd9ac_data,%eax
		cmp    $_080511_jump,%eax
		je     _08bc19_jump
		cmp    $_08bf0c_func,%eax
		je     _08bc19_jump
		mov    $0x000004,%eax
		sti    
		cld    
		call   _08c9ce_jump
		jmp    _08bc2a_jump

	_08bc19_jump:
		mov    _0bfe50_data,%dx
		mov    _0bfe4c_data,%eax

	_08bc25_jump:
		call   _081318_func

	_08bc2a_jump:
		mov    %ecx,%edx
		mov    %ebx,%eax
		mov    %ss,%bx
		mov    %esp,%ecx
		mov    %edx,%ss
		mov    %eax,%esp
		mov    %bx,%dx
		mov    %ecx,%eax
		mov    %esi,_0bdc04_data
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_08bc4a_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _080408_func
		mov    $_0e854c_data,%eax
		mov    %ds,%edx
		mov    %ss,%bx
		mov    %esp,%ecx
		mov    %edx,%ss
		mov    %eax,%esp
		mov    %bx,%dx
		mov    %ecx,%eax
		mov    _0bdc04_data,%esi
		mov    _0bdc1c_data,%edi
		mov    %edx,%ecx
		mov    $_0e755c_data,%edx
		mov    %eax,%ebx
		mov    %edx,_0bdc04_data
		test   %edi,%edi
		jne    _08bcb1_jump
		mov    _0bd9ac_data,%eax
		cmp    $_080511_jump,%eax
		je     _08bcb1_jump
		cmp    $_08bd56_func,%eax
		je     _08bcb1_jump
		mov    $0x000007,%eax
		sti    
		cld    
		call   _08c9ce_jump
		jmp    _08bc2a_jump

	_08bcb1_jump:
		mov    _0bfe56_data,%dx
		mov    _0bfe52_data,%eax
		jmp    _08bc25_jump



_08bcc2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		cmpl   $0x000000,_0bfe64_data
		jne    _08bd49_jump
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000001,%eax
		je     _08bced_jump
		mov    $0x001686,%ax
		int    $0x00002f
		test   %ax,%ax
		jne    _08bd3f_jump

	_08bced_jump:
		mov    %esp,%esi
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,(%esp)
		xor    %dh,%dh
		mov    %ah,0x000001(%esp)
		mov    %dx,0x000002(%esp)
		mov    %ds,%edx
		mov    %ah,0x000004(%esp)
		push   %ds
		mov    %edx,%ds
		mov    $0x000400,%ax
		int    $0x000031
		mov    %ah,(%esi)
		mov    %al,0x000001(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cl,0x000004(%esi)
		mov    %dh,0x000005(%esi)
		mov    %dl,0x000006(%esi)
		pop    %ds
		xor    %eax,%eax
		movzbl 0x000001(%esp),%esi
		mov    (%esp),%al
		add    %esi,%eax
		test   %eax,%eax
		jle    _08bd3f_jump
		movl   $0x000001,_0bfe64_data
		jmp    _08bd49_jump

	_08bd3f_jump:
		movl   $0xffffffff,_0bfe64_data

	_08bd49_jump:
		mov    _0bfe64_data,%eax
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08bd56_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		cmpl   $0x000000,_0bfe4c_data
		jne    _08bd71_jump
		cmpw   $0x000000,_0bfe50_data
		je     _08be44_jump

	_08bd71_jump:
		mov    _0bd9ac_data,%ebx
		cmp    $_08bf07_jump,%ebx
		jne    _08bd8b_jump
		movl   $_08bf0c_func,_0bd9ac_data
		jmp    _08bd9d_jump

	_08bd8b_jump:
		cmp    $_08bd56_func,%ebx
		jne    _08bd9d_jump
		movl   $_080511_jump,_0bd9ac_data

	_08bd9d_jump:
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000002,%eax
		jl     _08bde6_jump
		cmp    $0x000008,%eax
		jg     _08bde6_jump
		mov    $0x000023,%cl
		mov    _0bfe50_data,%dx
		mov    _0bfe4c_data,%eax
		mov    %eax,%ebx
		shl    $0x000010,%ebx
		mov    %dx,%bx
		mov    $0x002505,%ax
		int    $0x000021
		mov    $0x000023,%cl
		mov    _0bfe5c_data,%dx
		mov    _0bfe58_data,%eax
		push   %ds
		mov    %edx,%ds
		mov    %eax,%edx
		mov    $0x002504,%ax
		int    $0x000021
		pop    %ds
		jmp    _08be33_jump

	_08bde6_jump:
		call   _08bcc2_func
		cmp    $0x000001,%eax
		jne    _08be1c_jump
		mov    $0x000023,%bl
		mov    _0bfe50_data,%cx
		mov    _0bfe4c_data,%edx
		mov    $0x000201,%ax
		int    $0x000031
		mov    $0x000023,%bl
		mov    _0bfe5c_data,%cx
		mov    _0bfe58_data,%edx
		mov    $0x000205,%ax
		int    $0x000031
		jmp    _08be33_jump

	_08be1c_jump:
		mov    $0x000023,%eax
		mov    _0bfe50_data,%cx
		mov    _0bfe4c_data,%ebx
		call   _081363_func

	_08be33_jump:
		xor    %ebx,%ebx
		xor    %ebp,%ebp
		mov    %bx,_0bfe50_data
		mov    %ebp,_0bfe4c_data

	_08be44_jump:
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08be49_jump:
		cmp    $_08bf0c_func,%ebx
		jne    _08be5b_jump
		movl   $_080511_jump,_0bd9ac_data

	_08be5b_jump:
		xor    %eax,%eax
		mov    _0bdc22_data,%al
		cmp    $0x000002,%eax
		jl     _08bea4_jump
		cmp    $0x000008,%eax
		jg     _08bea4_jump
		mov    $0x00001b,%cl
		mov    _0bfe56_data,%dx
		mov    _0bfe52_data,%eax
		mov    %eax,%ebx
		shl    $0x000010,%ebx
		mov    %dx,%bx
		mov    $0x002505,%ax
		int    $0x000021
		mov    $0x00001b,%cl
		mov    _0bfe62_data,%dx
		mov    _0bfe5e_data,%eax
		push   %ds
		mov    %edx,%ds
		mov    %eax,%edx
		mov    $0x002504,%ax
		int    $0x000021
		pop    %ds
		jmp    _08bef1_jump

	_08bea4_jump:
		call   _08bcc2_func
		cmp    $0x000001,%eax
		jne    _08beda_jump
		mov    $0x00001b,%bl
		mov    _0bfe56_data,%cx
		mov    _0bfe52_data,%edx
		mov    $0x000201,%ax
		int    $0x000031
		mov    $0x00001b,%bl
		mov    _0bfe62_data,%cx
		mov    _0bfe5e_data,%edx
		mov    $0x000205,%ax
		int    $0x000031
		jmp    _08bef1_jump

	_08beda_jump:
		mov    $0x00001b,%eax
		mov    _0bfe56_data,%cx
		mov    _0bfe52_data,%ebx
		call   _081363_func

	_08bef1_jump:
		xor    %ebx,%ebx
		xor    %ebp,%ebp
		mov    %bx,_0bfe56_data
		mov    %ebp,_0bfe52_data

	_08bf02_jump:
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08bf07_jump:
		call   _08bd56_func



_08bf0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		cmpl   $0x000000,_0bfe52_data
		jne    _08bf23_jump
		cmpw   $0x000000,_0bfe56_data
		je     _08bf02_jump

	_08bf23_jump:
		mov    _0bd9ac_data,%ebx
		cmp    $_08bf07_jump,%ebx
		jne    _08be49_jump
		movl   $_08bd56_func,_0bd9ac_data
		jmp    _08be5b_jump



_08c180_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ecx,(%esp)
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _08c199_jump
		mov    $0x00002d,%cl
		neg    %esi
		jmp    _08c19b_jump

	_08c199_jump:
		mov    $0x00002b,%cl

	_08c19b_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _08c1be_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _08c1be_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_08c1be_jump:
		test   %eax,%eax
		jne    _08c1ce_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _08c1ce_jump
		mov    %edx,%eax

	_08c1ce_jump:
		lea    0x000001(%eax),%ebp
		cmp    (%esp),%ebp
		jg     _08c21a_jump
		cmp    %eax,%edx
		jg     _08c217_jump
		mov    %cl,(%edi)

	_08c1dc_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _08c1e7_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _08c1dc_jump

	_08c1e7_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _08c1e7_jump
		jmp    _08c21a_jump

	_08c217_jump:
		lea    0x000001(%edx),%ebp

	_08c21a_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_08c221_jump:
		pop    %esi
		ret    



_08c223_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _08c238_jump
		test   %ebx,%ebx
		jg     _08c238_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_08c238_jump:
		test   %esi,%esi
		jle    _08c249_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _08c249_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _08c238_jump

	_08c249_jump:
		test   %esi,%esi
		jle    _08c256_jump

	_08c24d_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _08c24d_jump

	_08c256_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _08c26a_jump

	_08c25e_jump:
		test   %esi,%esi
		je     _08c26a_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08c25e_jump

	_08c26a_jump:
		test   %ecx,%ecx
		jle    _08c221_jump

	_08c26e_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _08c27b_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08c26e_jump

	_08c27b_jump:
		test   %ecx,%ecx
		je     _08c221_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _08c27b_jump



_08c286_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _08c2ef_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_08c2a6_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _08c2a6_jump
		xor    %ecx,%eax
		mov    (%edi),%al
		cmp    $0x00002e,%eax
		jne    _08c2c5_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _08c2e3_jump

	_08c2c5_jump:
		cmp    $0x00002b,%eax
		je     _08c2cf_jump
		cmp    $0x00002d,%eax
		jne    _08c2e3_jump

	_08c2cf_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x00002e,%eax
		jne    _08c2e3_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_08c2e3_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _080420_func

	_08c2ef_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_08c2f7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000014(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000020(%ebp)
		mov    %cl,-0x00000c(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _08ca90_func
		test   %eax,%eax
		je     _08c33d_jump
		mov    -0x000014(%ebp),%eax
		xor    %esi,%esi
		jmp    _08c330_jump

	_08c328_jump:
		cmp    %edi,%esi
		jge    _08c32e_jump
		mov    %ch,(%eax)

	_08c32e_jump:
		inc    %eax
		inc    %esi

	_08c330_jump:
		mov    -0x00003c(%esi,%ebp,1),%ch
		test   %ch,%ch
		jne    _08c328_jump
		jmp    _08c4e1_jump

	_08c33d_jump:
		mov    %cl,%al
		mov    %cl,-0x000010(%ebp)
		cmp    $0x000047,%eax
		jne    _08c3a2_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _089855_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _08c39a_jump
		call   _08cb24_func
		mov    %edx,%ebx
		call   _08cb4e_func
		call   _0805b4_func
		cmp    $0xfffffffc,%eax
		jl     _08c372_jump
		cmp    -0x000020(%ebp),%eax
		jl     _08c378_jump

	_08c372_jump:
		movb   $0x000045,-0x000010(%ebp)
		jmp    _08c3a2_jump

	_08c378_jump:
		test   %ebx,%ebx
		jl     _08c37d_jump
		inc    %eax

	_08c37d_jump:
		mov    -0x000020(%ebp),%ebx
		sub    %eax,%ebx
		mov    %ebx,-0x000020(%ebp)
		test   %eax,%eax
		jge    _08c38f_jump
		lea    -0x000001(%ebx),%eax
		mov    %eax,-0x000020(%ebp)

	_08c38f_jump:
		xor    %edx,%edx
		mov    %edx,0x00000c(%ebp)
		movb   $0x000046,-0x000010(%ebp)
		jmp    _08c3a2_jump

	_08c39a_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x000010(%ebp)

	_08c3a2_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x000045,%eax
		jne    _08c3d6_jump
		mov    -0x000020(%ebp),%eax
		mov    0x00000c(%ebp),%ebx
		neg    %eax
		cmp    %ebx,%eax
		jge    _08c3c2_jump
		mov    -0x000020(%ebp),%eax
		add    $0x000002,%eax
		cmp    %ebx,%eax
		jg     _08c3d6_jump

	_08c3c2_jump:
		mov    $0x00002a,%edx
		mov    -0x000014(%ebp),%eax
		mov    %edi,%ebx
		call   _080420_func
		jmp    _08c4f5_jump

	_08c3d6_jump:
		mov    -0x000020(%ebp),%eax
		mov    %eax,-0x000018(%ebp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000045,%eax
		jne    _08c3fc_jump
		mov    0x00000c(%ebp),%ebx
		test   %ebx,%ebx
		jle    _08c3f2_jump
		mov    -0x000020(%ebp),%eax
		inc    %eax
		jmp    _08c3f9_jump

	_08c3f2_jump:
		jge    _08c3fc_jump
		mov    -0x000020(%ebp),%eax
		add    %ebx,%eax

	_08c3f9_jump:
		mov    %eax,-0x000018(%ebp)

	_08c3fc_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _08c426_jump
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		je     _08c426_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _08c426_jump
		mov    -0x00001c(%ebp),%edx
		mov    %ecx,%ebx
		call   _08cbcd_func
		mov    %edx,-0x00001c(%ebp)

	_08c426_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		lea    -0x000024(%ebp),%ecx
		push   %edx
		mov    -0x000018(%ebp),%ebx
		mov    -0x00001c(%ebp),%edx
		call   _08ccef_func
		mov    -0x000014(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _08c454_jump
		movb   $0x00002d,(%eax)
		jmp    _08c45d_jump

	_08c454_jump:
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _08c45f_jump
		movb   $0x00002b,(%eax)

	_08c45d_jump:
		mov    %edx,%eax

	_08c45f_jump:
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		lea    0x000001(%edi),%esi
		cmp    $0x000045,%edx
		jne    _08c4b9_jump
		mov    -0x000018(%ebp),%ecx
		mov    0x00000c(%ebp),%edx
		sub    %edx,%ecx
		cmp    %ecx,%edi
		jl     _08c4e1_jump
		mov    %edx,%ebx
		lea    -0x00003c(%ebp),%edx
		call   _08c223_func
		mov    -0x000014(%ebp),%ecx
		mov    %eax,%esi
		sub    %ecx,%esi
		mov    0x000014(%ebp),%cl
		mov    %eax,%ebx
		test   %cl,%cl
		je     _08c49a_jump
		cmp    %edi,%esi
		jge    _08c49a_jump
		inc    %esi
		mov    %cl,(%eax)
		inc    %eax

	_08c49a_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		je     _08c4a6_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_08c4a6_jump:
		mov    0x000010(%ebp),%ebx
		mov    %edi,%ecx
		mov    -0x000024(%ebp),%edx
		sub    %esi,%ecx
		call   _08c180_func
		add    %eax,%esi
		jmp    _08c4e1_jump

	_08c4b9_jump:
		mov    -0x000014(%ebp),%ebx
		mov    %eax,%edx
		sub    %ebx,%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000018(%ebp),%ecx
		inc    %ebx
		add    %ecx,%ebx
		add    %ebx,%edx
		cmp    %edx,%edi
		jl     _08c4e1_jump
		mov    -0x000024(%ebp),%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000014(%ebp),%esi
		call   _08c223_func
		sub    %esi,%eax
		mov    %eax,%esi

	_08c4e1_jump:
		cmp    %edi,%esi
		jg     _08c3c2_jump
		mov    -0x000014(%ebp),%eax
		mov    %edi,%ebx
		mov    %esi,%edx
		call   _08c286_func

	_08c4f5_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_08c4fe_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_08c50c_jump:
		mov    (%eax),%bl
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000020,%edx
		je     _08c521_jump
		cmp    $0x000009,%edx
		jl     _08c524_jump
		cmp    $0x00000d,%edx
		jg     _08c524_jump

	_08c521_jump:
		inc    %eax
		jmp    _08c50c_jump

	_08c524_jump:
		xor    %cl,%cl
		and    $0x0000ff,%ebx
		lea    0x000001(%eax),%edx
		cmp    $0x00002b,%ebx
		je     _08c53b_jump
		cmp    $0x00002d,%ebx
		jne    _08c53d_jump
		mov    $0x000001,%cl

	_08c53b_jump:
		mov    %edx,%eax

	_08c53d_jump:
		xor    %ebx,%ebx
		mov    $0x000030,%dh
		mov    %ebx,-0x000014(%ebp)

	_08c544_jump:
		mov    (%eax),%dl
		mov    %cl,%ch
		movzbl %dl,%esi
		and    $0x000008,%ch
		inc    %eax
		cmp    $0x00002e,%esi
		jne    _08c560_jump
		movzbl %ch,%esi
		test   %esi,%esi
		jne    _08c58d_jump
		or     $0x000008,%cl
		jmp    _08c544_jump

	_08c560_jump:
		cmp    $0x000030,%esi
		jl     _08c58d_jump
		cmp    $0x000039,%esi
		jg     _08c58d_jump
		movzbl %ch,%esi
		test   %esi,%esi
		je     _08c574_jump
		incl   -0x000014(%ebp)

	_08c574_jump:
		or     %dl,%dh
		movzbl %dh,%esi
		cmp    $0x000030,%esi
		je     _08c588_jump
		cmp    $0x000011,%ebx
		jge    _08c587_jump
		mov    %dl,-0x000038(%ebx,%ebp,1)

	_08c587_jump:
		inc    %ebx

	_08c588_jump:
		or     $0x000004,%cl
		jmp    _08c544_jump

	_08c58d_jump:
		mov    %cl,%dh
		and    $0x000004,%dh
		movzbl %dh,%edi
		xor    %esi,%esi
		test   %edi,%edi
		je     _08c623_jump
		and    $0x0000ff,%edx
		cmp    $0x000065,%edx
		je     _08c5b3_jump
		cmp    $0x000045,%edx
		jne    _08c61f_jump

	_08c5b3_jump:
		lea    -0x000001(%eax),%edx
		mov    %edx,-0x00001c(%ebp)
		mov    (%eax),%dl
		lea    0x000001(%eax),%edi
		and    $0x0000ff,%edx
		cmp    $0x00002b,%edx
		je     _08c5d1_jump
		cmp    $0x00002d,%edx
		jne    _08c5d3_jump
		or     $0x000002,%cl

	_08c5d1_jump:
		mov    %edi,%eax

	_08c5d3_jump:
		and    $0x0000fb,%cl

	_08c5d6_jump:
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _08c5fe_jump
		cmp    $0x000039,%edx
		jg     _08c5fe_jump
		cmp    $0x0003e8,%esi
		jge    _08c5f8_jump
		imul   $0x00000a,%esi,%esi
		add    %esi,%edx
		lea    -0x000030(%edx),%esi

	_08c5f8_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _08c5d6_jump

	_08c5fe_jump:
		mov    %cl,%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _08c60d_jump
		neg    %esi

	_08c60d_jump:
		mov    %cl,%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		jne    _08c620_jump
		mov    -0x00001c(%ebp),%eax
		jmp    _08c620_jump

	_08c61f_jump:
		dec    %eax

	_08c620_jump:
		mov    %eax,-0x000018(%ebp)

	_08c623_jump:
		sub    -0x000014(%ebp),%esi
		cmp    $0x000011,%ebx
		jle    _08c635_jump
		sub    $0x000011,%ebx
		add    %ebx,%esi
		mov    $0x000011,%ebx

	_08c635_jump:
		test   %ebx,%ebx
		jle    _08c648_jump
		xor    %eax,%eax
		mov    -0x000039(%ebx,%ebp,1),%al
		cmp    $0x000030,%eax
		jne    _08c648_jump
		inc    %esi
		dec    %ebx
		jmp    _08c635_jump

	_08c648_jump:
		test   %ebx,%ebx
		jne    _08c657_jump
		mov    %ebx,-0x000024(%ebp)
		mov    %ebx,-0x000020(%ebp)
		jmp    _08c6f0_jump

	_08c657_jump:
		xor    %ah,%ah
		lea    -0x000024(%ebp),%edx
		mov    %ah,-0x000038(%ebx,%ebp,1)
		lea    -0x000038(%ebp),%eax
		call   _08af6c_func
		lea    -0x000001(%esi,%ebx,1),%eax
		cmp    $0x000134,%eax
		jle    _08c6aa_jump
		call   _0877a9_func
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _08c698_jump
		mov    _0c1d44_data,%eax
		mov    _0c1d48_data,%edx
		call   _080ae6_func
		mov    %eax,-0x000024(%ebp)
		jmp    _08c6ed_jump

	_08c698_jump:
		mov    _0c1d44_data,%eax
		mov    %eax,-0x000024(%ebp)
		mov    _0c1d48_data,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _08c6f0_jump

	_08c6aa_jump:
		cmp    $0xfffffecc,%eax
		jge    _08c6bd_jump
		xor    %edx,%edx
		call   _0877a9_func
		mov    %edx,-0x000024(%ebp)
		jmp    _08c6ed_jump

	_08c6bd_jump:
		test   %esi,%esi
		je     _08c6d4_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %esi,%ebx
		call   _08cbcd_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)

	_08c6d4_jump:
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _08c6f0_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _080ae6_func
		mov    %eax,-0x000024(%ebp)

	_08c6ed_jump:
		mov    %edx,-0x000020(%ebp)

	_08c6f0_jump:
		mov    -0x00003c(%ebp),%edi
		test   %edi,%edi
		je     _08c6fc_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%edi)

	_08c6fc_jump:
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08c70c_func:
		jmp    _08ced0_jump



_08c711_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _08c71b_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_08c71b_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0bd9c4_data,%eax
		pop    %edx
		ret    



_08c730_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _08c746_jump
		mov    %ebx,%eax
		call   _088040_func

	_08c746_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _08c762_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_08c762_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_08c766_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _08c77d_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _081132_func
		cmp    $0xffffffff,%eax
		jne    _08c766_jump
		mov    %eax,%esi

	_08c77d_jump:
		test   %edi,%edi
		je     _08c79b_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _08c79b_jump
		mov    %ebx,%eax
		call   _0880d6_func
		mov    %eax,%esi

	_08c79b_jump:
		test   %esi,%esi
		jne    _08c7a3_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_08c7a3_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08c7ab_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0bfd90_data
		jne    _08c876_jump
		mov    _0bdc29_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0bdc25_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_08c7d6_jump:
		cmp    %es:(%eax),%dl
		je     _08c7ee_jump

	_08c7db_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _08c7e9_jump
		mov    %ebx,%eax
		jmp    _08c7db_jump

	_08c7e9_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _08c7d6_jump

	_08c7ee_jump:
		sub    %edi,%eax
		jne    _08c7f7_jump
		mov    $0x000001,%eax

	_08c7f7_jump:
		call   _086012_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _08c876_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _086012_func
		test   %eax,%eax
		je     _08c86f_jump
		mov    %eax,_0bfd90_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_08c82a_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _08c84a_jump
		mov    _0bfd90_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_08c839_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _08c839_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _08c82a_jump

	_08c84a_jump:
		mov    _0bfd90_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0bfd94_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _080420_func
		jmp    _08c876_jump

	_08c86f_jump:
		mov    %edx,%eax
		call   _08610d_func

	_08c876_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08c880_func:
		push   %eax
		sub    $0x000076,%esp
		fstpt  0x00006c(%esp)
		fnsave (%esp)
		fldt   0x00001c(%esp)
		fldt   0x00006c(%esp)
		call   _08cee0_func
		fnstsw %ax
		fstpt  0x00001c(%esp)
		and    $0x0000ff,%ax
		or     0x000004(%esp),%ax
		mov    %ax,0x000004(%esp)
		frstor (%esp)
		add    $0x000076,%esp
		pop    %eax
		ret    



_08c8b4_func:
		cmpb   $0x000000,_0bfe6c_data
		je     _08c8d7_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _08c8ce_jump

	_08c8ce_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_08c8d7_jump:
		xor    %eax,%eax
		ret    



_08c8da_func:
		mov    $0x000001,%eax
		jmp    _08c9ce_jump



_08c8e4_func:
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0bfe78_data,%edx
		mov    %edx,(%esp)
		cmp    $0x000001,%edx
		je     _08c913_jump
		cmp    $0x000002,%edx
		je     _08c913_jump
		cmp    $0x000003,%edx
		je     _08c913_jump
		mov    $0x000002,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		mov    %esi,_0bfe78_data
		call   *(%esp)

	_08c913_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		ret    

_08c99e_switch:
		.long   _08ca0d_case
		.long   _08c9f8_case
		.long   _08ca64_case
		.long   _08ca18_case
		.long   _08ca64_case
		.long   _08ca64_case
		.long   _08ca41_case
		.long   _08ca64_case
		.long   _08ca64_case
		.long   _08ca64_case
		.long   _08ca64_case
		.long   _08ca64_case


	_08c9ce_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edx
		shl    $0x000002,%eax
		mov    _0bfe70_data(%eax),%ebx
		mov    %ebx,(%esp)
		lea    -0x000001(%edx),%ebx
		cmp    $0x00000b,%ebx
		ja     _08ca86_jump
		jmp    *%cs:_08c99e_switch(,%ebx,4)

	_08c9f8_case:
		mov    $0x00008c,%eax
		call   _08c8e4_func

	_08ca02_jump:
		xor    %eax,%eax

	_08ca04_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_08ca0d_case:
		cmpl   $0x000002,(%esp)
		jne    _08ca18_case
		call   _08d0e6_func

	_08ca18_case:
		mov    (%esp),%edi
		cmp    $0x000001,%edi
		je     _08ca02_jump
		cmp    $0x000002,%edi
		je     _08ca02_jump
		cmp    $0x000003,%edi
		je     _08ca02_jump
		movl   $0x000002,_0bfe70_data(,%edx,4)
		call   _08bd56_func

	_08ca3a_jump:
		mov    %edx,%eax

	_08ca3c_jump:
		call   *(%esp)
		jmp    _08ca02_jump

	_08ca41_case:
		mov    (%esp),%ebx
		cmp    $0x000001,%ebx
		je     _08ca02_jump
		cmp    $0x000002,%ebx
		je     _08ca02_jump
		cmp    $0x000003,%ebx
		je     _08ca02_jump
		movl   $0x000002,_0bfe70_data(%eax)
		call   _08bf0c_func
		jmp    _08ca3a_jump

	_08ca64_case:
		mov    (%esp),%ebp
		cmp    $0x000001,%ebp
		je     _08ca02_jump
		cmp    $0x000002,%ebp
		je     _08ca02_jump
		cmp    $0x000003,%ebp
		je     _08ca02_jump
		mov    $0x000002,%ecx
		mov    %edx,%eax
		mov    %ecx,_0bfe70_data(,%edx,4)
		jmp    _08ca3c_jump

	_08ca86_jump:
		mov    $0xffffffff,%eax
		jmp    _08ca04_jump



_08ca90_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		and    $0x00ffff,%eax
		cmp    $0x007ff0,%eax
		jne    _08cb0c_jump
		mov    0x000006(%esp),%edx
		xor    %dl,%dl
		mov    %ebx,%eax
		and    $0x000080,%dh
		and    $0x00ffff,%edx
		je     _08cac8_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_08cac8_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		xor    %dh,%dh
		and    $0x00000f,%dl
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _08cafb_jump
		mov    _0c1b40_data,%edx
		jmp    _08cb01_jump

	_08cafb_jump:
		mov    _0c1b44_data,%edx

	_08cb01_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_08cb0c_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_08cb24_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _08cb37_jump
		mov    $0x00000b,%ebx
		call   _08d103_func
		pop    %ecx
		pop    %ebx
		ret    

	_08cb37_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _08d145_func
		call   _07ff01_func
		pop    %ecx
		pop    %ebx
		ret    



_08cb4e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _08991c_func
		test   %edx,%edx
		jge    _08cb7a_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _07fd4a_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_08cb7a_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08cb87_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _08cbb2_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _08cbcd_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_08cbb2_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _08d322_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _08d2e8_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_08cbcd_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0c1de4_data,%ebx
		mov    _0c1de8_data,%ecx
		call   _085bd2_func
		jne    _08cbfd_jump
		mov    _0c1df8_data,%eax
		mov    _0c1df4_data,%ebp
		jmp    _08cc21_jump

	_08cbfd_jump:
		mov    0x000004(%esp),%edx
		mov    _0c1dec_data,%ebx
		mov    _0c1df0_data,%ecx
		mov    %ebp,%eax
		call   _085bd2_func
		jne    _08cc25_jump
		mov    _0c1e00_data,%eax
		mov    _0c1dfc_data,%ebp

	_08cc21_jump:
		mov    %eax,0x000004(%esp)

	_08cc25_jump:
		mov    (%esp),%edx
		mov    $_0c1e3c_data,%esi
		test   %edx,%edx
		jge    _08cc5c_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _08cc89_jump
		mov    0x000004(%esp),%edx
		mov    _0c1e3e_data,%ebx
		mov    _0c1e42_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _0808e0_func
		jmp    _08cc83_jump

	_08cc5c_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _08cc89_jump
		mov    0x000004(%esp),%edx
		mov    _0c1e3e_data,%ebx
		mov    _0c1e42_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07ff01_func

	_08cc83_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_08cc89_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_08cc90_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _08ccac_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _07ff01_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_08ccac_jump:
		test   %edi,%edi
		je     _08ccbd_jump
		movswl (%esi),%eax
		cmp    $0x000001,%eax
		je     _08cc90_jump
		add    $0x00000a,%esi
		jmp    _08cc90_jump

	_08ccbd_jump:
		cmpl   $0x000000,(%esp)
		jge    _08ccd0_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _0808e0_func
		jmp    _08ccdb_jump

	_08ccd0_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07ff01_func

	_08ccdb_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08ccef_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _08ca90_func
		test   %eax,%eax
		je     _08cd23_jump
		mov    0x000010(%ebp),%eax
		jmp    _08cec7_jump

	_08cd23_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _08ce82_jump
		jge    _08cd5d_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _080ae6_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_08cd5d_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _0875e0_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _08cd78_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_08cd78_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _08cda0_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_08cda0_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _08cdaf_jump
		add    %eax,%esi

	_08cdaf_jump:
		test   %esi,%esi
		jl     _08ce48_jump
		cmp    $0x000010,%esi
		jle    _08cdc1_jump
		mov    $0x000010,%esi

	_08cdc1_jump:
		lea    -0x000018(%ebp),%ebx
		xor    %ah,%ah
		mov    -0x00003c(%ebp),%edx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _08991c_func
		test   %edx,%edx
		jne    _08cde6_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _08cde6_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_08cde6_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _08cb87_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _08ce48_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _08ce13_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _08ce15_jump

	_08ce13_jump:
		add    %edx,%esi

	_08ce15_jump:
		cmp    $0x000001,%esi
		jge    _08ce21_jump
		mov    $0x000001,%esi
		jmp    _08ce2b_jump

	_08ce21_jump:
		cmp    $0x000010,%esi
		jle    _08ce2b_jump
		mov    $0x000010,%esi

	_08ce2b_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _08cb87_func
		test   %eax,%eax
		jle    _08ce48_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_08ce48_jump:
		mov    -0x000020(%ebp),%edx
		mov    -0x000022(%ebp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		or     %edx,%eax
		mov    -0x00001e(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		mov    -0x00001c(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		jne    _08ce82_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _08ce82_jump
		sub    -0x000010(%ebp),%esi

	_08ce82_jump:
		cmp    $0x000001,%esi
		jge    _08ce8e_jump
		mov    $0x000001,%esi
		jmp    _08ce98_jump

	_08ce8e_jump:
		cmp    $0x000011,%esi
		jle    _08ce98_jump
		mov    $0x000011,%esi

	_08ce98_jump:
		lea    -0x000034(%ebp),%edx
		lea    -0x000020(%ebp),%eax
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _08d38d_func
		push   %edi

	_08ceac_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _08cec4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _08ceac_jump

	_08cec4_jump:
		pop    %edi
		mov    %edi,%eax

	_08cec7_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c

	_08ced0_jump:
		xor    %eax,%eax
		ret    



_08cee0_func:
		push   %eax
		push   %ecx
		push   %edx
		sub    $0x000024,%esp
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		mov    0x000004(%esp),%ecx
		add    %ecx,%ecx
		jae    _08d0d0_jump
		mov    0x000010(%esp),%eax
		add    %eax,%eax
		jae    _08d0d0_jump
		mov    0x000008(%esp),%ecx
		mov    0x000014(%esp),%eax
		and    $0x007fff,%ecx
		je     _08d0d0_jump
		and    $0x007fff,%eax
		je     _08d0d0_jump
		cmp    $0x007fff,%ecx
		je     _08d0d0_jump
		cmp    $0x007fff,%eax
		je     _08d0d0_jump
		fldt   0x00000c(%esp)
		fabs   
		fldt   (%esp)
		fabs   
		fnstcw 0x000018(%esp)
		mov    0x000018(%esp),%edx
		or     $0x00033f,%edx
		and    $0x00f3ff,%edx
		mov    %edx,0x00001c(%esp)
		fldcw  0x00001c(%esp)
		xor    %edx,%edx
		fcom   %st(1)
		push   %eax
		fnstsw %ax
		sahf   
		pop    %eax
		jb     _08cf70_jump
		fxch   %st(1)
		inc    %edx

	_08cf70_jump:
		push   %eax
		mov    $0x00000f,%eax
		call   _087a3b_func
		pop    %eax
		flds   _0c203c_data
		fmul   %st(1),%st
		fistpl 0x000020(%esp)
		mov    0x000020(%esp),%ecx
		shl    $0x000004,%ecx
		fildl  0x000020(%esp)
		fmuls  _0c2040_data
		fld    %st(1)
		fsub   %st(1),%st
		fxch   %st(1)
		fmulp  %st,%st(2)
		fldl   _0c1ff8_data
		faddp  %st,%st(2)
		push   %eax
		mov    $0x00000f,%eax
		call   _087a3b_func
		pop    %eax
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fldt   _0c2076_data
		fldt   _0c206c_data
		fxch   %st(1)
		fmul   %st(2),%st
		fldt   _0c2062_data
		fxch   %st(2)
		fmul   %st(3),%st
		fldt   _0c2058_data
		fxch   %st(2)
		fmul   %st(5),%st
		fxch   %st(3)
		fmulp  %st,%st(4)
		fldt   _0c204e_data
		fxch   %st(3)
		faddp  %st,%st(4)
		mov    0x000014(%esp),%eax
		fldt   _0c2044_data
		fxch   %st(1)
		shl    $0x000010,%eax
		fmul   %st(6),%st
		fxch   %st(2)
		add    %eax,%eax
		fmul   %st(5),%st
		fxch   %st(3)
		adc    %edx,%edx
		fmulp  %st,%st(5)
		fxch   %st(2)
		mov    0x000008(%esp),%eax
		fmul   %st(5),%st
		fxch   %st(2)
		shl    $0x000010,%eax
		fmulp  %st,%st(5)
		fxch   %st(2)
		faddp  %st,%st(3)
		add    %eax,%eax
		faddp  %st,%st(1)
		adc    %edx,%edx
		faddp  %st,%st(2)
		faddp  %st,%st(1)
		fmul   %st(1),%st
		faddp  %st,%st(1)
		fldt   _0c2080_data(%ecx)
		faddp  %st,%st(1)
		jmp    *_0c2008_data(,%edx,4)



_08d040_func:
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d04b_func:
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d058_func:
		fldt   _0c2028_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d06b_func:
		fldt   _0c2028_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d080_func:
		fldt   _0c2032_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d093_func:
		fldt   _0c2032_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d0a8_func:
		fldt   _0c2032_data
		faddp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d0bb_func:
		fldt   _0c2032_data
		faddp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    

	_08d0d0_jump:
		fldt   (%esp)
		fldt   0x00000c(%esp)
		fpatan 
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08d0e6_func:
		push   %edx
		mov    $0x0000ff,%edx
		mov    $_0c1b48_data,%eax
		call   _08b9cc_func
		pop    %edx
		ret    



_08d103_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _08d123_jump
		test   %edx,%edx
		jne    _08d123_jump
		or     $0x001080,%ax
		jmp    _08d127_jump

	_08d123_jump:
		or     $0x001040,%ax

	_08d127_jump:
		lea    -0x000008(%ebp),%edx
		call   _0872be_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_08d145_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _08d166_jump
		mov    $0x00000a,%ebx
		call   _08d103_func
		jmp    _08d2d6_jump

	_08d166_jump:
		cmpb   $0x000000,_0bdbd9_data
		je     _08d17b_jump
		mov    %edi,%eax
		call   _08d4ae_func
		jmp    _08d2d6_jump

	_08d17b_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _0875e0_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _07fd4a_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _085bd2_func
		jle    _08d1ca_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07fd4a_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _08d1d7_jump

	_08d1ca_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_08d1d7_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07ff01_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07fd4a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _0808e0_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _07ff01_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07ff01_func
		mov    $0x000002,%ecx
		mov    $_0c1e04_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08772d_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07ff01_func
		mov    $0x000003,%ecx
		mov    $_0c1e1c_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _08772d_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _0808e0_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07fd4a_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _08d2da_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _07fd04_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _07ff01_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07fd4a_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07ff01_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07fd4a_func

	_08d2d6_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_08d2da_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08d2e8_func:
		push   %edi
		push   %ecx
		call   _08d3f7_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_08d2fa_jump:
		cmp    %cs:(%edi),%edx
		jne    _08d303_jump
		cmp    %cs:0x000004(%edi),%ecx

	_08d303_jump:
		jb     _08d30b_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _08d2fa_jump

	_08d30b_jump:
		sub    $0x000008,%edi

	_08d30e_jump:
		cmp    %cs:(%edi),%edx
		jne    _08d317_jump
		cmp    %cs:0x000004(%edi),%ecx

	_08d317_jump:
		jae    _08d31f_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _08d30e_jump

	_08d31f_jump:
		pop    %ecx
		pop    %edi
		ret    



_08d322_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _08d380_jump
		jbe    _08d356_jump

	_08d34d_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _08d34d_jump
		jmp    _08d380_jump

	_08d356_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_08d35a_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _08d35a_jump
		cmp    $0x80000000,%eax
		jb     _08d380_jump
		jne    _08d37a_jump
		or     %esi,%esi
		jne    _08d37a_jump
		test   $0x000001,%ecx
		je     _08d380_jump

	_08d37a_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_08d380_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08d38d_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_08d3a2_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _08d3b5_jump
		or     %ecx,%ecx
		jne    _08d3b7_jump
		push   %eax
		jmp    _08d3cd_jump

	_08d3b5_jump:
		div    %edi

	_08d3b7_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_08d3cd_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _08d3f1_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _08d3f1_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _08d3f1_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _08d3a2_jump

	_08d3f1_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_08d3f7_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_08d440_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_08d4ac_data:
		.ascii  "\x5f\xc3"

.text



_08d4ae_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_090000_data:
		.ascii  "\x01\x01\x01"
		.fill   0xd

_090010_data:
		.fill   0x4

_090014_data:
		.ascii  "\xff\xff\x00\x00"

_090018_data:
		.fill   0x4

_09001c_data:
		.fill   0x4

_090020_data:
		.fill   0x4

_090024_data:
		.fill   0x4

_090028_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_091914_data:
		.fill   0xe

_091922_data:
		.fill   0xc

_09192e_data:
		.fill   0x4

_091932_data:
		.fill   0x4

_091936_data:
		.fill   0x4

_09193a_data:
		.fill   0x4

_09193e_data:
		.fill   0x4

_091942_data:
		.fill   0x4

_091946_data:
		.fill   0x4

_09194a_data:
		.fill   0x10

_09195a_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_09196a_data:
		.ascii  "\x00"

_09196b_data:
		.ascii  "\x00"

_09196c_data:
		.ascii  "\x00"

_09196d_data:
		.ascii  "\x00"

_09196e_data:
		.ascii  "\x00"

_09196f_data:
		.fill   0x191

_091b00_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_091e20_data:
		.fill   0x4
		.ascii  "\x50\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xf0\x00\x00\x00\x40\x01\x00\x00"
		.ascii  "\x90\x01\x00\x00\xe0\x01\x00\x00"
		.ascii  "\x30\x02\x00\x00\x80\x02\x00\x00"
		.ascii  "\xd0\x02\x00\x00\x20\x03\x00\x00"
		.ascii  "\x70\x03\x00\x00\xc0\x03\x00\x00"
		.ascii  "\x10\x04\x00\x00\x60\x04\x00\x00"
		.ascii  "\xb0\x04\x00\x00\x00\x05\x00\x00"
		.ascii  "\x50\x05\x00\x00\xa0\x05\x00\x00"
		.ascii  "\xf0\x05\x00\x00\x40\x06\x00\x00"
		.ascii  "\x90\x06\x00\x00\xe0\x06\x00\x00"
		.ascii  "\x30\x07\x00\x00\x80\x07\x00\x00"
		.ascii  "\xd0\x07\x00\x00\x20\x08\x00\x00"
		.ascii  "\x70\x08\x00\x00\xc0\x08\x00\x00"
		.ascii  "\x10\x09\x00\x00\x60\x09\x00\x00"
		.ascii  "\xb0\x09\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x50\x0a\x00\x00\xa0\x0a\x00\x00"
		.ascii  "\xf0\x0a\x00\x00\x40\x0b\x00\x00"
		.ascii  "\x90\x0b\x00\x00\xe0\x0b\x00\x00"
		.ascii  "\x30\x0c\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xd0\x0c\x00\x00\x20\x0d\x00\x00"
		.ascii  "\x70\x0d\x00\x00\xc0\x0d\x00\x00"
		.ascii  "\x10\x0e\x00\x00\x60\x0e\x00\x00"
		.ascii  "\xb0\x0e\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x50\x0f\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\xf0\x0f\x00\x00\x40\x10\x00\x00"
		.ascii  "\x90\x10\x00\x00\xe0\x10\x00\x00"
		.ascii  "\x30\x11\x00\x00\x80\x11\x00\x00"
		.ascii  "\xd0\x11\x00\x00\x20\x12\x00\x00"
		.ascii  "\x70\x12\x00\x00\xc0\x12\x00\x00"
		.ascii  "\x10\x13\x00\x00\x60\x13\x00\x00"
		.ascii  "\xb0\x13\x00\x00\x00\x14\x00\x00"
		.ascii  "\x50\x14\x00\x00\xa0\x14\x00\x00"
		.ascii  "\xf0\x14\x00\x00\x40\x15\x00\x00"
		.ascii  "\x90\x15\x00\x00\xe0\x15\x00\x00"
		.ascii  "\x30\x16\x00\x00\x80\x16\x00\x00"
		.ascii  "\xd0\x16\x00\x00\x20\x17\x00\x00"
		.ascii  "\x70\x17\x00\x00\xc0\x17\x00\x00"
		.ascii  "\x10\x18\x00\x00\x60\x18\x00\x00"
		.ascii  "\xb0\x18\x00\x00\x00\x19\x00\x00"
		.ascii  "\x50\x19\x00\x00\xa0\x19\x00\x00"
		.ascii  "\xf0\x19\x00\x00\x40\x1a\x00\x00"
		.ascii  "\x90\x1a\x00\x00\xe0\x1a\x00\x00"
		.ascii  "\x30\x1b\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xd0\x1b\x00\x00\x20\x1c\x00\x00"
		.ascii  "\x70\x1c\x00\x00\xc0\x1c\x00\x00"
		.ascii  "\x10\x1d\x00\x00\x60\x1d\x00\x00"
		.ascii  "\xb0\x1d\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x50\x1e\x00\x00\xa0\x1e\x00\x00"
		.ascii  "\xf0\x1e\x00\x00\x40\x1f\x00\x00"
		.ascii  "\x90\x1f\x00\x00\xe0\x1f\x00\x00"
		.ascii  "\x30\x20\x00\x00\x80\x20\x00\x00"
		.ascii  "\xd0\x20\x00\x00\x20\x21\x00\x00"
		.ascii  "\x70\x21\x00\x00\xc0\x21\x00\x00"
		.ascii  "\x10\x22\x00\x00\x60\x22\x00\x00"
		.ascii  "\xb0\x22\x00\x00\x00\x23\x00\x00"
		.ascii  "\x50\x23\x00\x00\xa0\x23\x00\x00"
		.ascii  "\xf0\x23\x00\x00\x40\x24\x00\x00"
		.ascii  "\x90\x24\x00\x00\xe0\x24\x00\x00"
		.ascii  "\x30\x25\x00\x00\x80\x25\x00\x00"
		.ascii  "\xd0\x25\x00\x00\x20\x26\x00\x00"
		.ascii  "\x70\x26\x00\x00\xc0\x26\x00\x00"
		.ascii  "\x10\x27\x00\x00\x60\x27\x00\x00"
		.ascii  "\xb0\x27\x00\x00\x00\x28\x00\x00"
		.ascii  "\x50\x28\x00\x00\xa0\x28\x00\x00"
		.ascii  "\xf0\x28\x00\x00\x40\x29\x00\x00"
		.ascii  "\x90\x29\x00\x00\xe0\x29\x00\x00"
		.ascii  "\x30\x2a\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xd0\x2a\x00\x00\x20\x2b\x00\x00"
		.ascii  "\x70\x2b\x00\x00\xc0\x2b\x00\x00"
		.ascii  "\x10\x2c\x00\x00\x60\x2c\x00\x00"
		.ascii  "\xb0\x2c\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x50\x2d\x00\x00\xa0\x2d\x00\x00"
		.ascii  "\xf0\x2d\x00\x00\x40\x2e\x00\x00"
		.ascii  "\x90\x2e\x00\x00\xe0\x2e\x00\x00"
		.ascii  "\x30\x2f\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xd0\x2f\x00\x00\x20\x30\x00\x00"
		.ascii  "\x70\x30\x00\x00\xc0\x30\x00\x00"
		.ascii  "\x10\x31\x00\x00\x60\x31\x00\x00"
		.ascii  "\xb0\x31\x00\x00\x00\x32\x00\x00"
		.ascii  "\x50\x32\x00\x00\xa0\x32\x00\x00"
		.ascii  "\xf0\x32\x00\x00\x40\x33\x00\x00"
		.ascii  "\x90\x33\x00\x00\xe0\x33\x00\x00"
		.ascii  "\x30\x34\x00\x00\x80\x34\x00\x00"
		.ascii  "\xd0\x34\x00\x00\x20\x35\x00\x00"
		.ascii  "\x70\x35\x00\x00\xc0\x35\x00\x00"
		.ascii  "\x10\x36\x00\x00\x60\x36\x00\x00"
		.ascii  "\xb0\x36\x00\x00\x00\x37\x00\x00"
		.ascii  "\x50\x37\x00\x00\xa0\x37\x00\x00"
		.ascii  "\xf0\x37\x00\x00\x40\x38\x00\x00"
		.ascii  "\x90\x38\x00\x00\xe0\x38\x00\x00"
		.ascii  "\x30\x39\x00\x00\x80\x39\x00\x00"
		.ascii  "\xd0\x39\x00\x00\x20\x3a\x00\x00"
		.ascii  "\x70\x3a\x00\x00\xc0\x3a\x00\x00"
		.ascii  "\x10\x3b\x00\x00\x60\x3b\x00\x00"
		.ascii  "\xb0\x3b\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x50\x3c\x00\x00\xa0\x3c\x00\x00"
		.ascii  "\xf0\x3c\x00\x00\x40\x3d\x00\x00"
		.ascii  "\x90\x3d\x00\x00\xe0\x3d\x00\x00"
		.ascii  "\x30\x3e\x00\x00"

_092140_data:
		.fill   0x4

_092144_data:
		.fill   0x4

_092148_data:
		.fill   0x8

_092150_data:
		.fill   0x4

_092154_data:
		.fill   0x4

_092158_data:
		.fill   0x4

_09215c_data:
		.fill   0x4

_092160_data:
		.ascii  "\x23\xa5\x00\x00"

_092164_data:
		.ascii  "\x05"

_092165_data:
		.ascii  "\xfd\x00\x00\x23\xa5\x00\x00\x6e"
		.ascii  "\x8e\x00\x00\x91\x51\x00\x00\x91"
		.ascii  "\x33\x01\x00\x38\x8d\x00\x00\xd0"
		.ascii  "\xd1\x00\x00\xc9\xc0\x01\x00\x92"
		.ascii  "\x70\x00\x00\x81\xf1\x00\x00\x5b"
		.ascii  "\x31\x02\x00\xed\xb3\x00\x00\xc0"
		.ascii  "\x1a\x00\x00\x48\xe5\x02\x00\x59"
		.ascii  "\xfe\x00\x00\x3b\xa9\x00\x00\xa1"
		.ascii  "\xe3\x03\x00\x8a\xf0\x00\x00\x7a"
		.ascii  "\x15\x00\x00\x2b\xd4\x04\x00\x22"
		.ascii  "\xc5\x00\x00\x0e\xdf\x00\x00\x4d"
		.ascii  "\x99\x05\x00\xf3\x23\x01\x00\x45"
		.ascii  "\xca\x00\x00\x40\xbd\x06\x00\xe5"
		.ascii  "\x39\x01\x00\xc8\xb3\x00\x00\x25"
		.ascii  "\xf7\x07\x00\x60\x13\x01\x00\x6a"
		.ascii  "\x9e\x00\x00\x85\x0a\x09\x00\x03"
		.ascii  "\x7d\x00\x00\x10\xf0\x00\x00\x88"
		.ascii  "\x87\x09\x00\x0c\x58\x00\x00\x9d"
		.ascii  "\x3b\x00\x00\x94\xdf\x09\x00\xf1"
		.ascii  "\x5f\x00\x00\xdd\x51\x00\x00\x85"
		.ascii  "\x3f\x0a\x00\xb4\xec\x00\x00\x3c"
		.ascii  "\xe9\x00\x00\x39\x2c\x0b\x00\xd6"
		.ascii  "\x81\x00\x00\x5f\x6d\x00\x00\x0f"
		.ascii  "\xae\x0b\x00\x51\x7b\x00\x00\xc8"
		.ascii  "\x69\x00\x00\x60\x29\x0c\x00\x89"
		.ascii  "\x56\x00\x00\x62\x4d\x00\x00\xe9"
		.ascii  "\x7f\x0c\x00\xb3\x78\x00\x00\xe2"
		.ascii  "\xd6\x00\x00\x9c\xf8\x0c\x00\x69"
		.ascii  "\x54\x00\x00\x21\xfd\x00\x00\x05"
		.ascii  "\x4d\x0d\x00\x51\x2f\x01\x00\xaf"
		.ascii  "\xc7\x00\x00\x56\x7c\x0e\x00\x1b"
		.ascii  "\x2b\x01\x00\xff\x4f\x00\x00\x71"
		.ascii  "\xa7\x0f\x00\xd3\x69\x01\x00\x73"
		.ascii  "\xb5\x00\x00\x44\x11\x11\x00\x10"
		.ascii  "\xc8\x00\x00\x9e\x61\x00\x00\x54"
		.ascii  "\xd9\x11\x00\x5c\xa4\x00\x00\xcb"
		.ascii  "\xfe\x00\x00\xb0\x7d\x12\x00\x32"
		.ascii  "\xd5\x00\x00\x55\x53\x00\x00\xe2"
		.ascii  "\x52\x13\x00\x4a\x96\x00\x00\xb9"
		.ascii  "\x52\x00\x00\x2c\xe9\x13\x00\xdb"
		.ascii  "\xbb\x00\x00\xe4\x52\x00\x00\x07"
		.ascii  "\xa5\x14\x00\x40\x92\x00\x00\x96"
		.ascii  "\x04\x00\x00\x47\x37\x15\x00\xd9"
		.ascii  "\x23\x00\x00\x01\xe1\x00\x00\x20"
		.ascii  "\x5b\x15\x00\x57\x3f\x00\x00\x79"
		.ascii  "\x61\x00\x00\x77\x9a\x15\x00\x57"
		.ascii  "\x3f\x00\x00\x1a\x64\x00\x00\xce"
		.ascii  "\xd9\x15\x00\xa4\x5d\x00\x00\xb4"
		.ascii  "\xeb\x00\x00\x72\x37\x16\x00\x98"
		.ascii  "\x76\x00\x00\x51\x40\x00\x00\x0a"
		.ascii  "\xae\x16\x00\x32\xd7\x00\x00\x80"
		.ascii  "\xd5\x00\x00\x3c\x85\x17\x00\x30"
		.ascii  "\xd3\x00\x00\xa5\x11\x00\x00\x6c"
		.ascii  "\x58\x18\x00\x30\x1e\x01\x00\xe1"
		.ascii  "\x37\x00\x00\x9c\x76\x19\x00\x8d"
		.ascii  "\x19\x01\x00\xc4\xd2\x00\x00\x29"
		.ascii  "\x90\x1a\x00\x33\x0a\x02\x00\x72"
		.ascii  "\x43\x00\x00\x5c\x9a\x1c\x00\x33"
		.ascii  "\x0a\x02\x00\xfc\x99\x00\x00\x8f"
		.ascii  "\xa4\x1e\x00\xe3\xf9\x00\x00\x9a"
		.ascii  "\x0f\x00\x00\x72\x9e\x1f\x00\x65"
		.ascii  "\x61\x00\x00\x44\x32\x00\x00\xd7"
		.ascii  "\xff\x1f\x00\xc5\xc6\x00\x00\x52"
		.ascii  "\xc5\x00\x00\x9c\xc6\x20\x00\x24"
		.ascii  "\xb1\x00\x00\x4b\x97\x00\x00\xc0"
		.ascii  "\x77\x21\x00\x61\x83\x00\x00\x8b"
		.ascii  "\x47\x00\x00\x21\xfb\x21\x00\x6f"
		.ascii  "\xf5\x00\x00\x22\x77\x00\x00\x90"
		.ascii  "\xf0\x22\x00\xe9\x49\x00\x00\xd0"
		.ascii  "\x2f\x00\x00\x79\x3a\x23\x00\xea"
		.ascii  "\x92\x00\x00\xcb\x6b\x00\x00\x63"
		.ascii  "\xcd\x23\x00\xb7\xd1\x00\x00\xbb"
		.ascii  "\x60\x00\x00\x1a\x9f\x24\x00\xc3"
		.ascii  "\x53\x00\x00\xd5\x44\x00\x00\xdd"
		.ascii  "\xf2\x24\x00\xff\x67\x00\x00\x56"
		.ascii  "\x88\x00\x00\xdc\x5a\x25\x00\x52"
		.ascii  "\x43\x00\x00\xdc\x61\x00\x00\x2e"
		.ascii  "\x9e\x25\x00\x99\x66\x00\x00\x79"
		.ascii  "\x9f\x00\x00\xc7\x04\x26\x00\xd0"
		.ascii  "\x5c\x00\x00\x72\x7d\x00\x00\x97"
		.ascii  "\x61\x26\x00\xac\x3b\x00\x00\xd1"
		.ascii  "\x13\x00\x00\x43\x9d\x26\x00\xc2"
		.ascii  "\x48\x00\x00\xe7\x1f\x00\x00\x05"
		.ascii  "\xe6\x26\x00\x27\x44\x00\x00\x05"
		.ascii  "\x21\x00\x00\x2c\x2a\x27\x00\xaf"
		.ascii  "\x55\x00\x00\xeb\xe7\x00\x00\xdb"
		.ascii  "\x7f\x27\x00\x23\x5e\x00\x00\x40"
		.ascii  "\xb0\x00\x00\xfe\xdd\x27\x00\x92"
		.ascii  "\x56\x00\x00\xf6\x28\x00\x00\x90"
		.ascii  "\x34\x28\x00\x83\x35\x00\x00\xff"
		.ascii  "\xf7\x00\x00\x13\x6a\x28\x00\x52"
		.ascii  "\x46\x00\x00\x08\x17\x00\x00\x65"
		.ascii  "\xb0\x28\x00\x9c\x5a\x00\x00\xfd"
		.ascii  "\x96\x00\x00\x01\x0b\x29\x00\x2b"
		.ascii  "\x5a\x00\x00\x10\xc6\x00\x00\x2c"
		.ascii  "\x65\x29\x00\xa0\x33\x00\x00\x91"
		.ascii  "\x56\x00\x00\xcc\x98\x29\x00\x0c"
		.ascii  "\xa1\x00\x00\x25\xd2\x00\x00\xd8"
		.ascii  "\x39\x2a\x00\x09\x68\x00\x00\xce"
		.ascii  "\x14\x00\x00\xe1\xa1\x2a\x00\x80"
		.ascii  "\x41\x00\x00\x56\xee\x00\x00\x61"
		.ascii  "\xe3\x2a\x00\xe0\x68\x00\x00\x5b"
		.ascii  "\x97\x00\x00\x41\x4c\x2b\x00\x46"
		.ascii  "\x68\x00\x00\xb0\x68\x00\x00\x87"
		.ascii  "\xb4\x2b\x00\x35\x47\x00\x00\xab"
		.ascii  "\x92\x00\x00\xbc\xfb\x2b\x00\xb8"
		.ascii  "\xb0\x00\x00\xde\xee\x00\x00\x74"
		.ascii  "\xac\x2c\x00\xaa\x4a\x00\x00\x21"
		.ascii  "\x24\x00\x00\x1e\xf7\x2c\x00\x2f"
		.ascii  "\xb9\x00\x00\x61\x34\x00\x00\x4d"
		.ascii  "\xb0\x2d\x00\x25\x3a\x00\x00\x4d"
		.ascii  "\x9b\x00\x00"

_0924e0_data:
		.fill   0x4

_0924e4_data:
		.ascii  "\x8a\x10\x00\x00"

_0924e8_data:
		.ascii  "\x30"

_0924e9_data:
		.ascii  "\xb4\x00\x00\x8a\x10\x00\x00\x69"
		.ascii  "\x12\x00\x00\x82\xa1\x00\x00\xf3"
		.ascii  "\x22\x00\x00\x27\x13\x00\x00\xcf"
		.ascii  "\x5c\x00\x00\x1a\x36\x00\x00\xcf"
		.ascii  "\x09\x00\x00\xd0\xc0\x00\x00\xe9"
		.ascii  "\x3f\x00\x00\x3e\x09\x00\x00\x95"
		.ascii  "\x14"

_09251a_data:
		.ascii  "\x00\x00"

_09251c_data:
		.ascii  "\x00\x00"

_09251e_data:
		.ascii  "\x00\x00"

_092520_data:
		.ascii  "\x00\x00"

_092522_data:
		.ascii  "\x00\x00"

_092524_data:
		.ascii  "\x02\x01\x03\x00\x04\x07\x06\x05"
		.ascii  "\x01\x03\x02\x00\x04\x07\x06\x05"
		.ascii  "\x04\x01\x03\x02\x00\x07\x06\x05"

_09253c_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b"
		.fill   0x4
		.ascii  "\x03\x13\x00\x00\x4a\xca\x4a\x4a"
		.ascii  "\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_09257c_data:
		.ascii  "\x28"

_09257d_data:
		.ascii  "\x80"

_09257e_data:
		.ascii  "\x03"

_09257f_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x20\x00\x02\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x10"
		.ascii  "\x20\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x01\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x98\x80\x03"
		.ascii  "\x03\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x80\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x04\x02\x03"
		.ascii  "\x22\x05\x00\x23\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x28\x00\x23"
		.ascii  "\x03\x09\xb0\x03\x42\x98\x80\x03"
		.ascii  "\x03\x05\x00\x20\x48\x00\x80\x03"
		.ascii  "\x02\x28\x00\x22\x03\x09\x90\x63"
		.ascii  "\x43\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x20\x80\x03\x02\x09\x80\x23"
		.ascii  "\x42\x09\x80\x23\x42\x09\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x02"
		.ascii  "\x03\x19\x80\x27\x43\x98\xb0\x03"
		.ascii  "\x03\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x09\x10\x23"
		.ascii  "\x43\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\xc0\x02\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x38\x90\x03"
		.ascii  "\x03\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x28\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x09\x80\x22\x42\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x00\x13\x42\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\xb8\x84\x02"
		.ascii  "\x03\x08\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x30\x80\x03\x03\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x00\x03"
		.ascii  "\x42\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x00\x12\x42\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x09\x80\x22"
		.ascii  "\x4a\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\xb0\x23\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x98\x80\x13"
		.ascii  "\x03\x20\x80\x03\x43\x08\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x98\x84\x03\x03\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x19\xf0\x03"
		.ascii  "\x42\x08\x00\x02\x02\x19\x90\x22"
		.ascii  "\x43\x09\xb0\x02\x43\x09\xb0\x22"
		.ascii  "\x43\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x05\x00\x02\x42\x98\x84\x13"
		.ascii  "\x03\x20\x80\x03\x03\x08\x84\x13"
		.ascii  "\x03\x08\x80\x13\x03\x05\x00\x03"
		.ascii  "\x42\x09\x00\x03\x42\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x01\x00\x43\x42\x28\x80\x02"
		.ascii  "\x03\x98\xb0\x03\x03\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x02"
		.ascii  "\x02\x08\x80\x03\x03\x08\x90\x03"
		.ascii  "\x03\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x08\x80\x02\x03\x09\x90\x02"
		.ascii  "\x43\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x08\xa0\x02\x43\x08\xa0\x02"
		.ascii  "\x43\x09\x80\x22\x42\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x02\x05\x00\x00"
		.ascii  "\x42\x28\x00\x23\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x19\x90\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x09\x90\x02"
		.ascii  "\x42\x04\xa0\x02\x42\x08\x00\x02"
		.ascii  "\x02\x04\x00\x02\x42\x04\x00\x02"
		.ascii  "\x42\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x01\xb0\x03"
		.ascii  "\x42\x00\xb0\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02"

_092994_data:
		.ascii  "\x00\x00"

_092996_data:
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xfa\x00\x00\x00\xfa\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x3c"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\xce\xff"
		.fill   0x1c
		.ascii  "\x3c\x00\x00\x00\x96"
		.fill   0xd
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc2\x01\xce\xff\x00\x00\x64\x00"
		.ascii  "\x00\x00\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xc
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x28\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0xf
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8\x00\x00\x00\xce\xff"
		.fill   0x16
		.ascii  "\xce\xff\xce\xff\xce\xff\x00\x00"
		.ascii  "\x64"
		.fill   0x23

_092ba2_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x2c
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff\x00\x00\x2c\x01"
		.fill   0x4
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\xce\xff\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\xc8\x00\xc8"
		.fill   0x7
		.ascii  "\x14\x00\x14"
		.fill   0x9
		.ascii  "\xc8"
		.fill   0x1b
		.ascii  "\x96\x00\x00\x00\x32"
		.fill   0xb
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\x32\x00\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x1d
		.ascii  "\x14\x00\x14"
		.fill   0xd
		.ascii  "\x32"
		.fill   0x19

_092dae_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\xeb\xff\xed\xff\x40\x40\x03\x00"
		.ascii  "\x69\x00\xa8\x00\x30\x3c\x01\xff"
		.ascii  "\x61\x00\x81\x00\x02\x02\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\x4a\x00\x49\x00\x0d\x0e\x01\xff"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x01\x00\xf8\xff"
		.ascii  "\x0d\x1e\x03\x00\x06\x00\x03\x00"
		.ascii  "\x0b\x02\x03\x00\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x3f\x00\x4d\x00"
		.ascii  "\x15\x0a\x04\xff\x08\x00\x05\x00"
		.ascii  "\x12\x17\x03\x03\x07\x00\x0e\x00"
		.ascii  "\x06\x07\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x06\x00\x04\x00"
		.ascii  "\x18\x19\x06\x04\x02\x00\x04\x00"
		.ascii  "\x12\x0e\x03\x05\x08\x00\x08\x00"
		.ascii  "\x31\x33\x03\x06\x12\x00\x09\x00"
		.ascii  "\x10\x10\x03\x01\x13\x00\x02\x00"
		.ascii  "\x0e\x44\x03\x03\xfd\xff\xfe\xff"
		.ascii  "\x0b\x07\x03\x0a\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x00\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x01\x02\x00\x14\x00"
		.ascii  "\x20\x25\x03\x02\x0b\x00\x0d\x00"
		.ascii  "\x3b\x0c\x03\x03\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0e\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0f"
		.fill   0x4
		.ascii  "\x13\x20\x06\x0a\x04\x00\x00\x00"
		.ascii  "\x13\x20\x06\x0b\x4a\x00\x49\x00"
		.ascii  "\x0d\x0e\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x03\x00\x03\x00"
		.ascii  "\x0c\x0c\x03\x04\x07\x00\x04\x00"
		.ascii  "\x0d\x0b\x03\x06\x04\x00\x03\x00"
		.ascii  "\x11\x11\x03\x07\x0c\x00\x0b\x00"
		.ascii  "\x1f\x1c\x03\x0b\x0f\x00\x14\x00"
		.ascii  "\x16\x2f\x03\x0c\x0d\x00\xfa\xff"
		.ascii  "\x35\x21\x03\x10\x06\x00\x07\x00"
		.ascii  "\x1e\x0e\x03\x11\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x04\x00\x04\x00"
		.ascii  "\x10\x10\x03\x00\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x12\x00\x07\x00"
		.ascii  "\x20\x1d\x03\x02\x07\x00\x00\x00"
		.ascii  "\x1a\x17\x03\x05\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x0e\x00\x05\x00"
		.ascii  "\x5d\x0c\x03\x08\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x0c\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x48\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x15\x10\x03\x00\x05\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x03\x06\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x06\x0b\x00\x07\x00"
		.ascii  "\x17\x12\x03\x08\x07\x00\x02\x00"
		.ascii  "\x10\x09\x03\x02\x0c\x00\x07\x00"
		.ascii  "\x2f\x0f\x03\x04\x0f\x00\x07\x00"
		.ascii  "\x38\x11\x03\x05\x04\x00\x02\x00"
		.ascii  "\x06\x32\x03\x07\x0a\x00\x16\x00"
		.ascii  "\x38\x07\x03\x08\x16\x00\x12\x00"
		.ascii  "\x16\x32\x03\x06\x10\x00\x02\x00"
		.ascii  "\x2b\x1e\x03\x01\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\x0d\x00\x04\x00"
		.ascii  "\x07\x08\x03\x08\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x06\x00\x05\x00"
		.ascii  "\x07\x11\x03\x01\x07\x00\xf8\xff"
		.ascii  "\x09\x22\x03\x03\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x0b\x00\xba\x00"
		.ascii  "\x38\x22\x01\xff\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03"
		.fill   0x79

_0933ee_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x1c
		.ascii  "\x0d\x08\x00\x00\x0e\x08\x0f\x08"
		.fill   0x4
		.ascii  "\x10\x08\x11\x08"
		.fill   0x4
		.ascii  "\x12\x08\x13\x08\x14\x08"
		.fill   0x4
		.ascii  "\x15\x08\x00\x00\x16\x08"
		.fill   0x4
		.ascii  "\x17\x20\x1b\x08\x1c\x08\x1d\x08"
		.fill   0xe
		.ascii  "\x1e\x08"
		.fill   0xe
		.ascii  "\x1f\x08"
		.fill   0x4
		.ascii  "\x20\x08\x21\x08\x22\x10"
		.fill   0x4
		.ascii  "\x24\x10\x26\x08"
		.fill   0x4
		.ascii  "\x27\x08"
		.fill   0x10
		.ascii  "\x28\x08\x29\x08\x2a\x08"
		.fill   0x4
		.ascii  "\x2b\x08\x2c\x18\x00\x00\x2f\x18"
		.fill   0x4
		.ascii  "\x32\x20\x36\x08"
		.fill   0x8
		.ascii  "\x37\x08\x00\x00\x38\x08\x00\x00"
		.ascii  "\x39\x08\x3a\x08"
		.fill   0x6
		.ascii  "\x3b\x08\x3c\x08\x3d\x08\x00\x00"
		.ascii  "\x3e\x40\x00\x00\x46\x08\x47\x08"
		.ascii  "\x48\x08\x00\x00\x49\x08\x4a\x18"
		.ascii  "\x4d\x10"
		.fill   0xa
		.ascii  "\x4f\x08"
		.fill   0x4
		.ascii  "\x50\x08"
		.fill   0x4
		.ascii  "\x51\x08"
		.fill   0x8
		.ascii  "\x52\x08\x00\x00\x53\x20"
		.fill   0x4
		.ascii  "\x57\x38\x5e\x08\x5f\x08"
		.fill   0x6
		.ascii  "\x60\x08"
		.fill   0x8
		.ascii  "\x61\x08"
		.fill   0x6
		.ascii  "\x62\x10\x00\x00\x64\x08\x65\x08"
		.ascii  "\x00\x00\x66\x08"
		.fill   0x6
		.ascii  "\x67\x10\x69\x08\x6a\x10\x00\x00"
		.ascii  "\x6c\x10\x6e\x10\x70\x10\x00\x00"
		.ascii  "\x72\x08\x73\x10\x75\x10\x77\x08"
		.ascii  "\x00\x00\x78\x10\x7a\x08\x7b\x08"
		.ascii  "\x00\x00\x7c\x08\x7d\x28\x82\x10"
		.ascii  "\x84\x10"
		.fill   0x10
		.ascii  "\x86\x08"
		.fill   0x4
		.ascii  "\x87\x08"
		.fill   0x4
		.ascii  "\x88\x08\x89\x08\x00\x00\x8a\x08"
		.ascii  "\x8b\x08"
		.fill   0x8
		.ascii  "\x8c\x20"
		.fill   0x8
		.ascii  "\x90\x30\x96\x08\x97\x10\x99\x10"
		.ascii  "\x9b\x20\x00\x00\x9f\x08\xa0\x08"
		.ascii  "\xa1\x10\xa3\x10\xa5\x08\xa6\x08"
		.ascii  "\x00\x00\xa7\x08"
		.fill   0x4
		.ascii  "\xa8\x10\xaa\x10\xac\x10\xae\x10"
		.ascii  "\xb0\x10\xb2\x28"
		.fill   0x6
		.ascii  "\xb7\x08\x00\x00\xb8\x08"
		.fill   0x18

_0935fc_data:
		.long   _02f658_func

_093600_data:
		.long   _062b54_func

_093604_data:
		.long   _02ed74_func

_093608_data:
		.long   _062c40_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _0643bc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _061ea0_func
		.long   _0612f0_func
		.long   _0291b4_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _02937c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _06154c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _03167c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0315f0_func
		.long   _03167c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _0629d8_func
		.long   _02ed74_func
		.long   _062ad4_func
		.long   _0612f0_func
		.long   _0674c8_func
		.long   _0676ec_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _0628c0_func
		.long   _02ed74_func
		.long   _062928_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _0628c0_func
		.long   _02ed74_func
		.long   _062928_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _062658_func
		.long   _062854_func
		.long   _02ed74_func
		.long   _0628b8_func
		.long   _0612f0_func
		.long   _06309c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _06323c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0404b0_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _040e58_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07d83c_func
		.long   _07e190_func
		.long   _02ed74_func
		.long   _07e2fc_func
		.long   _0612f0_func
		.long   _07cd54_func
		.long   _07d43c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _061894_func
		.long   _061968_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _061f20_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07cb48_func
		.long   _07ccf0_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _062140_func
		.long   _0612f0_func
		.long   _07d908_func
		.long   _07e190_func
		.long   _02ed74_func
		.long   _07e2fc_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _021568_func
		.long   _022050_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07cd54_func
		.long   _07d43c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _054e1c_func
		.long   _055144_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _05544c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0625e8_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _062644_func
		.long   _0612f0_func
		.long   _07d070_func
		.long   _07e258_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _062e10_func
		.long   _0612f0_func
		.long   _028b50_func
		.long   _028ba4_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _028b40_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02b18c_func
		.long   _02ed74_func
		.long   _02b274_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02b18c_func
		.long   _02ed74_func
		.long   _02b274_func
		.long   _0612f0_func
		.long   _031400_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _01cc24_func
		.long   _01cdb0_func
		.long   _02ed74_func
		.long   _01ce70_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07cd54_func
		.long   _07d43c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07e420_func
		.long   _07e6bc_func
		.long   _02ed74_func
		.long   _07e72c_func
		.long   _0612f0_func
		.long   _075b0c_func
		.long   _0760cc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _05d964_func
		.long   _05dc90_func
		.long   _02ed74_func
		.long   _05d934_func
		.long   _0612f0_func
		.long   _05dd58_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _076614_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03dbb8_func
		.long   _03e398_func
		.long   _02ed74_func
		.long   _03e4b4_func
		.long   _0612f0_func
		.long   _03e550_func
		.long   _02d858_jump
		.long   _07b370_func
		.long   _0612f0_func
		.long   _07d0f0_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _031f00_func
		.long   _02d858_jump
		.long   _032738_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _062024_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f714_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02ffdc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _062ed0_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _062fcc_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _0760cc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _0760cc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _075b0c_func
		.long   _0760cc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _075b0c_func
		.long   _0760cc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _066da4_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _061db0_func
		.long   _0612f0_func
		.long   _02018c_func
		.long   _0200f0_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _020cf8_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _052870_func
		.long   _052af4_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _031768_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _05342c_func
		.long   _053838_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _061d10_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _067100_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _041650_func
		.long   _02d858_jump
		.long   _0419e4_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _07e120_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _07e000_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02fbf4_func
		.long   _02d858_jump
		.long   _02fc64_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02300c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02a940_func
		.long   _02b1fc_func
		.long   _02ed74_func
		.long   _02b2a0_func
		.long   _0612f0_func
		.long   _02ab2c_func
		.long   _02b1fc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02abc8_func
		.long   _02b1fc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _07b370_func
		.long   _0612f0_func
		.long   _01fd9c_func
		.long   _020088_func
		.long   _02ed74_func
		.long   _020058_func
		.long   _0612f0_func
		.long   _022eac_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07cb48_func
		.long   _07ccf0_func
		.long   _02ed74_func
		.long   _07e33c_func
		.long   _0612f0_func
		.long   _0234cc_func
		.long   _0234fc_func
		.long   _02ed74_func
		.long   _0235a0_func
		.long   _0231bc_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _06252c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _061c34_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _061c08_func
		.long   _061c20_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03171c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0671f8_func
		.long   _067380_func
		.long   _02ed74_func
		.long   _06773c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _061ee4_func
		.long   _0612f0_func
		.long   _0315f0_func
		.long   _03167c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0620e4_func
		.long   _02d858_jump
		.long   _062104_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02f378_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _05c3dc_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _061c4c_func
		.long   _061c84_func
		.long   _0612f0_func
		.long   _031190_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0291b4_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f714_func
		.long   _02f978_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0301a4_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _055230_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0553e0_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _061d54_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _079f64_func
		.long   _07a264_func
		.long   _02ed74_func
		.long   _07a1dc_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _062cd4_func
		.long   _062d68_func
		.long   _02ed74_func
		.long   _062dc4_func
		.long   _0612f0_func
		.long   _039db0_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _03a118_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _030260_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _030490_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _061f50_func
		.long   _0612f0_func
		.long   _07e838_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07eb84_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _0620c4_func
		.long   _0612f0_func
		.long   _061a90_func
		.long   _0629d8_func
		.long   _02ed74_func
		.long   _062ad4_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _07ebb8_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0315f0_func
		.long   _03167c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _032280_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _032280_func
		.long   _02d858_jump
		.long   _032738_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _07ce04_func
		.long   _07e258_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _031208_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _063340_func
		.long   _063610_func
		.long   _02ed74_func
		.long   _06374c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _03167c_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03088c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03088c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0771b8_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0776f4_func
		.long   _0612f0_func
		.long   _075b0c_func
		.long   _0760cc_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _077704_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0778a4_func
		.long   _0612f0_func
		.long   _063340_func
		.long   _063610_func
		.long   _02ed74_func
		.long   _06374c_func
		.long   _0612f0_func
		.long   _030260_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _065d90_func
		.long   _066244_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f2fc_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _065b10_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _052c54_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _052d10_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _01c160_func
		.long   _01c588_func
		.long   _02ed74_func
		.long   _01c6a0_func
		.long   _0612f0_func
		.long   _01c75c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _028c2c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _022094_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _022a7c_func
		.long   _0612f0_func
		.long   _022bac_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _022dd0_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _030908_func
		.long   _02d858_jump
		.long   _030be4_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _030be4_func
		.long   _0612f0_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _030bf8_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _041328_func
		.long   _02d858_jump
		.long   _041354_func
		.long   _0612f0_func
		.long   _041328_func
		.long   _02d858_jump
		.long   _041354_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0331fc_func
		.long   _033630_func
		.long   _02ed74_func
		.long   _033670_func
		.long   _0612f0_func
		.long   _052870_func
		.long   _052af4_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _063030_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0336c8_func
		.long   _02d858_jump
		.long   _033980_func
		.long   _0612f0_func
		.long   _062e2c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _05387c_func
		.long   _053a04_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03f340_func
		.long   _03f4a4_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _030ea8_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _031060_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0310f8_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03f598_func
		.long   _03f7ec_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _063340_func
		.long   _063610_func
		.long   _02ed74_func
		.long   _06374c_func
		.long   _0612f0_func
		.long   _063340_func
		.long   _063610_func
		.long   _02ed74_func
		.long   _06374c_func
		.long   _0612f0_func
		.long   _054e1c_func
		.long   _055144_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _061bb0_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03f8ac_func
		.long   _03fd78_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03f8ac_func
		.long   _03fd78_func
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03ff5c_func
		.long   _02d858_jump
		.long   _040168_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _033b4c_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03dbb8_func
		.long   _03e398_func
		.long   _02ed74_func
		.long   _03e4b4_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03088c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _03088c_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _052c54_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _034024_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _063244_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _028874_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _0287d4_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func
		.long   _02f658_func
		.long   _02d858_jump
		.long   _02ed74_func
		.long   _0612f0_func

_094a74_data:
		.ascii  "\x00\x16\x12\x0d\x0d\x0c"

_094a7a_data:
		.ascii  "\x04\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00"

_094a9c_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_094b9c_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_094bc2_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_094bea_data:
		.ascii  "\x00\x00"

_094bec_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_094c14_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_094c92_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_094cf2_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_094d0e_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_094d18_data:
		.ascii  "\x80"
		.string "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_094d5a_data:
		.ascii  "\x00\x00"

_094d5c_data:
		.ascii  "\x1d\x00"

_094d5e_data:
		.ascii  "\x08\x01"

_094d60_data:
		.ascii  "\x12"

_094d61_data:
		.ascii  "\x00"

_094d62_data:
		.ascii  "\x00"

_094d63_data:
		.ascii  "\x01"

_094d64_data:
		.ascii  "\x01"

_094d65_data:
		.ascii  "\x00"

_094d66_data:
		.ascii  "\x01"

_094d67_data:
		.ascii  "\x01"

_094d68_data:
		.ascii  "\x02\x00\x00\x00"

_094d6c_data:
		.long   _0bfea8_data
		.ascii  "\x64\x00\xfe\x00\x02\x01\x00\x04"

_094d78_data:
		.ascii  "\x00\x00\x01\x05"
		.fill   0x4
		.long   _0bfea8_data
		.ascii  "\x5a\x00\xd4\x00\x02\x01\x03\x02"

_094d8c_data:
		.ascii  "\x00\x00\x01\x09\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x2f\x00\xc8\x00\x03\x03\x03\x02"

_094da0_data:
		.ascii  "\x00\x00\x01\x0c\x01\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xb4\x00\xd7\x00\x05\x13\x01\x04"

_094db4_data:
		.ascii  "\x00\x00\x02\x01\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xb9\x00\xaf\x00\x08\x04\x06\x08"

_094dc8_data:
		.ascii  "\x00\x00\x02\x07"
		.fill   0x4
		.long   _0bfea8_data
		.ascii  "\x87\x00\xa0\x00\x14\x06\x07\x05"

_094ddc_data:
		.ascii  "\x00\x00\x02\x0c\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x5b\x00\x8f\x00\x07\x07\x07\x06"

_094df0_data:
		.ascii  "\x00\x00\x02\x0e\x03\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xd4\x00\x85\x00\x09\x05\x05\x08"

_094e04_data:
		.ascii  "\x00\x00\x03\x01\x01\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xd1\x00\x5c\x00\x15\x08\x09\x0a"

_094e18_data:
		.ascii  "\x00\x00\x03\x03"
		.fill   0x4
		.long   _0bfea8_data
		.ascii  "\x01\x01\x50\x00\x0a\x0b\x09\x0a"

_094e2c_data:
		.ascii  "\x00\x00\x03\x06\x01\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xea\x00\xeb\x00\x0a\x0b\x0b\x0c"

_094e40_data:
		.ascii  "\x00\x00\x04\x01\x01\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x16\x01\xbe\x00\x0d\x0b\x0b\x0c"

_094e54_data:
		.ascii  "\x00\x00\x04\x05\x05\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x22\x01\x91\x00\x16\x0c\x0d\x0e"

_094e68_data:
		.ascii  "\x00\x00\x04\x08\x01\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x4f\x01\xb4\x00\x0d\x0f\x0d\x0e"

_094e7c_data:
		.ascii  "\x00\x00\x05\x01"
		.fill   0x4
		.long   _0bfea8_data
		.ascii  "\x38\x01\xe4\x00\x0e\x17\x0f\x10"

_094e90_data:
		.ascii  "\x00\x00\x05\x03\x05\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x68\x01\xdc\x00\x11\x10\x0f\x10"

_094ea4_data:
		.ascii  "\x00\x00\x05\x09\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x65\x01\x50\x00\x11\x10\x11\x11"

_094eb8_data:
		.ascii  "\x00\x00\x06\x01\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\x0a\x00\xd4\x00\x12\x00\x12\x12"

_094ecc_data:
		.ascii  "\x00\x00\x07\x14\x05\x00\x00\x00"

_094ed4_data:
		.long   _0bfea8_data
		.ascii  "\xb6\x00\x0a\x01\x04\x13\x13\x13"

_094ee0_data:
		.ascii  "\x00\x00\x07\x14\x03\x00\x00\x00"

_094ee8_data:
		.long   _0bfea8_data
		.ascii  "\x91\x00\x61\x00\x14\x06\x14\x14"

_094ef4_data:
		.ascii  "\x00\x00\x07\x14"
		.fill   0x4

_094efc_data:
		.long   _0bfea8_data
		.ascii  "\xbe\x00\x2d\x00\x15\x09\x15\x15"

_094f08_data:
		.ascii  "\x00\x00\x07\x14\x02\x00\x00\x00"

_094f10_data:
		.long   _0bfea8_data
		.ascii  "\x14\x01\x73\x00\x16\x0d\x16\x16"

_094f1c_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094f24_data:
		.long   _0bfea8_data
		.ascii  "\x32\x01\x0b\x01\x0f\x17\x17\x17"

_094f30_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094f38_data:
		.ascii  "\xa8\xfe\x0b"

_094f3b_data:
		.ascii  "\x00\x0e\x0e\x09\x0e\x0e\x05\x0e"
		.ascii  "\x09\x0e\x0e\x0e\x0e\x0e\x0e\x0e"
		.ascii  "\x05\x09\x0f\x0f\x0f\x0f\x0f\x11"
		.ascii  "\x11\x11\x11\x11\x11\x11\x11\x11"
		.ascii  "\x11\x09\x11\x11\x11\x07\x07\x0f"
		.ascii  "\x0f"
		.fill   0x4
		.ascii  "\x10\x10\x10\x10\x10\x10\x10\x10"
		.ascii  "\x10\x06\x09\x0f\x0f"
		.fill   0x9
		.ascii  "\x0d\x0d\x0d\x04"
		.ascii   "\r\r\r\r\r\r"
		.ascii  "\x04\x0f\x0f"
		.fill   0x9
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x08\x03\x03\x0f"
		.fill   0xa
		.ascii  "\x0b\x0b\x0b\x02"
		.fill   0xe

_094fbc_data:
		.fill   0x4
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x51\x00\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x97\x00\x00\x00"
		.ascii  "\x25\x01\x00\x00\x51\x00\x00\x00"
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x25\x01\x00\x00"
		.ascii  "\x25\x01\x00\x00\x97\x00\x00\x00"
		.ascii  "\x51\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x51\x00\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x3b\x01\x00\x00\x3b\x01\x00\x00"
		.ascii  "\x95\x00\x00\x00\x95\x00\x00\x00"
		.ascii  "\x46\x00\x00\x00\x46"
		.fill   0x13
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\xce\x00\x00\x00"
		.ascii  "\xce\x00\x00\x00\x94\x00\x00\x00"
		.ascii  "\x51\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46"
		.fill   0x27
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x02\x01\x00\x00\x97\x00\x00\x00"
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x02\x01\x00\x00\x02\x01\x00\x00"
		.ascii  "\x97\x00\x00\x00\x46\x00\x00\x00"
		.ascii  "\x46"
		.fill   0x27
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x1a\x01\x00\x00"
		.ascii  "\x1a\x01\x00\x00\x92\x00\x00\x00"
		.ascii  "\x92\x00\x00\x00\x46"
		.fill   0x2b
		.ascii  "\xd8\x00\x00\x00\xd8\x00\x00\x00"
		.ascii  "\xd8\x00\x00\x00\x94"
		.fill   0x4b

_0951d0_data:
		.fill   0x4

_0951d4_data:
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6e\x00\x01\x04\x02\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x70\x00\x02\x66\x01\x00"
		.long   _0bfeac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfebc_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x71\x00\x02\x66\x02\x00"
		.long   _0bfed0_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x73\x00\x02\x66\x05\x00"
		.long   _0bfeac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfee4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfef4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bff04_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bff18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bff2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bff3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x74\x00\x02\x66\x00\x00"
		.long   _0bfed0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bff54_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff68_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff78_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bff8c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffa0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffb0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffc8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bffdc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfff0_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x75\x00\x02\x66\x01\x00"
		.long   _0c0008_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0018_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x72\x00\x02\x66\x00\x00"
		.long   _0c002c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c004c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c005c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0070_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0088_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c009c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c00b0_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x76\x00\x02\x66\x05\x00"
		.long   _0c00c4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c00d8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c00ec_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0c00fc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0110_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0124_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0138_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c014c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0160_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0174_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfebc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0188_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c019c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c01b4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c01c8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c01d8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c01ec_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0200_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0c0210_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x77\x00\x02\x66\x00\x00"
		.long   _0c0228_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0240_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0c0250_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0264_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0278_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c028c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c02a0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c02b0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c02c0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c02d4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c02ec_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0300_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0314_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0328_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c033c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0c0350_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x78\x00\x02\x66\x01\x00"
		.long   _0c0360_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0c0374_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0388_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0398_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c03ac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c03bc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c03d0_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x79\x00\x02\x66\x01\x00"
		.long   _0bfee4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0c03e4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c03f4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0070_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfef4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0408_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff04_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0420_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0430_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0440_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0450_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0c0468_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x7a\x00\x02\x66\x02\x00"
		.long   _0c047c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x7b\x00\x02\x66\x05\x00"
		.long   _0c048c_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x7c\x00\x02\x66\x05\x00"
		.long   _0c04ac_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x7d\x00\x02\x66\x05\x00"
		.long   _0c04d0_data
		.ascii  "\xa0\x00\x00\x00\x02\x04\x05\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x7e\x00\x02\x00\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x7f\x00\x02\x06\x01\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x80\x00\x01\x00\x01\x00"
		.long   _0c04f0_data
		.ascii  "\xc8\x00\x00\x00\x02\xff\x02"
		.fill   0xf1

_095828_data:
		.ascii  "\x00\x29\x20\x08\x00\x13\x20\x1b"
		.ascii  "\x00\x1e\x04\x02\x00\x3c\x20\x0b"
		.ascii  "\x00\x10\x04\x0c\x00\x45\x04\x07"
		.ascii  "\x24\x14\x20\x1b\x00\x4a\x80\x2a"
		.ascii  "\xa0\x04\x20\x08\x24\x0b\x20\x7c"
		.ascii  "\x24\x13\x20\x3a\x00\x1c\x10\x2e"
		.ascii  "\x00\x0d\x80\x17\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1f\x90\x02\x10\x34"
		.ascii  "\x00\x21\x80\x03\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1b\x90\x03\x10\x4a"
		.ascii  "\x00\x44\x80\x1f\x90\x01\x10\x04"
		.ascii  "\x14\x0c\x10\x0e\x00\x08\xa0\x1d"
		.ascii  "\x80\x02\x90\x01\x80\xca\x90\x0d"
		.ascii  "\x10\x23\x00\x11\x20\x24\x00\x13"
		.ascii  "\x20\x0d\xa0\x01\x80\x16\xa0\x19"
		.ascii  "\x20\x26\x24\x0e\x20\x1d\x00\x10"
		.ascii  "\x80\x19\x90\x11\x80\x01\x90\x01"
		.ascii  "\x80\x0c\xa0"
		.ascii   "0 #$"
		.ascii  "\x04"
		.ascii   " u$\t "
		.ascii  "\x0f\x00\x55\x10\x02"
		.fill   0x61
		.ascii  "\x29\x20\x0c\x24\x13\x04\x02\x14"
		.ascii  "\x01\x10\x09\x14\x01\x04\x0c\x00"
		.ascii  "\x1a\x04\x05\x00\x2b\x10\x07\x00"
		.ascii  "\x07\x20\x07\x00\x02\x04\x03\x00"
		.ascii  "\x02\x10\x01\x50\x01\x10\x06\x00"
		.ascii  "\x07\x20\x08\x00\x4b\x04\x05\x00"
		.ascii  "\x3f\x10\x06\x00\x0e\x20\x09\x00"
		.ascii  "\x09\x04\x06\x00\x0c\x20\x37\x00"
		.ascii  "\x05\x10\x02\x50\x1c\x10\x01\x04"
		.ascii  "\x05\x00\x14\x10\x07\x00\x08\x20"
		.ascii  "\x05\x00\x38\x04\x04\x00\x0e\x10"
		.ascii  "\x08\x00\x22\x20\x06\x00\x19\x54"
		.ascii  "\x04\x50\x17\x10\x15\x00\x08\x20"
		.ascii  "\x16\x00\x0f\x20\x0b\x00\x01\x04"
		.ascii  "\x06\x00\x0d\x10\x06\x00\x52\x04"
		.ascii  "\x04\x00\x58\x20\x04\x24\x04\x20"
		.ascii  "\x2c\x00\x0a\x10\x02\x50\x17\x10"
		.ascii  "\x02\x00\x0d\x04\x04\x00\x0a\x10"
		.ascii  "\x03\x00\x0a\x20\x04\x00\x10\x10"
		.ascii  "\x05\x00\x34\x04\x04\x00\x33\x10"
		.ascii  "\x04\x00\x0d\x20\x03\x00\x1b\x04"
		.ascii  "\x05\x00\x47\x04\x04\x00\x51\x04"
		.ascii  "\x04\x00\x21\x10\x0c\x00\x13\x20"
		.ascii  "\x06\x00\x05\x04\x07\x00\x42"
		.fill   0x3b
		.ascii  "\x1d\x20\x32\x24\x08\x20\x0d\x21"
		.ascii  "\x05\x20\x08\x00\x0c\x20\x01\x24"
		.ascii  "\x08\x20\x07\x00\x09\x20\x06\x24"
		.ascii  "\x05\x20\x36\x24\x02\x04\x0a\x00"
		.ascii  "\x07\x20\x03\x00\x11\x20\x03\x22"
		.ascii  "\x03\x26\x01\x66\x06\x62\x01\x22"
		.ascii  "\x20\x02\x14\x22\x04\x26\x08\x22"
		.ascii  "\x0f\x26\x0a\x22\x16\x00\x18\x20"
		.ascii  "\x08\x00\x47\x20\x05\x24\x05\x20"
		.ascii  "\x1b\x00\x05\x04\x06\x00\x04\x04"
		.ascii  "\x07\x00\x0d\x22\x89\x26\x0d\x22"
		.ascii  "\x15\x02\x02\x00\x1c\x20\x08\x24"
		.ascii  "\x07\x20\x19\x00\x0c\x20\x03\x24"
		.ascii  "\x03\x20\x02\x00\x0c\x20\x17\x24"
		.ascii  "\x08\x20\x07\x24\x01\x04\x06\x00"
		.ascii  "\x16\x20\x09\x24\x0b\x20\x22\x24"
		.ascii  "\x03\x20\x15\x24\x0a\x20\x10\x00"
		.ascii  "\x1b\x20\x08\x24\x08\x20\x0c"
		.string "$\r K"
		.ascii  "\x46\x02\x27\x22\x05\x26\x06\x22"
		.ascii  "\x12\x26\x0e\x22\x2b\x02\x01\x00"
		.ascii  "\x10\x20\x06\x00\x2d\x04\x12\x00"
		.ascii  "\x09\x04\x12\x00\x15\x01\x57\x00"
		.ascii  "\x16\x04\x0b\x00\x0e\x04\x23\x00"
		.ascii  "\x2b\x01\x22\x00\x1b\x04\x0d\x00"
		.ascii  "\x1a\x04\x13"
		.fill   0x33
		.ascii  "\x28\x20\x4a\x00\x03\x20\x25\x24"
		.ascii  "\x0c\x20\x07\x00\x15\x01\x09\x00"
		.ascii  "\x0e\x80\x1d\x00\x1e\x20\x0a\x24"
		.ascii  "\x1a\x20\x0b\x00\x22\x20\x10\x24"
		.ascii  "\x09\x20\x13\x00\x10\x20\x10\x00"
		.ascii  "\x04\x01\x3d\x00\x1c\x80\x35\x00"
		.ascii  "\x0c\x01\x20\x81\x03\x80\x2f\x00"
		.ascii  "\x03\x01\x1b\x81\x04\x80\x34\x00"
		.ascii  "\x0f\x20\x09\x24\x08\x20\x17\x00"
		.ascii  "\x20\x20\x07\x00\x09\x04\x14\x00"
		.ascii  "\x11\x01\x07\x00\x11\x80\x24\x00"
		.ascii  "\x1d\x20\x01\x24\x0e\x20\x15\x00"
		.ascii  "\x1f\x20\x02\x24\x1e\x20\x09\x00"
		.ascii  "\x0f\x10\x08\x00\x04\x01\x29\x00"
		.ascii  "\x2c\x10\x0e\x14\x07\x10\x2c\x00"
		.ascii  "\x12\x04\x1f\x24\x07\x20\x22\x00"
		.ascii  "\x06\x20\x02\x24\x05\x20\x0f\x00"
		.ascii  "\x2e\x10\x18\x00\x0c\x20\x06\x00"
		.ascii  "\x21\x20\x05\x24\x05\x20\x14\x24"
		.ascii  "\x0e\x20\x10\x00\x34\x20\x10\x00"
		.ascii  "\x0e\x80\x0f\xa0\x13\xa4\xff\xa4"
		.ascii  "\x22\xa0\x28"
		.fill   0x4f
		.ascii  "\xbc\x20\x10\x00\xb0\x02\x0e\x00"
		.ascii  "\x2a\x04\x17\x00\x15\x04\x02\x24"
		.ascii  "\x11\x20\x02\x00\x1d\x04\x01\x24"
		.ascii  "\x08\x20\x02\x00\x25\x20\x0d\x00"
		.ascii  "\x0a\x02\x0b\x00\x76\x04\x0f\x00"
		.ascii  "\x2b\x04\x0a\x24\x04\x20\x02\x00"
		.ascii  "\x2b\x10\x14\x14\x13\x10\x27\x14"
		.ascii  "\x07\x10\x1f\x00\x15\x02\x0e\x00"
		.ascii  "\x29\x04\x18\x00\x13\x20\x05\x00"
		.ascii  "\x58\x04\x12\x24\x0c\x20\x01\x00"
		.ascii  "\x66\x04\x05\x24\x07\x20\x0b\x00"
		.ascii  "\x06\x20\x01\x00\x1a\x02\x0a\x00"
		.ascii  "\x34\x04\x0c\x00\x19\x10\x04\x00"
		.ascii  "\x17\x04\x02\x14\x02\x04\x06\x00"
		.ascii  "\x61\x04\x02\x14\x02\x54\x0a\x14"
		.ascii  "\x01\x10\x16\x00\x08\x01\x05\x00"
		.ascii  "\x1b\x10\x45\x00\x07\x20\x34\x00"
		.ascii  "\x0a\x02\x0a\x00\x2e\x04\x10\x00"
		.ascii  "\x10\x20\x09\x00\x0a\x04\x06\x24"
		.ascii  "\x0e\x20\x05\x00\x04\x10\x08\x00"
		.ascii  "\x02\x01\x06\x00\xa5\x20\x21\x00"
		.ascii  "\x05\x20\x14\x00\x0c\x02\x08\x00"
		.ascii  "\x26\x04\x11\x00\x19\x10\x04\x14"
		.ascii  "\x05\x04\x02\x00\x20\x14\x09\x10"
		.ascii  "\x08\x00\x1e\x10\x4a\x00\x80"
		.fill   0x33
		.ascii  "\x54\x10\x25\x00\x1a\x10\x03\x00"
		.ascii  "\x0a\x20\x06\x00\x3a\x10\x0d\x00"
		.ascii  "\x09\x20\x03\x00\xff\x00\x0b\x20"
		.ascii  "\x03\x24\x11\x20\x13\x00\x17\x10"
		.ascii  "\x07\x50\x02\x54\x1f\x50\x11\x10"
		.ascii  "\x01\x00\x11\x20\x03\x00\x8b\x20"
		.ascii  "\x04\x24\x0f\x20\x13\x00\x2d\x10"
		.ascii  "\x03\x50\x03"
		.ascii   "T P\t"
		.ascii  "\x10\x04\x00\x31\x20\x02\x00\x73"
		.ascii  "\x04\x18\x00\x35\x04\x18\x00\x4a"
		.ascii  "\x20\x08\x24\x1e\x20\x0b\x24\x12"
		.ascii  "\x20\x03\x00\x19\x20\x27\x00\x44"
		.ascii  "\x04\x0e\x00\x07\x20\x05\x00\x50"
		.ascii  "\x04\x13\x14\x09\x04\x01\x00\x20"
		.ascii  "\x10\x04\x00\x11\x20\x04\x00\x22"
		.fill   0x80

_095e02_data:
		.ascii  "\x00\x00\x9a\x00\xc0\x00\xc8\x00"
		.ascii  "\xac\x00\xc8\x00\x78\x00"

_095e10_data:
		.ascii  "\x02\x00\x03\x00\x04\x00\x05\x00"
		.ascii  "\x01\x00\x05\x00"

_095e1c_data:
		.ascii  "\x07\x00\x07\x00\x01\x00\x04\x00"
		.ascii  "\x09\x00\x0a\x00"

_095e28_data:
		.ascii  "\x00\x00\x0a\x00"

_095e2c_data:
		.ascii  "\xff"

_095e2d_data:
		.ascii  "\xff\x00\x00"

_095e30_data:
		.fill   0x4

_095e34_data:
		.fill   0x4

_095e38_data:
		.ascii  "\x4d"

_095e39_data:
		.ascii  "\x48"

_095e3a_data:
		.ascii  "\x4b"

_095e3b_data:
		.ascii  "\x50"

_095e3c_data:
		.ascii  "\x38"

_095e3d_data:
		.ascii  "\x1d"

_095e3e_data:
		.ascii  "\x2d\x00"

_095e40_data:
		.long   _095e3a_data

_095e44_data:
		.long   _095e39_data

_095e48_data:
		.long   _095e38_data

_095e4c_data:
		.long   _095e3b_data

_095e50_data:
		.long   _095e3d_data

_095e54_data:
		.long   _095e3c_data

_095e58_data:
		.long   _095e3e_data

_095e5c_data:
		.ascii   "KHMP"
		.ascii  "\x1d\x38\x2d"

_095e63_data:
		.ascii  "\x00"

_095e64_data:
		.ascii  "\x00\x00"

_095e66_data:
		.ascii  "\x01\x00"

_095e68_data:
		.ascii  "\x00\x00"

_095e6a_data:
		.ascii  "\x00\x00"

_095e6c_data:
		.ascii  "\x00"

_095e6d_data:
		.ascii  "\x01"

_095e6e_data:
		.ascii  "\x01\x00"

_095e70_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095e80_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095e90_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095ea0_data:
		.ascii  "\xff\x00\xff\x00"

_095ea4_data:
		.ascii  "\xff\x00\xff\x00"

_095ea8_data:
		.ascii  "\xff\x00"

_095eaa_data:
		.ascii  "\xff\x00"

_095eac_data:
		.ascii  "\xff\x00\xff\x00"

_095eb0_data:
		.ascii  "\x00"

_095eb1_data:
		.ascii  "\x00"

_095eb2_data:
		.ascii  "\x00\x00"

_095eb4_data:
		.ascii  "\x01\x00"

_095eb6_data:
		.ascii  "\x01"

_095eb7_data:
		.ascii  "\x00"

_095eb8_data:
		.fill   0x8

_095ec0_data:
		.ascii  "\x01"

_095ec1_data:
		.ascii  "\x01\x00\x00"

_095ec4_data:
		.ascii  "\x00\x00"

_095ec6_data:
		.ascii  "\x00\x00"

_095ec8_data:
		.ascii  "\x02\x00\xff"
		.fill   0x19
		.ascii  "\x02\x00\x01\x00\x03\x00\xff"
		.fill   0x13
		.ascii  "\x06\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x00\x00\x01\x00\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x01\x00\x01\x00\x01\x00\xff"
		.fill   0xf
		.ascii  "\x05\x00\x01\x00\x02\x00\x03"
		.fill   0x5
		.ascii  "\x03\x00\x01\x00\x04\x00\x00\x00"
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x06\x00\x00\x00\x03"
		.fill   0x5
		.ascii  "\x01\x00\x04\x00\x00\x00\xff"
		.fill   0x5

_095f70_data:
		.ascii  "\x20"

_095f71_data:
		.ascii  "\x07"

_095f72_data:
		.ascii  "\x3f\x1f\x07\x3d\x20\x07\x3a\x21"
		.ascii  "\x07"
		.ascii   "8$\n5%"
		.ascii  "\x0c\x33\x2d\x0f\x30\x34\x11\x2e"
		.ascii  "\x2d\x0f\x30\x28\x0f\x33\x23\x0c"
		.ascii   "5#\n8 "
		.ascii  "\x07\x3a\x1e\x05\x3d\x1b\x05\x3d"
		.ascii  "\x20"

_095f9e_data:
		.ascii  "\x07\x3f"

_095fa0_data:
		.ascii  "\x00\x00"

_095fa2_data:
		.ascii  "\x00\x00"

_095fa4_data:
		.ascii  "\x00\x00"

_095fa6_data:
		.ascii  "\x00\x00"

_095fa8_data:
		.ascii  "\x00\x00"

_095faa_data:
		.ascii  "\x00\x00"

_095fac_data:
		.ascii  "\x00\x00"

_095fae_data:
		.ascii  "\x00\x00"

_095fb0_data:
		.ascii  "\x00\x00"

_095fb2_data:
		.ascii  "\x00"

_095fb3_data:
		.ascii  "\x00"

_095fb4_data:
		.ascii  "\x09\x0f\x05\x13\x14\x0a\x15\x19"
		.ascii  "\x0a\x22\x1e"
		.ascii   "\n$#\n'(\n)-\n)2\n.7\n1<\n3<\n6<\n8<\n;<\n=<\n?"

_095fe2_data:
		.ascii  "\x00\x00"

_095fe4_data:
		.ascii  "\x00\x00"

_095fe6_data:
		.ascii  "\x00"

_095fe7_data:
		.ascii  "\x00"

_095fe8_data:
		.ascii  "\x14"

_095fe9_data:
		.ascii  "\x00"

_095fea_data:
		.ascii  "\x00"

_095feb_data:
		.ascii  "\x00"

_095fec_data:
		.fill   0x4
		.ascii  "\x06\x00\x02\x00\x05\x00\x04\x00"
		.ascii  "\x08\x00"

_095ffa_data:
		.ascii  "\x10\x00\x10\x00\x08\x00\x08\x00"
		.ascii  "\x10\x00\x10\x00\x08\x00"

_096008_data:
		.ascii  "\x14\x00"

_09600a_data:
		.ascii  "\x00\x00"

_09600c_data:
		.ascii  "\x00\x00"

_09600e_data:
		.ascii  "\xf4\x01"

_096010_data:
		.ascii  "\x00\x00"

_096012_data:
		.ascii  "\x00\x00"

_096014_data:
		.ascii  "\x00\x00"

_096016_data:
		.ascii  "\x00\x00"

_096018_data:
		.ascii  "\x00\x00"

_09601a_data:
		.ascii  "\x40\x02"

_09601c_data:
		.ascii  "\x00\x00\x90\x02\x00\x00\xe0\x02"
		.ascii  "\x00\x00\x30\x03\x00\x00\x80\x03"
		.ascii  "\x00\x00\xd0\x03\x00\x00\x20\x04"
		.ascii  "\x00\x00\x70\x04\x00\x00\xd4\xff"
		.ascii  "\x3d\x02\xce\xff\x8d\x02\xc7\xff"
		.ascii  "\xdd\x02\xc0\xff\x2c\x03\xb9\xff"
		.ascii  "\x7c\x03\xb2\xff\xcc\x03\xab\xff"
		.ascii  "\x1b\x04\xa4\xff\x6b\x04\x9d\xff"
		.ascii  "\xa6\xff\x37\x02\x9c\xff\x86\x02"
		.ascii  "\x8f\xff\xd4\x02\x81\xff\x23\x03"
		.ascii  "\x73\xff\x72\x03\x65\xff\xc1\x03"
		.ascii  "\x57\xff\x0f\x04\x49\xff\x5e\x04"
		.ascii  "\x3b\xff\x77\xff\x2c\x02\x6b\xff"
		.ascii  "\x79\x02\x57\xff\xc6\x02\x42\xff"
		.ascii  "\x14\x03\x2d\xff\x61\x03\x19\xff"
		.ascii  "\xae\x03\x04\xff\xfc\x03\xef\xfe"
		.ascii  "\x49\x04\xda\xfe\x46\xff\x1d\x02"
		.ascii  "\x3b\xff\x68\x02\x20\xff\xb3\x02"
		.ascii  "\x05\xff\xfe\x02\xe9\xfe\x49\x03"
		.ascii  "\xce\xfe\x95\x03\xb3\xfe\xe0\x03"
		.ascii  "\x97\xfe\x2b\x04\x7c\xfe\x12\xff"
		.ascii  "\x0a\x02\x0d\xff\x52\x02\xeb\xfe"
		.ascii  "\x9b\x02\xc9\xfe\xe3\x02\xa8\xfe"
		.ascii  "\x2c\x03\x86\xfe\x74\x03\x64\xfe"
		.ascii  "\xbd\x03\x42\xfe\x05\x04\x20\xfe"
		.ascii  "\xd9\xfe\xf2\x01\xe1\xfe\x38\x02"
		.ascii  "\xb9\xfe\x7d\x02\x91\xfe\xc2\x02"
		.ascii  "\x69\xfe\x07\x03\x41\xfe\x4d\x03"
		.ascii  "\x19\xfe\x92\x03\xf1\xfd\xd7\x03"
		.ascii  "\xc9\xfd\x9a\xfe\xd7\x01\xb6\xfe"
		.ascii  "\x19\x02\x88\xfe\x5a\x02\x5a\xfe"
		.ascii  "\x9c\x02\x2c\xfe\xdd\x02\xff\xfd"
		.ascii  "\x1f\x03\xd1\xfd\x61\x03\xa3\xfd"
		.ascii  "\xa2\x03\x75\xfd\x53\xfe\xb9\x01"
		.ascii  "\x8e\xfe\xf6\x01\x5b\xfe\x33\x02"
		.ascii  "\x27\xfe\x71\x02\xf4\xfd\xae\x02"
		.ascii  "\xc1\xfd\xeb\x02\x8d\xfd\x28\x03"
		.ascii  "\x5a\xfd\x66\x03\x26\xfd\x01\xfe"
		.ascii  "\x97\x01\x69\xfe\xcf\x01\x31\xfe"
		.ascii  "\x08\x02\xf8\xfd\x40\x02\xc0\xfd"
		.ascii  "\x79\x02\x87\xfd\xb2\x02\x4e\xfd"
		.ascii  "\xea\x02\x16\xfd\x23\x03\xdd\xfc"
		.ascii  "\x9e\xfd\x72\x01\x47\xfe\xa5\x01"
		.ascii  "\x0a\xfe\xd9\x01\xcd\xfd\x0c\x02"
		.ascii  "\x8f\xfd\x3f\x02\x52\xfd\x73\x02"
		.ascii  "\x15\xfd\xa6\x02\xd8\xfc\xda\x02"
		.ascii  "\x9a\xfc\x25\xfd\x4a\x01\x29\xfe"
		.ascii  "\x78\x01\xe7\xfd\xa6\x01\xa6\xfd"
		.ascii  "\xd4\x01\x64\xfd\x01\x02\x23\xfd"
		.ascii  "\x2f\x02\xe1\xfc\x5d\x02\x9f\xfc"
		.ascii  "\x8b\x02\x5e\xfc\x8a\xfc\x20\x01"
		.ascii  "\x0e\xfe\x48\x01\xc8\xfd\x70\x01"
		.ascii  "\x83\xfd\x98\x01\x3e\xfd\xc0\x01"
		.ascii  "\xf9\xfc\xe8\x01\xb3\xfc\x10\x02"
		.ascii  "\x6e\xfc\x38\x02\x29\xfc\xb7\xfb"
		.ascii  "\xf3\x00\xf6\xfd\x15\x01\xae\xfd"
		.ascii  "\x37\x01\x65\xfd\x58\x01\x1d\xfd"
		.ascii  "\x7a\x01\xd4\xfc\x9c\x01\x8c\xfc"
		.ascii  "\xbe\x01\x43\xfc\xe0\x01\xfb\xfb"
		.ascii  "\x82\xfa\xc5\x00\xe3\xfd\xe0\x00"
		.ascii  "\x98\xfd\xfb\x00\x4d\xfd\x17\x01"
		.ascii  "\x02\xfd\x32\x01\xb7\xfc\x4d\x01"
		.ascii  "\x6b\xfc\x69\x01\x20\xfc\x84\x01"
		.ascii  "\xd5\xfb\x8a\xf8\x95\x00\xd4\xfd"
		.ascii  "\xa9\x00\x87\xfd\xbe\x00\x3a\xfd"
		.ascii  "\xd3\x00\xec\xfc\xe7\x00\x9f\xfc"
		.ascii  "\xfc\x00\x52\xfc\x11\x01\x04\xfc"
		.ascii  "\x26\x01\xb7\xfb\xa9\xf4\x64\x00"
		.ascii  "\xc9\xfd\x71\x00\x7a\xfd\x7f\x00"
		.ascii  "\x2c\xfd\x8d\x00\xdd\xfc\x9b\x00"
		.ascii  "\x8e\xfc\xa9\x00\x3f\xfc\xb7\x00"
		.ascii  "\xf1\xfb\xc5\x00\xa2\xfb\x24\xe9"
		.ascii  "\x32\x00\xc3\xfd\x39\x00\x73\xfd"
		.ascii  "\x40\x00\x23\xfd\x47\x00\xd4\xfc"
		.ascii  "\x4e\x00\x84\xfc\x55\x00\x34\xfc"
		.ascii  "\x5c\x00\xe5\xfb\x63\x00\x95\xfb"
		.fill   0x4
		.ascii  "\xc0\xfd\x00\x00\x70\xfd\x00\x00"
		.ascii  "\x20\xfd\x00\x00\xd0\xfc\x00\x00"
		.ascii  "\x80\xfc\x00\x00\x30\xfc\x00\x00"
		.ascii  "\xe0\xfb\x00\x00\x90\xfb"

_09629e_data:
		.ascii  "\x12\x00"

_0962a0_data:
		.ascii  "\x00\x00"

_0962a2_data:
		.ascii  "\x00\x00"

_0962a4_data:
		.fill   0x4

_0962a8_data:
		.fill   0x4

_0962ac_data:
		.fill   0x4

_0962b0_data:
		.ascii  "\xb9\x01\x00\x00"

_0962b4_data:
		.ascii  "\x00"

_0962b5_data:
		.ascii  "\x00"

_0962b6_data:
		.ascii  "\x00"

_0962b7_data:
		.ascii  "\x00"

_0962b8_data:
		.ascii  "\x00"

_0962b9_data:
		.ascii  "\x00\x00\x00"

_0962bc_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_0962ca_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0c0a30_data
		.long   _0c0a48_data
		.long   _0c0a58_data
		.long   _0c0a68_data
		.long   _0c0a78_data
		.long   _0c0a84_data
		.long   _0c0aa8_data
		.long   _0c0ab4_data
		.long   _0c0ac4_data
		.long   _0c0ad8_data
		.long   _0c0af0_data
		.long   _0c0afc_data
		.long   _0c0b08_data
		.long   _0c0b18_data
		.long   _0c0b18_data
		.long   _0c0b24_data

_096318_data:
		.fill   0x4
		.long   _0c0bac_data

_096320_data:
		.ascii  "\x00"

_096321_data:
		.ascii  "\x53\x00\x00"

_096324_data:
		.fill   0x4

_096328_data:
		.ascii  "\x00\x00"

_09632a_data:
		.fill   0x4
		.ascii  "\x04\x00\x07\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x07\x00\x04\x00\x00\x00"
		.ascii  "\xfe\xff\xfc\xff\xfb\xff\xfa\xff"
		.ascii  "\xfb\xff\xfc\xff\xfe\xff\x00\x00"
		.ascii  "\x01\x00\x02\x00\x03\x00\x02\x00"
		.ascii  "\x01\x00\x00\x00\xff\xff\xfe\xff"
		.ascii  "\xff\xff\x00\x00\x01\x00\x00\x00"

_096366_data:
		.ascii  "\x00\x01\x02"

_096369_data:
		.ascii  "\x00\x00\x02\x00\x02"

_09636e_data:
		.ascii  "\x02\x00\x00\x02\x00"

_096373_data:
		.ascii  "\x02\x02\x00\x00\x00"

_096378_data:
		.fill   0x5

_09637d_data:
		.ascii  "\x00"

_09637e_data:
		.ascii  "\x00\x00"

_096380_data:
		.fill   0x4

_096384_data:
		.ascii  "\x98\xb0\x86\x83\x86\x85\xa6\xb8"
		.ascii  "\x99"

_09638d_data:
		.ascii  "\x98\xb0\x88\x83\x88\x85\xa6\xb8"
		.ascii  "\x99"

_096396_data:
		.ascii  "\x98\xb0\x84\xb9\x84\xb0\x86\x99"

_09639e_data:
		.ascii  "\x98\xb0\x84\xb9\x84\xb0\x88\x99"

_0963a6_data:
		.ascii  "\x89\xa7\x84\xb0"

_0963aa_data:
		.ascii  "\x89\xa7\x84\xb0"

_0963ae_data:
		.ascii  "\x9d\x94\x88\x84\x85\xb7"

_0963b4_data:
		.ascii  "\x9d\x94\x86\x84\x85\xb7"

_0963ba_data:
		.ascii  "\x9d\x9f\x88\x84\x85\xb7"

_0963c0_data:
		.ascii  "\x9d\x9f\x86\x84\x85\xb7"

_0963c6_data:
		.ascii  "\x98\x83\x86\x85\x84\xb9\x8e\xb1"
		.ascii  "\x99"

_0963cf_data:
		.ascii  "\x98\x83\x88\x85\x84\xb9\x8e\xb1"
		.ascii  "\x99"

_0963d8_data:
		.ascii  "\x83\x86\x85\xa6\xb8"

_0963dd_data:
		.ascii  "\x83\x88\x85\xa6\xb8"

_0963e2_data:
		.ascii  "\xb6\xb0\x85\x8e\xba\xb0\x86"

_0963e9_data:
		.ascii  "\xb6\xb0\x85\x8e\x87\xb0\x88"

_0963f0_data:
		.ascii  "\x89\x84\xb9\x81\xb0\x83\x86\x85"

_0963f8_data:
		.ascii  "\x89\x84\xb9\x81\xb0\x83\x88\x85"

_096400_data:
		.ascii  "\x85\x84\xba\x8e\x8f"

_096405_data:
		.ascii  "\x85\x84\x87\x8e\x8f"

_09640a_data:
		.ascii  "\x82\xa7\x81\x8e\x8f\x83\x86\x85"

_096412_data:
		.ascii  "\x82\xa7\x81\x8e\x8f\x83\x88\x85"

_09641a_data:
		.ascii  "\x82\x89\x81\xb7\xb6\xb0\x8e\xb4"

_096422_data:
		.ascii  "\x82\x89\x81\xb7\xb6\xb0\x8e\xb4"

_09642a_data:
		.ascii  "\x87\x81\xba\x83\x86\x85"

_096430_data:
		.ascii  "\xba\x81\x87\x83\x88\x85"

_096436_data:
		.ascii  "\x8f\x86\xb1\xa7\x81\xba"

_09643c_data:
		.ascii  "\x8f\x88\xa4\xa7\x81\x87"

_096442_data:
		.ascii  "\x85\x84\x81\xb9\x81\xb0\x8e\x99"

_09644a_data:
		.ascii  "\x85\x84\x81\xb9\x81\xb0\x8e\x99"

_096452_data:
		.ascii  "\x89\x81\x8e\xb8\xa7\x86\x85\xb7"
		.ascii  "\x99"

_09645b_data:
		.ascii  "\x89\x81\x8e\xb8\xa7\x88\x85\xb7"
		.ascii  "\x99"

_096464_data:
		.ascii  "\xb6\xa7\x86\x85\x82\x85\x84\xa6"
		.ascii  "\x99"

_09646d_data:
		.ascii  "\xb6\xa7\x88\x85\x82\x85\x84\xa6"
		.ascii  "\x99"

_096476_data:
		.ascii  "\x82\x81\x8e\xa7\x84\xa6\x99"

_09647d_data:
		.ascii  "\x82\x81\x8e\xa7\x84\xa6\x99"

_096484_data:
		.ascii  "\x82\x89\x81\x85\xb5\xb8\x99"

_09648b_data:
		.ascii  "\x82\x89\x81\x85\xb5\xb8\x99"

_096492_data:
		.ascii  "\x84\xa7\x81\x8e\x82\xa7\x86\x99"

_09649a_data:
		.ascii  "\x84\xa7\x81\x8e\x82\xa7\x88\x99"

_0964a2_data:
		.ascii  "\x8e\xb2\x8e\xb2\x99"

_0964a7_data:
		.ascii  "\x8e\xb2\x8e\xb2\x99"

_0964ac_data:
		.ascii  "\xb0\x81\x85\x83\xb8\x99"

_0964b2_data:
		.ascii  "\xb0\x81\x85\x83\xb8\x99"

_0964b8_data:
		.ascii  "\xb1\x86\x85\xb4\x8e\x85\x8f\x99"

_0964c0_data:
		.ascii  "\xa4\x88\x85\xb4\x8e\x85\x8f"

_0964c7_data:
		.ascii  "\x99"

_0964c8_data:
		.ascii  "\x00"

_0964c9_data:
		.ascii  "\x00"

_0964ca_data:
		.ascii  "\x01\x00"

_0964cc_data:
		.ascii  "\x00\x00"

_0964ce_data:
		.ascii  "\x00\x00"

_0964d0_data:
		.ascii  "\x00\x00"

_0964d2_data:
		.ascii  "\x00\x00"

_0964d4_data:
		.fill   0x4

_0964d8_data:
		.ascii  "\x3c"

_0964d9_data:
		.ascii  "\x00"

_0964da_data:
		.ascii  "\x00"

_0964db_data:
		.ascii  "\x02"

_0964dc_data:
		.ascii  "\x00"

_0964dd_data:
		.ascii  "\x00\x00\x00"

_0964e0_data:
		.ascii  "\x00\x0f\x00\x00"

_0964e4_data:
		.ascii  "\x01\x00\x00\x00"

_0964e8_data:
		.ascii  "\xd7\x00\x00\x00"

_0964ec_data:
		.ascii  "\xdf"
		.fill   0x4
		.ascii  "\x1f\x00\x00\xdf\x00\x00\x00\x9c"
		.ascii  "\x01\x00\x00\xd4\x01\x00\x00\x28"
		.ascii  "\x01\x01\x00\xd4\x01\x00\x00\x7a"
		.ascii  "\x03\x00\x00\x98\x03\x00\x00\x00"
		.ascii  "\x14\x01\x00\x98\x03\x00\x00\x92"
		.ascii  "\x04\x00\x00\xab\x04\x00\x00\xff"
		.ascii  "\xff\xff\x00\xab\x04\x00\x00\x08"
		.ascii  "\x07\x00\x00\x0d\x07\x00\x00"

_096530_data:
		.ascii  "\x3c"

_096531_data:
		.ascii  "\x00"

_096532_data:
		.ascii  "\x00\x00"

_096534_data:
		.fill   0x4

_096538_data:
		.ascii  "\x00\x01\x00\x00"

_09653c_data:
		.fill   0x8

_096544_data:
		.fill   0x8

_09654c_data:
		.fill   0x4

_096550_data:
		.fill   0x5
		.ascii  "\x08\x00\x00"

_096558_data:
		.ascii  "\x4d"

_096559_data:
		.ascii  "\xc3\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x08\x00\x00\xd9\xc1\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00\x08\x00\x00\x24"
		.ascii  "\x8e\x00\x00\x00\x18\x00\x00\x00"
		.ascii  "\x08\x00\x00\xfa\x16\x00\x00\x00"
		.ascii  "\x20\x00\x00\x00\x08\x00\x00\x67"
		.ascii  "\x49\x00\x00\x00\x28\x00\x00\x00"
		.ascii  "\x08\x00\x00\xab\xb7\x00\x00\x00"
		.ascii  "\x30\x00\x00\x00\x08\x00\x00\x63"
		.ascii  "\xde\x00\x00"

_0965a4_data:
		.fill   0x4

_0965a8_data:
		.ascii  "\x40\xd1\x01\x00"

_0965ac_data:
		.ascii  "\xc0"

_0965ad_data:
		.ascii  "\x3c\x00\x00\x40\xd1\x01\x00\x4c"
		.ascii  "\x22\x02\x00\x94\x68\x00\x00\x8c"
		.ascii  "\xf3\x03\x00\xe8\x6d\x04\x00\x29"
		.ascii  "\x95\x00\x00\x74\x61\x08\x00\x1c"
		.ascii  "\x18\x03\x00\xed\x17\x00\x00\x90"
		.ascii  "\x79\x0b\x00\x98\x0e\x03\x00\x24"
		.ascii  "\xb4\x00\x00\x28\x88\x0e\x00\xf0"
		.ascii  "\xf2\x02\x00\xf3\x3b\x00\x00\x18"
		.ascii  "\x7b\x11\x00\x88\xd5\x02\x00\xf8"
		.ascii  "\x33\x00\x00"

_0965f8_data:
		.fill   0x4

_0965fc_data:
		.ascii  "\xf4\x46\x01\x00"

_096600_data:
		.ascii  "\x4d"

_096601_data:
		.ascii  "\x60\x00\x00\xf4\x46\x01\x00\xb0"
		.ascii  "\x0d\x02\x00\xd9\x26\x00\x00\xa4"
		.ascii  "\x54\x03\x00\x12\xce\x01\x00\x24"
		.ascii  "\x43\x00\x00\xb6\x22\x05\x00\xa0"
		.ascii  "\x44\x01\x00\xfa\x7a\x00\x00\x56"
		.ascii  "\x67\x06\x00\x40\x8a\x00\x00\x67"
		.ascii  "\xb1\x00\x00\x96\xf1\x06\x00\xd0"
		.ascii  "\xea\x01\x00\xab\xa4\x00\x00\x66"
		.ascii  "\xdc\x08\x00\x4a\x80\x01\x00\x63"
		.ascii  "\xdb\x00\x00\xb0\x5c\x0a\x00\x80"
		.ascii  "\x63\x00\x00\x47\x54\x00\x00\x30"
		.ascii  "\xc0\x0a\x00\xfe\x0a\x01\x00\x87"
		.ascii  "\x4f\x00\x00"

_096664_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00"

_096674_data:
		.fill   0xc

_096680_data:
		.fill   0x4

_096684_data:
		.fill   0x2c

_0966b0_data:
		.fill   0x4

_0966b4_data:
		.ascii  "\x00\x00"

_0966b6_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0967b8_data:
		.fill   0x4

_0967bc_data:
		.long   _041ca8_jump

_0967c0_data:
		.long   _041cbc_jump

_0967c4_data:
		.long   _041cd0_jump

_0967c8_data:
		.long   _041cd0_jump

_0967cc_data:
		.fill   0x4

_0967d0_data:
		.fill   0x4

_0967d4_data:
		.fill   0x4

_0967d8_data:
		.ascii  "\x2f"

_0967d9_data:
		.fill   0x63
		.long   _0c110c_data
		.long   _0c1114_data
		.long   _0c111c_data
		.ascii  "\x24\x11"

_09684a_data:
		.ascii  "\x0c\x00\x04\x00\x0c\x00\x14\x00"

_096852_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_09685a_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_096862_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0c112c_data
		.long   _0c1130_data
		.long   _0c1134_data
		.long   _0c1138_data
		.long   _0c113c_data

_096880_data:
		.ascii  "\x00"

_096881_data:
		.ascii  "\x00"

_096882_data:
		.ascii  "\x00"

_096883_data:
		.ascii  "\x00"

_096884_data:
		.ascii  "\x40\x00\x00\x00"

_096888_data:
		.fill   0x8
		.long   _0c1148_data
		.long   _0c114c_data
		.long   _0c1150_data
		.long   _0c1154_data
		.long   _0c1158_data
		.long   _0c115c_data
		.long   _0c1160_data
		.long   _0c1164_data
		.long   _0c1168_data
		.long   _0c116c_data
		.fill   0x10
		.long   _0c1170_data
		.long   _0c1174_data
		.long   _0c1178_data
		.long   _0c117c_data
		.long   _0c1180_data
		.long   _0c1184_data
		.long   _0c1188_data
		.long   _0c118c_data
		.long   _0c1190_data
		.long   _0c1194_data
		.fill   0x10
		.long   _0c1198_data
		.long   _0c119c_data
		.long   _0c11a0_data
		.long   _0c11a4_data
		.long   _0c11a8_data
		.long   _0c11ac_data
		.long   _0c11b0_data
		.long   _0c11b4_data
		.long   _0c11b8_data
		.long   _0c11bc_data
		.fill   0x10
		.long   _0c11c0_data
		.long   _0c11c4_data
		.long   _0c11c8_data
		.long   _0c11cc_data
		.long   _0c11d0_data
		.long   _0c11d4_data
		.long   _0c11d8_data
		.long   _0c11dc_data
		.long   _0c11e0_data
		.fill   0x5c
		.long   _0c1158_data
		.fill   0xcc

_096a88_data:
		.fill   0x8
		.long   _0c1148_data
		.long   _0c114c_data
		.long   _0c1150_data
		.long   _0c1154_data
		.long   _0c1158_data
		.long   _0c115c_data
		.long   _0c1160_data
		.long   _0c1164_data
		.long   _0c1168_data
		.long   _0c116c_data
		.fill   0x10
		.long   _0c1198_data
		.long   _0c11c0_data
		.long   _0c1178_data
		.long   _0c117c_data
		.long   _0c1180_data
		.long   _0c1184_data
		.long   _0c1188_data
		.long   _0c118c_data
		.long   _0c1190_data
		.long   _0c1194_data
		.fill   0x10
		.long   _0c1170_data
		.long   _0c119c_data
		.long   _0c11a0_data
		.long   _0c11a4_data
		.long   _0c11a8_data
		.long   _0c11ac_data
		.long   _0c11b0_data
		.long   _0c11b4_data
		.long   _0c11b8_data
		.long   _0c11e0_data
		.fill   0x10
		.long   _0c1174_data
		.long   _0c11c4_data
		.long   _0c11c8_data
		.long   _0c11cc_data
		.long   _0c11d0_data
		.long   _0c11d4_data
		.long   _0c11bc_data
		.fill   0x4
		.long   _0c11dc_data
		.long   _0c11d8_data
		.fill   0x5c
		.long   _0c1158_data
		.fill   0xc8

_096c88_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096c98_data:
		.ascii  "\x02\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x06\x00"

_096ca8_data:
		.fill   0x8
		.ascii  "\x08"
		.fill   0x7

_096cb8_data:
		.ascii  "\x07\x00\x08\x00\x08"
		.fill   0x5
		.ascii  "\x08\x00\x08\x00\x01\x00"

_096cc8_data:
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"

_096cd8_data:
		.fill   0xe
		.ascii  "\x08\x00"

_096ce8_data:
		.fill   0xa
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x01\x00"

_096d18_data:
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096d28_data:
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096d38_data:
		.ascii  "\x08\x00\x08\x00\x07\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096d48_data:
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c98_data

_096d68_data:
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096ce8_data

_096d88_data:
		.long   _096c88_data
		.long   _096d38_data
		.long   _096c88_data
		.long   _096d28_data
		.long   _096c88_data
		.long   _096d18_data
		.long   _096c88_data
		.long   _096c88_data

_096da8_data:
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096cb8_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data

_096dc8_data:
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096cc8_data
		.long   _096c88_data
		.long   _096c98_data
		.long   _096c88_data

_096de8_data:
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096cd8_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data

_096e08_data:
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096c88_data
		.long   _096ca8_data
		.long   _096c88_data

_096e28_data:
		.long   _096d48_data
		.long   _096d68_data
		.long   _096d88_data
		.long   _096da8_data
		.long   _096dc8_data
		.long   _096de8_data
		.long   _096e08_data

_096e44_data:
		.ascii  "\x2a\x2e\x05"

_096e47_data:
		.ascii  "\x2c\x02"

_096e49_data:
		.ascii  "\x28\x02"

_096e4b_data:
		.ascii  "\x07\x08\x0c\x26\x0d\x0e\x00"

_096e52_data:
		.ascii  "\x29\x0f\x10\x29\x1a\x12\x13\x01"

_096e5a_data:
		.ascii  "\x15\x16\x2d\x18\x29\x1a\x12\x13"
		.ascii  "\x01"

_096e63_data:
		.ascii  "\x1b\x1c\x00\x00\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x00\x01\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x10\x02\x1d\x1c\x10\x02"
		.ascii  "\x1d\x1c\x30\x03\x1d\x1c\x00\x04"
		.ascii  "\x1d\x1c\x5c\x05\x1d\x1c\x36\x05"
		.ascii  "\x1d\x1c\x10\x05\x1d\x1c\x00\x06"
		.ascii  "\x1d\x1e\x18\x29\x1a\x12\x13\x00"

_096e9b_data:
		.ascii  "\x15\x16\x19\x1f\x00"

_096ea0_data:
		.ascii  "\x24\x23\x2b\x01"
		.ascii   "\"$\"!"
		.ascii  "\x01"
		.ascii   "#$#+"
		.ascii  "\x01\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x20\x01\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x03\x22\x01"

_096eda_data:
		.ascii  "\x25\x27\x00"

_096edd_data:
		.ascii  "\x2d\x18\x29\x1a\x12\x13\x1b\x1c"
		.ascii  "\x10\xff\x1d\x2d\x18\x29\x1a\x12"
		.ascii  "\x12\x13\x15\x16\x1c\x20\xfe\x1d"
		.ascii  "\x01\x00\x00"

_096ef8_data:
		.long   _096e4b_data
		.long   _096e52_data
		.long   _096e5a_data
		.long   _096e63_data
		.long   _096e9b_data
		.long   _096ea0_data
		.long   _096eda_data
		.long   _096edd_data
		.long   _096e49_data
		.long   _096e47_data
		.long   _096e44_data

_096f24_data:
		.ascii  "\x10\x17\x18\x16\x19"

_096f29_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05"

_096f2f_data:
		.ascii  "\x0d\x1a\x0e\x03"

_096f33_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_096f5b_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03"

_096f68_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_096f74_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02"

_096f89_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02"

_096f9c_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_096fb4_data:
		.long   _096f2f_data

_096fb8_data:
		.long   _096f33_data
		.long   _096f2f_data
		.long   _096f5b_data
		.long   _096f68_data
		.long   _096f74_data
		.long   _096f89_data
		.long   _096f9c_data
		.long   _096f29_data
		.long   _096f24_data

_096fdc_data:
		.fill   0x4

_096fe0_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_0970e4_data:
		.long   _060b00_func

_0970e8_data:
		.long   _060c24_jump

_0970ec_data:
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060e0c_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060e2c_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060dec_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060e50_func
		.long   _060afc_jump
		.long   _060afc_jump
		.long   _060e90_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c6c_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060dd4_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060e60_func
		.long   _060afc_jump
		.long   _060afc_jump
		.long   _060e88_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060ed0_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060ef4_func
		.long   _060b20_func
		.long   _060c2c_func
		.long   _060f98_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060f70_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c70_func
		.long   _060ba8_func
		.long   _060c54_func
		.long   _060c5c_jump
		.long   _060b5c_func
		.long   _060c4c_jump
		.long   _060d7c_func
		.long   _060b5c_func
		.long   _060c4c_jump
		.long   _060da8_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060cbc_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060cbc_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c90_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060cdc_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060d04_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060d2c_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060d54_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060c5c_jump
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060f18_func
		.long   _060b00_func
		.long   _060c24_jump
		.long   _060f44_func
		.long   _060c14_func
		.long   _060c60_func
		.long   _060ec4_func

_09727c_data:
		.ascii  "\x03\x05\x05\x03\x03\x04"

_097282_data:
		.ascii  "\x00\x03\x05\x00\x05\x01\x04\x02"

_09728a_data:
		.ascii  "\x03\x04\x02\x03\x02\x00"

_097290_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xa0\x00"
		.ascii  "\x08\x00\x03\x00\x2a\x00\x13\x00"
		.ascii  "\x0e\x00"

_0972aa_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x06\x00\x0f\x00\x12\x00\x4a\x01"
		.ascii  "\x0e\x00"

_0972bc_data:
		.ascii  "\x00\x00\x15\x00\x4a\x01\x08\x00"
		.ascii  "\x06\x00\x10\x00\x12\x00\x88\xff"
		.ascii  "\x0e\x00"

_0972ce_data:
		.ascii  "\x00\x00\x15\x00\x40\x01\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xf8\xff"
		.ascii  "\x08\x00\x03\x00\x29\x00\x13\x00"
		.ascii  "\x0e\x00"

_0972e8_data:
		.ascii  "\x00\x00\x15\x00\x64\x00\x08\x00"
		.ascii  "\x03\x00\x2b\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x2c\x00\x13\x00\x0e\x00"

_097300_data:
		.ascii  "\x00\x00\x15\x00\xc8\x00\x08\x00"
		.ascii  "\x03\x00\x2f\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x30\x00\x13\x00\x11\x00"
		.ascii  "\x12\x00\x14\x00\xf8\xff\x11\x00"
		.ascii  "\x1e\x00\x14\x00\xf0\xff\x11\x00"
		.ascii  "\x2d\x00\x14\x00\xe0\xff\x11\x00"
		.ascii  "\x3c\x00\x14\x00\xc0\xff\x11\x00"
		.ascii  "\x41\x00\x14\x00\x00\x00\x13\x00"
		.ascii  "\x0e\x00"

_097342_data:
		.ascii  "\x00\x00\x04\x00\x57\x01\x22\x00"
		.ascii  "\x6c\x01\xde\x00\x25\x02\xc8\x00"
		.ascii  "\xcd\x02\xcc\x03\x19\x01\xc6\x01"
		.ascii  "\x6f\x00\xca\x02\x41\x02\x2a\x00"
		.ascii  "\xa9\x00\x43\x03\xbd\x02\x0e\x03"
		.ascii  "\x4f\x03\xd6\x03\xe0\x00\xb5\x01"
		.ascii  "\xcf\x03\x5b\x03\xb1\x03\x3e\x03"
		.ascii  "\xcd\x01\x6b\x02\xa5\x02\x66\x02"
		.ascii  "\x32\x02\xe1\x02\x74\x00\x9f\x01"
		.ascii  "\x7c\x00\xaf\x02\xe6\x01\xf6\x01"
		.ascii  "\x41\x02\x60\x01\x79\x03\x0e\x01"
		.ascii  "\xb8\x00\xb1\x01\xc7\x02\xa7\x00"
		.ascii  "\x27\x02\x94\x02\x7e\x02\x03\x00"
		.ascii  "\x26\x03\x13\x01\xd8\x01\x8b\x01"
		.ascii  "\x81\x01\x53\x02\x69\x02\x1e\x01"
		.ascii  "\xae\x00\x38\x03\x2e\x01\x55\x01"
		.ascii  "\xa2\x01\xf6\x00\xa7\x01\x37\x00"
		.ascii  "\xf9\x01\xef\x03\x01\x00\xa3\x01"
		.ascii  "\x47\x00\x4b\x00\x04\x01\xe6\x03"
		.ascii  "\x6b\x01\x9e\x01\xc9\x00\xc9\x00"
		.ascii  "\xd8\x00\xff\x00\x08\x03\x8e\x03"
		.ascii  "\x9f\x03\xf1\x02\xd8\x01\x20\x02"
		.ascii  "\x24\x00\x85\x00\xd5\x01\xef\x01"
		.ascii  "\x63\x02\x03\x01\x75\x00\xce\x02"
		.ascii  "\x98\x02\x8b\x03\x80\x03\x2b\x00"
		.ascii  "\x36\x02\x0a\x02\x7b\x02\x15\x03"
		.ascii  "\x03\x01\xde\x00\xf1\x00\x57\x01"
		.ascii  "\x43\x02\x88\x00\x74\x02\x1f\x00"
		.ascii  "\xcb\x03\xd9\x00\x3b\x03\x84\x02"
		.ascii  "\xdc\x02\xed\x02\x35\x02\x49\x02"
		.ascii  "\xac\x00\x54\x01\x7a\x03\x4c\x03"
		.ascii  "\x75\x02\xd0\x03\xf7\x03\xed\x03"
		.ascii  "\xf3\x02\x0a\x02\x2e\x01\xdf\x02"
		.ascii  "\x24\x01\x8f\x02\xf8\x01\xb3\x00"
		.ascii  "\x3c\x02\x89\x01\x19\x03\x8e\x01"
		.ascii  "\x9a\x02\x82\x00\x94\x00\x58\x01"
		.ascii  "\xad\x03\x9e\x02\x98\x02\xd6\x02"
		.ascii  "\x9f\x02\xa5\x02\xe2\x02\xfd\x03"
		.ascii  "\xaf\x01\x3f\x02\x81\x01\xef\x03"
		.ascii  "\x0f\x00\xc4\x03\xcf\x01\xf3\x00"
		.ascii  "\x2f\x02\xfa\x01\x81\x02\xd4\x02"
		.ascii  "\x55\x02\x28\x03\xba\x01\x03\x00"
		.ascii  "\x57\x03\xdd\x02\xf2\x03\xd4\x01"
		.ascii  "\x69\x01\xc1\x03\x93\x02\x42\x02"
		.ascii  "\xcb\x02\xe4\x00\x3d\x01\x97\x03"
		.ascii  "\x49\x00\xd4\x03\x73\x02\x53\x00"
		.ascii  "\x63\x03\xe8\x02\xb2\x02\xb3\x03"
		.ascii  "\xf9\x01\x24\x01\xb9\x02\x3d\x01"
		.ascii  "\x6b\x01\x05\x03\xe8\x03\xaf\x03"
		.ascii  "\xfa\x00\xa4\x01\xa7\x03\xad\x01"
		.ascii  "\x5a\x01\x8b\x03\x95\x00\x94\x00"
		.ascii  "\x4a\x01\x9b\x00\x7f\x02\xcc\x03"
		.ascii  "\x13\x01\x66\x00\xeb\x03\xfb\x00"
		.ascii  "\xdd\x00\x57\x00\x1c\x02\x82\x03"
		.ascii  "\x9e\x03\x0f\x01\x75\x02\x93\x03"
		.ascii  "\x9f\x02\x55\x00\x10\x02\x4a\x03"
		.ascii  "\x64\x03\xf4\x02\x74\x02\x30\x02"
		.ascii  "\xe5\x03\xee\x03\x41\x00\x77\x01"
		.ascii  "\xeb\x02\x63\x00\xb9\x02\x5a\x01"
		.ascii  "\x76\x00\x84\x01\x02\x01\x04\x02"
		.ascii  "\x14\x00\xfc\x03\x01\x00\x54\x00"
		.ascii  "\xfd\x00\x2b\x02\xb0\x01\xe1\x00"
		.ascii  "\xd6\x01\x95\x00\xd1\x00\xa9\x01"
		.ascii  "\x09\x00\xdb\x01\xd2\x01\xba\x00"
		.ascii  "\x0a\x00"

_097544_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x03\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x1f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x07\x07"

_097644_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b\x00\x00\x00\x32"
		.fill   0x9
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_097744_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_097844_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_097a44_data:
		.ascii  "\x00"

_097a45_data:
		.ascii  "\xff"

_097a46_data:
		.ascii  "\x00"

_097a47_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_097a7c_data:
		.ascii  "\x35"

_097a7d_data:
		.ascii  "\x07"

_097a7e_data:
		.ascii  "\x00\x50"

_097a80_data:
		.ascii  "\x3a"

_097a81_data:
		.ascii  "\x0d"

_097a82_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_097a90_data:
		.ascii  "\x3e"

_097a91_data:
		.ascii  "\x10"

_097a92_data:
		.ascii  "\x00\x50\x37\x15\x00\x41\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\xff"
		.ascii  "\x00\x50\x35\x47\x00\x3c\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_097b00_data:
		.ascii  "\x35"

_097b01_data:
		.ascii  "\x5b"

_097b02_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x50\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_097b18_data:
		.ascii  "\x35"

_097b19_data:
		.ascii  "\x01"

_097b1a_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x35\x15\x00\x50\x35\x16"
		.ascii  "\x00\x50"

_097b84_data:
		.ascii  "\x35"

_097b85_data:
		.ascii  "\x52"

_097b86_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x50\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x37\x4c"
		.ascii  "\x00\x1e\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x37"

_097cec_data:
		.ascii  "\x35"

_097ced_data:
		.ascii  "\x4e"

_097cee_data:
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\x50"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x52"
		.ascii  "\x00\x50\x37\x53\x00\x50\x30\x54"
		.ascii  "\x00\x5a\x2e\x55\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x56\x00\x50\x35\x46"
		.ascii  "\x00\x28\x35\x47\x00\x28\x35\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x37\x35\x4b\x00\x50\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x50\x35\x4e"
		.ascii  "\x00\x64\x35\x4f\x00\x7f\x35\x50"
		.ascii  "\x00\x50\x35\x51\x00\x50\x32\x25"
		.ascii  "\x00\x41\x35\x26\x00\x3c\x35\x0b"
		.ascii  "\x00\x50\x25\x68\x00\x1e\x3c\xff"
		.ascii  "\x00\x7f\x35\x08\x00\x50\x35\x64"
		.ascii  "\x00\x50\x38\x01\x00\x50\x35\x35"
		.ascii  "\x00\x32\x35\x3c\x00\x2d\x35\x4c"
		.ascii  "\x00\x50\x35\x62\x00\x64\x35\x29"
		.ascii  "\x00\x28\x35\x39\x00\x50\x35\x28"
		.ascii  "\x00\x64\x3c\x27\x00\x69\x35\x62"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x4c"
		.ascii  "\x00\x7f\x3c\x60\x00\x50\x35\x2a"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x2b"
		.ascii  "\x00\x50\x35\xff\x00\x50\x2e\x5a"
		.ascii  "\x00\x5a\x35\x5c\x00\x50\x35\x5f"
		.ascii  "\x00\x28\x35\x5e\x00\x32\x35\x5e"
		.ascii  "\x00\x50\x35\x52\x00\x50\x35\x53"
		.ascii  "\x00\x50\x32\x54\x00\x46\x34\x4d"
		.ascii  "\x00\x50\x38\x4a\x00\x50\x32\x4a"
		.ascii  "\x00\x50\x35\x5a\x00\x50\x35\x59"
		.ascii  "\x00\x50\x35\x55\x00\x50\x30\x56"
		.ascii  "\x00\x50\x35\x57\x00\x50\x39\x58"
		.ascii  "\x00\x50\x32\x4c\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x3c\xff\x00\x7f\x35\x33"
		.ascii  "\x00\x7f\x3c\x19\x00\x3c\x41\x15"
		.ascii  "\x00\x32\x41\x16\x00\x3c\x35\x5d"
		.ascii  "\x00\x37\x35\x5e\x00\x7f\x35\x5e"
		.ascii  "\x00\x7f"

_097e18_data:
		.ascii  "\x35"

_097e19_data:
		.ascii  "\x5c"

_097e1a_data:
		.ascii  "\x00\x28\x37\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f"

_097e44_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x00\x01\x01"

_097f44_data:
		.fill   0x12

_097f56_data:
		.fill   0xc

_097f62_data:
		.ascii  "\x00\x00"

_097f64_data:
		.ascii  "\x7f"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x02\x04\x05\x07\x09\x0b\x0c"

_097f76_data:
		.ascii  "\x00\x00"

_097f78_data:
		.ascii  "\x00"

_097f79_data:
		.ascii  "\x00\x00\x00"

_097f7c_data:
		.ascii  "\x00\x00"

_097f7e_data:
		.ascii  "\x01\x00"

_097f80_data:
		.ascii  "\xff\xff"

_097f82_data:
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\xfd\xff\x3c\x00"
		.ascii  "\x00\x00\x02\x00\x02\x00\xfe\xff"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\xfc\xff\x1e\x00"
		.ascii  "\x00\x00\x01\x00\x02\x00\xfc\xff"
		.ascii  "\x1e\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xfd\xff\x2a\x00\x00\x00\x01\x00"
		.ascii  "\x01\x00\xfc\xff\x50\x00\x00\x00"

_097fc2_data:
		.ascii  "\x01\x01\x00\x00\x03\xff\x00\x00"
		.ascii  "\x01\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x1d
		.ascii  "\x09\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03\xff\x00\x00\x05"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x19
		.ascii  "\x02\x01\x00\x00\x07\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x01\xff"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x03\xff\x00\x00\x04\xff\x00\x00"
		.ascii  "\x06\x01\x00\x00\x09\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x7
		.ascii  "\x09\x00\x01"
		.fill   0xb
		.ascii  "\x01\x00\x02\x00\x03\x00\x04\x00"
		.ascii  "\x00\x00\x06\x00\x06\x00\x00\x00"

_098084_data:
		.ascii  "\x00\x00\x01\x02\x02\x00\x01\x02"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x02\x02\x02\x00\x00\x01\x00"
		.ascii  "\x00\x01\x02\x00\x02\x02\x00\x00"
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x00\x02\x02\x02\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x02\x02\x02\x02"

_0980c0_data:
		.ascii  "\x01\x01\x01\x01\x01\x04\x04\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x0a\x01\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x04\x05\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x01\x01\x01"

_0980fc_data:
		.ascii  "\x20\x01"

_0980fe_data:
		.ascii  "\x02\x00"

_098100_data:
		.ascii  "\x00\x00"

_098102_data:
		.fill   0x95a
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x58\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x6e\x00\x04"
		.fill   0x5
		.ascii  "\x0f\x00\x03"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x94d
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\xc0\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x945
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xa8\x00\x04\x00\x04\x00\x05\x00"
		.ascii  "\x46\x00\x04"
		.fill   0x5
		.ascii  "\x32\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x01"
		.fill   0x95d
		.ascii  "\x9f\x00\x04"
		.fill   0x5
		.ascii  "\x81\x00\x02"
		.fill   0x955
		.ascii  "\x0c\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x38\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x1c\x00\x06"
		.fill   0x5
		.ascii  "\x10\x00\x08"
		.fill   0x915
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x54\x00\x04"
		.fill   0x5
		.ascii  "\xcc\x00\x02"
		.fill   0x955
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xb1\x00\x04"
		.fill   0x5
		.ascii  "\x6f\x00\x02"
		.fill   0x955
		.ascii  "\xb3"
		.fill   0x5
		.ascii  "\x03\x00\x14\x00\x00\x00\x10\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x20\x00"
		.ascii  "\x01\x00\x28"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x941
		.ascii  "\xb7\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x05\x00\x08"
		.fill   0x5
		.ascii  "\x15\x00\x06"
		.fill   0x5
		.ascii  "\x4e\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x93d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x6d\x00\x06"
		.fill   0x5
		.ascii  "\xb2\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xd5\x00\x04"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x955
		.ascii  "\xc8\x00\x06"
		.fill   0x5
		.ascii  "\x57\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d

_0bb37c_data:
		.fill   0x5
		.ascii  "\x0e\x09"
		.fill   0x8
		.ascii  "\x0f"
		.fill   0x8
		.ascii  "\x04\x00\x00\x02"
		.fill   0x7
		.ascii  "\x03\x0a\x0c"
		.fill   0x7
		.ascii  "\x0b"
		.fill   0x7
		.ascii  "\x06\x0d"
		.fill   0x5

_0bb3b8_data:
		.ascii  "\x00\x00"

_0bb3ba_data:
		.ascii  "\x00\x00"

_0bb3bc_data:
		.fill   0x31e
		.ascii  "\x46\x00\x01\x00\x00\x00\x35\x00"
		.ascii  "\x40\x00\x01\x00\x00\x00\x59\x00"
		.ascii  "\x24\x00\x01\x00\x00\x00\x79\x00"
		.ascii  "\x31\x00\x01\x00\x00\x00\x95\x00"
		.ascii  "\x47\x00\x01\x00\x00\x00\xc3\x00"
		.ascii  "\x3b\x00\x01\x00\x00\x00\xef\x00"
		.ascii  "\x18\x00\x01\x00\x00\x00\x17\x01"
		.ascii  "\x00\x00\x01\x00\x00\x00\x48\x01"
		.ascii  "\x47\x00\x01\x00\x00\x00\x2b\x01"
		.ascii  "\xaf\x00\x02\x00\x00\x00\xaf\x00"
		.ascii  "\xaa\x00\x02\x00\x00\x00\x26\x00"
		.ascii  "\xae\x00\x02\x00\x00\x00\x06\x01"
		.ascii  "\xb9\x00\x03\x00\x00\x00\x6c\x01"
		.ascii  "\x94\x00\x03"
		.fill   0x33
		.ascii  "\x40\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x40\x00\x78\x00\x01\x00\x00\x00"
		.ascii  "\xc0\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\xc0\x00\x78\x00\x03"
		.fill   0xd
		.ascii  "\x99"
		.fill   0x5
		.ascii  "\x28\x01"
		.fill   0x6
		.ascii  "\x28\x01\x35"
		.fill   0x5
		.ascii  "\x28\x01\x8d"
		.fill   0x55d
		.ascii  "\xaa\x00\x61\x00\x01\x00\x00\x00"
		.ascii  "\xea\x00\x4b\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x00\x79\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x00\x75\x00\x01\x00\x00\x00"
		.ascii  "\xaa\x00\xe3\x00\x02\x00\x00\x00"
		.ascii  "\xd8\x00\xe5\x00\x02\x00\x00\x00"
		.ascii  "\x32\x01\xe1\x00\x02\x00\x00\x00"
		.ascii  "\x72\x01\x6b\x00\x02\x00\x00\x00"
		.ascii  "\x32\x00\x7f\x00\x02\x00\x00\x00"
		.ascii  "\x52\x00\xcd\x00\x02\x00\x00\x00"
		.ascii  "\x8a\x00\xdd\x00\x02\x00\x00\x00"
		.ascii  "\x68\x01\xe1\x00\x03\x00\x00\x00"
		.ascii  "\x28\x00\x0f\x01\x03"
		.fill   0x52b
		.ascii  "\x3f\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x70\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\xff\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x30\x01\x8f\x00\x01"
		.fill   0x1c3
		.ascii  "\x06\x00\x42\x00\x01\x00\x00\x00"
		.ascii  "\x08\x01\x39\x00\x01"
		.fill   0x4f3
		.ascii  "\x8a\x00\x8d\x00\x01\x00\x00\x00"
		.ascii  "\xca\x00\x93\x00\x01\x00\x00\x00"
		.ascii  "\x0a\x01\x97\x00\x01"
		.fill   0x8d
		.ascii  "\x7b\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x89\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x83\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x8d\x00\x01"
		.fill   0x4
		.ascii  "\x01\xa1\x00\x01"
		.fill   0x5
		.ascii  "\xb9\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xa6\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xa4\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xa4\x00\x02"
		.fill   0x4
		.ascii  "\x01\xb0\x00\x02"
		.fill   0x55
		.ascii  "\x93\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\xad\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x84\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x70\x00\x01"
		.fill   0x4
		.ascii  "\x01\x72\x00\x01\x00\x00\x00\x40"
		.ascii  "\x01\x7f\x00\x01"
		.fill   0x5
		.ascii  "\xde\x00\x04\x00\x00\x00\x40\x00"
		.ascii  "\xec\x00\x04\x00\x00\x00\x80\x00"
		.ascii  "\xdb\x00\x04\x00\x00\x00\xc0\x00"
		.ascii  "\xe3\x00\x04"
		.fill   0x4
		.ascii  "\x01\xe9\x00\x04\x00\x00\x00\x40"
		.ascii  "\x01\xe7\x00\x04"
		.fill   0x4a5
		.ascii  "\x55\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x52\x00\x01\x00\x00\x00\x93\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\xd3\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\x4c\x01"
		.ascii  "\x60\x00\x01"
		.fill   0x5
		.ascii  "\xd8\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xd0\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xd7\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xec\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe3\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe1\x00\x02"
		.fill   0x4ab
		.ascii  "\x43\x00\xb9\x00\x01\x00\x00\x00"
		.ascii  "\x73\x00\xa2\x00\x01\x00\x00\x00"
		.ascii  "\xd3\x00\xa6\x00\x01\x00\x00\x00"
		.ascii  "\x03\x01\x75\x00\x01\x00\x00\x00"
		.ascii  "\x43\x01\x6f\x00\x01\x00\x00\x00"
		.ascii  "\x59\x01\xab\x00\x01"
		.fill   0x73
		.ascii  "\x19\x00\x69\x00\x01\x00\x00\x00"
		.ascii  "\xa2\x00\xb6\x00\x01\x00\x00\x00"
		.ascii  "\xd6\x00\xa8\x00\x01\x00\x00\x00"
		.ascii  "\x4a\x01\xad\x00\x01"
		.fill   0x5
		.ascii  "\x0a\x01\x02\x00\x00\x00\x20\x00"
		.ascii  "\xe3\x00\x02\x00\x00\x00\x41\x00"
		.ascii  "\x83\x00\x02\x00\x00\x00\x54\x00"
		.ascii  "\xfb\x00\x02\x00\x00\x00\xa4\x00"
		.ascii  "\xea\x00\x02\x00\x00\x00\xd8\x00"
		.ascii  "\x00\x01\x02\x00\x00\x00\xef\x00"
		.ascii  "\xad\x00\x02\x00\x00\x00\x1c\x01"
		.ascii  "\x10\x01\x02\x00\x00\x00\x58\x01"
		.ascii  "\xfe\x00\x02"
		.fill   0x35b

_0bd938_data:
		.ascii  "\x00\x00\x00\x01\x03\x05\x07"
		.ascii   "\t\n\n\n\t"
		.ascii  "\x07\x05\x03\x01"

_0bd948_data:
		.fill   0x4

_0bd94c_data:
		.ascii  "\x04\x00\x02\x00\x00\x00\xfe\xff"
		.ascii  "\xfc\xff\x02\x00\x00\x00\xfe\xff"

_0bd95c_data:
		.ascii  "\x00\x00\x02\x00\x04\x00\x02\x00"
		.ascii  "\x00\x00\xfe\xff\xfc\xff\xfe\xff"

_0bd96c_data:
		.fill   0x4

_0bd970_data:
		.fill   0x4

_0bd974_data:
		.fill   0x4

_0bd978_data:
		.ascii  "\x00\x00"

_0bd97a_data:
		.ascii  "\x00\x00"

_0bd97c_data:
		.fill   0x4

_0bd980_data:
		.ascii  "\x00\x00"

_0bd982_data:
		.ascii  "\x00\x00"

_0bd984_data:
		.fill   0x4

_0bd988_data:
		.ascii  "\x00\x00"

_0bd98a_data:
		.ascii  "\x00\x00"

_0bd98c_data:
		.fill   0x4

_0bd990_data:
		.ascii  "\x00\x00"

_0bd992_data:
		.ascii  "\x00\x00"

_0bd994_data:
		.fill   0x4

_0bd998_data:
		.fill   0x4

_0bd99c_data:
		.ascii  "\x20\x00\x00\x00"

_0bd9a0_data:
		.fill   0x4

_0bd9a4_data:
		.fill   0x4

_0bd9a8_data:
		.long   _080511_jump

_0bd9ac_data:
		.long   _080511_jump

_0bd9b0_data:
		.long   _080511_jump

_0bd9b4_data:
		.ascii  "\x01\x00\x00\x00"

_0bd9b8_data:
		.fill   0x4

_0bd9bc_data:
		.fill   0x4

_0bd9c0_data:
		.fill   0x4

_0bd9c4_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0bd9de_data:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"

_0bda05_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0bda46_data:
		.fill   0x186

_0bdbcc_data:
		.ascii  "\x61"

_0bdbcd_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0e7520_data
		.ascii  "\x00\x00\x00"

_0bdbd8_data:
		.ascii  "\x00"

_0bdbd9_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08\x06"
		.ascii  "\x08\x01\xff"

_0bdbf0_data:
		.fill   0x4

_0bdbf4_data:
		.fill   0x4

_0bdbf8_data:
		.fill   0x4

_0bdbfc_data:
		.fill   0x4

_0bdc00_data:
		.fill   0x4

_0bdc04_data:
		.fill   0x4

_0bdc08_data:
		.fill   0x4

_0bdc0c_data:
		.fill   0x4

_0bdc10_data:
		.fill   0x4

_0bdc14_data:
		.fill   0x8

_0bdc1c_data:
		.fill   0x4

_0bdc20_data:
		.ascii  "\x00\x00"

_0bdc22_data:
		.ascii  "\x00"

_0bdc23_data:
		.ascii  "\x00"

_0bdc24_data:
		.ascii  "\x00"

_0bdc25_data:
		.fill   0x4

_0bdc29_data:
		.ascii  "\x00\x00"

_0bdc2b_data:
		.ascii  "\x00"

_0bdc2c_data:
		.ascii  "\x00"

_0bdc2d_data:
		.ascii  "\x52\x64\x08"

_0bdc30_data:
		.fill   0x4
		.long   _0c17f4_data
		.long   _0c17f9_data
		.long   _0c17fe_data
		.long   _0c1803_data
		.long   _0c1807_data
		.long   _0c180c_data
		.long   _0c1811_data
		.long   _0c1815_data
		.long   _0c181b_data
		.long   _0c1820_data
		.long   _0c1824_data
		.long   _0c182a_data
		.long   _0c1830_data
		.long   _0c1836_data
		.long   _0c183b_data
		.long   _0c1841_data
		.long   _0c1845_data
		.long   _0c1849_data
		.long   _0c184d_data
		.long   _0c1850_data
		.long   _0c1853_data
		.long   _0c1856_data
		.long   _0c185a_data

_0bdc90_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x00\x00"

_0bdc9c_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0bdca6_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

_0bdcb0_data:
		.fill   0x4

_0bdcb4_data:
		.fill   0x4

_0bdcb8_data:
		.ascii  "\x14\x00\x00\x00"

_0bdcbc_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0bdd0c_data:
		.long   _0bdcbc_data

_0bdd10_data:
		.fill   0x4

_0bdd14_data:
		.fill   0x14

_0bdd28_data:
		.fill   0x14

_0bdd3c_data:
		.fill   0x4

_0bdd40_data:
		.fill   0x1a

_0bdd5a_data:
		.fill   0x4

_0bdd5e_data:
		.fill   0x1a

_0bdd78_data:
		.fill   0x14

_0bdd8c_data:
		.fill   0x14

_0bdda0_data:
		.fill   0x4

_0bdda4_data:
		.fill   0x1a

_0bddbe_data:
		.fill   0x4

_0bddc2_data:
		.fill   0x1a

_0bdddc_data:
		.fill   0x14

_0bddf0_data:
		.fill   0x14

_0bde04_data:
		.fill   0x14

_0bde18_data:
		.fill   0x14

_0bde2c_data:
		.fill   0x14

_0bde40_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0bde54_data:
		.fill   0x14

_0bde68_data:
		.fill   0x4

_0bde6c_data:
		.fill   0x1a

_0bde86_data:
		.fill   0x14

_0bde9a_data:
		.fill   0x14

_0bdeae_data:
		.fill   0x14

_0bdec2_data:
		.fill   0x4

_0bdec6_data:
		.fill   0x1a

_0bdee0_data:
		.fill   0x4

_0bdee4_data:
		.fill   0x3bc

_0be2a0_data:
		.fill   0x4

_0be2a4_data:
		.fill   0x1e

_0be2c2_data:
		.fill   0x18

_0be2da_data:
		.fill   0x24

_0be2fe_data:
		.fill   0x19

_0be317_data:
		.fill   0x2b

_0be342_data:
		.fill   0x220

_0be562_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0be582_data:
		.fill   0x5

_0be587_data:
		.fill   0x4

_0be58b_data:
		.fill   0x4

_0be58f_data:
		.fill   0x4

_0be593_data:
		.fill   0x4

_0be597_data:
		.fill   0x4

_0be59b_data:
		.fill   0x4

_0be59f_data:
		.fill   0x4

_0be5a3_data:
		.fill   0x4

_0be5a7_data:
		.fill   0x4

_0be5ab_data:
		.fill   0x4

_0be5af_data:
		.fill   0x4

_0be5b3_data:
		.fill   0x4

_0be5b7_data:
		.fill   0x4

_0be5bb_data:
		.fill   0x4

_0be5bf_data:
		.fill   0x4

_0be5c3_data:
		.fill   0x4

_0be5c7_data:
		.fill   0x4

_0be5cb_data:
		.fill   0x13c

_0be707_data:
		.ascii  "\xff\xff\xff\xff"

_0be70b_data:
		.fill   0x4

_0be70f_data:
		.fill   0x56

_0be765_data:
		.fill   0x4

_0be769_data:
		.ascii  "\x00\x00"

_0be76b_data:
		.fill   0x3c

_0be7a7_data:
		.fill   0x4

_0be7ab_data:
		.fill   0x3c

_0be7e7_data:
		.fill   0x4

_0be7eb_data:
		.ascii  "\x00\x00"

_0be7ed_data:
		.fill   0x3e

_0be82b_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0be83b_data:
		.ascii  "\x00"

_0be83c_data:
		.fill   0xff

_0be93b_data:
		.fill   0xff

_0bea3a_data:
		.fill   0x4

_0bea3e_data:
		.fill   0x20

_0bea5e_data:
		.fill   0x8

_0bea66_data:
		.fill   0x4

_0bea6a_data:
		.fill   0x24

_0bea8e_data:
		.fill   0x4

_0bea92_data:
		.fill   0x5

_0bea97_data:
		.ascii  "\x00\x00\x00"

_0bea9a_data:
		.fill   0x4

_0bea9e_data:
		.fill   0x4

_0beaa2_data:
		.ascii  "\x00\x00"

_0beaa4_data:
		.fill   0x4

_0beaa8_data:
		.ascii  "\x00\x00"

_0beaaa_data:
		.fill   0x4

_0beaae_data:
		.fill   0x4

_0beab2_data:
		.fill   0x4

_0beab6_data:
		.fill   0x4

_0beaba_data:
		.fill   0x4

_0beabe_data:
		.fill   0x4

_0beac2_data:
		.ascii  "\x00\x00"

_0beac4_data:
		.fill   0x3c

_0beb00_data:
		.ascii  "\x00"

_0beb01_data:
		.fill   0x2f

_0beb30_data:
		.long   _0c1860_data
		.long   _0c1886_data
		.long   _0c18a5_data
		.long   _0c18bf_data
		.long   _0c18e7_data
		.long   _0c18f9_data
		.long   _0c1913_data
		.long   _0c1925_data
		.long   _0c1936_data
		.long   _0c195f_data
		.long   _0c198c_data
		.long   _0c199b_data
		.long   _0c19b0_data
		.long   _0c19c8_data
		.long   _0c19dc_data
		.long   _0c19ee_data
		.long   _0c1a09_data
		.long   _0c1a18_data
		.long   _0c1a26_data
		.long   _0c1a34_data

_0beb80_data:
		.fill   0x14

_0beb94_data:
		.fill   0x4

_0beb98_data:
		.fill   0xc

_0beba4_data:
		.fill   0x4

_0beba8_data:
		.fill   0x4

_0bebac_data:
		.fill   0x4

_0bebb0_data:
		.fill   0x4

_0bebb4_data:
		.fill   0x4

_0bebb8_data:
		.fill   0x4

_0bebbc_data:
		.fill   0xc

_0bebc8_data:
		.fill   0x20

_0bebe8_data:
		.fill   0xc

_0bebf4_data:
		.fill   0x24

_0bec18_data:
		.fill   0x4

_0bec1c_data:
		.fill   0x5

_0bec21_data:
		.ascii  "\x00\x00\x00"

_0bec24_data:
		.fill   0x4

_0bec28_data:
		.fill   0x4

_0bec2c_data:
		.fill   0x4

_0bec30_data:
		.fill   0x4

_0bec34_data:
		.fill   0x8

_0bec3c_data:
		.fill   0x4

_0bec40_data:
		.fill   0x4

_0bec44_data:
		.ascii  "\x00\x00"

_0bec46_data:
		.long   _0bfc56_data

_0bec4a_data:
		.fill   0x4

_0bec4e_data:
		.fill   0x4

_0bec52_data:
		.fill   0x1004

_0bfc56_data:
		.fill   0x4

_0bfc5a_data:
		.fill   0x4

_0bfc5e_data:
		.ascii  "\x00\x00"

_0bfc60_data:
		.fill   0x4

_0bfc64_data:
		.fill   0x4

_0bfc68_data:
		.fill   0x4

_0bfc6c_data:
		.fill   0x4

_0bfc70_data:
		.fill   0x50

_0bfcc0_data:
		.fill   0x4

_0bfcc4_data:
		.fill   0x4

_0bfcc8_data:
		.fill   0x4

_0bfccc_data:
		.fill   0x4

_0bfcd0_data:
		.fill   0x3c

_0bfd0c_data:
		.fill   0x50

_0bfd5c_data:
		.fill   0x4

_0bfd60_data:
		.fill   0x4

_0bfd64_data:
		.fill   0x4

_0bfd68_data:
		.fill   0x4

_0bfd6c_data:
		.fill   0x4

_0bfd70_data:
		.ascii  "\x00\x00"

_0bfd72_data:
		.string "Stack Overflow!\r\n"

_0bfd84_data:
		.long   _08abf8_func

_0bfd88_data:
		.long   _08abf8_func

_0bfd8c_data:
		.long   _08c70c_func

_0bfd90_data:
		.fill   0x4

_0bfd94_data:
		.fill   0x4

_0bfd98_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0bfdbc_data:
		.fill   0x4

_0bfdc0_data:
		.fill   0x4

_0bfdc4_data:
		.ascii  "\x01\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0bfde0_data:
		.ascii  "\x50\x46\x00\x00"

_0bfde4_data:
		.ascii  "\x10\x0e\x00\x00"

_0bfde8_data:
		.ascii  "\x01\x00\x00\x00"

_0bfdec_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0bfe0b_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0bfdec_data

_0bfe2e_data:
		.long   _0bfe0b_data

_0bfe32_data:
		.ascii  "\x01"
		.fill   0x5

_0bfe38_data:
		.ascii  "\x01\x00\x00\x00"

_0bfe3c_data:
		.ascii  "\x10\x00\x00\x00"

_0bfe40_data:
		.long   _08bb8c_jump

_0bfe44_data:
		.long   _08bb8c_jump

_0bfe48_data:
		.ascii  "\x7f\x12\x00\x00"

_0bfe4c_data:
		.fill   0x4

_0bfe50_data:
		.ascii  "\x00\x00"

_0bfe52_data:
		.fill   0x4

_0bfe56_data:
		.ascii  "\x00\x00"

_0bfe58_data:
		.fill   0x4

_0bfe5c_data:
		.ascii  "\x00\x00"

_0bfe5e_data:
		.fill   0x4

_0bfe62_data:
		.ascii  "\x00\x00"

_0bfe64_data:
		.fill   0x4

_0bfe68_data:
		.ascii  "\x11\x00\x00\x00"

_0bfe6c_data:
		.fill   0x4

_0bfe70_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"

_0bfe78_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x01\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00"

_0bfea4_data:
		.long   _08d0e6_func

_0bfea8_data:
		.fill   0x4

_0bfeac_data:
		.string "/michel ancel/"
		.ascii  "\x00"

_0bfebc_data:
		.string "/frederic houde/"
		.ascii  "\x00\x00\x00"

_0bfed0_data:
		.string "/alexandra steible/"

_0bfee4_data:
		.string "/serge hascoet/"

_0bfef4_data:
		.string "/bruno bouvret/"

_0bff04_data:
		.string "/gunther galipot/"
		.ascii  "\x00\x00"

_0bff18_data:
		.string "/sacha gentilhomme/"

_0bff2c_data:
		.string "/michael guez/"
		.ascii  "\x00"

_0bff3c_data:
		.string "/christophe thibaut/"
		.ascii  "\x00\x00\x00"

_0bff54_data:
		.string "/kamal aitmihoub/"
		.ascii  "\x00\x00"

_0bff68_data:
		.string "/david gilson/"
		.ascii  "\x00"

_0bff78_data:
		.string "/sophie esturgie/"
		.ascii  "\x00\x00"

_0bff8c_data:
		.string "/jacques exertie/"
		.ascii  "\x00\x00"

_0bffa0_data:
		.string "/gregoire pons/"

_0bffb0_data:
		.string "/veronique rondello/"
		.ascii  "\x00\x00\x00"

_0bffc8_data:
		.string "/beatrice sauterau/"

_0bffdc_data:
		.string "/philippe vindolet"
		.ascii  "\x00"

_0bfff0_data:
		.string "/christian volckman/"
		.ascii  "\x00\x00\x00"

_0c0008_data:
		.string "/eric pelatan/"
		.ascii  "\x00"

_0c0018_data:
		.string "/sylvaine jenny/"
		.ascii  "\x00\x00\x00"

_0c002c_data:
		.string "/jean christophe alessandri/"
		.ascii  "\x00\x00\x00"

_0c004c_data:
		.string "/sophie ancel/"
		.ascii  "\x00"

_0c005c_data:
		.string "/olivier bechard/"
		.ascii  "\x00\x00"

_0c0070_data:
		.string "/nicolas bocquillon/"
		.ascii  "\x00\x00\x00"

_0c0088_data:
		.string "/jean marc geffroy/"

_0c009c_data:
		.string "/laurent rettig/"
		.ascii  "\x00\x00\x00"

_0c00b0_data:
		.string "/olivier soleil/"
		.ascii  "\x00\x00\x00"

_0c00c4_data:
		.string "/bertrand helias/"
		.ascii  "\x00\x00"

_0c00d8_data:
		.string "/yann le tensorer/"
		.ascii  "\x00"

_0c00ec_data:
		.string "/daniel palix/"
		.ascii  "\x00"

_0c00fc_data:
		.string "/cyril cauchois/"
		.ascii  "\x00\x00\x00"

_0c0110_data:
		.string "/olivier couvreur/"
		.ascii  "\x00"

_0c0124_data:
		.string "/antoine dodens/"
		.ascii  "\x00\x00\x00"

_0c0138_data:
		.string "/antonio ferreira/"
		.ascii  "\x00"

_0c014c_data:
		.string "/philippe fuentes/"
		.ascii  "\x00"

_0c0160_data:
		.string "/benoit germain/"
		.ascii  "\x00\x00\x00"

_0c0174_data:
		.string "/christophe giraud/"

_0c0188_data:
		.string "/francois mahieu/"
		.ascii  "\x00\x00"

_0c019c_data:
		.string "/christian mihalache/"
		.ascii  "\x00\x00"

_0c01b4_data:
		.string "/sebastien morin/"
		.ascii  "\x00\x00"

_0c01c8_data:
		.string "/bogdan radusi/"

_0c01d8_data:
		.string "/daniel raviart/"
		.ascii  "\x00\x00\x00"

_0c01ec_data:
		.string "/olivier rozier/"
		.ascii  "\x00\x00\x00"

_0c0200_data:
		.string "/jozef skrabo/"
		.ascii  "\x00"

_0c0210_data:
		.string "/gilles vanwalleghem/"
		.ascii  "\x00\x00"

_0c0228_data:
		.string "/stephane bellanger/"
		.ascii  "\x00\x00\x00"

_0c0240_data:
		.string "/didier lord/"
		.ascii  "\x00\x00"

_0c0250_data:
		.string "/olivier amiaud/"
		.ascii  "\x00\x00\x00"

_0c0264_data:
		.string "/sylvain brunet/"
		.ascii  "\x00\x00\x00"

_0c0278_data:
		.string "/nathalie drouet/"
		.ascii  "\x00\x00"

_0c028c_data:
		.string "/dominique dumont/"
		.ascii  "\x00"

_0c02a0_data:
		.string "/kamel feunas/"
		.ascii  "\x00"

_0c02b0_data:
		.string "/remy gazel/"
		.ascii  "\x00\x00\x00"

_0c02c0_data:
		.string "/didier leglise/"
		.ascii  "\x00\x00\x00"

_0c02d4_data:
		.string "/jean marc litchmann/"
		.ascii  "\x00\x00"

_0c02ec_data:
		.string "/frederic louvre/"
		.ascii  "\x00\x00"

_0c0300_data:
		.string "/guillaume michel/"
		.ascii  "\x00"

_0c0314_data:
		.string "/olivier mortier/"
		.ascii  "\x00\x00"

_0c0328_data:
		.string "/frederic prados/"
		.ascii  "\x00\x00"

_0c033c_data:
		.string "/stephane ronse/"
		.ascii  "\x00\x00\x00"

_0c0350_data:
		.string "/rene de wael/"
		.ascii  "\x00"

_0c0360_data:
		.string "/emmanuelle cosso/"
		.ascii  "\x00"

_0c0374_data:
		.string "/mitsuyuki bando/"
		.ascii  "\x00\x00"

_0c0388_data:
		.string "/chris benard/"
		.ascii  "\x00"

_0c0398_data:
		.string "/patrice dozier/"
		.ascii  "\x00\x00\x00"

_0c03ac_data:
		.string "/douglas rand/"
		.ascii  "\x00"

_0c03bc_data:
		.string "/steven perkinson/"
		.ascii  "\x00"

_0c03d0_data:
		.string "/christian stonner/"

_0c03e4_data:
		.string "/bruno barone/"
		.ascii  "\x00"

_0c03f4_data:
		.string "/thomas belmont/"
		.ascii  "\x00\x00\x00"

_0c0408_data:
		.string "/christophe cavelan/"
		.ascii  "\x00\x00\x00"

_0c0420_data:
		.string "/marc gioan/"
		.ascii  "\x00\x00\x00"

_0c0430_data:
		.string "/benoit macon/"
		.ascii  "\x00"

_0c0440_data:
		.string "/lionel rico/"
		.ascii  "\x00\x00"

_0c0450_data:
		.string "/emmanuel texandier/"
		.ascii  "\x00\x00\x00"

_0c0468_data:
		.string "/dorian thibaut/"
		.ascii  "\x00\x00\x00"

_0c047c_data:
		.string "/agnes haegel/"
		.ascii  "\x00"

_0c048c_data:
		.string "/ludimedia : gerard guillemot/"
		.ascii  "\x00"

_0c04ac_data:
		.string "/ubi studios : michel guillemot/"
		.ascii  "\x00\x00\x00"

_0c04d0_data:
		.string "/ubi soft :  yves guillemot/"
		.ascii  "\x00\x00\x00"

_0c04f0_data:
		.string "rayman"
		.ascii  "\x00"

_0c04f8_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c04fc_data:
		.string "SAVE"
		.ascii  "\x00\x00\x00"

_0c0504_data:
		.string "Missing = in rayman's argument (save=pathname).\n"
		.ascii  "\x00\x00\x00"

_0c0538_data:
		.ascii  "\x5c\x00\x00\x00"

_0c053c_data:
		.string "FREQ70"
		.ascii  "\x00"

_0c0544_data:
		.ascii  "\x49\x42\x4d\x00"

_0c0548_data:
		.string "Compaq"
		.ascii  "\x00"

_0c0550_data:
		.string "AT&T"
		.ascii  "\x00\x00\x00"

_0c0558_data:
		.string "Hewlett-Packard"

_0c0568_data:
		.string "Packard-Bell"
		.ascii  "\x00\x00\x00"

_0c0578_data:
		.ascii  "\x44\x45\x43\x00"

_0c057c_data:
		.string "Olivetti"
		.ascii  "\x00\x00\x00"

_0c0588_data:
		.ascii  "\x44\x52\x00\x00"

_0c058c_data:
		.string "Microsoft"
		.ascii  "\x00\x00"

_0c0598_data:
		.string "Unknown"

_0c05a0_data:
		.ascii  "\x20\x00\x00\x00"

_0c05a4_data:
		.string "OS/2 v1.x"
		.ascii  "\x00\x00"

_0c05b0_data:
		.string "OS/2 Warp v3.0"
		.ascii  "\x00"

_0c05c0_data:
		.string "OS/2 v2.x"
		.ascii  "\x00\x00"

_0c05cc_data:
		.string "Dos v%1d.%1d"
		.ascii  "\x00\x00\x00"

_0c05dc_data:
		.ascii  "\x0a\x00\x00\x00"

_0c05e0_data:
		.string "\nLeft memory available = %.3f Mo.\n\n"

_0c0604_data:
		.string "386 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c0620_data:
		.string "Rayman requires a 486 or more.\n"

_0c0640_data:
		.string "486 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c065c_data:
		.string "Pentium processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c067c_data:
		.string "Pentium %1d processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c06a0_data:
		.string "Unknown processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c06c0_data:
		.string "No windows detected.\n"
		.ascii  "\x00\x00"

_0c06d8_data:
		.string "Windows real mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c06f8_data:
		.string "Windows standard mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c071c_data:
		.string "Windows/386 V 2.x detected.\n"
		.ascii  "\x00\x00\x00"

_0c073c_data:
		.string "Windows 95 detected.\n"
		.ascii  "\x00\x00"

_0c0754_data:
		.string "Windows V %d.%d detected.\n"
		.ascii  "\x00"

_0c0770_data:
		.string "Not enough memory."
		.ascii  "\x00"

_0c0784_data:
		.string "Normal and X mode available.\n"
		.ascii  "\x00\x00"

_0c07a4_data:
		.string "Only X mode available.\n"

_0c07bc_data:
		.string "Zoom effect available.\n"

_0c07d4_data:
		.string "No zoom effect.\n"
		.ascii  "\x00\x00\x00"

_0c07e8_data:
		.string "Sound and CD music.\n"
		.ascii  "\x00\x00\x00"

_0c0800_data:
		.string "Only sound, no CD music.\n"
		.ascii  "\x00\x00"

_0c081c_data:
		.string "Only CD music, no sound.\n"
		.ascii  "\x00\x00"

_0c0838_data:
		.string "no CD music, no sound.\n"

_0c0850_data:
		.string "Background available.\n"
		.ascii  "\x00"

_0c0868_data:
		.string "No background.\n"

_0c0878_data:
		.string "save path : %s\n"

_0c0888_data:
		.string "Allocation error in variables.\n"

_0c08a8_data:
		.string "Allocation error in variables.\n"

_0c08c8_data:
		.string "RAYMAN (US) v1.21"
		.ascii  "\x00\x00"

_0c08dc_data:
		.string "(C) 1994-1995 UBI STUDIOS, FRANCE"
		.ascii  "\x00\x00"

_0c0900_data:
		.ascii  "\x0a\x0a\x00\x00"

_0c0904_data:
		.string "c:\\raytmp.tmp"
		.ascii  "\x00\x00"

_0c0914_data:
		.string "CD ROM's Initialization.\n"
		.ascii  "\x00\x00"

_0c0930_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c093c_data:
		.string "/limited version/"
		.ascii  "\x00\x00"

_0c0950_data:
		.string "/install rayman with cdrom/"

_0c096c_data:
		.string "/hi master/"

_0c0978_data:
		.string "/happy to see you/"
		.ascii  "\x00"

_0c098c_data:
		.ascii  "\x25\x00\x00\x00"

_0c0990_data:
		.string "/go !/"
		.ascii  "\x00"

_0c0998_data:
		.string "''game over''"
		.ascii  "\x00\x00"

_0c09a8_data:
		.string "game over"
		.ascii  "\x00\x00"

_0c09b4_data:
		.ascii  "\x3a\x00\x00\x00"

_0c09b8_data:
		.fill   0x4

_0c09bc_data:
		.string "Rayman says fatal error :\n%s\n"
		.ascii  "\x00\x00"

_0c09dc_data:
		.string "System info : \n"

_0c09ec_data:
		.string "  - errno = %d\n"

_0c09fc_data:
		.ascii  "\x0a\x00\x00\x00"

_0c0a00_data:
		.string "\nPress a key to exit.\n"
		.ascii  "\x00"

_0c0a18_data:
		.string "/%2d : %02d/"
		.ascii  "\x00\x00\x00"

_0c0a28_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0c0a30_data:
		.string "Write Protect Violation"

_0c0a48_data:
		.string "Unknown unit"
		.ascii  "\x00\x00\x00"

_0c0a58_data:
		.string "Drive not ready"

_0c0a68_data:
		.string "Unknown command"

_0c0a78_data:
		.string "CRC error"
		.ascii  "\x00\x00"

_0c0a84_data:
		.string "Bad drive request structure length"
		.ascii  "\x00"

_0c0aa8_data:
		.string "Seek error"
		.ascii  "\x00"

_0c0ab4_data:
		.string "Unknown media"
		.ascii  "\x00\x00"

_0c0ac4_data:
		.string "Sector not found"
		.ascii  "\x00\x00\x00"

_0c0ad8_data:
		.string "Printer out of paper"
		.ascii  "\x00\x00\x00"

_0c0af0_data:
		.string "Write fault"

_0c0afc_data:
		.string "Read fault"
		.ascii  "\x00"

_0c0b08_data:
		.string "General failure"

_0c0b18_data:
		.string "Reserved"
		.ascii  "\x00\x00\x00"

_0c0b24_data:
		.string "Invalid disk change"

_0c0b38_data:
		.string "Corrupted CD-ROM driver (MSCDEX)."
		.ascii  "\x00\x00"

_0c0b5c_data:
		.string "Please insert Rayman's CD-ROM and close the door."
		.ascii  "\x00\x00"

_0c0b90_data:
		.string "CD ROM drive found on %c:\n"
		.ascii  "\x00"

_0c0bac_data:
		.string "Differential method"

_0c0bc0_data:
		.string "Source file checksum error\n"

_0c0bdc_data:
		.string "Corrupted source file\n"
		.ascii  "\x00"

_0c0bf4_data:
		.string "Fatal error: "
		.ascii  "\x00\x00"

_0c0c04_data:
		.fill   0x4

_0c0c08_data:
		.ascii  "\x7e\x00\x00\x00\x7a"

_0c0c0d_data:
		.ascii  "\x00\x00\x00"

_0c0c10_data:
		.string "level "
		.ascii  "\x00"

_0c0c18_data:
		.string "conclu.dat"
		.ascii  "\x00"

_0c0c24_data:
		.string "Memory error in draw_buffer.\n"
		.ascii  "\x00\x00"

_0c0c44_data:
		.ascii  "\x52\x41\x59\x00"

_0c0c48_data:
		.string ".LEV"
		.ascii  "\x00\x00\x00"

_0c0c50_data:
		.string ".WLD"
		.ascii  "\x00\x00\x00"

_0c0c58_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c0c60_data:
		.string ".SAV"
		.ascii  "\x00\x00\x00"

_0c0c68_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0c0c70_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c0c7c_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0c80_data:
		.ascii  "\x72\x62\x00\x00"

_0c0c84_data:
		.string "Rayman sound says fatal error :\n%s\n"

_0c0ca8_data:
		.ascii  "\x72\x62\x00\x00"

_0c0cac_data:
		.string "SNDH8B.DAT"
		.ascii  "\x00"

_0c0cb8_data:
		.string "Fichier header introuvable (SNDH8B.DAT).\n"
		.ascii  "\x00\x00"

_0c0ce4_data:
		.string "Load error in sndh8b.dat.\n"
		.ascii  "\x00"

_0c0d00_data:
		.string "SNDD8B.DAT"
		.ascii  "\x00"

_0c0d0c_data:
		.string "Fichier data introuvable.\n"
		.ascii  "\x00"

_0c0d28_data:
		.ascii  "\x4d\x82"
		.string "moire insuffisante pour charger les samples.\n"

_0c0d58_data:
		.string "Load error in sndd8b.dat.\n"
		.ascii  "\x00"

_0c0d74_data:
		.string "sndvig.dat"
		.ascii  "\x00"

_0c0d80_data:
		.string "Fichier Tchach introuvable.\n"
		.ascii  "\x00\x00\x00"

_0c0da0_data:
		.string "Load error in sndvig.dat.\n"
		.ascii  "\x00"

_0c0dbc_data:
		.string "FILE NOT FOUND: %s\n"

_0c0dd0_data:
		.string "DANY"
		.ascii  "\x00\x00\x00"

_0c0dd8_data:
		.string " tu veux voir comment y joue Monsieur Daniel ?\n"

_0c0e08_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"
		.ascii  "\x00"

_0c0e28_data:
		.string ".REC"
		.ascii  "\x00\x00\x00"

_0c0e30_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0c0e40_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0e44_data:
		.string "PCMAP"
		.ascii  "\x00\x00"

_0c0e4c_data:
		.ascii  "\x5c\x00\x00\x00"

_0c0e50_data:
		.ascii  "\x72\x62\x00\x00"

_0c0e54_data:
		.string "Can not open file %s (load_world).\n"

_0c0e78_data:
		.string "%s : File integrity fault.\n"

_0c0e94_data:
		.string "Can not open file %s (load_level).\n"

_0c0eb8_data:
		.string "%s : File integrity fault (Block Normal).\n"
		.ascii  "\x00"

_0c0ee4_data:
		.string "bray.dat"
		.ascii  "\x00\x00\x00"

_0c0ef0_data:
		.string "Can not open file %s (load_big_ray).\n"
		.ascii  "\x00\x00"

_0c0f18_data:
		.string "ALLFIX.DAT"
		.ascii  "\x00"

_0c0f24_data:
		.string "Can not open file %s (load_all_fix).\n"
		.ascii  "\x00\x00"

_0c0f4c_data:
		.string "VIGNET.DAT"
		.ascii  "\x00"

_0c0f58_data:
		.string "%s : Can not open (pcx).\n"
		.ascii  "\x00\x00"

_0c0f74_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0f98_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0fc4_data:
		.string "%s : Can not open (palette).\n"
		.ascii  "\x00\x00"

_0c0fe4_data:
		.string "%s : Can not open (background).\n"
		.ascii  "\x00\x00\x00"

_0c1008_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c102c_data:
		.string "No memory allocated (load_plan0)."
		.ascii  "\x00\x00"

_0c1050_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."
		.ascii  "\x00"

_0c1080_data:
		.string "RAY.LNG"

_0c1088_data:
		.string "%s : Can not open.\n"

_0c109c_data:
		.string "Memory error in LoadLanguageTxt"

_0c10bc_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c10e0_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c110c_data:
		.string "320x200"

_0c1114_data:
		.string "312x196"

_0c111c_data:
		.string "304x192"

_0c1124_data:
		.string "300x188"

_0c112c_data:
		.ascii  "\x36\x30\x00\x00"

_0c1130_data:
		.ascii  "\x35\x30\x00\x00"

_0c1134_data:
		.ascii  "\x33\x30\x00\x00"

_0c1138_data:
		.ascii  "\x32\x35\x00\x00"

_0c113c_data:
		.string "mode dieu"
		.ascii  "\x00\x00"

_0c1148_data:
		.ascii  "\x31\x00\x00\x00"

_0c114c_data:
		.ascii  "\x32\x00\x00\x00"

_0c1150_data:
		.ascii  "\x33\x00\x00\x00"

_0c1154_data:
		.ascii  "\x34\x00\x00\x00"

_0c1158_data:
		.ascii  "\x35\x00\x00\x00"

_0c115c_data:
		.ascii  "\x36\x00\x00\x00"

_0c1160_data:
		.ascii  "\x37\x00\x00\x00"

_0c1164_data:
		.ascii  "\x38\x00\x00\x00"

_0c1168_data:
		.ascii  "\x39\x00\x00\x00"

_0c116c_data:
		.ascii  "\x30\x00\x00\x00"

_0c1170_data:
		.ascii  "\x61\x00\x00\x00"

_0c1174_data:
		.ascii  "\x7a\x00\x00\x00"

_0c1178_data:
		.ascii  "\x65\x00\x00\x00"

_0c117c_data:
		.ascii  "\x72\x00\x00\x00"

_0c1180_data:
		.ascii  "\x74\x00\x00\x00"

_0c1184_data:
		.ascii  "\x79\x00\x00\x00"

_0c1188_data:
		.ascii  "\x75\x00\x00\x00"

_0c118c_data:
		.ascii  "\x69\x00\x00\x00"

_0c1190_data:
		.ascii  "\x6f\x00\x00\x00"

_0c1194_data:
		.ascii  "\x70\x00\x00\x00"

_0c1198_data:
		.ascii  "\x71\x00\x00\x00"

_0c119c_data:
		.ascii  "\x73\x00\x00\x00"

_0c11a0_data:
		.ascii  "\x64\x00\x00\x00"

_0c11a4_data:
		.ascii  "\x66\x00\x00\x00"

_0c11a8_data:
		.ascii  "\x67\x00\x00\x00"

_0c11ac_data:
		.ascii  "\x68\x00\x00\x00"

_0c11b0_data:
		.ascii  "\x6a\x00\x00\x00"

_0c11b4_data:
		.ascii  "\x6b\x00\x00\x00"

_0c11b8_data:
		.ascii  "\x6c\x00\x00\x00"

_0c11bc_data:
		.ascii  "\x6d\x00\x00\x00"

_0c11c0_data:
		.ascii  "\x77\x00\x00\x00"

_0c11c4_data:
		.ascii  "\x78\x00\x00\x00"

_0c11c8_data:
		.ascii  "\x63\x00\x00\x00"

_0c11cc_data:
		.ascii  "\x76\x00\x00\x00"

_0c11d0_data:
		.ascii  "\x62\x00\x00\x00"

_0c11d4_data:
		.ascii  "\x6e\x00\x00\x00"

_0c11d8_data:
		.ascii  "\x3f\x00\x00\x00"

_0c11dc_data:
		.ascii  "\x2e\x00\x00\x00"

_0c11e0_data:
		.ascii  "\x3a\x00\x00\x00"

_0c11e4_data:
		.ascii  "\x61\x2f\x00\x00"

_0c11e8_data:
		.ascii  "\x62\x2f\x00\x00"

_0c11ec_data:
		.ascii  "\x63\x2f\x00\x00"

_0c11f0_data:
		.ascii  "\x64\x2f\x00\x00"

_0c11f4_data:
		.string "pci1"
		.ascii  "\x00\x00\x00"

_0c11fc_data:
		.string "pci2"
		.ascii  "\x00\x00\x00"

_0c1204_data:
		.string "vesa"
		.ascii  "\x00\x00\x00"

_0c120c_data:
		.ascii  "\x7c\x00\x00\x00"

_0c1210_data:
		.ascii  "\x6f\x6b\x00\x00"

_0c1214_data:
		.string "/......./"
		.ascii  "\x00\x00"

_0c1220_data:
		.string "Error On MAX_ACTOBJ."
		.ascii  "\x00\x00\x00"

_0c1238_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0c1258_data:
		.ascii  "\x2f\x00\x00\x00"

_0c125c_data:
		.ascii  "\x61\x61\x61\x00"

_0c1260_data:
		.fill   0x4

_0c1264_data:
		.ascii  "\x61\x00\x00\x00"

_0c1268_data:
		.ascii  "\x62\x00\x00\x00"

_0c126c_data:
		.ascii  "\x64\x00\x00\x00"

_0c1270_data:
		.ascii  "\x63\x00\x00\x00"

_0c1274_data:
		.string "/you have done it !/"
		.ascii  "\x00\x00\x00"

_0c128c_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00\x00"

_0c12ac_data:
		.string "Please install MSCDEX v 2.1 or above.\n"
		.ascii  "\x00"

_0c12d4_data:
		.string "%c:\\????????.???"
		.ascii  "\x00\x00\x00"

_0c12e8_data:
		.ascii  "\x77\x62\x00\x00"

_0c12ec_data:
		.string "Please insert Rayman's cdrom.\n"
		.ascii  "\x00"

_0c130c_data:
		.string "Please insert Rayman's cdrom.\n- If rayman can not find disk, press ESC,\n  and rerun Rayman.\n- If you want try Rayman in limited mode, press SPACE.\n"

_0c13a0_data:
		.string "Please install MSCDEX v 2.1 or above.\n- press ESC to quit,\n- press SPACE to play rayman without music.\n"

_0c1408_data:
		.ascii  "\x72\x62\x00\x00"

_0c140c_data:
		.ascii  "\x72\x00\x00\x00"

_0c1410_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c1418_data:
		.string ".SAV"
		.ascii  "\x00\x00\x00"

_0c1420_data:
		.ascii  "\x72\x62\x00\x00"

_0c1424_data:
		.ascii  "\x77\x62\x00\x00"

_0c1428_data:
		.string "RAYMAN.CFG"
		.ascii  "\x00"

_0c1434_data:
		.string "Information sur le bloc_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c1458_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"
		.ascii  "\x00\x00"

_0c1494_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c14dc_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"
		.ascii  "\x00\x00"

_0c1518_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c1560_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"
		.ascii  "\x00\x00"

_0c159c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c15e4_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"
		.ascii  "\x00\x00"

_0c1620_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c1668_data:
		.ascii  "\x0a\x00\x00\x00"

_0c166c_data:
		.string "Information sur le temp_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c1690_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"
		.ascii  "\x00"

_0c16c4_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"
		.ascii  "\x00\x00"

_0c1704_data:
		.string "Left memory = %d\n"
		.ascii  "\x00\x00"

_0c1718_data:
		.ascii  "\x66\x69\x78\x00"

_0c171c_data:
		.string "world"
		.ascii  "\x00\x00"

_0c1724_data:
		.string "level"
		.ascii  "\x00\x00"

_0c172c_data:
		.string "sprite"
		.ascii  "\x00"

_0c1734_data:
		.string "unknown mem"

_0c1740_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c1778_data:
		.string "Can not allocate %d bytes in memory.\n"
		.ascii  "\x00\x00"

_0c17a0_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c17e8_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0c17f4_data:
		.string "acos"

_0c17f9_data:
		.string "asin"

_0c17fe_data:
		.string "sqrt"

_0c1803_data:
		.ascii  "\x65\x78\x70\x00"

_0c1807_data:
		.string "cosh"

_0c180c_data:
		.string "sinh"

_0c1811_data:
		.ascii  "\x70\x6f\x77\x00"

_0c1815_data:
		.string "acosh"

_0c181b_data:
		.string "log2"

_0c1820_data:
		.ascii  "\x6c\x6f\x67\x00"

_0c1824_data:
		.string "log10"

_0c182a_data:
		.string "atanh"

_0c1830_data:
		.string "atan2"

_0c1836_data:
		.string "ipow"

_0c183b_data:
		.string "dpowi"

_0c1841_data:
		.ascii  "\x63\x6f\x73\x00"

_0c1845_data:
		.ascii  "\x73\x69\x6e\x00"

_0c1849_data:
		.ascii  "\x74\x61\x6e\x00"

_0c184d_data:
		.ascii  "\x79\x30\x00"

_0c1850_data:
		.ascii  "\x79\x31\x00"

_0c1853_data:
		.ascii  "\x79\x6e\x00"

_0c1856_data:
		.ascii  "\x6d\x6f\x64\x00"

_0c185a_data:
		.string "cotan"

_0c1860_data:
		.string "Error Code Does Not Indicate An Error"

_0c1886_data:
		.string "Specified Driver Is Not Loaded"

_0c18a5_data:
		.string "Specified Pointer Is NULL"

_0c18bf_data:
		.string "Detection System Is Already Initialized"

_0c18e7_data:
		.string "File Open Failure"

_0c18f9_data:
		.string "Memory Allocation Failure"

_0c1913_data:
		.string "Invalid Driver ID"

_0c1925_data:
		.string "Driver Not Found"

_0c1936_data:
		.string "Detection System Failed To Find Hardware"

_0c195f_data:
		.string "Driver Already Loaded Using Specified Handle"

_0c198c_data:
		.string "Invalid Handle"

_0c199b_data:
		.string "No Handles Available"

_0c19b0_data:
		.string "Hardware Already Paused"

_0c19c8_data:
		.string "Hardware Not Paused"

_0c19dc_data:
		.string "Data Is Not Valid"

_0c19ee_data:
		.string "HMI*.386 File Open Failure"

_0c1a09_data:
		.string "Incorrect Port"

_0c1a18_data:
		.string "Incorrect IRQ"

_0c1a26_data:
		.string "Incorrect DMA"

_0c1a34_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0c1a48_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0c1a54_data:
		.string "Floating-point support not loaded\r\n"

_0c1a78_data:
		.string "Domain error"

_0c1a85_data:
		.string "Argument singularity"

_0c1a9a_data:
		.string "Overflow range error"

_0c1aaf_data:
		.string "Underflow range error"

_0c1ac5_data:
		.string "Total loss of significance"

_0c1ae0_data:
		.string "Partial loss of significance"

_0c1afd_data:
		.string " in "
		.ascii  "\x00\x00"

_0c1b04_data:
		.ascii  "\x3a\x8c\x30\xe2\x8e\x79\x45\x3e"

_0c1b0c_data:
		.string "Not enough memory to allocate file structures\r\n"

_0c1b3c_data:
		.ascii  "\x54\x5a\x00\x00"

_0c1b40_data:
		.ascii  "\x69\x6e\x66\x00"

_0c1b44_data:
		.ascii  "\x6e\x61\x6e\x00"

_0c1b48_data:
		.string "ABNORMAL TERMINATION\r\n"
		.ascii  "\x00"

_0c1b60_data:
		.ascii  "\x49\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?SUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1ba8_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\x9a\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "TUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1bf0_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0c1c14_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0c1c20_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0c1c40_data:
		.ascii  "\x00\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x03\x03\x03\x03\x03\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x0a\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii  "\x0c"
		.ascii   "8888888888"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x0c"
		.ascii   "XXXXXXHHHHHHHHHHHHHHHHHHHH"
		.ascii  "\x0c\x0c\x0c\x0c\x0c\x0c\x98\x98"
		.ascii  "\x98\x98\x98\x98\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\x88\x88\x88\x88"
		.ascii  "\x88\x88\x88\x88\x88\x88\x88\x88"
		.ascii  "\x0c\x0c\x0c\x0c\x01"
		.fill   0x83

_0c1d44_data:
		.fill   0x4

_0c1d48_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c1d4c_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8b\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1d94_data:
		.fill   0x4
		.long   _0c1a78_data
		.long   _0c1a85_data
		.long   _0c1a9a_data
		.long   _0c1aaf_data
		.long   _0c1ac5_data
		.ascii  "\xe0\x1a"

_0c1dae_data:
		.ascii  "\x0c\x00"

_0c1db0_data:
		.ascii  "\x00\x00"

_0c1db2_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0c1dc8_data:
		.ascii  "\x6d\x01"

_0c1dca_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0c1de4_data:
		.fill   0x4

_0c1de8_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c1dec_data:
		.fill   0x4

_0c1df0_data:
		.ascii  "\x00\x00\xf0\xff"

_0c1df4_data:
		.ascii  "\xff\xff\xff\xff"

_0c1df8_data:
		.ascii  "\xff\xff\xef\x7f"

_0c1dfc_data:
		.ascii  "\xff\xff\xff\xff"

_0c1e00_data:
		.ascii  "\xff\xff\xef\xff"

_0c1e04_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0c1e1c_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0e\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0c1e3c_data:
		.ascii  "\xd8\x00"

_0c1e3e_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0c1e42_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"

_0c1e8c_data:
		.ascii  "\x00\x20"
		.long   _086285_func
		.ascii  "\x00\x20"
		.long   _086453_func
		.ascii  "\x00\x20"
		.long   _08646e_func
		.ascii  "\x00\x02"
		.long   _08a9e4_func
		.ascii  "\x00\x20"
		.long   _08ad9e_func
		.ascii  "\x00\x20"
		.long   _08a1e8_func
		.ascii  "\x00\x03"
		.long   _08ad49_func
		.ascii  "\x00\x20"
		.long   _08c7ab_func

_0c1ebc_data:
		.ascii  "\x00\x20"
		.long   _08ae15_func

_0c1ec2_data:
		.ascii  "\x00\x00"

_0c1ec4_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1ed4_data:
		.ascii  "\x00\x00\x70\x3f"

_0c1ed8_data:
		.ascii  "\x00\x00\x88\x3f"

_0c1edc_data:
		.ascii  "\x00\x00\x00\x5f"

_0c1ee0_data:
		.long   _087a45_func
		.long   _087a4b_func
		.long   _087a50_jump
		.long   _087a56_func
		.long   _087a5b_jump
		.long   _087a61_func
		.long   _087a67_func
		.long   _087a6d_func
		.long   _087a73_func
		.long   _087a8f_func
		.long   _087a94_jump
		.long   _087aaa_func
		.long   _087aaf_jump
		.long   _087acb_func
		.long   _087adb_func
		.long   _087aef_func
		.long   _087aff_func
		.long   _087b1f_func
		.long   _087b24_jump
		.long   _087b3e_func
		.long   _087b43_jump
		.long   _087b63_func
		.long   _087b77_func
		.long   _087b8f_func
		.long   _087ba3_func
		.long   _087bc3_func
		.long   _087bc8_jump
		.long   _087be2_func
		.long   _087be7_jump
		.long   _087c07_func
		.long   _087c1b_func
		.long   _087c33_func
		.long   _087c47_func
		.long   _087c67_func
		.long   _087c6c_jump
		.long   _087c86_func
		.long   _087c8b_jump
		.long   _087cab_func
		.long   _087cbf_func
		.long   _087cd7_func
		.long   _087ceb_func
		.long   _087d0b_func
		.long   _087d10_jump
		.long   _087d2a_func
		.long   _087d2f_jump
		.long   _087d4f_func
		.long   _087d63_func
		.long   _087d7b_func
		.long   _087d8f_func
		.long   _087daf_func
		.long   _087db4_jump
		.long   _087dce_func
		.long   _087dd3_jump
		.long   _087df3_func
		.long   _087e07_func
		.long   _087e1f_func
		.long   _087e33_func
		.long   _087e53_func
		.long   _087e58_jump
		.long   _087e72_func
		.long   _087e77_jump
		.long   _087e97_func
		.long   _087eab_func
		.long   _087ec3_func

_0c1fe0_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1ff0_data:
		.ascii  "\x00\x00\x70\x3f"

_0c1ff4_data:
		.ascii  "\x00\x00\x00\x5f"

_0c1ff8_data:
		.fill   0x6
		.ascii  "\xf0\x3f"
		.fill   0x6
		.ascii  "\xf0\xbf"

_0c2008_data:
		.long   _08d040_func
		.long   _08d04b_func
		.long   _08d058_func
		.long   _08d06b_func
		.long   _08d080_func
		.long   _08d093_func
		.long   _08d0a8_func
		.long   _08d0bb_func

_0c2028_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\x00\x40"

_0c2032_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0c203c_data:
		.ascii  "\x00\x00\x80\x41"

_0c2040_data:
		.ascii  "\x00\x00\x80\x3d"

_0c2044_data:
		.ascii  "\xa8\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
		.ascii  "\xfd\xbf"

_0c204e_data:
		.ascii  "\x6e\x2d\xcc\xcc\xcc\xcc\xcc\xcc"
		.ascii  "\xfc\x3f"

_0c2058_data:
		.ascii  "\x92\x48\xf9\x41\x92\x24\x49\x92"
		.ascii  "\xfc\xbf"

_0c2062_data:
		.ascii  "\x92\xc5\xec\xcd\x97\x38\x8e\xe3"
		.ascii  "\xfb\x3f"

_0c206c_data:
		.ascii  "\xdd\x5d\x62\xc1\x7b\xc1\x2d\xba"
		.ascii  "\xfb\xbf"

_0c2076_data:
		.ascii  "\x54\x48\x8e\xc7\xc7\x77\x80\x9c"
		.ascii  "\xfb\x3f"

_0c2080_data:
		.fill   0x10
		.ascii  "\x37\x4e\xef\x67\xb9\xdd\xaa\xff"
		.ascii  "\xfa\x3f"
		.fill   0x6
		.ascii   "3n{a"
		.ascii  "\xd5\xd4\xad\xfe\xfb\x3f"
		.fill   0x6
		.ascii  "\x35\x11\xd8\x72\x5e\xda\xcb\xbd"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii  "\x15\xeb\x06\x64\xc9\xaf\xdb\xfa"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii   "j^^?"
		.ascii  "\xb8\xb9\x13\x9b\xfd\x3f"
		.fill   0x6
		.ascii  "\x74\x84\xf7\x26\x0f\xca\xb0\xb7"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\xb6\xe5\x1f\x61\x1e\x76\x27\xd3"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\x45\x7b\xda"
		.ascii   "\r+8c"
		.ascii  "\xed\xfd\x3f"
		.fill   0x6
		.ascii  "\x2a\x7e\x86\xd9\xa6\xf4\x2b\x83"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x9b\x9f\xf5\xf7\x5e\x5d\x00\x8f"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x20\xda\xbd\x71\xe6\x80\x2f\x9a"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x24\x09\xf7\x34\x19\x7d\xbc\xa4"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x80\xc0\xd8\xb4\x38\x4c\xac\xae"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x74\x9e\x31\xc2\x2b\x3e\x05\xb8"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x41\x66\x52\xac\xb8\x85\xce\xc0"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"
		.fill   0x6

_0c2190_data:
		.fill   0x2e

_0c21be_data:
		.ascii  "\x00\x00"

_0c21c0_data:
		.ascii  "\x00\x00"

_0c21c2_data:
		.ascii  "\x00\x00"

_0c21c4_data:
		.fill   0x4

_0c21c8_data:
		.fill   0x4

_0c21cc_data:
		.fill   0x4

_0c21d0_data:
		.fill   0x4

_0c21d4_data:
		.fill   0x4

_0c21d8_data:
		.fill   0x20

_0c21f8_data:
		.fill   0x4

_0c21fc_data:
		.fill   0x4c

_0c2248_data:
		.fill   0x78

_0c22c0_data:
		.fill   0x78

_0c2338_data:
		.fill   0x78

_0c23b0_data:
		.fill   0xc8

_0c2478_data:
		.fill   0x78

_0c24f0_data:
		.fill   0xc8

_0c25b8_data:
		.fill   0xc8

_0c2680_data:
		.fill   0xc8

_0c2748_data:
		.fill   0x100

_0c2848_data:
		.fill   0x100

_0c2948_data:
		.fill   0x100

_0c2a48_data:
		.fill   0x100

_0c2b48_data:
		.fill   0x60

_0c2ba8_data:
		.fill   0x4

_0c2bac_data:
		.fill   0x4

_0c2bb0_data:
		.fill   0x4

_0c2bb4_data:
		.fill   0x4

_0c2bb8_data:
		.fill   0x4

_0c2bbc_data:
		.fill   0x4

_0c2bc0_data:
		.fill   0x4

_0c2bc4_data:
		.fill   0x4

_0c2bc8_data:
		.fill   0x4

_0c2bcc_data:
		.fill   0x4

_0c2bd0_data:
		.fill   0x4

_0c2bd4_data:
		.fill   0x4

_0c2bd8_data:
		.fill   0x4

_0c2bdc_data:
		.fill   0x4

_0c2be0_data:
		.fill   0x4

_0c2be4_data:
		.fill   0x4

_0c2be8_data:
		.fill   0x4

_0c2bec_data:
		.fill   0x4

_0c2bf0_data:
		.fill   0x4

_0c2bf4_data:
		.fill   0x4

_0c2bf8_data:
		.fill   0x4

_0c2bfc_data:
		.fill   0x4

_0c2c00_data:
		.fill   0x4

_0c2c04_data:
		.fill   0x4

_0c2c08_data:
		.fill   0x4

_0c2c0c_data:
		.fill   0x4

_0c2c10_data:
		.fill   0x4

_0c2c14_data:
		.fill   0x4

_0c2c18_data:
		.fill   0x4

_0c2c1c_data:
		.fill   0x4

_0c2c20_data:
		.fill   0x4

_0c2c24_data:
		.fill   0x4

_0c2c28_data:
		.fill   0x4

_0c2c2c_data:
		.fill   0x4

_0c2c30_data:
		.fill   0x4

_0c2c34_data:
		.fill   0x4

_0c2c38_data:
		.fill   0x4

_0c2c3c_data:
		.fill   0x4

_0c2c40_data:
		.fill   0x4

_0c2c44_data:
		.fill   0x4

_0c2c48_data:
		.fill   0x4

_0c2c4c_data:
		.fill   0x4

_0c2c50_data:
		.fill   0x4

_0c2c54_data:
		.fill   0x4

_0c2c58_data:
		.fill   0x4

_0c2c5c_data:
		.fill   0x4

_0c2c60_data:
		.fill   0x4

_0c2c64_data:
		.fill   0x4

_0c2c68_data:
		.fill   0x4

_0c2c6c_data:
		.fill   0x4

_0c2c70_data:
		.fill   0x4

_0c2c74_data:
		.fill   0x4

_0c2c78_data:
		.fill   0x4

_0c2c7c_data:
		.fill   0x4

_0c2c80_data:
		.fill   0x4

_0c2c84_data:
		.fill   0x4

_0c2c88_data:
		.fill   0x4

_0c2c8c_data:
		.fill   0x4

_0c2c90_data:
		.fill   0x4

_0c2c94_data:
		.fill   0x4

_0c2c98_data:
		.fill   0x4

_0c2c9c_data:
		.fill   0x4

_0c2ca0_data:
		.fill   0x4

_0c2ca4_data:
		.fill   0x4

_0c2ca8_data:
		.fill   0x4

_0c2cac_data:
		.fill   0x4

_0c2cb0_data:
		.fill   0x4

_0c2cb4_data:
		.fill   0x4

_0c2cb8_data:
		.fill   0x4

_0c2cbc_data:
		.fill   0x8

_0c2cc4_data:
		.fill   0x4

_0c2cc8_data:
		.fill   0x4

_0c2ccc_data:
		.fill   0x4

_0c2cd0_data:
		.fill   0x4

_0c2cd4_data:
		.fill   0x28

_0c2cfc_data:
		.fill   0x4

_0c2d00_data:
		.fill   0x48

_0c2d48_data:
		.fill   0x4

_0c2d4c_data:
		.fill   0x4

_0c2d50_data:
		.fill   0x4

_0c2d54_data:
		.fill   0x4

_0c2d58_data:
		.fill   0x4

_0c2d5c_data:
		.fill   0x4

_0c2d60_data:
		.fill   0x4

_0c2d64_data:
		.fill   0x4

_0c2d68_data:
		.fill   0x2c

_0c2d94_data:
		.fill   0x4

_0c2d98_data:
		.fill   0x4

_0c2d9c_data:
		.fill   0x4

_0c2da0_data:
		.fill   0x4

_0c2da4_data:
		.fill   0x4

_0c2da8_data:
		.fill   0x8

_0c2db0_data:
		.fill   0x4

_0c2db4_data:
		.fill   0x4

_0c2db8_data:
		.fill   0x4

_0c2dbc_data:
		.fill   0x4

_0c2dc0_data:
		.fill   0x4

_0c2dc4_data:
		.fill   0x4

_0c2dc8_data:
		.fill   0x4

_0c2dcc_data:
		.fill   0x4c

_0c2e18_data:
		.fill   0x4

_0c2e1c_data:
		.fill   0x4

_0c2e20_data:
		.fill   0xc

_0c2e2c_data:
		.fill   0xc

_0c2e38_data:
		.fill   0x8

_0c2e40_data:
		.fill   0x18

_0c2e58_data:
		.fill   0x1c

_0c2e74_data:
		.fill   0x4

_0c2e78_data:
		.fill   0x4

_0c2e7c_data:
		.fill   0x4

_0c2e80_data:
		.fill   0x4

_0c2e84_data:
		.fill   0x4

_0c2e88_data:
		.fill   0x4

_0c2e8c_data:
		.fill   0x4

_0c2e90_data:
		.fill   0x4

_0c2e94_data:
		.fill   0x4

_0c2e98_data:
		.fill   0x4

_0c2e9c_data:
		.fill   0x4

_0c2ea0_data:
		.fill   0x4

_0c2ea4_data:
		.fill   0x4

_0c2ea8_data:
		.fill   0x4

_0c2eac_data:
		.fill   0x4

_0c2eb0_data:
		.fill   0x4

_0c2eb4_data:
		.fill   0x4

_0c2eb8_data:
		.fill   0x4

_0c2ebc_data:
		.fill   0x4

_0c2ec0_data:
		.fill   0x4

_0c2ec4_data:
		.fill   0xc

_0c2ed0_data:
		.fill   0x10

_0c2ee0_data:
		.fill   0x4

_0c2ee4_data:
		.fill   0x4

_0c2ee8_data:
		.fill   0x4

_0c2eec_data:
		.fill   0x4

_0c2ef0_data:
		.fill   0x4

_0c2ef4_data:
		.fill   0x4

_0c2ef8_data:
		.fill   0x60

_0c2f58_data:
		.fill   0x20

_0c2f78_data:
		.fill   0x4

_0c2f7c_data:
		.fill   0x4

_0c2f80_data:
		.fill   0x4

_0c2f84_data:
		.ascii  "\x00\x00"

_0c2f86_data:
		.ascii  "\x00\x00"

_0c2f88_data:
		.ascii  "\x00\x00"

_0c2f8a_data:
		.ascii  "\x00\x00"

_0c2f8c_data:
		.ascii  "\x00\x00"

_0c2f8e_data:
		.ascii  "\x00\x00"

_0c2f90_data:
		.ascii  "\x00\x00"

_0c2f92_data:
		.ascii  "\x00\x00"

_0c2f94_data:
		.fill   0x4

_0c2f98_data:
		.fill   0x8

_0c2fa0_data:
		.fill   0x4

_0c2fa4_data:
		.fill   0x4

_0c2fa8_data:
		.fill   0x12c0

_0c4268_data:
		.fill   0x12c0

_0c5528_data:
		.fill   0x20

_0c5548_data:
		.fill   0x20

_0c5568_data:
		.fill   0x1800

_0c6d68_data:
		.fill   0x20

_0c6d88_data:
		.fill   0x300

_0c7088_data:
		.fill   0x300

_0c7388_data:
		.fill   0x5ff

_0c7987_data:
		.ascii  "\x00"

_0c7988_data:
		.ascii  "\x00"

_0c7989_data:
		.fill   0x2ff

_0c7c88_data:
		.ascii  "\x00"

_0c7c89_data:
		.ascii  "\x00"

_0c7c8a_data:
		.fill   0x2fb

_0c7f85_data:
		.ascii  "\x00"

_0c7f86_data:
		.ascii  "\x00"

_0c7f87_data:
		.ascii  "\x00"

_0c7f88_data:
		.ascii  "\x00"

_0c7f89_data:
		.ascii  "\x00"

_0c7f8a_data:
		.fill   0x8fe

_0c8888_data:
		.fill   0x700

_0c8f88_data:
		.fill   0x80

_0c9008_data:
		.fill   0x680

_0c9688_data:
		.fill   0x4

_0c968c_data:
		.fill   0x4

_0c9690_data:
		.fill   0x160

_0c97f0_data:
		.ascii  "\x00\x00"

_0c97f2_data:
		.ascii  "\x00\x00"

_0c97f4_data:
		.ascii  "\x00\x00"

_0c97f6_data:
		.ascii  "\x00\x00"

_0c97f8_data:
		.ascii  "\x00\x00"

_0c97fa_data:
		.fill   0x1fe

_0c99f8_data:
		.fill   0x78

_0c9a70_data:
		.fill   0x10

_0c9a80_data:
		.fill   0x280

_0c9d00_data:
		.fill   0x1190

_0cae90_data:
		.fill   0x10

_0caea0_data:
		.fill   0x10

_0caeb0_data:
		.ascii  "\x00\x00"

_0caeb2_data:
		.ascii  "\x00\x00"

_0caeb4_data:
		.ascii  "\x00\x00"

_0caeb6_data:
		.ascii  "\x00\x00"

_0caeb8_data:
		.ascii  "\x00\x00"

_0caeba_data:
		.ascii  "\x00\x00"

_0caebc_data:
		.ascii  "\x00\x00"

_0caebe_data:
		.ascii  "\x00\x00"

_0caec0_data:
		.fill   0x10

_0caed0_data:
		.fill   0x80

_0caf50_data:
		.fill   0x4

_0caf54_data:
		.fill   0x4

_0caf58_data:
		.fill   0x4

_0caf5c_data:
		.fill   0x4

_0caf60_data:
		.fill   0x4

_0caf64_data:
		.ascii  "\x00"

_0caf65_data:
		.ascii  "\x00"

_0caf66_data:
		.ascii  "\x00\x00"

_0caf68_data:
		.ascii  "\x00\x00"

_0caf6a_data:
		.ascii  "\x00\x00"

_0caf6c_data:
		.ascii  "\x00\x00"

_0caf6e_data:
		.ascii  "\x00\x00"

_0caf70_data:
		.ascii  "\x00\x00"

_0caf72_data:
		.ascii  "\x00\x00"

_0caf74_data:
		.ascii  "\x00\x00"

_0caf76_data:
		.ascii  "\x00\x00"

_0caf78_data:
		.fill   0x10

_0caf88_data:
		.fill   0x18

_0cafa0_data:
		.fill   0xa1e

_0cb9be_data:
		.ascii  "\x00\x00"

_0cb9c0_data:
		.fill   0x17f

_0cbb3f_data:
		.ascii  "\x00"

_0cbb40_data:
		.fill   0x18

_0cbb58_data:
		.fill   0xd0

_0cbc28_data:
		.ascii  "\x00\x00"

_0cbc2a_data:
		.ascii  "\x00\x00"

_0cbc2c_data:
		.ascii  "\x00"

_0cbc2d_data:
		.ascii  "\x00"

_0cbc2e_data:
		.ascii  "\x00\x00"

_0cbc30_data:
		.fill   0xd0

_0cbd00_data:
		.ascii  "\x00\x00"

_0cbd02_data:
		.ascii  "\x00\x00"

_0cbd04_data:
		.ascii  "\x00"

_0cbd05_data:
		.ascii  "\x00"

_0cbd06_data:
		.ascii  "\x00\x00"

_0cbd08_data:
		.fill   0xc8

_0cbdd0_data:
		.fill   0x6

_0cbdd6_data:
		.ascii  "\x00\x00"

_0cbdd8_data:
		.ascii  "\x00\x00"

_0cbdda_data:
		.ascii  "\x00\x00"

_0cbddc_data:
		.ascii  "\x00"

_0cbddd_data:
		.ascii  "\x00"

_0cbdde_data:
		.ascii  "\x00"

_0cbddf_data:
		.fill   0x6bb

_0cc49a_data:
		.fill   0x6

_0cc4a0_data:
		.fill   0xd0

_0cc570_data:
		.ascii  "\x00\x00"

_0cc572_data:
		.ascii  "\x00\x00"

_0cc574_data:
		.ascii  "\x00"

_0cc575_data:
		.ascii  "\x00"

_0cc576_data:
		.ascii  "\x00"

_0cc577_data:
		.ascii  "\x00"

_0cc578_data:
		.fill   0xc6

_0cc63e_data:
		.ascii  "\x00\x00"

_0cc640_data:
		.ascii  "\x00\x00"

_0cc642_data:
		.ascii  "\x00\x00"

_0cc644_data:
		.ascii  "\x00\x00"

_0cc646_data:
		.ascii  "\x00\x00"

_0cc648_data:
		.ascii  "\x00\x00"

_0cc64a_data:
		.ascii  "\x00\x00"

_0cc64c_data:
		.ascii  "\x00"

_0cc64d_data:
		.ascii  "\x00"

_0cc64e_data:
		.ascii  "\x00"

_0cc64f_data:
		.ascii  "\x00"

_0cc650_data:
		.fill   0xc6

_0cc716_data:
		.fill   0x4

_0cc71a_data:
		.fill   0x4

_0cc71e_data:
		.ascii  "\x00\x00"

_0cc720_data:
		.ascii  "\x00\x00"

_0cc722_data:
		.ascii  "\x00\x00"

_0cc724_data:
		.ascii  "\x00"

_0cc725_data:
		.ascii  "\x00"

_0cc726_data:
		.ascii  "\x00"

_0cc727_data:
		.ascii  "\x00"

_0cc728_data:
		.fill   0xc6

_0cc7ee_data:
		.ascii  "\x00\x00"

_0cc7f0_data:
		.ascii  "\x00\x00"

_0cc7f2_data:
		.ascii  "\x00\x00"

_0cc7f4_data:
		.ascii  "\x00\x00"

_0cc7f6_data:
		.ascii  "\x00\x00"

_0cc7f8_data:
		.ascii  "\x00\x00"

_0cc7fa_data:
		.ascii  "\x00\x00"

_0cc7fc_data:
		.ascii  "\x00"

_0cc7fd_data:
		.ascii  "\x00"

_0cc7fe_data:
		.ascii  "\x00"

_0cc7ff_data:
		.ascii  "\x00"

_0cc800_data:
		.fill   0xc6

_0cc8c6_data:
		.fill   0x4

_0cc8ca_data:
		.fill   0x4

_0cc8ce_data:
		.ascii  "\x00\x00"

_0cc8d0_data:
		.ascii  "\x00\x00"

_0cc8d2_data:
		.ascii  "\x00\x00"

_0cc8d4_data:
		.ascii  "\x00"

_0cc8d5_data:
		.ascii  "\x00"

_0cc8d6_data:
		.ascii  "\x00"

_0cc8d7_data:
		.ascii  "\x00"

_0cc8d8_data:
		.fill   0xd8

_0cc9b0_data:
		.fill   0xd8

_0cca88_data:
		.fill   0xd8

_0ccb60_data:
		.fill   0xd8

_0ccc38_data:
		.fill   0xd8

_0ccd10_data:
		.fill   0xd8

_0ccde8_data:
		.fill   0x4

_0ccdec_data:
		.fill   0x4

_0ccdf0_data:
		.ascii  "\x00\x00"

_0ccdf2_data:
		.ascii  "\x00\x00"

_0ccdf4_data:
		.fill   0x4

_0ccdf8_data:
		.ascii  "\x00\x00"

_0ccdfa_data:
		.ascii  "\x00\x00"

_0ccdfc_data:
		.ascii  "\x00\x00\x00"

_0ccdff_data:
		.ascii  "\x00"

_0cce00_data:
		.ascii  "\x00"

_0cce01_data:
		.fill   0x7

_0cce08_data:
		.fill   0x40

_0cce48_data:
		.fill   0x190

_0ccfd8_data:
		.fill   0x4

_0ccfdc_data:
		.fill   0x64

_0cd040_data:
		.fill   0x4

_0cd044_data:
		.fill   0x4

_0cd048_data:
		.fill   0x4

_0cd04c_data:
		.fill   0x4

_0cd050_data:
		.fill   0x4

_0cd054_data:
		.fill   0x4

_0cd058_data:
		.fill   0x4

_0cd05c_data:
		.fill   0x4

_0cd060_data:
		.fill   0x4

_0cd064_data:
		.fill   0x4

_0cd068_data:
		.fill   0x4

_0cd06c_data:
		.fill   0x4

_0cd070_data:
		.fill   0x4

_0cd074_data:
		.fill   0x4

_0cd078_data:
		.fill   0x4

_0cd07c_data:
		.fill   0x4

_0cd080_data:
		.fill   0x4

_0cd084_data:
		.fill   0x4

_0cd088_data:
		.fill   0x4

_0cd08c_data:
		.fill   0x4

_0cd090_data:
		.fill   0x4

_0cd094_data:
		.ascii  "\x00\x00"

_0cd096_data:
		.ascii  "\x00\x00"

_0cd098_data:
		.ascii  "\x00\x00"

_0cd09a_data:
		.ascii  "\x00\x00"

_0cd09c_data:
		.ascii  "\x00\x00"

_0cd09e_data:
		.ascii  "\x00\x00"

_0cd0a0_data:
		.ascii  "\x00\x00"

_0cd0a2_data:
		.ascii  "\x00\x00"

_0cd0a4_data:
		.fill   0x4

_0cd0a8_data:
		.fill   0x4

_0cd0ac_data:
		.fill   0x4

_0cd0b0_data:
		.fill   0x4

_0cd0b4_data:
		.fill   0x4

_0cd0b8_data:
		.fill   0x4

_0cd0bc_data:
		.fill   0x4

_0cd0c0_data:
		.fill   0x4

_0cd0c4_data:
		.fill   0x4

_0cd0c8_data:
		.fill   0x4

_0cd0cc_data:
		.fill   0x4

_0cd0d0_data:
		.fill   0x4

_0cd0d4_data:
		.fill   0x4

_0cd0d8_data:
		.fill   0x4

_0cd0dc_data:
		.fill   0x4

_0cd0e0_data:
		.fill   0x4

_0cd0e4_data:
		.fill   0x4

_0cd0e8_data:
		.fill   0x4

_0cd0ec_data:
		.fill   0x4

_0cd0f0_data:
		.fill   0x4

_0cd0f4_data:
		.fill   0x4

_0cd0f8_data:
		.fill   0x4

_0cd0fc_data:
		.fill   0x4

_0cd100_data:
		.fill   0x4

_0cd104_data:
		.fill   0x4

_0cd108_data:
		.fill   0x4

_0cd10c_data:
		.fill   0x4

_0cd110_data:
		.fill   0x4

_0cd114_data:
		.fill   0x4

_0cd118_data:
		.fill   0x4

_0cd11c_data:
		.fill   0x4

_0cd120_data:
		.fill   0x4

_0cd124_data:
		.fill   0x4

_0cd128_data:
		.fill   0x4

_0cd12c_data:
		.fill   0x4

_0cd130_data:
		.fill   0x4

_0cd134_data:
		.fill   0x4

_0cd138_data:
		.ascii  "\x00\x00"

_0cd13a_data:
		.ascii  "\x00\x00"

_0cd13c_data:
		.ascii  "\x00\x00"

_0cd13e_data:
		.ascii  "\x00\x00"

_0cd140_data:
		.ascii  "\x00\x00"

_0cd142_data:
		.ascii  "\x00\x00"

_0cd144_data:
		.ascii  "\x00\x00"

_0cd146_data:
		.ascii  "\x00\x00"

_0cd148_data:
		.ascii  "\x00"

_0cd149_data:
		.fill   0x64a

_0cd793_data:
		.ascii  "\x00"

_0cd794_data:
		.fill   0x4

_0cd798_data:
		.fill   0x4

_0cd79c_data:
		.fill   0x4

_0cd7a0_data:
		.ascii  "\x00\x00"

_0cd7a2_data:
		.ascii  "\x00\x00"

_0cd7a4_data:
		.ascii  "\x00\x00"

_0cd7a6_data:
		.ascii  "\x00\x00"

_0cd7a8_data:
		.ascii  "\x00\x00"

_0cd7aa_data:
		.ascii  "\x00\x00"

_0cd7ac_data:
		.ascii  "\x00\x00"

_0cd7ae_data:
		.ascii  "\x00\x00"

_0cd7b0_data:
		.fill   0x8

_0cd7b8_data:
		.fill   0x4

_0cd7bc_data:
		.fill   0x4

_0cd7c0_data:
		.fill   0x4

_0cd7c4_data:
		.fill   0x4

_0cd7c8_data:
		.fill   0x4

_0cd7cc_data:
		.fill   0x4

_0cd7d0_data:
		.fill   0x4

_0cd7d4_data:
		.fill   0x4

_0cd7d8_data:
		.fill   0x14

_0cd7ec_data:
		.fill   0x4

_0cd7f0_data:
		.fill   0x4

_0cd7f4_data:
		.fill   0x4

_0cd7f8_data:
		.fill   0x4

_0cd7fc_data:
		.fill   0x4

_0cd800_data:
		.fill   0x4

_0cd804_data:
		.fill   0x4

_0cd808_data:
		.fill   0x4

_0cd80c_data:
		.fill   0x14

_0cd820_data:
		.fill   0x4

_0cd824_data:
		.fill   0x4

_0cd828_data:
		.fill   0x4

_0cd82c_data:
		.fill   0x4

_0cd830_data:
		.fill   0x4

_0cd834_data:
		.fill   0x4

_0cd838_data:
		.fill   0x4

_0cd83c_data:
		.fill   0x4

_0cd840_data:
		.fill   0x4

_0cd844_data:
		.fill   0x4

_0cd848_data:
		.fill   0x4

_0cd84c_data:
		.fill   0x4

_0cd850_data:
		.fill   0x4

_0cd854_data:
		.fill   0x4

_0cd858_data:
		.fill   0x4

_0cd85c_data:
		.fill   0x4

_0cd860_data:
		.fill   0x8

_0cd868_data:
		.fill   0x4

_0cd86c_data:
		.fill   0x4

_0cd870_data:
		.fill   0x4

_0cd874_data:
		.fill   0x8

_0cd87c_data:
		.fill   0x4

_0cd880_data:
		.fill   0x8

_0cd888_data:
		.fill   0x4

_0cd88c_data:
		.fill   0x4

_0cd890_data:
		.fill   0x4

_0cd894_data:
		.fill   0x4

_0cd898_data:
		.fill   0x4

_0cd89c_data:
		.fill   0x4

_0cd8a0_data:
		.fill   0xc

_0cd8ac_data:
		.ascii  "\x00"

_0cd8ad_data:
		.ascii  "\x00"

_0cd8ae_data:
		.ascii  "\x00"

_0cd8af_data:
		.ascii  "\x00"

_0cd8b0_data:
		.ascii  "\x00\x00"

_0cd8b2_data:
		.ascii  "\x00"

_0cd8b3_data:
		.fill   0x9

_0cd8bc_data:
		.fill   0x4

_0cd8c0_data:
		.fill   0x4

_0cd8c4_data:
		.fill   0x4

_0cd8c8_data:
		.fill   0x4

_0cd8cc_data:
		.fill   0x36

_0cd902_data:
		.ascii  "\x00\x00"

_0cd904_data:
		.fill   0x30

_0cd934_data:
		.ascii  "\x00"

_0cd935_data:
		.fill   0x16

_0cd94b_data:
		.ascii  "\x00\x00"

_0cd94d_data:
		.fill   0xc63

_0ce5b0_data:
		.fill   0x4

_0ce5b4_data:
		.ascii  "\x00\x00"

_0ce5b6_data:
		.ascii  "\x00\x00"

_0ce5b8_data:
		.ascii  "\x00\x00"

_0ce5ba_data:
		.fill   0x10

_0ce5ca_data:
		.ascii  "\x00\x00"

_0ce5cc_data:
		.ascii  "\x00\x00"

_0ce5ce_data:
		.ascii  "\x00\x00"

_0ce5d0_data:
		.fill   0x64

_0ce634_data:
		.ascii  "\x00\x00"

_0ce636_data:
		.ascii  "\x00\x00"

_0ce638_data:
		.ascii  "\x00\x00"

_0ce63a_data:
		.ascii  "\x00\x00"

_0ce63c_data:
		.fill   0x4

_0ce640_data:
		.fill   0x4

_0ce644_data:
		.fill   0x4

_0ce648_data:
		.fill   0x8

_0ce650_data:
		.fill   0x4

_0ce654_data:
		.fill   0x4

_0ce658_data:
		.fill   0x4

_0ce65c_data:
		.fill   0x18

_0ce674_data:
		.fill   0x4

_0ce678_data:
		.fill   0x4

_0ce67c_data:
		.fill   0x8

_0ce684_data:
		.ascii  "\x00\x00"

_0ce686_data:
		.ascii  "\x00\x00"

_0ce688_data:
		.fill   0x6

_0ce68e_data:
		.ascii  "\x00\x00"

_0ce690_data:
		.ascii  "\x00\x00"

_0ce692_data:
		.ascii  "\x00\x00"

_0ce694_data:
		.fill   0x4

_0ce698_data:
		.ascii  "\x00\x00"

_0ce69a_data:
		.fill   0x4

_0ce69e_data:
		.ascii  "\x00\x00"

_0ce6a0_data:
		.ascii  "\x00\x00"

_0ce6a2_data:
		.ascii  "\x00\x00"

_0ce6a4_data:
		.ascii  "\x00\x00"

_0ce6a6_data:
		.ascii  "\x00\x00"

_0ce6a8_data:
		.ascii  "\x00\x00"

_0ce6aa_data:
		.fill   0x6

_0ce6b0_data:
		.ascii  "\x00"

_0ce6b1_data:
		.ascii  "\x00"

_0ce6b2_data:
		.ascii  "\x00"

_0ce6b3_data:
		.ascii  "\x00"

_0ce6b4_data:
		.ascii  "\x00"

_0ce6b5_data:
		.ascii  "\x00"

_0ce6b6_data:
		.ascii  "\x00\x00"

_0ce6b8_data:
		.ascii  "\x00"

_0ce6b9_data:
		.ascii  "\x00"

_0ce6ba_data:
		.ascii  "\x00"

_0ce6bb_data:
		.ascii  "\x00"

_0ce6bc_data:
		.ascii  "\x00"

_0ce6bd_data:
		.ascii  "\x00\x00\x00"

_0ce6c0_data:
		.ascii  "\x00"

_0ce6c1_data:
		.ascii  "\x00"

_0ce6c2_data:
		.ascii  "\x00\x00"

_0ce6c4_data:
		.ascii  "\x00\x00"

_0ce6c6_data:
		.ascii  "\x00"

_0ce6c7_data:
		.ascii  "\x00\x00"

_0ce6c9_data:
		.fill   0x4

_0ce6cd_data:
		.ascii  "\x00\x00"

_0ce6cf_data:
		.ascii  "\x00\x00"

_0ce6d1_data:
		.ascii  "\x00\x00\x00"

_0ce6d4_data:
		.fill   0x4

_0ce6d8_data:
		.fill   0x4

_0ce6dc_data:
		.fill   0x4

_0ce6e0_data:
		.fill   0x4

_0ce6e4_data:
		.fill   0x4

_0ce6e8_data:
		.fill   0x4

_0ce6ec_data:
		.fill   0x84

_0ce770_data:
		.fill   0x4

_0ce774_data:
		.ascii  "\x00\x00"

_0ce776_data:
		.ascii  "\x00\x00"

_0ce778_data:
		.ascii  "\x00\x00"

_0ce77a_data:
		.ascii  "\x00\x00"

_0ce77c_data:
		.ascii  "\x00"

_0ce77d_data:
		.ascii  "\x00"

_0ce77e_data:
		.ascii  "\x00"

_0ce77f_data:
		.ascii  "\x00"

_0ce780_data:
		.ascii  "\x00"

_0ce781_data:
		.ascii  "\x00\x00\x00"

_0ce784_data:
		.fill   0xc

_0ce790_data:
		.fill   0x28

_0ce7b8_data:
		.ascii  "\x00\x00"

_0ce7ba_data:
		.ascii  "\x00\x00"

_0ce7bc_data:
		.fill   0x8

_0ce7c4_data:
		.fill   0x28

_0ce7ec_data:
		.ascii  "\x00"

_0ce7ed_data:
		.ascii  "\x00\x00"

_0ce7ef_data:
		.ascii  "\x00"

_0ce7f0_data:
		.ascii  "\x00"

_0ce7f1_data:
		.ascii  "\x00\x00\x00"

_0ce7f4_data:
		.fill   0xf

_0ce803_data:
		.ascii  "\x00\x00"

_0ce805_data:
		.ascii  "\x00\x00\x00"

_0ce808_data:
		.fill   0x8

_0ce810_data:
		.fill   0x3c

_0ce84c_data:
		.fill   0x40

_0ce88c_data:
		.fill   0x44

_0ce8d0_data:
		.ascii  "\x00\x00"

_0ce8d2_data:
		.ascii  "\x00\x00"

_0ce8d4_data:
		.fill   0x20b

_0ceadf_data:
		.ascii  "\x00"

_0ceae0_data:
		.fill   0x5

_0ceae5_data:
		.ascii  "\x00\x00\x00"

_0ceae8_data:
		.fill   0x25c

_0ced44_data:
		.fill   0x28

_0ced6c_data:
		.fill   0x4

_0ced70_data:
		.fill   0x58

_0cedc8_data:
		.fill   0x4

_0cedcc_data:
		.fill   0x4

_0cedd0_data:
		.fill   0x4

_0cedd4_data:
		.fill   0x4

_0cedd8_data:
		.fill   0x4

_0ceddc_data:
		.fill   0x20

_0cedfc_data:
		.fill   0x4

_0cee00_data:
		.fill   0xa

_0cee0a_data:
		.ascii  "\x00\x00"

_0cee0c_data:
		.fill   0x8

_0cee14_data:
		.ascii  "\x00\x00"

_0cee16_data:
		.fill   0x8

_0cee1e_data:
		.fill   0x6

_0cee24_data:
		.ascii  "\x00\x00"

_0cee26_data:
		.fill   0x4

_0cee2a_data:
		.fill   0x12

_0cee3c_data:
		.ascii  "\x00"

_0cee3d_data:
		.ascii  "\x00"

_0cee3e_data:
		.ascii  "\x00"

_0cee3f_data:
		.ascii  "\x00"

_0cee40_data:
		.ascii  "\x00"

_0cee41_data:
		.fill   0x7

_0cee48_data:
		.ascii  "\x00\x00"

_0cee4a_data:
		.ascii  "\x00"

_0cee4b_data:
		.ascii  "\x00\x00"

_0cee4d_data:
		.fill   0x4

_0cee51_data:
		.ascii  "\x00\x00"

_0cee53_data:
		.ascii  "\x00\x00"

_0cee55_data:
		.ascii  "\x00\x00\x00"

_0cee58_data:
		.fill   0x4

_0cee5c_data:
		.fill   0x8

_0cee64_data:
		.fill   0x3c

_0ceea0_data:
		.fill   0x32

_0ceed2_data:
		.ascii  "\x00"

_0ceed3_data:
		.ascii  "\x00\x00"

_0ceed5_data:
		.fill   0xb

_0ceee0_data:
		.fill   0x14

_0ceef4_data:
		.fill   0x4

_0ceef8_data:
		.fill   0x1e

_0cef16_data:
		.fill   0x2f

_0cef45_data:
		.ascii  "\x00\x00"

_0cef47_data:
		.fill   0x9

_0cef50_data:
		.ascii  "\x00\x00"

_0cef52_data:
		.ascii  "\x00\x00"

_0cef54_data:
		.ascii  "\x00"

_0cef55_data:
		.ascii  "\x00"

_0cef56_data:
		.ascii  "\x00"

_0cef57_data:
		.ascii  "\x00"

_0cef58_data:
		.ascii  "\x00"

_0cef59_data:
		.ascii  "\x00"

_0cef5a_data:
		.ascii  "\x00"

_0cef5b_data:
		.ascii  "\x00"

_0cef5c_data:
		.ascii  "\x00\x00"

_0cef5e_data:
		.fill   0xc4

_0cf022_data:
		.ascii  "\x00\x00"

_0cf024_data:
		.ascii  "\x00\x00"

_0cf026_data:
		.fill   0x718

_0cf73e_data:
		.ascii  "\x00\x00"

_0cf740_data:
		.ascii  "\x00\x00"

_0cf742_data:
		.ascii  "\x00\x00"

_0cf744_data:
		.ascii  "\x00\x00"

_0cf746_data:
		.ascii  "\x00\x00"

_0cf748_data:
		.ascii  "\x00\x00"

_0cf74a_data:
		.ascii  "\x00\x00"

_0cf74c_data:
		.ascii  "\x00\x00"

_0cf74e_data:
		.ascii  "\x00\x00"

_0cf750_data:
		.ascii  "\x00\x00"

_0cf752_data:
		.ascii  "\x00\x00"

_0cf754_data:
		.ascii  "\x00\x00"

_0cf756_data:
		.ascii  "\x00\x00"

_0cf758_data:
		.ascii  "\x00\x00"

_0cf75a_data:
		.ascii  "\x00\x00"

_0cf75c_data:
		.ascii  "\x00\x00"

_0cf75e_data:
		.ascii  "\x00\x00"

_0cf760_data:
		.ascii  "\x00\x00"

_0cf762_data:
		.ascii  "\x00\x00"

_0cf764_data:
		.ascii  "\x00\x00"

_0cf766_data:
		.ascii  "\x00\x00"

_0cf768_data:
		.ascii  "\x00\x00"

_0cf76a_data:
		.ascii  "\x00\x00"

_0cf76c_data:
		.ascii  "\x00\x00"

_0cf76e_data:
		.fill   0x4

_0cf772_data:
		.ascii  "\x00\x00"

_0cf774_data:
		.ascii  "\x00\x00"

_0cf776_data:
		.ascii  "\x00\x00"

_0cf778_data:
		.ascii  "\x00\x00"

_0cf77a_data:
		.ascii  "\x00\x00"

_0cf77c_data:
		.ascii  "\x00\x00"

_0cf77e_data:
		.ascii  "\x00\x00"

_0cf780_data:
		.ascii  "\x00\x00"

_0cf782_data:
		.ascii  "\x00\x00"

_0cf784_data:
		.ascii  "\x00\x00"

_0cf786_data:
		.ascii  "\x00\x00"

_0cf788_data:
		.ascii  "\x00\x00"

_0cf78a_data:
		.ascii  "\x00\x00"

_0cf78c_data:
		.ascii  "\x00\x00"

_0cf78e_data:
		.ascii  "\x00\x00"

_0cf790_data:
		.ascii  "\x00\x00"

_0cf792_data:
		.ascii  "\x00\x00"

_0cf794_data:
		.ascii  "\x00\x00"

_0cf796_data:
		.ascii  "\x00\x00"

_0cf798_data:
		.ascii  "\x00\x00"

_0cf79a_data:
		.ascii  "\x00\x00"

_0cf79c_data:
		.fill   0x6

_0cf7a2_data:
		.ascii  "\x00\x00"

_0cf7a4_data:
		.ascii  "\x00\x00"

_0cf7a6_data:
		.ascii  "\x00\x00"

_0cf7a8_data:
		.ascii  "\x00\x00"

_0cf7aa_data:
		.ascii  "\x00\x00"

_0cf7ac_data:
		.ascii  "\x00\x00"

_0cf7ae_data:
		.ascii  "\x00\x00"

_0cf7b0_data:
		.ascii  "\x00\x00"

_0cf7b2_data:
		.ascii  "\x00\x00"

_0cf7b4_data:
		.ascii  "\x00\x00"

_0cf7b6_data:
		.ascii  "\x00\x00"

_0cf7b8_data:
		.ascii  "\x00\x00"

_0cf7ba_data:
		.ascii  "\x00\x00"

_0cf7bc_data:
		.ascii  "\x00\x00"

_0cf7be_data:
		.ascii  "\x00\x00"

_0cf7c0_data:
		.ascii  "\x00\x00"

_0cf7c2_data:
		.ascii  "\x00\x00"

_0cf7c4_data:
		.ascii  "\x00\x00"

_0cf7c6_data:
		.ascii  "\x00\x00"

_0cf7c8_data:
		.ascii  "\x00\x00"

_0cf7ca_data:
		.ascii  "\x00\x00"

_0cf7cc_data:
		.ascii  "\x00\x00"

_0cf7ce_data:
		.ascii  "\x00\x00"

_0cf7d0_data:
		.ascii  "\x00\x00"

_0cf7d2_data:
		.ascii  "\x00\x00"

_0cf7d4_data:
		.ascii  "\x00\x00"

_0cf7d6_data:
		.ascii  "\x00\x00"

_0cf7d8_data:
		.ascii  "\x00\x00"

_0cf7da_data:
		.ascii  "\x00\x00"

_0cf7dc_data:
		.ascii  "\x00\x00"

_0cf7de_data:
		.ascii  "\x00\x00"

_0cf7e0_data:
		.ascii  "\x00\x00"

_0cf7e2_data:
		.ascii  "\x00\x00"

_0cf7e4_data:
		.ascii  "\x00\x00"

_0cf7e6_data:
		.ascii  "\x00\x00"

_0cf7e8_data:
		.ascii  "\x00\x00"

_0cf7ea_data:
		.fill   0x4

_0cf7ee_data:
		.ascii  "\x00\x00"

_0cf7f0_data:
		.ascii  "\x00\x00"

_0cf7f2_data:
		.ascii  "\x00\x00"

_0cf7f4_data:
		.ascii  "\x00\x00"

_0cf7f6_data:
		.ascii  "\x00\x00"

_0cf7f8_data:
		.ascii  "\x00\x00"

_0cf7fa_data:
		.ascii  "\x00\x00"

_0cf7fc_data:
		.ascii  "\x00\x00"

_0cf7fe_data:
		.ascii  "\x00\x00"

_0cf800_data:
		.ascii  "\x00\x00"

_0cf802_data:
		.ascii  "\x00\x00"

_0cf804_data:
		.ascii  "\x00\x00"

_0cf806_data:
		.ascii  "\x00\x00"

_0cf808_data:
		.ascii  "\x00\x00"

_0cf80a_data:
		.ascii  "\x00\x00"

_0cf80c_data:
		.ascii  "\x00\x00"

_0cf80e_data:
		.ascii  "\x00\x00"

_0cf810_data:
		.ascii  "\x00\x00"

_0cf812_data:
		.ascii  "\x00\x00"

_0cf814_data:
		.ascii  "\x00\x00"

_0cf816_data:
		.ascii  "\x00\x00"

_0cf818_data:
		.ascii  "\x00\x00"

_0cf81a_data:
		.ascii  "\x00"

_0cf81b_data:
		.ascii  "\x00"

_0cf81c_data:
		.ascii  "\x00\x00"

_0cf81e_data:
		.ascii  "\x00"

_0cf81f_data:
		.ascii  "\x00"

_0cf820_data:
		.ascii  "\x00\x00"

_0cf822_data:
		.ascii  "\x00\x00"

_0cf824_data:
		.ascii  "\x00\x00"

_0cf826_data:
		.ascii  "\x00\x00"

_0cf828_data:
		.ascii  "\x00\x00"

_0cf82a_data:
		.ascii  "\x00\x00"

_0cf82c_data:
		.ascii  "\x00\x00"

_0cf82e_data:
		.ascii  "\x00\x00"

_0cf830_data:
		.ascii  "\x00\x00"

_0cf832_data:
		.ascii  "\x00\x00"

_0cf834_data:
		.ascii  "\x00\x00"

_0cf836_data:
		.ascii  "\x00\x00"

_0cf838_data:
		.ascii  "\x00\x00"

_0cf83a_data:
		.ascii  "\x00\x00"

_0cf83c_data:
		.ascii  "\x00\x00"

_0cf83e_data:
		.ascii  "\x00\x00"

_0cf840_data:
		.ascii  "\x00\x00"

_0cf842_data:
		.ascii  "\x00\x00"

_0cf844_data:
		.ascii  "\x00\x00"

_0cf846_data:
		.ascii  "\x00\x00"

_0cf848_data:
		.ascii  "\x00\x00"

_0cf84a_data:
		.ascii  "\x00\x00"

_0cf84c_data:
		.ascii  "\x00\x00"

_0cf84e_data:
		.ascii  "\x00\x00"

_0cf850_data:
		.ascii  "\x00\x00"

_0cf852_data:
		.ascii  "\x00\x00"

_0cf854_data:
		.ascii  "\x00\x00"

_0cf856_data:
		.ascii  "\x00\x00"

_0cf858_data:
		.ascii  "\x00\x00"

_0cf85a_data:
		.ascii  "\x00\x00"

_0cf85c_data:
		.ascii  "\x00\x00"

_0cf85e_data:
		.ascii  "\x00\x00"

_0cf860_data:
		.ascii  "\x00\x00"

_0cf862_data:
		.ascii  "\x00\x00"

_0cf864_data:
		.ascii  "\x00\x00"

_0cf866_data:
		.ascii  "\x00\x00"

_0cf868_data:
		.ascii  "\x00\x00"

_0cf86a_data:
		.ascii  "\x00\x00"

_0cf86c_data:
		.ascii  "\x00\x00"

_0cf86e_data:
		.ascii  "\x00\x00"

_0cf870_data:
		.ascii  "\x00\x00"

_0cf872_data:
		.ascii  "\x00\x00"

_0cf874_data:
		.ascii  "\x00\x00"

_0cf876_data:
		.ascii  "\x00\x00"

_0cf878_data:
		.ascii  "\x00\x00"

_0cf87a_data:
		.ascii  "\x00\x00"

_0cf87c_data:
		.ascii  "\x00\x00"

_0cf87e_data:
		.ascii  "\x00\x00"

_0cf880_data:
		.ascii  "\x00\x00"

_0cf882_data:
		.ascii  "\x00\x00"

_0cf884_data:
		.ascii  "\x00\x00"

_0cf886_data:
		.ascii  "\x00\x00"

_0cf888_data:
		.ascii  "\x00\x00"

_0cf88a_data:
		.ascii  "\x00\x00"

_0cf88c_data:
		.ascii  "\x00\x00"

_0cf88e_data:
		.ascii  "\x00\x00"

_0cf890_data:
		.ascii  "\x00\x00"

_0cf892_data:
		.ascii  "\x00\x00"

_0cf894_data:
		.ascii  "\x00\x00"

_0cf896_data:
		.ascii  "\x00\x00"

_0cf898_data:
		.ascii  "\x00\x00"

_0cf89a_data:
		.ascii  "\x00\x00"

_0cf89c_data:
		.ascii  "\x00\x00"

_0cf89e_data:
		.ascii  "\x00\x00"

_0cf8a0_data:
		.ascii  "\x00\x00"

_0cf8a2_data:
		.ascii  "\x00\x00"

_0cf8a4_data:
		.ascii  "\x00\x00"

_0cf8a6_data:
		.ascii  "\x00\x00"

_0cf8a8_data:
		.ascii  "\x00\x00"

_0cf8aa_data:
		.ascii  "\x00\x00"

_0cf8ac_data:
		.ascii  "\x00\x00"

_0cf8ae_data:
		.ascii  "\x00\x00"

_0cf8b0_data:
		.ascii  "\x00\x00"

_0cf8b2_data:
		.ascii  "\x00\x00"

_0cf8b4_data:
		.ascii  "\x00\x00"

_0cf8b6_data:
		.ascii  "\x00\x00"

_0cf8b8_data:
		.ascii  "\x00\x00"

_0cf8ba_data:
		.ascii  "\x00\x00"

_0cf8bc_data:
		.ascii  "\x00\x00"

_0cf8be_data:
		.ascii  "\x00\x00"

_0cf8c0_data:
		.ascii  "\x00\x00"

_0cf8c2_data:
		.ascii  "\x00\x00"

_0cf8c4_data:
		.ascii  "\x00\x00"

_0cf8c6_data:
		.ascii  "\x00\x00"

_0cf8c8_data:
		.ascii  "\x00\x00"

_0cf8ca_data:
		.ascii  "\x00\x00"

_0cf8cc_data:
		.ascii  "\x00\x00"

_0cf8ce_data:
		.ascii  "\x00\x00"

_0cf8d0_data:
		.ascii  "\x00\x00"

_0cf8d2_data:
		.ascii  "\x00\x00"

_0cf8d4_data:
		.ascii  "\x00\x00"

_0cf8d6_data:
		.ascii  "\x00\x00"

_0cf8d8_data:
		.ascii  "\x00\x00"

_0cf8da_data:
		.ascii  "\x00\x00"

_0cf8dc_data:
		.ascii  "\x00\x00"

_0cf8de_data:
		.ascii  "\x00\x00"

_0cf8e0_data:
		.ascii  "\x00\x00"

_0cf8e2_data:
		.ascii  "\x00\x00"

_0cf8e4_data:
		.ascii  "\x00\x00"

_0cf8e6_data:
		.ascii  "\x00\x00"

_0cf8e8_data:
		.ascii  "\x00\x00"

_0cf8ea_data:
		.ascii  "\x00\x00"

_0cf8ec_data:
		.ascii  "\x00\x00"

_0cf8ee_data:
		.ascii  "\x00\x00"

_0cf8f0_data:
		.ascii  "\x00\x00"

_0cf8f2_data:
		.ascii  "\x00\x00"

_0cf8f4_data:
		.ascii  "\x00\x00"

_0cf8f6_data:
		.fill   0xff

_0cf9f5_data:
		.ascii  "\x00"

_0cf9f6_data:
		.ascii  "\x00"

_0cf9f7_data:
		.ascii  "\x00"

_0cf9f8_data:
		.ascii  "\x00"

_0cf9f9_data:
		.ascii  "\x00"

_0cf9fa_data:
		.ascii  "\x00"

_0cf9fb_data:
		.ascii  "\x00\x00"

_0cf9fd_data:
		.ascii  "\x00\x00"

_0cf9ff_data:
		.fill   0xa

_0cfa09_data:
		.fill   0x5

_0cfa0e_data:
		.ascii  "\x00"

_0cfa0f_data:
		.ascii  "\x00"

_0cfa10_data:
		.ascii  "\x00"

_0cfa11_data:
		.ascii  "\x00"

_0cfa12_data:
		.ascii  "\x00"

_0cfa13_data:
		.ascii  "\x00"

_0cfa14_data:
		.ascii  "\x00"

_0cfa15_data:
		.ascii  "\x00"

_0cfa16_data:
		.ascii  "\x00"

_0cfa17_data:
		.ascii  "\x00"

_0cfa18_data:
		.ascii  "\x00"

_0cfa19_data:
		.ascii  "\x00"

_0cfa1a_data:
		.ascii  "\x00"

_0cfa1b_data:
		.ascii  "\x00"

_0cfa1c_data:
		.ascii  "\x00"

_0cfa1d_data:
		.ascii  "\x00"

_0cfa1e_data:
		.ascii  "\x00"

_0cfa1f_data:
		.ascii  "\x00"

_0cfa20_data:
		.ascii  "\x00"

_0cfa21_data:
		.ascii  "\x00"

_0cfa22_data:
		.ascii  "\x00"

_0cfa23_data:
		.ascii  "\x00"

_0cfa24_data:
		.ascii  "\x00"

_0cfa25_data:
		.ascii  "\x00"

_0cfa26_data:
		.ascii  "\x00"

_0cfa27_data:
		.ascii  "\x00"

_0cfa28_data:
		.ascii  "\x00"

_0cfa29_data:
		.ascii  "\x00"

_0cfa2a_data:
		.ascii  "\x00"

_0cfa2b_data:
		.ascii  "\x00"

_0cfa2c_data:
		.ascii  "\x00"

_0cfa2d_data:
		.ascii  "\x00"

_0cfa2e_data:
		.ascii  "\x00"

_0cfa2f_data:
		.ascii  "\x00"

_0cfa30_data:
		.ascii  "\x00"

_0cfa31_data:
		.ascii  "\x00"

_0cfa32_data:
		.ascii  "\x00"

_0cfa33_data:
		.ascii  "\x00"

_0cfa34_data:
		.ascii  "\x00"

_0cfa35_data:
		.ascii  "\x00"

_0cfa36_data:
		.ascii  "\x00"

_0cfa37_data:
		.ascii  "\x00"

_0cfa38_data:
		.ascii  "\x00"

_0cfa39_data:
		.ascii  "\x00"

_0cfa3a_data:
		.ascii  "\x00"

_0cfa3b_data:
		.ascii  "\x00"

_0cfa3c_data:
		.ascii  "\x00"

_0cfa3d_data:
		.ascii  "\x00"

_0cfa3e_data:
		.ascii  "\x00"

_0cfa3f_data:
		.ascii  "\x00"

_0cfa40_data:
		.ascii  "\x00"

_0cfa41_data:
		.ascii  "\x00"

_0cfa42_data:
		.ascii  "\x00"

_0cfa43_data:
		.ascii  "\x00"

_0cfa44_data:
		.ascii  "\x00"

_0cfa45_data:
		.ascii  "\x00"

_0cfa46_data:
		.ascii  "\x00"

_0cfa47_data:
		.ascii  "\x00"

_0cfa48_data:
		.ascii  "\x00"

_0cfa49_data:
		.ascii  "\x00"

_0cfa4a_data:
		.ascii  "\x00"

_0cfa4b_data:
		.ascii  "\x00"

_0cfa4c_data:
		.ascii  "\x00"

_0cfa4d_data:
		.ascii  "\x00"

_0cfa4e_data:
		.ascii  "\x00"

_0cfa4f_data:
		.ascii  "\x00"

_0cfa50_data:
		.ascii  "\x00"

_0cfa51_data:
		.ascii  "\x00"

_0cfa52_data:
		.ascii  "\x00"

_0cfa53_data:
		.ascii  "\x00"

_0cfa54_data:
		.ascii  "\x00"

_0cfa55_data:
		.ascii  "\x00"

_0cfa56_data:
		.ascii  "\x00"

_0cfa57_data:
		.ascii  "\x00"

_0cfa58_data:
		.ascii  "\x00"

_0cfa59_data:
		.ascii  "\x00"

_0cfa5a_data:
		.ascii  "\x00"

_0cfa5b_data:
		.ascii  "\x00"

_0cfa5c_data:
		.ascii  "\x00"

_0cfa5d_data:
		.ascii  "\x00"

_0cfa5e_data:
		.ascii  "\x00"

_0cfa5f_data:
		.ascii  "\x00"

_0cfa60_data:
		.ascii  "\x00"

_0cfa61_data:
		.ascii  "\x00"

_0cfa62_data:
		.ascii  "\x00"

_0cfa63_data:
		.ascii  "\x00"

_0cfa64_data:
		.ascii  "\x00"

_0cfa65_data:
		.ascii  "\x00"

_0cfa66_data:
		.ascii  "\x00"

_0cfa67_data:
		.ascii  "\x00"

_0cfa68_data:
		.ascii  "\x00"

_0cfa69_data:
		.ascii  "\x00"

_0cfa6a_data:
		.ascii  "\x00"

_0cfa6b_data:
		.ascii  "\x00"

_0cfa6c_data:
		.ascii  "\x00"

_0cfa6d_data:
		.ascii  "\x00"

_0cfa6e_data:
		.ascii  "\x00"

_0cfa6f_data:
		.ascii  "\x00"

_0cfa70_data:
		.ascii  "\x00"

_0cfa71_data:
		.ascii  "\x00"

_0cfa72_data:
		.ascii  "\x00"

_0cfa73_data:
		.ascii  "\x00"

_0cfa74_data:
		.ascii  "\x00"

_0cfa75_data:
		.ascii  "\x00"

_0cfa76_data:
		.ascii  "\x00"

_0cfa77_data:
		.ascii  "\x00"

_0cfa78_data:
		.ascii  "\x00"

_0cfa79_data:
		.ascii  "\x00"

_0cfa7a_data:
		.ascii  "\x00"

_0cfa7b_data:
		.ascii  "\x00"

_0cfa7c_data:
		.ascii  "\x00"

_0cfa7d_data:
		.ascii  "\x00"

_0cfa7e_data:
		.ascii  "\x00"

_0cfa7f_data:
		.ascii  "\x00"

_0cfa80_data:
		.ascii  "\x00"

_0cfa81_data:
		.ascii  "\x00"

_0cfa82_data:
		.ascii  "\x00"

_0cfa83_data:
		.ascii  "\x00"

_0cfa84_data:
		.ascii  "\x00"

_0cfa85_data:
		.ascii  "\x00"

_0cfa86_data:
		.ascii  "\x00"

_0cfa87_data:
		.ascii  "\x00"

_0cfa88_data:
		.ascii  "\x00"

_0cfa89_data:
		.ascii  "\x00"

_0cfa8a_data:
		.ascii  "\x00"

_0cfa8b_data:
		.ascii  "\x00"

_0cfa8c_data:
		.ascii  "\x00"

_0cfa8d_data:
		.ascii  "\x00"

_0cfa8e_data:
		.ascii  "\x00"

_0cfa8f_data:
		.ascii  "\x00"

_0cfa90_data:
		.ascii  "\x00"

_0cfa91_data:
		.ascii  "\x00"

_0cfa92_data:
		.ascii  "\x00"

_0cfa93_data:
		.ascii  "\x00"

_0cfa94_data:
		.ascii  "\x00"

_0cfa95_data:
		.ascii  "\x00"

_0cfa96_data:
		.ascii  "\x00"

_0cfa97_data:
		.ascii  "\x00"

_0cfa98_data:
		.ascii  "\x00"

_0cfa99_data:
		.ascii  "\x00"

_0cfa9a_data:
		.ascii  "\x00"

_0cfa9b_data:
		.ascii  "\x00"

_0cfa9c_data:
		.fill   0x4

_0cfaa0_data:
		.ascii  "\x00\x00"

_0cfaa2_data:
		.ascii  "\x00\x00"

_0cfaa4_data:
		.ascii  "\x00\x00"

_0cfaa6_data:
		.ascii  "\x00\x00"

_0cfaa8_data:
		.ascii  "\x00"

_0cfaa9_data:
		.ascii  "\x00"

_0cfaaa_data:
		.ascii  "\x00\x00"

_0cfaac_data:
		.ascii  "\x00\x00"

_0cfaae_data:
		.ascii  "\x00\x00"

_0cfab0_data:
		.ascii  "\x00\x00"

_0cfab2_data:
		.ascii  "\x00\x00"

_0cfab4_data:
		.ascii  "\x00\x00"

_0cfab6_data:
		.ascii  "\x00\x00"

_0cfab8_data:
		.ascii  "\x00\x00"

_0cfaba_data:
		.ascii  "\x00\x00"

_0cfabc_data:
		.ascii  "\x00\x00"

_0cfabe_data:
		.ascii  "\x00\x00"

_0cfac0_data:
		.ascii  "\x00\x00"

_0cfac2_data:
		.ascii  "\x00\x00"

_0cfac4_data:
		.fill   0x28

_0cfaec_data:
		.fill   0x24

_0cfb10_data:
		.fill   0x4

_0cfb14_data:
		.fill   0x4

_0cfb18_data:
		.fill   0x4fc

_0d0014_data:
		.fill   0x14

_0d0028_data:
		.ascii  "\x00\x00"

_0d002a_data:
		.ascii  "\x00\x00"

_0d002c_data:
		.fill   0xa410

_0da43c_data:
		.fill   0x4000

_0de43c_data:
		.ascii  "\x00"

_0de43d_data:
		.ascii  "\x00"

_0de43e_data:
		.fill   0x5e

_0de49c_data:
		.ascii  "\x00"

_0de49d_data:
		.ascii  "\x00"

_0de49e_data:
		.fill   0x10

_0de4ae_data:
		.ascii  "\x00"

_0de4af_data:
		.ascii  "\x00"

_0de4b0_data:
		.fill   0x28c

_0de73c_data:
		.ascii  "\x00\x00"

_0de73e_data:
		.ascii  "\x00\x00"

_0de740_data:
		.ascii  "\x00\x00"

_0de742_data:
		.ascii  "\x00\x00"

_0de744_data:
		.ascii  "\x00\x00"

_0de746_data:
		.ascii  "\x00\x00"

_0de748_data:
		.ascii  "\x00\x00"

_0de74a_data:
		.ascii  "\x00\x00"

_0de74c_data:
		.fill   0x4

_0de750_data:
		.ascii  "\x00\x00"

_0de752_data:
		.ascii  "\x00\x00"

_0de754_data:
		.ascii  "\x00\x00"

_0de756_data:
		.ascii  "\x00\x00"

_0de758_data:
		.ascii  "\x00\x00"

_0de75a_data:
		.ascii  "\x00\x00"

_0de75c_data:
		.ascii  "\x00\x00"

_0de75e_data:
		.ascii  "\x00\x00"

_0de760_data:
		.ascii  "\x00"

_0de761_data:
		.ascii  "\x00"

_0de762_data:
		.ascii  "\x00\x00"

_0de764_data:
		.ascii  "\x00\x00"

_0de766_data:
		.ascii  "\x00\x00"

_0de768_data:
		.ascii  "\x00\x00"

_0de76a_data:
		.fill   0xa2

_0de80c_data:
		.ascii  "\x00\x00"

_0de80e_data:
		.ascii  "\x00\x00"

_0de810_data:
		.ascii  "\x00\x00"

_0de812_data:
		.ascii  "\x00\x00"

_0de814_data:
		.ascii  "\x00\x00"

_0de816_data:
		.ascii  "\x00\x00"

_0de818_data:
		.ascii  "\x00\x00"

_0de81a_data:
		.ascii  "\x00\x00"

_0de81c_data:
		.ascii  "\x00\x00"

_0de81e_data:
		.ascii  "\x00\x00"

_0de820_data:
		.ascii  "\x00\x00"

_0de822_data:
		.ascii  "\x00\x00"

_0de824_data:
		.fill   0xc

_0de830_data:
		.fill   0x4

_0de834_data:
		.fill   0x4

_0de838_data:
		.fill   0x4

_0de83c_data:
		.fill   0x4

_0de840_data:
		.fill   0x4

_0de844_data:
		.fill   0x4

_0de848_data:
		.fill   0x4

_0de84c_data:
		.fill   0x4

_0de850_data:
		.fill   0x4

_0de854_data:
		.fill   0x4

_0de858_data:
		.fill   0x8

_0de860_data:
		.fill   0x4

_0de864_data:
		.ascii  "\x00\x00"

_0de866_data:
		.fill   0x4

_0de86a_data:
		.ascii  "\x00\x00"

_0de86c_data:
		.fill   0x4

_0de870_data:
		.ascii  "\x00\x00"

_0de872_data:
		.fill   0x4

_0de876_data:
		.ascii  "\x00\x00"

_0de878_data:
		.fill   0x4

_0de87c_data:
		.ascii  "\x00\x00"

_0de87e_data:
		.fill   0x4

_0de882_data:
		.ascii  "\x00\x00"

_0de884_data:
		.fill   0x4

_0de888_data:
		.ascii  "\x00\x00"

_0de88a_data:
		.fill   0x4

_0de88e_data:
		.ascii  "\x00\x00"

_0de890_data:
		.fill   0x4

_0de894_data:
		.ascii  "\x00\x00"

_0de896_data:
		.fill   0x4

_0de89a_data:
		.ascii  "\x00\x00"

_0de89c_data:
		.fill   0x4

_0de8a0_data:
		.ascii  "\x00\x00"

_0de8a2_data:
		.ascii  "\x00\x00"

_0de8a4_data:
		.ascii  "\x00\x00"

_0de8a6_data:
		.fill   0xe

_0de8b4_data:
		.fill   0x4

_0de8b8_data:
		.ascii  "\x00\x00"

_0de8ba_data:
		.ascii  "\x00\x00"

_0de8bc_data:
		.fill   0x4

_0de8c0_data:
		.ascii  "\x00"

_0de8c1_data:
		.ascii  "\x00"

_0de8c2_data:
		.ascii  "\x00"

_0de8c3_data:
		.fill   0x4

_0de8c7_data:
		.fill   0x4

_0de8cb_data:
		.fill   0x18c

_0dea57_data:
		.fill   0x4

_0dea5b_data:
		.fill   0x190

_0debeb_data:
		.fill   0x190

_0ded7b_data:
		.fill   0x163

_0deede_data:
		.ascii  "\x00"

_0deedf_data:
		.fill   0x1a

_0deef9_data:
		.ascii  "\x00"

_0deefa_data:
		.ascii  "\x00"

_0deefb_data:
		.ascii  "\x00"

_0deefc_data:
		.ascii  "\x00"

_0deefd_data:
		.ascii  "\x00"

_0deefe_data:
		.ascii  "\x00"

_0deeff_data:
		.ascii  "\x00"

_0def00_data:
		.ascii  "\x00\x00\x00"

_0def03_data:
		.ascii  "\x00"

_0def04_data:
		.fill   0x7ff

_0df703_data:
		.ascii  "\x00"

_0df704_data:
		.fill   0x8

_0df70c_data:
		.fill   0x4

_0df710_data:
		.ascii  "\x00\x00"

_0df712_data:
		.ascii  "\x00\x00"

_0df714_data:
		.ascii  "\x00"

_0df715_data:
		.ascii  "\x00"

_0df716_data:
		.ascii  "\x00"

_0df717_data:
		.ascii  "\x00"

_0df718_data:
		.fill   0x28

_0df740_data:
		.ascii  "\x00\x00"

_0df742_data:
		.ascii  "\x00\x00"

_0df744_data:
		.ascii  "\x00\x00"

_0df746_data:
		.ascii  "\x00\x00"

_0df748_data:
		.ascii  "\x00\x00"

_0df74a_data:
		.ascii  "\x00\x00"

_0df74c_data:
		.ascii  "\x00\x00"

_0df74e_data:
		.ascii  "\x00\x00"

_0df750_data:
		.fill   0x6

_0df756_data:
		.ascii  "\x00"

_0df757_data:
		.fill   0x9

_0df760_data:
		.fill   0x4

_0df764_data:
		.fill   0x4

_0df768_data:
		.fill   0x4

_0df76c_data:
		.fill   0x4

_0df770_data:
		.fill   0x4

_0df774_data:
		.fill   0x4

_0df778_data:
		.fill   0x4

_0df77c_data:
		.fill   0x4

_0df780_data:
		.fill   0x4

_0df784_data:
		.fill   0x4

_0df788_data:
		.fill   0x4

_0df78c_data:
		.fill   0x4

_0df790_data:
		.fill   0x4

_0df794_data:
		.fill   0x4

_0df798_data:
		.fill   0x4

_0df79c_data:
		.fill   0x4

_0df7a0_data:
		.fill   0x4

_0df7a4_data:
		.fill   0x4

_0df7a8_data:
		.fill   0x4

_0df7ac_data:
		.fill   0x4

_0df7b0_data:
		.fill   0x4

_0df7b4_data:
		.fill   0x4

_0df7b8_data:
		.fill   0x4

_0df7bc_data:
		.fill   0x4

_0df7c0_data:
		.fill   0x4

_0df7c4_data:
		.fill   0x4

_0df7c8_data:
		.fill   0x4

_0df7cc_data:
		.fill   0x4

_0df7d0_data:
		.fill   0x4

_0df7d4_data:
		.fill   0x4

_0df7d8_data:
		.fill   0x4

_0df7dc_data:
		.ascii  "\x00\x00\x00"

_0df7df_data:
		.ascii  "\x00"

_0df7e0_data:
		.ascii  "\x00"

_0df7e1_data:
		.ascii  "\x00"

_0df7e2_data:
		.fill   0x2fe

_0dfae0_data:
		.fill   0x4

_0dfae4_data:
		.fill   0x4

_0dfae8_data:
		.ascii  "\x00"

_0dfae9_data:
		.ascii  "\x00"

_0dfaea_data:
		.ascii  "\x00"

_0dfaeb_data:
		.ascii  "\x00"

_0dfaec_data:
		.ascii  "\x00"

_0dfaed_data:
		.ascii  "\x00\x00\x00"

_0dfaf0_data:
		.fill   0x4

_0dfaf4_data:
		.fill   0x4

_0dfaf8_data:
		.fill   0x4

_0dfafc_data:
		.fill   0x7f4

_0e02f0_data:
		.fill   0x4

_0e02f4_data:
		.fill   0x4

_0e02f8_data:
		.fill   0x4

_0e02fc_data:
		.fill   0x7f4

_0e0af0_data:
		.fill   0x4

_0e0af4_data:
		.fill   0x4

_0e0af8_data:
		.fill   0x4

_0e0afc_data:
		.fill   0x4

_0e0b00_data:
		.fill   0x4

_0e0b04_data:
		.fill   0x6

_0e0b0a_data:
		.fill   0x64

_0e0b6e_data:
		.fill   0xa

_0e0b78_data:
		.fill   0x4

_0e0b7c_data:
		.ascii  "\x00\x00"

_0e0b7e_data:
		.ascii  "\x00\x00"

_0e0b80_data:
		.fill   0x4

_0e0b84_data:
		.fill   0x4

_0e0b88_data:
		.fill   0x64

_0e0bec_data:
		.fill   0x4

_0e0bf0_data:
		.fill   0x4

_0e0bf4_data:
		.ascii  "\x00\x00"

_0e0bf6_data:
		.ascii  "\x00\x00"

_0e0bf8_data:
		.ascii  "\x00\x00"

_0e0bfa_data:
		.ascii  "\x00\x00"

_0e0bfc_data:
		.ascii  "\x00\x00"

_0e0bfe_data:
		.ascii  "\x00\x00"

_0e0c00_data:
		.ascii  "\x00\x00"

_0e0c02_data:
		.ascii  "\x00\x00"

_0e0c04_data:
		.ascii  "\x00\x00"

_0e0c06_data:
		.ascii  "\x00\x00"

_0e0c08_data:
		.ascii  "\x00\x00"

_0e0c0a_data:
		.ascii  "\x00\x00"

_0e0c0c_data:
		.ascii  "\x00\x00"

_0e0c0e_data:
		.ascii  "\x00\x00"

_0e0c10_data:
		.ascii  "\x00\x00"

_0e0c12_data:
		.ascii  "\x00\x00"

_0e0c14_data:
		.ascii  "\x00\x00"

_0e0c16_data:
		.ascii  "\x00\x00"

_0e0c18_data:
		.fill   0x4

_0e0c1c_data:
		.ascii  "\x00\x00"

_0e0c1e_data:
		.ascii  "\x00\x00"

_0e0c20_data:
		.ascii  "\x00\x00"

_0e0c22_data:
		.ascii  "\x00"

_0e0c23_data:
		.ascii  "\x00"

_0e0c24_data:
		.ascii  "\x00"

_0e0c25_data:
		.ascii  "\x00"

_0e0c26_data:
		.ascii  "\x00"

_0e0c27_data:
		.ascii  "\x00"

_0e0c28_data:
		.ascii  "\x00"

_0e0c29_data:
		.fill   0x7

_0e0c30_data:
		.fill   0x80

_0e0cb0_data:
		.fill   0x4

_0e0cb4_data:
		.fill   0x4

_0e0cb8_data:
		.ascii  "\x00\x00"

_0e0cba_data:
		.ascii  "\x00\x00"

_0e0cbc_data:
		.ascii  "\x00\x00"

_0e0cbe_data:
		.ascii  "\x00\x00"

_0e0cc0_data:
		.ascii  "\x00\x00"

_0e0cc2_data:
		.ascii  "\x00\x00"

_0e0cc4_data:
		.ascii  "\x00\x00"

_0e0cc6_data:
		.ascii  "\x00\x00"

_0e0cc8_data:
		.ascii  "\x00\x00"

_0e0cca_data:
		.ascii  "\x00\x00"

_0e0ccc_data:
		.ascii  "\x00\x00"

_0e0cce_data:
		.ascii  "\x00\x00"

_0e0cd0_data:
		.ascii  "\x00\x00"

_0e0cd2_data:
		.ascii  "\x00\x00"

_0e0cd4_data:
		.ascii  "\x00\x00"

_0e0cd6_data:
		.ascii  "\x00\x00"

_0e0cd8_data:
		.fill   0x4

_0e0cdc_data:
		.fill   0x4

_0e0ce0_data:
		.fill   0x4

_0e0ce4_data:
		.fill   0x4

_0e0ce8_data:
		.fill   0x4

_0e0cec_data:
		.fill   0x4

_0e0cf0_data:
		.fill   0x4

_0e0cf4_data:
		.fill   0x4

_0e0cf8_data:
		.fill   0x4

_0e0cfc_data:
		.fill   0x4

_0e0d00_data:
		.fill   0x4

_0e0d04_data:
		.fill   0x4

_0e0d08_data:
		.fill   0x4

_0e0d0c_data:
		.fill   0x4

_0e0d10_data:
		.fill   0x4

_0e0d14_data:
		.fill   0x4

_0e0d18_data:
		.fill   0x4

_0e0d1c_data:
		.fill   0x4

_0e0d20_data:
		.fill   0x4

_0e0d24_data:
		.fill   0x1c

_0e0d40_data:
		.fill   0x1c

_0e0d5c_data:
		.fill   0x3c

_0e0d98_data:
		.fill   0x3311

_0e40a9_data:
		.ascii  "\x00\x00\x00"

_0e40ac_data:
		.ascii  "\x00"

_0e40ad_data:
		.ascii  "\x00"

_0e40ae_data:
		.fill   0x2fe

_0e43ac_data:
		.fill   0x300

_0e46ac_data:
		.fill   0x300

_0e49ac_data:
		.ascii  "\x00"

_0e49ad_data:
		.ascii  "\x00"

_0e49ae_data:
		.fill   0x2fe

_0e4cac_data:
		.fill   0x4

_0e4cb0_data:
		.fill   0x4

_0e4cb4_data:
		.fill   0x4

_0e4cb8_data:
		.fill   0x4

_0e4cbc_data:
		.fill   0x4

_0e4cc0_data:
		.fill   0x4

_0e4cc4_data:
		.fill   0x4

_0e4cc8_data:
		.fill   0x4

_0e4ccc_data:
		.fill   0x4

_0e4cd0_data:
		.fill   0x4

_0e4cd4_data:
		.fill   0x4

_0e4cd8_data:
		.ascii  "\x00"

_0e4cd9_data:
		.fill   0x7

_0e4ce0_data:
		.ascii  "\x00\x00"

_0e4ce2_data:
		.ascii  "\x00\x00"

_0e4ce4_data:
		.ascii  "\x00\x00"

_0e4ce6_data:
		.ascii  "\x00\x00"

_0e4ce8_data:
		.ascii  "\x00\x00"

_0e4cea_data:
		.ascii  "\x00\x00"

_0e4cec_data:
		.ascii  "\x00\x00"

_0e4cee_data:
		.ascii  "\x00\x00"

_0e4cf0_data:
		.ascii  "\x00\x00"

_0e4cf2_data:
		.ascii  "\x00\x00"

_0e4cf4_data:
		.ascii  "\x00\x00"

_0e4cf6_data:
		.ascii  "\x00"

_0e4cf7_data:
		.ascii  "\x00"

_0e4cf8_data:
		.ascii  "\x00"

_0e4cf9_data:
		.ascii  "\x00\x00"

_0e4cfb_data:
		.ascii  "\x00"

_0e4cfc_data:
		.ascii  "\x00"

_0e4cfd_data:
		.ascii  "\x00"

_0e4cfe_data:
		.ascii  "\x00"

_0e4cff_data:
		.ascii  "\x00"

_0e4d00_data:
		.fill   0x80

_0e4d80_data:
		.fill   0x8

_0e4d88_data:
		.ascii  "\x00\x00"

_0e4d8a_data:
		.ascii  "\x00\x00"

_0e4d8c_data:
		.ascii  "\x00\x00"

_0e4d8e_data:
		.ascii  "\x00\x00"

_0e4d90_data:
		.ascii  "\x00\x00"

_0e4d92_data:
		.ascii  "\x00\x00"

_0e4d94_data:
		.ascii  "\x00\x00"

_0e4d96_data:
		.ascii  "\x00\x00"

_0e4d98_data:
		.ascii  "\x00"

_0e4d99_data:
		.ascii  "\x00"

_0e4d9a_data:
		.ascii  "\x00"

_0e4d9b_data:
		.ascii  "\x00"

_0e4d9c_data:
		.fill   0x4

_0e4da0_data:
		.ascii  "\x00"

_0e4da1_data:
		.ascii  "\x00"

_0e4da2_data:
		.ascii  "\x00\x00"

_0e4da4_data:
		.ascii  "\x00\x00"

_0e4da6_data:
		.ascii  "\x00\x00"

_0e4da8_data:
		.ascii  "\x00\x00"

_0e4daa_data:
		.ascii  "\x00\x00"

_0e4dac_data:
		.ascii  "\x00\x00"

_0e4dae_data:
		.ascii  "\x00\x00"

_0e4db0_data:
		.ascii  "\x00\x00"

_0e4db2_data:
		.ascii  "\x00\x00"

_0e4db4_data:
		.ascii  "\x00\x00"

_0e4db6_data:
		.ascii  "\x00\x00"

_0e4db8_data:
		.ascii  "\x00\x00"

_0e4dba_data:
		.ascii  "\x00\x00"

_0e4dbc_data:
		.ascii  "\x00"

_0e4dbd_data:
		.ascii  "\x00"

_0e4dbe_data:
		.fill   0x52

_0e4e10_data:
		.ascii  "\x00\x00"

_0e4e12_data:
		.ascii  "\x00\x00"

_0e4e14_data:
		.ascii  "\x00"

_0e4e15_data:
		.ascii  "\x00"

_0e4e16_data:
		.ascii  "\x00"

_0e4e17_data:
		.ascii  "\x00"

_0e4e18_data:
		.ascii  "\x00"

_0e4e19_data:
		.ascii  "\x00"

_0e4e1a_data:
		.ascii  "\x00\x00"

_0e4e1c_data:
		.fill   0x4

_0e4e20_data:
		.ascii  "\x00"

_0e4e21_data:
		.ascii  "\x00\x00\x00"

_0e4e24_data:
		.fill   0x4

_0e4e28_data:
		.fill   0x8

_0e4e30_data:
		.fill   0x4

_0e4e34_data:
		.fill   0x4

_0e4e38_data:
		.fill   0x4

_0e4e3c_data:
		.fill   0xc

_0e4e48_data:
		.fill   0x4

_0e4e4c_data:
		.fill   0x4

_0e4e50_data:
		.fill   0x4

_0e4e54_data:
		.fill   0x4

_0e4e58_data:
		.ascii  "\x00\x00"

_0e4e5a_data:
		.ascii  "\x00\x00"

_0e4e5c_data:
		.fill   0x8

_0e4e64_data:
		.fill   0x4

_0e4e68_data:
		.fill   0x4

_0e4e6c_data:
		.fill   0xc

_0e4e78_data:
		.ascii  "\x00\x00"

_0e4e7a_data:
		.fill   0x4

_0e4e7e_data:
		.ascii  "\x00\x00"

_0e4e80_data:
		.fill   0x4

_0e4e84_data:
		.ascii  "\x00\x00"

_0e4e86_data:
		.fill   0x4

_0e4e8a_data:
		.fill   0x8

_0e4e92_data:
		.fill   0x4

_0e4e96_data:
		.fill   0x5f6

_0e548c_data:
		.ascii  "\x00\x00"

_0e548e_data:
		.ascii  "\x00\x00"

_0e5490_data:
		.fill   0x26

_0e54b6_data:
		.ascii  "\x00\x00"

_0e54b8_data:
		.fill   0x26

_0e54de_data:
		.ascii  "\x00\x00"

_0e54e0_data:
		.ascii  "\x00\x00"

_0e54e2_data:
		.ascii  "\x00\x00"

_0e54e4_data:
		.ascii  "\x00\x00"

_0e54e6_data:
		.ascii  "\x00\x00"

_0e54e8_data:
		.ascii  "\x00\x00"

_0e54ea_data:
		.ascii  "\x00\x00"

_0e54ec_data:
		.ascii  "\x00\x00"

_0e54ee_data:
		.ascii  "\x00\x00"

_0e54f0_data:
		.fill   0x4

_0e54f4_data:
		.fill   0xd0

_0e55c4_data:
		.fill   0xc

_0e55d0_data:
		.ascii  "\x00\x00"

_0e55d2_data:
		.ascii  "\x00\x00"

_0e55d4_data:
		.ascii  "\x00\x00"

_0e55d6_data:
		.fill   0x17a

_0e5750_data:
		.fill   0x4

_0e5754_data:
		.ascii  "\x00\x00"

_0e5756_data:
		.fill   0x4

_0e575a_data:
		.fill   0x6

_0e5760_data:
		.fill   0x4

_0e5764_data:
		.ascii  "\x00"

_0e5765_data:
		.ascii  "\x00"

_0e5766_data:
		.ascii  "\x00\x00"

_0e5768_data:
		.ascii  "\x00\x00"

_0e576a_data:
		.ascii  "\x00\x00"

_0e576c_data:
		.ascii  "\x00\x00"

_0e576e_data:
		.ascii  "\x00\x00"

_0e5770_data:
		.ascii  "\x00\x00"

_0e5772_data:
		.ascii  "\x00\x00"

_0e5774_data:
		.ascii  "\x00"

_0e5775_data:
		.ascii  "\x00"

_0e5776_data:
		.ascii  "\x00"

_0e5777_data:
		.ascii  "\x00"

_0e5778_data:
		.ascii  "\x00\x00"

_0e577a_data:
		.ascii  "\x00\x00"

_0e577c_data:
		.ascii  "\x00\x00"

_0e577e_data:
		.ascii  "\x00\x00"

_0e5780_data:
		.fill   0x4

_0e5784_data:
		.ascii  "\x00\x00"

_0e5786_data:
		.ascii  "\x00\x00"

_0e5788_data:
		.ascii  "\x00\x00"

_0e578a_data:
		.ascii  "\x00\x00"

_0e578c_data:
		.ascii  "\x00"

_0e578d_data:
		.ascii  "\x00\x00\x00"

_0e5790_data:
		.fill   0x4

_0e5794_data:
		.fill   0x4

_0e5798_data:
		.fill   0x1c0a

_0e73a2_data:
		.ascii  "\x00\x00"

_0e73a4_data:
		.ascii  "\x00\x00"

_0e73a6_data:
		.ascii  "\x00\x00"

_0e73a8_data:
		.fill   0x9c

_0e7444_data:
		.ascii  "\x00\x00"

_0e7446_data:
		.ascii  "\x00\x00"

_0e7448_data:
		.ascii  "\x00\x00"

_0e744a_data:
		.ascii  "\x00\x00"

_0e744c_data:
		.fill   0x4

_0e7450_data:
		.fill   0x4

_0e7454_data:
		.fill   0xc

_0e7460_data:
		.fill   0x4

_0e7464_data:
		.fill   0xc

_0e7470_data:
		.fill   0x4

_0e7474_data:
		.fill   0x4

_0e7478_data:
		.fill   0x80

_0e74f8_data:
		.fill   0x4

_0e74fc_data:
		.fill   0x4

_0e7500_data:
		.ascii  "\x00\x00\x00"

_0e7503_data:
		.ascii  "\x00"

_0e7504_data:
		.fill   0x10

_0e7514_data:
		.fill   0x4

_0e7518_data:
		.fill   0x4

_0e751c_data:
		.fill   0x4

_0e7520_data:
		.fill   0x4

_0e7524_data:
		.fill   0x4

_0e7528_data:
		.fill   0x4

_0e752c_data:
		.fill   0x4

_0e7530_data:
		.fill   0x4

_0e7534_data:
		.fill   0x24

_0e7558_data:
		.ascii  "\x00\x00"

_0e755a_data:
		.ascii  "\x00\x00"

_0e755c_data:
		.fill   0x400

_0e795c_data:
		.fill   0xbf0

_0e854c_data:
		.fill   0x1414
